"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/@azure";
exports.ids = ["vendor-chunks/@azure"];
exports.modules = {

/***/ "(rsc)/./node_modules/@azure/identity/dist-esm/src/client/identityClient.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@azure/identity/dist-esm/src/client/identityClient.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   IdentityClient: () => (/* binding */ IdentityClient),\n/* harmony export */   getIdentityClientAuthorityHost: () => (/* binding */ getIdentityClientAuthorityHost)\n/* harmony export */ });\n/* harmony import */ var _azure_core_client__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @azure/core-client */ \"(rsc)/./node_modules/@azure/core-client/dist/esm/index.js\");\n/* harmony import */ var _azure_core_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @azure/core-util */ \"(rsc)/./node_modules/@azure/core-util/dist/esm/index.js\");\n/* harmony import */ var _azure_core_rest_pipeline__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @azure/core-rest-pipeline */ \"(rsc)/./node_modules/@azure/core-rest-pipeline/dist/esm/index.js\");\n/* harmony import */ var _azure_abort_controller__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @azure/abort-controller */ \"(rsc)/./node_modules/@azure/identity/node_modules/@azure/abort-controller/dist-esm/src/AbortController.js\");\n/* harmony import */ var _errors__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../errors */ \"(rsc)/./node_modules/@azure/identity/dist-esm/src/errors.js\");\n/* harmony import */ var _util_identityTokenEndpoint__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../util/identityTokenEndpoint */ \"(rsc)/./node_modules/@azure/identity/dist-esm/src/util/identityTokenEndpoint.js\");\n/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../constants */ \"(rsc)/./node_modules/@azure/identity/dist-esm/src/constants.js\");\n/* harmony import */ var _util_tracing__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../util/tracing */ \"(rsc)/./node_modules/@azure/identity/dist-esm/src/util/tracing.js\");\n/* harmony import */ var _util_logging__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../util/logging */ \"(rsc)/./node_modules/@azure/identity/dist-esm/src/util/logging.js\");\n/* harmony import */ var _credentials_managedIdentityCredential_utils__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../credentials/managedIdentityCredential/utils */ \"(rsc)/./node_modules/@azure/identity/dist-esm/src/credentials/managedIdentityCredential/utils.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\n\n\n\n\n\n\n\n\n\nconst noCorrelationId = \"noCorrelationId\";\n/**\n * @internal\n */\nfunction getIdentityClientAuthorityHost(options) {\n    // The authorityHost can come from options or from the AZURE_AUTHORITY_HOST environment variable.\n    let authorityHost = options === null || options === void 0 ? void 0 : options.authorityHost;\n    // The AZURE_AUTHORITY_HOST environment variable can only be provided in Node.js.\n    if (_azure_core_util__WEBPACK_IMPORTED_MODULE_1__.isNode) {\n        authorityHost = authorityHost !== null && authorityHost !== void 0 ? authorityHost : process.env.AZURE_AUTHORITY_HOST;\n    }\n    // If the authorityHost is not provided, we use the default one from the public cloud: https://login.microsoftonline.com\n    return authorityHost !== null && authorityHost !== void 0 ? authorityHost : _constants__WEBPACK_IMPORTED_MODULE_3__.DefaultAuthorityHost;\n}\n/**\n * The network module used by the Identity credentials.\n *\n * It allows for credentials to abort any pending request independently of the MSAL flow,\n * by calling to the `abortRequests()` method.\n *\n */\nclass IdentityClient extends _azure_core_client__WEBPACK_IMPORTED_MODULE_0__.ServiceClient {\n    constructor(options) {\n        var _a, _b;\n        const packageDetails = `azsdk-js-identity/${_constants__WEBPACK_IMPORTED_MODULE_3__.SDK_VERSION}`;\n        const userAgentPrefix = ((_a = options === null || options === void 0 ? void 0 : options.userAgentOptions) === null || _a === void 0 ? void 0 : _a.userAgentPrefix)\n            ? `${options.userAgentOptions.userAgentPrefix} ${packageDetails}`\n            : `${packageDetails}`;\n        const baseUri = getIdentityClientAuthorityHost(options);\n        if (!baseUri.startsWith(\"https:\")) {\n            throw new Error(\"The authorityHost address must use the 'https' protocol.\");\n        }\n        super(Object.assign(Object.assign({ requestContentType: \"application/json; charset=utf-8\", retryOptions: {\n                maxRetries: 3,\n            } }, options), { userAgentOptions: {\n                userAgentPrefix,\n            }, baseUri }));\n        this.authorityHost = baseUri;\n        this.abortControllers = new Map();\n        this.allowLoggingAccountIdentifiers = (_b = options === null || options === void 0 ? void 0 : options.loggingOptions) === null || _b === void 0 ? void 0 : _b.allowLoggingAccountIdentifiers;\n        // used for WorkloadIdentity\n        this.tokenCredentialOptions = Object.assign({}, options);\n    }\n    async sendTokenRequest(request) {\n        _util_logging__WEBPACK_IMPORTED_MODULE_4__.logger.info(`IdentityClient: sending token request to [${request.url}]`);\n        const response = await this.sendRequest(request);\n        if (response.bodyAsText && (response.status === 200 || response.status === 201)) {\n            const parsedBody = JSON.parse(response.bodyAsText);\n            if (!parsedBody.access_token) {\n                return null;\n            }\n            this.logIdentifiers(response);\n            const token = {\n                accessToken: {\n                    token: parsedBody.access_token,\n                    expiresOnTimestamp: (0,_credentials_managedIdentityCredential_utils__WEBPACK_IMPORTED_MODULE_5__.parseExpirationTimestamp)(parsedBody),\n                },\n                refreshToken: parsedBody.refresh_token,\n            };\n            _util_logging__WEBPACK_IMPORTED_MODULE_4__.logger.info(`IdentityClient: [${request.url}] token acquired, expires on ${token.accessToken.expiresOnTimestamp}`);\n            return token;\n        }\n        else {\n            const error = new _errors__WEBPACK_IMPORTED_MODULE_6__.AuthenticationError(response.status, response.bodyAsText);\n            _util_logging__WEBPACK_IMPORTED_MODULE_4__.logger.warning(`IdentityClient: authentication error. HTTP status: ${response.status}, ${error.errorResponse.errorDescription}`);\n            throw error;\n        }\n    }\n    async refreshAccessToken(tenantId, clientId, scopes, refreshToken, clientSecret, options = {}) {\n        if (refreshToken === undefined) {\n            return null;\n        }\n        _util_logging__WEBPACK_IMPORTED_MODULE_4__.logger.info(`IdentityClient: refreshing access token with client ID: ${clientId}, scopes: ${scopes} started`);\n        const refreshParams = {\n            grant_type: \"refresh_token\",\n            client_id: clientId,\n            refresh_token: refreshToken,\n            scope: scopes,\n        };\n        if (clientSecret !== undefined) {\n            refreshParams.client_secret = clientSecret;\n        }\n        const query = new URLSearchParams(refreshParams);\n        return _util_tracing__WEBPACK_IMPORTED_MODULE_7__.tracingClient.withSpan(\"IdentityClient.refreshAccessToken\", options, async (updatedOptions) => {\n            try {\n                const urlSuffix = (0,_util_identityTokenEndpoint__WEBPACK_IMPORTED_MODULE_8__.getIdentityTokenEndpointSuffix)(tenantId);\n                const request = (0,_azure_core_rest_pipeline__WEBPACK_IMPORTED_MODULE_2__.createPipelineRequest)({\n                    url: `${this.authorityHost}/${tenantId}/${urlSuffix}`,\n                    method: \"POST\",\n                    body: query.toString(),\n                    abortSignal: options.abortSignal,\n                    headers: (0,_azure_core_rest_pipeline__WEBPACK_IMPORTED_MODULE_2__.createHttpHeaders)({\n                        Accept: \"application/json\",\n                        \"Content-Type\": \"application/x-www-form-urlencoded\",\n                    }),\n                    tracingOptions: updatedOptions.tracingOptions,\n                });\n                const response = await this.sendTokenRequest(request);\n                _util_logging__WEBPACK_IMPORTED_MODULE_4__.logger.info(`IdentityClient: refreshed token for client ID: ${clientId}`);\n                return response;\n            }\n            catch (err) {\n                if (err.name === _errors__WEBPACK_IMPORTED_MODULE_6__.AuthenticationErrorName &&\n                    err.errorResponse.error === \"interaction_required\") {\n                    // It's likely that the refresh token has expired, so\n                    // return null so that the credential implementation will\n                    // initiate the authentication flow again.\n                    _util_logging__WEBPACK_IMPORTED_MODULE_4__.logger.info(`IdentityClient: interaction required for client ID: ${clientId}`);\n                    return null;\n                }\n                else {\n                    _util_logging__WEBPACK_IMPORTED_MODULE_4__.logger.warning(`IdentityClient: failed refreshing token for client ID: ${clientId}: ${err}`);\n                    throw err;\n                }\n            }\n        });\n    }\n    // Here is a custom layer that allows us to abort requests that go through MSAL,\n    // since MSAL doesn't allow us to pass options all the way through.\n    generateAbortSignal(correlationId) {\n        const controller = new _azure_abort_controller__WEBPACK_IMPORTED_MODULE_9__.AbortController();\n        const controllers = this.abortControllers.get(correlationId) || [];\n        controllers.push(controller);\n        this.abortControllers.set(correlationId, controllers);\n        const existingOnAbort = controller.signal.onabort;\n        controller.signal.onabort = (...params) => {\n            this.abortControllers.set(correlationId, undefined);\n            if (existingOnAbort) {\n                existingOnAbort(...params);\n            }\n        };\n        return controller.signal;\n    }\n    abortRequests(correlationId) {\n        const key = correlationId || noCorrelationId;\n        const controllers = [\n            ...(this.abortControllers.get(key) || []),\n            // MSAL passes no correlation ID to the get requests...\n            ...(this.abortControllers.get(noCorrelationId) || []),\n        ];\n        if (!controllers.length) {\n            return;\n        }\n        for (const controller of controllers) {\n            controller.abort();\n        }\n        this.abortControllers.set(key, undefined);\n    }\n    getCorrelationId(options) {\n        var _a;\n        const parameter = (_a = options === null || options === void 0 ? void 0 : options.body) === null || _a === void 0 ? void 0 : _a.split(\"&\").map((part) => part.split(\"=\")).find(([key]) => key === \"client-request-id\");\n        return parameter && parameter.length ? parameter[1] || noCorrelationId : noCorrelationId;\n    }\n    // The MSAL network module methods follow\n    async sendGetRequestAsync(url, options) {\n        const request = (0,_azure_core_rest_pipeline__WEBPACK_IMPORTED_MODULE_2__.createPipelineRequest)({\n            url,\n            method: \"GET\",\n            body: options === null || options === void 0 ? void 0 : options.body,\n            headers: (0,_azure_core_rest_pipeline__WEBPACK_IMPORTED_MODULE_2__.createHttpHeaders)(options === null || options === void 0 ? void 0 : options.headers),\n            abortSignal: this.generateAbortSignal(noCorrelationId),\n        });\n        const response = await this.sendRequest(request);\n        this.logIdentifiers(response);\n        return {\n            body: response.bodyAsText ? JSON.parse(response.bodyAsText) : undefined,\n            headers: response.headers.toJSON(),\n            status: response.status,\n        };\n    }\n    async sendPostRequestAsync(url, options) {\n        const request = (0,_azure_core_rest_pipeline__WEBPACK_IMPORTED_MODULE_2__.createPipelineRequest)({\n            url,\n            method: \"POST\",\n            body: options === null || options === void 0 ? void 0 : options.body,\n            headers: (0,_azure_core_rest_pipeline__WEBPACK_IMPORTED_MODULE_2__.createHttpHeaders)(options === null || options === void 0 ? void 0 : options.headers),\n            // MSAL doesn't send the correlation ID on the get requests.\n            abortSignal: this.generateAbortSignal(this.getCorrelationId(options)),\n        });\n        const response = await this.sendRequest(request);\n        this.logIdentifiers(response);\n        return {\n            body: response.bodyAsText ? JSON.parse(response.bodyAsText) : undefined,\n            headers: response.headers.toJSON(),\n            status: response.status,\n        };\n    }\n    /**\n     *\n     * @internal\n     */\n    getTokenCredentialOptions() {\n        return this.tokenCredentialOptions;\n    }\n    /**\n     * If allowLoggingAccountIdentifiers was set on the constructor options\n     * we try to log the account identifiers by parsing the received access token.\n     *\n     * The account identifiers we try to log are:\n     * - `appid`: The application or Client Identifier.\n     * - `upn`: User Principal Name.\n     *   - It might not be available in some authentication scenarios.\n     *   - If it's not available, we put a placeholder: \"No User Principal Name available\".\n     * - `tid`: Tenant Identifier.\n     * - `oid`: Object Identifier of the authenticated user.\n     */\n    logIdentifiers(response) {\n        if (!this.allowLoggingAccountIdentifiers || !response.bodyAsText) {\n            return;\n        }\n        const unavailableUpn = \"No User Principal Name available\";\n        try {\n            const parsed = response.parsedBody || JSON.parse(response.bodyAsText);\n            const accessToken = parsed.access_token;\n            if (!accessToken) {\n                // Without an access token allowLoggingAccountIdentifiers isn't useful.\n                return;\n            }\n            const base64Metadata = accessToken.split(\".\")[1];\n            const { appid, upn, tid, oid } = JSON.parse(Buffer.from(base64Metadata, \"base64\").toString(\"utf8\"));\n            _util_logging__WEBPACK_IMPORTED_MODULE_4__.logger.info(`[Authenticated account] Client ID: ${appid}. Tenant ID: ${tid}. User Principal Name: ${upn || unavailableUpn}. Object ID (user): ${oid}`);\n        }\n        catch (e) {\n            _util_logging__WEBPACK_IMPORTED_MODULE_4__.logger.warning(\"allowLoggingAccountIdentifiers was set, but we couldn't log the account information. Error:\", e.message);\n        }\n    }\n}\n//# sourceMappingURL=identityClient.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/identity/dist-esm/src/client/identityClient.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/identity/dist-esm/src/constants.js":
/*!****************************************************************!*\
  !*** ./node_modules/@azure/identity/dist-esm/src/constants.js ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ALL_TENANTS: () => (/* binding */ ALL_TENANTS),\n/* harmony export */   AzureAuthorityHosts: () => (/* binding */ AzureAuthorityHosts),\n/* harmony export */   CACHE_CAE_SUFFIX: () => (/* binding */ CACHE_CAE_SUFFIX),\n/* harmony export */   CACHE_NON_CAE_SUFFIX: () => (/* binding */ CACHE_NON_CAE_SUFFIX),\n/* harmony export */   DEFAULT_TOKEN_CACHE_NAME: () => (/* binding */ DEFAULT_TOKEN_CACHE_NAME),\n/* harmony export */   DefaultAuthorityHost: () => (/* binding */ DefaultAuthorityHost),\n/* harmony export */   DefaultTenantId: () => (/* binding */ DefaultTenantId),\n/* harmony export */   DeveloperSignOnClientId: () => (/* binding */ DeveloperSignOnClientId),\n/* harmony export */   SDK_VERSION: () => (/* binding */ SDK_VERSION)\n/* harmony export */ });\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n/**\n * Current version of the `@azure/identity` package.\n */\nconst SDK_VERSION = `4.4.0`;\n/**\n * The default client ID for authentication\n * @internal\n */\n// TODO: temporary - this is the Azure CLI clientID - we'll replace it when\n// Developer Sign On application is available\n// https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/identity/Azure.Identity/src/Constants.cs#L9\nconst DeveloperSignOnClientId = \"04b07795-8ddb-461a-bbee-02f9e1bf7b46\";\n/**\n * The default tenant for authentication\n * @internal\n */\nconst DefaultTenantId = \"common\";\n/**\n * A list of known Azure authority hosts\n */\nvar AzureAuthorityHosts;\n(function (AzureAuthorityHosts) {\n    /**\n     * China-based Azure Authority Host\n     */\n    AzureAuthorityHosts[\"AzureChina\"] = \"https://login.chinacloudapi.cn\";\n    /**\n     * Germany-based Azure Authority Host\n     */\n    AzureAuthorityHosts[\"AzureGermany\"] = \"https://login.microsoftonline.de\";\n    /**\n     * US Government Azure Authority Host\n     */\n    AzureAuthorityHosts[\"AzureGovernment\"] = \"https://login.microsoftonline.us\";\n    /**\n     * Public Cloud Azure Authority Host\n     */\n    AzureAuthorityHosts[\"AzurePublicCloud\"] = \"https://login.microsoftonline.com\";\n})(AzureAuthorityHosts || (AzureAuthorityHosts = {}));\n/**\n * @internal\n * The default authority host.\n */\nconst DefaultAuthorityHost = AzureAuthorityHosts.AzurePublicCloud;\n/**\n * @internal\n * Allow acquiring tokens for any tenant for multi-tentant auth.\n */\nconst ALL_TENANTS = [\"*\"];\n/**\n * @internal\n */\nconst CACHE_CAE_SUFFIX = \"cae\";\n/**\n * @internal\n */\nconst CACHE_NON_CAE_SUFFIX = \"nocae\";\n/**\n * @internal\n *\n * The default name for the cache persistence plugin.\n * Matches the constant defined in the cache persistence package.\n */\nconst DEFAULT_TOKEN_CACHE_NAME = \"msal.cache\";\n//# sourceMappingURL=constants.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2lkZW50aXR5L2Rpc3QtZXNtL3NyYy9jb25zdGFudHMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDLGtEQUFrRDtBQUNuRDtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZGFuaWVsMy12cDIvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2lkZW50aXR5L2Rpc3QtZXNtL3NyYy9jb25zdGFudHMuanM/MGMxNSJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi5cbi8vIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZS5cbi8qKlxuICogQ3VycmVudCB2ZXJzaW9uIG9mIHRoZSBgQGF6dXJlL2lkZW50aXR5YCBwYWNrYWdlLlxuICovXG5leHBvcnQgY29uc3QgU0RLX1ZFUlNJT04gPSBgNC40LjBgO1xuLyoqXG4gKiBUaGUgZGVmYXVsdCBjbGllbnQgSUQgZm9yIGF1dGhlbnRpY2F0aW9uXG4gKiBAaW50ZXJuYWxcbiAqL1xuLy8gVE9ETzogdGVtcG9yYXJ5IC0gdGhpcyBpcyB0aGUgQXp1cmUgQ0xJIGNsaWVudElEIC0gd2UnbGwgcmVwbGFjZSBpdCB3aGVuXG4vLyBEZXZlbG9wZXIgU2lnbiBPbiBhcHBsaWNhdGlvbiBpcyBhdmFpbGFibGVcbi8vIGh0dHBzOi8vZ2l0aHViLmNvbS9BenVyZS9henVyZS1zZGstZm9yLW5ldC9ibG9iL21haW4vc2RrL2lkZW50aXR5L0F6dXJlLklkZW50aXR5L3NyYy9Db25zdGFudHMuY3MjTDlcbmV4cG9ydCBjb25zdCBEZXZlbG9wZXJTaWduT25DbGllbnRJZCA9IFwiMDRiMDc3OTUtOGRkYi00NjFhLWJiZWUtMDJmOWUxYmY3YjQ2XCI7XG4vKipcbiAqIFRoZSBkZWZhdWx0IHRlbmFudCBmb3IgYXV0aGVudGljYXRpb25cbiAqIEBpbnRlcm5hbFxuICovXG5leHBvcnQgY29uc3QgRGVmYXVsdFRlbmFudElkID0gXCJjb21tb25cIjtcbi8qKlxuICogQSBsaXN0IG9mIGtub3duIEF6dXJlIGF1dGhvcml0eSBob3N0c1xuICovXG5leHBvcnQgdmFyIEF6dXJlQXV0aG9yaXR5SG9zdHM7XG4oZnVuY3Rpb24gKEF6dXJlQXV0aG9yaXR5SG9zdHMpIHtcbiAgICAvKipcbiAgICAgKiBDaGluYS1iYXNlZCBBenVyZSBBdXRob3JpdHkgSG9zdFxuICAgICAqL1xuICAgIEF6dXJlQXV0aG9yaXR5SG9zdHNbXCJBenVyZUNoaW5hXCJdID0gXCJodHRwczovL2xvZ2luLmNoaW5hY2xvdWRhcGkuY25cIjtcbiAgICAvKipcbiAgICAgKiBHZXJtYW55LWJhc2VkIEF6dXJlIEF1dGhvcml0eSBIb3N0XG4gICAgICovXG4gICAgQXp1cmVBdXRob3JpdHlIb3N0c1tcIkF6dXJlR2VybWFueVwiXSA9IFwiaHR0cHM6Ly9sb2dpbi5taWNyb3NvZnRvbmxpbmUuZGVcIjtcbiAgICAvKipcbiAgICAgKiBVUyBHb3Zlcm5tZW50IEF6dXJlIEF1dGhvcml0eSBIb3N0XG4gICAgICovXG4gICAgQXp1cmVBdXRob3JpdHlIb3N0c1tcIkF6dXJlR292ZXJubWVudFwiXSA9IFwiaHR0cHM6Ly9sb2dpbi5taWNyb3NvZnRvbmxpbmUudXNcIjtcbiAgICAvKipcbiAgICAgKiBQdWJsaWMgQ2xvdWQgQXp1cmUgQXV0aG9yaXR5IEhvc3RcbiAgICAgKi9cbiAgICBBenVyZUF1dGhvcml0eUhvc3RzW1wiQXp1cmVQdWJsaWNDbG91ZFwiXSA9IFwiaHR0cHM6Ly9sb2dpbi5taWNyb3NvZnRvbmxpbmUuY29tXCI7XG59KShBenVyZUF1dGhvcml0eUhvc3RzIHx8IChBenVyZUF1dGhvcml0eUhvc3RzID0ge30pKTtcbi8qKlxuICogQGludGVybmFsXG4gKiBUaGUgZGVmYXVsdCBhdXRob3JpdHkgaG9zdC5cbiAqL1xuZXhwb3J0IGNvbnN0IERlZmF1bHRBdXRob3JpdHlIb3N0ID0gQXp1cmVBdXRob3JpdHlIb3N0cy5BenVyZVB1YmxpY0Nsb3VkO1xuLyoqXG4gKiBAaW50ZXJuYWxcbiAqIEFsbG93IGFjcXVpcmluZyB0b2tlbnMgZm9yIGFueSB0ZW5hbnQgZm9yIG11bHRpLXRlbnRhbnQgYXV0aC5cbiAqL1xuZXhwb3J0IGNvbnN0IEFMTF9URU5BTlRTID0gW1wiKlwiXTtcbi8qKlxuICogQGludGVybmFsXG4gKi9cbmV4cG9ydCBjb25zdCBDQUNIRV9DQUVfU1VGRklYID0gXCJjYWVcIjtcbi8qKlxuICogQGludGVybmFsXG4gKi9cbmV4cG9ydCBjb25zdCBDQUNIRV9OT05fQ0FFX1NVRkZJWCA9IFwibm9jYWVcIjtcbi8qKlxuICogQGludGVybmFsXG4gKlxuICogVGhlIGRlZmF1bHQgbmFtZSBmb3IgdGhlIGNhY2hlIHBlcnNpc3RlbmNlIHBsdWdpbi5cbiAqIE1hdGNoZXMgdGhlIGNvbnN0YW50IGRlZmluZWQgaW4gdGhlIGNhY2hlIHBlcnNpc3RlbmNlIHBhY2thZ2UuXG4gKi9cbmV4cG9ydCBjb25zdCBERUZBVUxUX1RPS0VOX0NBQ0hFX05BTUUgPSBcIm1zYWwuY2FjaGVcIjtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWNvbnN0YW50cy5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/identity/dist-esm/src/constants.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/identity/dist-esm/src/credentials/authorizationCodeCredential.js":
/*!**********************************************************************************************!*\
  !*** ./node_modules/@azure/identity/dist-esm/src/credentials/authorizationCodeCredential.js ***!
  \**********************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AuthorizationCodeCredential: () => (/* binding */ AuthorizationCodeCredential)\n/* harmony export */ });\n/* harmony import */ var _util_tenantIdUtils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../util/tenantIdUtils */ \"(rsc)/./node_modules/@azure/identity/dist-esm/src/util/tenantIdUtils.js\");\n/* harmony import */ var _util_tenantIdUtils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../util/tenantIdUtils */ \"(rsc)/./node_modules/@azure/identity/dist-esm/src/util/processMultiTenantRequest.js\");\n/* harmony import */ var _util_logging__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../util/logging */ \"(rsc)/./node_modules/@azure/identity/dist-esm/src/util/logging.js\");\n/* harmony import */ var _util_scopeUtils__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../util/scopeUtils */ \"(rsc)/./node_modules/@azure/identity/dist-esm/src/util/scopeUtils.js\");\n/* harmony import */ var _util_tracing__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../util/tracing */ \"(rsc)/./node_modules/@azure/identity/dist-esm/src/util/tracing.js\");\n/* harmony import */ var _msal_nodeFlows_msalClient__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../msal/nodeFlows/msalClient */ \"(rsc)/./node_modules/@azure/identity/dist-esm/src/msal/nodeFlows/msalClient.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\n\n\n\n\n\nconst logger = (0,_util_logging__WEBPACK_IMPORTED_MODULE_0__.credentialLogger)(\"AuthorizationCodeCredential\");\n/**\n * Enables authentication to Microsoft Entra ID using an authorization code\n * that was obtained through the authorization code flow, described in more detail\n * in the Microsoft Entra ID documentation:\n *\n * https://learn.microsoft.com/entra/identity-platform/v2-oauth2-auth-code-flow\n */\nclass AuthorizationCodeCredential {\n    /**\n     * @hidden\n     * @internal\n     */\n    constructor(tenantId, clientId, clientSecretOrAuthorizationCode, authorizationCodeOrRedirectUri, redirectUriOrOptions, options) {\n        (0,_util_tenantIdUtils__WEBPACK_IMPORTED_MODULE_1__.checkTenantId)(logger, tenantId);\n        this.clientSecret = clientSecretOrAuthorizationCode;\n        if (typeof redirectUriOrOptions === \"string\") {\n            // the clientId+clientSecret constructor\n            this.authorizationCode = authorizationCodeOrRedirectUri;\n            this.redirectUri = redirectUriOrOptions;\n            // in this case, options are good as they come\n        }\n        else {\n            // clientId only\n            this.authorizationCode = clientSecretOrAuthorizationCode;\n            this.redirectUri = authorizationCodeOrRedirectUri;\n            this.clientSecret = undefined;\n            options = redirectUriOrOptions;\n        }\n        // TODO: Validate tenant if provided\n        this.tenantId = tenantId;\n        this.additionallyAllowedTenantIds = (0,_util_tenantIdUtils__WEBPACK_IMPORTED_MODULE_1__.resolveAdditionallyAllowedTenantIds)(options === null || options === void 0 ? void 0 : options.additionallyAllowedTenants);\n        this.msalClient = (0,_msal_nodeFlows_msalClient__WEBPACK_IMPORTED_MODULE_2__.createMsalClient)(clientId, tenantId, Object.assign(Object.assign({}, options), { logger, tokenCredentialOptions: options !== null && options !== void 0 ? options : {} }));\n    }\n    /**\n     * Authenticates with Microsoft Entra ID and returns an access token if successful.\n     * If authentication fails, a {@link CredentialUnavailableError} will be thrown with the details of the failure.\n     *\n     * @param scopes - The list of scopes for which the token will have access.\n     * @param options - The options used to configure any requests this\n     *                TokenCredential implementation might make.\n     */\n    async getToken(scopes, options = {}) {\n        return _util_tracing__WEBPACK_IMPORTED_MODULE_3__.tracingClient.withSpan(`${this.constructor.name}.getToken`, options, async (newOptions) => {\n            const tenantId = (0,_util_tenantIdUtils__WEBPACK_IMPORTED_MODULE_4__.processMultiTenantRequest)(this.tenantId, newOptions, this.additionallyAllowedTenantIds);\n            newOptions.tenantId = tenantId;\n            const arrayScopes = (0,_util_scopeUtils__WEBPACK_IMPORTED_MODULE_5__.ensureScopes)(scopes);\n            return this.msalClient.getTokenByAuthorizationCode(arrayScopes, this.redirectUri, this.authorizationCode, this.clientSecret, Object.assign(Object.assign({}, newOptions), { disableAutomaticAuthentication: this.disableAutomaticAuthentication }));\n        });\n    }\n}\n//# sourceMappingURL=authorizationCodeCredential.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2lkZW50aXR5L2Rpc3QtZXNtL3NyYy9jcmVkZW50aWFscy9hdXRob3JpemF0aW9uQ29kZUNyZWRlbnRpYWwuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7OztBQUFBO0FBQ0E7QUFDd0c7QUFDbEQ7QUFDSDtBQUNEO0FBQ0Y7QUFDZ0I7QUFDaEUsZUFBZSwrREFBZ0I7QUFDL0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxRQUFRLGtFQUFhO0FBQ3JCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNENBQTRDLHdGQUFtQztBQUMvRSwwQkFBMEIsNEVBQWdCLG1EQUFtRCxjQUFjLHVGQUF1RjtBQUNsTTtBQUNBO0FBQ0E7QUFDQSxtQ0FBbUMsa0NBQWtDO0FBQ3JFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx1Q0FBdUM7QUFDdkMsZUFBZSx3REFBYSxhQUFhLHNCQUFzQjtBQUMvRCw2QkFBNkIsOEVBQXlCO0FBQ3REO0FBQ0EsZ0NBQWdDLDhEQUFZO0FBQzVDLHVLQUF1SyxpQkFBaUIscUVBQXFFO0FBQzdQLFNBQVM7QUFDVDtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9kYW5pZWwzLXZwMi8uL25vZGVfbW9kdWxlcy9AYXp1cmUvaWRlbnRpdHkvZGlzdC1lc20vc3JjL2NyZWRlbnRpYWxzL2F1dGhvcml6YXRpb25Db2RlQ3JlZGVudGlhbC5qcz81NWE0Il0sInNvdXJjZXNDb250ZW50IjpbIi8vIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLlxuLy8gTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlLlxuaW1wb3J0IHsgcHJvY2Vzc011bHRpVGVuYW50UmVxdWVzdCwgcmVzb2x2ZUFkZGl0aW9uYWxseUFsbG93ZWRUZW5hbnRJZHMsIH0gZnJvbSBcIi4uL3V0aWwvdGVuYW50SWRVdGlsc1wiO1xuaW1wb3J0IHsgY2hlY2tUZW5hbnRJZCB9IGZyb20gXCIuLi91dGlsL3RlbmFudElkVXRpbHNcIjtcbmltcG9ydCB7IGNyZWRlbnRpYWxMb2dnZXIgfSBmcm9tIFwiLi4vdXRpbC9sb2dnaW5nXCI7XG5pbXBvcnQgeyBlbnN1cmVTY29wZXMgfSBmcm9tIFwiLi4vdXRpbC9zY29wZVV0aWxzXCI7XG5pbXBvcnQgeyB0cmFjaW5nQ2xpZW50IH0gZnJvbSBcIi4uL3V0aWwvdHJhY2luZ1wiO1xuaW1wb3J0IHsgY3JlYXRlTXNhbENsaWVudCB9IGZyb20gXCIuLi9tc2FsL25vZGVGbG93cy9tc2FsQ2xpZW50XCI7XG5jb25zdCBsb2dnZXIgPSBjcmVkZW50aWFsTG9nZ2VyKFwiQXV0aG9yaXphdGlvbkNvZGVDcmVkZW50aWFsXCIpO1xuLyoqXG4gKiBFbmFibGVzIGF1dGhlbnRpY2F0aW9uIHRvIE1pY3Jvc29mdCBFbnRyYSBJRCB1c2luZyBhbiBhdXRob3JpemF0aW9uIGNvZGVcbiAqIHRoYXQgd2FzIG9idGFpbmVkIHRocm91Z2ggdGhlIGF1dGhvcml6YXRpb24gY29kZSBmbG93LCBkZXNjcmliZWQgaW4gbW9yZSBkZXRhaWxcbiAqIGluIHRoZSBNaWNyb3NvZnQgRW50cmEgSUQgZG9jdW1lbnRhdGlvbjpcbiAqXG4gKiBodHRwczovL2xlYXJuLm1pY3Jvc29mdC5jb20vZW50cmEvaWRlbnRpdHktcGxhdGZvcm0vdjItb2F1dGgyLWF1dGgtY29kZS1mbG93XG4gKi9cbmV4cG9ydCBjbGFzcyBBdXRob3JpemF0aW9uQ29kZUNyZWRlbnRpYWwge1xuICAgIC8qKlxuICAgICAqIEBoaWRkZW5cbiAgICAgKiBAaW50ZXJuYWxcbiAgICAgKi9cbiAgICBjb25zdHJ1Y3Rvcih0ZW5hbnRJZCwgY2xpZW50SWQsIGNsaWVudFNlY3JldE9yQXV0aG9yaXphdGlvbkNvZGUsIGF1dGhvcml6YXRpb25Db2RlT3JSZWRpcmVjdFVyaSwgcmVkaXJlY3RVcmlPck9wdGlvbnMsIG9wdGlvbnMpIHtcbiAgICAgICAgY2hlY2tUZW5hbnRJZChsb2dnZXIsIHRlbmFudElkKTtcbiAgICAgICAgdGhpcy5jbGllbnRTZWNyZXQgPSBjbGllbnRTZWNyZXRPckF1dGhvcml6YXRpb25Db2RlO1xuICAgICAgICBpZiAodHlwZW9mIHJlZGlyZWN0VXJpT3JPcHRpb25zID09PSBcInN0cmluZ1wiKSB7XG4gICAgICAgICAgICAvLyB0aGUgY2xpZW50SWQrY2xpZW50U2VjcmV0IGNvbnN0cnVjdG9yXG4gICAgICAgICAgICB0aGlzLmF1dGhvcml6YXRpb25Db2RlID0gYXV0aG9yaXphdGlvbkNvZGVPclJlZGlyZWN0VXJpO1xuICAgICAgICAgICAgdGhpcy5yZWRpcmVjdFVyaSA9IHJlZGlyZWN0VXJpT3JPcHRpb25zO1xuICAgICAgICAgICAgLy8gaW4gdGhpcyBjYXNlLCBvcHRpb25zIGFyZSBnb29kIGFzIHRoZXkgY29tZVxuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgLy8gY2xpZW50SWQgb25seVxuICAgICAgICAgICAgdGhpcy5hdXRob3JpemF0aW9uQ29kZSA9IGNsaWVudFNlY3JldE9yQXV0aG9yaXphdGlvbkNvZGU7XG4gICAgICAgICAgICB0aGlzLnJlZGlyZWN0VXJpID0gYXV0aG9yaXphdGlvbkNvZGVPclJlZGlyZWN0VXJpO1xuICAgICAgICAgICAgdGhpcy5jbGllbnRTZWNyZXQgPSB1bmRlZmluZWQ7XG4gICAgICAgICAgICBvcHRpb25zID0gcmVkaXJlY3RVcmlPck9wdGlvbnM7XG4gICAgICAgIH1cbiAgICAgICAgLy8gVE9ETzogVmFsaWRhdGUgdGVuYW50IGlmIHByb3ZpZGVkXG4gICAgICAgIHRoaXMudGVuYW50SWQgPSB0ZW5hbnRJZDtcbiAgICAgICAgdGhpcy5hZGRpdGlvbmFsbHlBbGxvd2VkVGVuYW50SWRzID0gcmVzb2x2ZUFkZGl0aW9uYWxseUFsbG93ZWRUZW5hbnRJZHMob3B0aW9ucyA9PT0gbnVsbCB8fCBvcHRpb25zID09PSB2b2lkIDAgPyB2b2lkIDAgOiBvcHRpb25zLmFkZGl0aW9uYWxseUFsbG93ZWRUZW5hbnRzKTtcbiAgICAgICAgdGhpcy5tc2FsQ2xpZW50ID0gY3JlYXRlTXNhbENsaWVudChjbGllbnRJZCwgdGVuYW50SWQsIE9iamVjdC5hc3NpZ24oT2JqZWN0LmFzc2lnbih7fSwgb3B0aW9ucyksIHsgbG9nZ2VyLCB0b2tlbkNyZWRlbnRpYWxPcHRpb25zOiBvcHRpb25zICE9PSBudWxsICYmIG9wdGlvbnMgIT09IHZvaWQgMCA/IG9wdGlvbnMgOiB7fSB9KSk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIEF1dGhlbnRpY2F0ZXMgd2l0aCBNaWNyb3NvZnQgRW50cmEgSUQgYW5kIHJldHVybnMgYW4gYWNjZXNzIHRva2VuIGlmIHN1Y2Nlc3NmdWwuXG4gICAgICogSWYgYXV0aGVudGljYXRpb24gZmFpbHMsIGEge0BsaW5rIENyZWRlbnRpYWxVbmF2YWlsYWJsZUVycm9yfSB3aWxsIGJlIHRocm93biB3aXRoIHRoZSBkZXRhaWxzIG9mIHRoZSBmYWlsdXJlLlxuICAgICAqXG4gICAgICogQHBhcmFtIHNjb3BlcyAtIFRoZSBsaXN0IG9mIHNjb3BlcyBmb3Igd2hpY2ggdGhlIHRva2VuIHdpbGwgaGF2ZSBhY2Nlc3MuXG4gICAgICogQHBhcmFtIG9wdGlvbnMgLSBUaGUgb3B0aW9ucyB1c2VkIHRvIGNvbmZpZ3VyZSBhbnkgcmVxdWVzdHMgdGhpc1xuICAgICAqICAgICAgICAgICAgICAgIFRva2VuQ3JlZGVudGlhbCBpbXBsZW1lbnRhdGlvbiBtaWdodCBtYWtlLlxuICAgICAqL1xuICAgIGFzeW5jIGdldFRva2VuKHNjb3Blcywgb3B0aW9ucyA9IHt9KSB7XG4gICAgICAgIHJldHVybiB0cmFjaW5nQ2xpZW50LndpdGhTcGFuKGAke3RoaXMuY29uc3RydWN0b3IubmFtZX0uZ2V0VG9rZW5gLCBvcHRpb25zLCBhc3luYyAobmV3T3B0aW9ucykgPT4ge1xuICAgICAgICAgICAgY29uc3QgdGVuYW50SWQgPSBwcm9jZXNzTXVsdGlUZW5hbnRSZXF1ZXN0KHRoaXMudGVuYW50SWQsIG5ld09wdGlvbnMsIHRoaXMuYWRkaXRpb25hbGx5QWxsb3dlZFRlbmFudElkcyk7XG4gICAgICAgICAgICBuZXdPcHRpb25zLnRlbmFudElkID0gdGVuYW50SWQ7XG4gICAgICAgICAgICBjb25zdCBhcnJheVNjb3BlcyA9IGVuc3VyZVNjb3BlcyhzY29wZXMpO1xuICAgICAgICAgICAgcmV0dXJuIHRoaXMubXNhbENsaWVudC5nZXRUb2tlbkJ5QXV0aG9yaXphdGlvbkNvZGUoYXJyYXlTY29wZXMsIHRoaXMucmVkaXJlY3RVcmksIHRoaXMuYXV0aG9yaXphdGlvbkNvZGUsIHRoaXMuY2xpZW50U2VjcmV0LCBPYmplY3QuYXNzaWduKE9iamVjdC5hc3NpZ24oe30sIG5ld09wdGlvbnMpLCB7IGRpc2FibGVBdXRvbWF0aWNBdXRoZW50aWNhdGlvbjogdGhpcy5kaXNhYmxlQXV0b21hdGljQXV0aGVudGljYXRpb24gfSkpO1xuICAgICAgICB9KTtcbiAgICB9XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1hdXRob3JpemF0aW9uQ29kZUNyZWRlbnRpYWwuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/identity/dist-esm/src/credentials/authorizationCodeCredential.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/identity/dist-esm/src/credentials/azureCliCredential.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/@azure/identity/dist-esm/src/credentials/azureCliCredential.js ***!
  \*************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AzureCliCredential: () => (/* binding */ AzureCliCredential),\n/* harmony export */   cliCredentialInternals: () => (/* binding */ cliCredentialInternals)\n/* harmony export */ });\n/* harmony import */ var _util_tenantIdUtils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../util/tenantIdUtils */ \"(rsc)/./node_modules/@azure/identity/dist-esm/src/util/tenantIdUtils.js\");\n/* harmony import */ var _util_tenantIdUtils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../util/tenantIdUtils */ \"(rsc)/./node_modules/@azure/identity/dist-esm/src/util/processMultiTenantRequest.js\");\n/* harmony import */ var _util_logging__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../util/logging */ \"(rsc)/./node_modules/@azure/identity/dist-esm/src/util/logging.js\");\n/* harmony import */ var _util_scopeUtils__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../util/scopeUtils */ \"(rsc)/./node_modules/@azure/identity/dist-esm/src/util/scopeUtils.js\");\n/* harmony import */ var _errors__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../errors */ \"(rsc)/./node_modules/@azure/identity/dist-esm/src/errors.js\");\n/* harmony import */ var child_process__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! child_process */ \"child_process\");\n/* harmony import */ var child_process__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(child_process__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _util_tracing__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../util/tracing */ \"(rsc)/./node_modules/@azure/identity/dist-esm/src/util/tracing.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\n\n\n\n\n\n/**\n * Mockable reference to the CLI credential cliCredentialFunctions\n * @internal\n */\nconst cliCredentialInternals = {\n    /**\n     * @internal\n     */\n    getSafeWorkingDir() {\n        if (process.platform === \"win32\") {\n            if (!process.env.SystemRoot) {\n                throw new Error(\"Azure CLI credential expects a 'SystemRoot' environment variable\");\n            }\n            return process.env.SystemRoot;\n        }\n        else {\n            return \"/bin\";\n        }\n    },\n    /**\n     * Gets the access token from Azure CLI\n     * @param resource - The resource to use when getting the token\n     * @internal\n     */\n    async getAzureCliAccessToken(resource, tenantId, timeout) {\n        let tenantSection = [];\n        if (tenantId) {\n            tenantSection = [\"--tenant\", tenantId];\n        }\n        return new Promise((resolve, reject) => {\n            try {\n                child_process__WEBPACK_IMPORTED_MODULE_0___default().execFile(\"az\", [\n                    \"account\",\n                    \"get-access-token\",\n                    \"--output\",\n                    \"json\",\n                    \"--resource\",\n                    resource,\n                    ...tenantSection,\n                ], { cwd: cliCredentialInternals.getSafeWorkingDir(), shell: true, timeout }, (error, stdout, stderr) => {\n                    resolve({ stdout: stdout, stderr: stderr, error });\n                });\n            }\n            catch (err) {\n                reject(err);\n            }\n        });\n    },\n};\nconst logger = (0,_util_logging__WEBPACK_IMPORTED_MODULE_1__.credentialLogger)(\"AzureCliCredential\");\n/**\n * This credential will use the currently logged-in user login information\n * via the Azure CLI ('az') commandline tool.\n * To do so, it will read the user access token and expire time\n * with Azure CLI command \"az account get-access-token\".\n */\nclass AzureCliCredential {\n    /**\n     * Creates an instance of the {@link AzureCliCredential}.\n     *\n     * To use this credential, ensure that you have already logged\n     * in via the 'az' tool using the command \"az login\" from the commandline.\n     *\n     * @param options - Options, to optionally allow multi-tenant requests.\n     */\n    constructor(options) {\n        if (options === null || options === void 0 ? void 0 : options.tenantId) {\n            (0,_util_tenantIdUtils__WEBPACK_IMPORTED_MODULE_2__.checkTenantId)(logger, options === null || options === void 0 ? void 0 : options.tenantId);\n            this.tenantId = options === null || options === void 0 ? void 0 : options.tenantId;\n        }\n        this.additionallyAllowedTenantIds = (0,_util_tenantIdUtils__WEBPACK_IMPORTED_MODULE_2__.resolveAdditionallyAllowedTenantIds)(options === null || options === void 0 ? void 0 : options.additionallyAllowedTenants);\n        this.timeout = options === null || options === void 0 ? void 0 : options.processTimeoutInMs;\n    }\n    /**\n     * Authenticates with Microsoft Entra ID and returns an access token if successful.\n     * If authentication fails, a {@link CredentialUnavailableError} will be thrown with the details of the failure.\n     *\n     * @param scopes - The list of scopes for which the token will have access.\n     * @param options - The options used to configure any requests this\n     *                TokenCredential implementation might make.\n     */\n    async getToken(scopes, options = {}) {\n        const tenantId = (0,_util_tenantIdUtils__WEBPACK_IMPORTED_MODULE_3__.processMultiTenantRequest)(this.tenantId, options, this.additionallyAllowedTenantIds);\n        if (tenantId) {\n            (0,_util_tenantIdUtils__WEBPACK_IMPORTED_MODULE_2__.checkTenantId)(logger, tenantId);\n        }\n        const scope = typeof scopes === \"string\" ? scopes : scopes[0];\n        logger.getToken.info(`Using the scope ${scope}`);\n        return _util_tracing__WEBPACK_IMPORTED_MODULE_4__.tracingClient.withSpan(`${this.constructor.name}.getToken`, options, async () => {\n            var _a, _b, _c, _d;\n            try {\n                (0,_util_scopeUtils__WEBPACK_IMPORTED_MODULE_5__.ensureValidScopeForDevTimeCreds)(scope, logger);\n                const resource = (0,_util_scopeUtils__WEBPACK_IMPORTED_MODULE_5__.getScopeResource)(scope);\n                const obj = await cliCredentialInternals.getAzureCliAccessToken(resource, tenantId, this.timeout);\n                const specificScope = (_a = obj.stderr) === null || _a === void 0 ? void 0 : _a.match(\"(.*)az login --scope(.*)\");\n                const isLoginError = ((_b = obj.stderr) === null || _b === void 0 ? void 0 : _b.match(\"(.*)az login(.*)\")) && !specificScope;\n                const isNotInstallError = ((_c = obj.stderr) === null || _c === void 0 ? void 0 : _c.match(\"az:(.*)not found\")) || ((_d = obj.stderr) === null || _d === void 0 ? void 0 : _d.startsWith(\"'az' is not recognized\"));\n                if (isNotInstallError) {\n                    const error = new _errors__WEBPACK_IMPORTED_MODULE_6__.CredentialUnavailableError(\"Azure CLI could not be found. Please visit https://aka.ms/azure-cli for installation instructions and then, once installed, authenticate to your Azure account using 'az login'.\");\n                    logger.getToken.info((0,_util_logging__WEBPACK_IMPORTED_MODULE_1__.formatError)(scopes, error));\n                    throw error;\n                }\n                if (isLoginError) {\n                    const error = new _errors__WEBPACK_IMPORTED_MODULE_6__.CredentialUnavailableError(\"Please run 'az login' from a command prompt to authenticate before using this credential.\");\n                    logger.getToken.info((0,_util_logging__WEBPACK_IMPORTED_MODULE_1__.formatError)(scopes, error));\n                    throw error;\n                }\n                try {\n                    const responseData = obj.stdout;\n                    const response = this.parseRawResponse(responseData);\n                    logger.getToken.info((0,_util_logging__WEBPACK_IMPORTED_MODULE_1__.formatSuccess)(scopes));\n                    return response;\n                }\n                catch (e) {\n                    if (obj.stderr) {\n                        throw new _errors__WEBPACK_IMPORTED_MODULE_6__.CredentialUnavailableError(obj.stderr);\n                    }\n                    throw e;\n                }\n            }\n            catch (err) {\n                const error = err.name === \"CredentialUnavailableError\"\n                    ? err\n                    : new _errors__WEBPACK_IMPORTED_MODULE_6__.CredentialUnavailableError(err.message || \"Unknown error while trying to retrieve the access token\");\n                logger.getToken.info((0,_util_logging__WEBPACK_IMPORTED_MODULE_1__.formatError)(scopes, error));\n                throw error;\n            }\n        });\n    }\n    /**\n     * Parses the raw JSON response from the Azure CLI into a usable AccessToken object\n     *\n     * @param rawResponse - The raw JSON response from the Azure CLI\n     * @returns An access token with the expiry time parsed from the raw response\n     *\n     * The expiryTime of the credential's access token, in milliseconds, is calculated as follows:\n     *\n     * When available, expires_on (introduced in Azure CLI v2.54.0) will be preferred. Otherwise falls back to expiresOn.\n     */\n    parseRawResponse(rawResponse) {\n        const response = JSON.parse(rawResponse);\n        const token = response.accessToken;\n        // if available, expires_on will be a number representing seconds since epoch.\n        // ensure it's a number or NaN\n        let expiresOnTimestamp = Number.parseInt(response.expires_on, 10) * 1000;\n        if (!isNaN(expiresOnTimestamp)) {\n            logger.getToken.info(\"expires_on is available and is valid, using it\");\n            return {\n                token,\n                expiresOnTimestamp,\n            };\n        }\n        // fallback to the older expiresOn - an RFC3339 date string\n        expiresOnTimestamp = new Date(response.expiresOn).getTime();\n        // ensure expiresOn is well-formatted\n        if (isNaN(expiresOnTimestamp)) {\n            throw new _errors__WEBPACK_IMPORTED_MODULE_6__.CredentialUnavailableError(`Unexpected response from Azure CLI when getting token. Expected \"expiresOn\" to be a RFC3339 date string. Got: \"${response.expiresOn}\"`);\n        }\n        return {\n            token,\n            expiresOnTimestamp,\n        };\n    }\n}\n//# sourceMappingURL=azureCliCredential.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2lkZW50aXR5L2Rpc3QtZXNtL3NyYy9jcmVkZW50aWFscy9henVyZUNsaUNyZWRlbnRpYWwuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7OztBQUFBO0FBQ0E7QUFDdUg7QUFDeEM7QUFDUTtBQUNoQztBQUNiO0FBQ007QUFDaEQ7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdCQUFnQiw2REFBc0I7QUFDdEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxxQkFBcUIsdUVBQXVFO0FBQzVGLDhCQUE4Qix1Q0FBdUM7QUFDckUsaUJBQWlCO0FBQ2pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNULEtBQUs7QUFDTDtBQUNBLGVBQWUsK0RBQWdCO0FBQy9CO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQSxtQ0FBbUMseUJBQXlCO0FBQzVEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxZQUFZLGtFQUFhO0FBQ3pCO0FBQ0E7QUFDQSw0Q0FBNEMsd0ZBQW1DO0FBQy9FO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbUNBQW1DLGtDQUFrQztBQUNyRTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsdUNBQXVDO0FBQ3ZDLHlCQUF5Qiw4RUFBeUI7QUFDbEQ7QUFDQSxZQUFZLGtFQUFhO0FBQ3pCO0FBQ0E7QUFDQSxnREFBZ0QsTUFBTTtBQUN0RCxlQUFlLHdEQUFhLGFBQWEsc0JBQXNCO0FBQy9EO0FBQ0E7QUFDQSxnQkFBZ0IsaUZBQStCO0FBQy9DLGlDQUFpQyxrRUFBZ0I7QUFDakQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHNDQUFzQywrREFBMEI7QUFDaEUseUNBQXlDLDBEQUFXO0FBQ3BEO0FBQ0E7QUFDQTtBQUNBLHNDQUFzQywrREFBMEI7QUFDaEUseUNBQXlDLDBEQUFXO0FBQ3BEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx5Q0FBeUMsNERBQWE7QUFDdEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrQ0FBa0MsK0RBQTBCO0FBQzVEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMEJBQTBCLCtEQUEwQjtBQUNwRCxxQ0FBcUMsMERBQVc7QUFDaEQ7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHNCQUFzQiwrREFBMEIsbUhBQW1ILG1CQUFtQjtBQUN0TDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZGFuaWVsMy12cDIvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2lkZW50aXR5L2Rpc3QtZXNtL3NyYy9jcmVkZW50aWFscy9henVyZUNsaUNyZWRlbnRpYWwuanM/YWIyYyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi5cbi8vIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZS5cbmltcG9ydCB7IGNoZWNrVGVuYW50SWQsIHByb2Nlc3NNdWx0aVRlbmFudFJlcXVlc3QsIHJlc29sdmVBZGRpdGlvbmFsbHlBbGxvd2VkVGVuYW50SWRzLCB9IGZyb20gXCIuLi91dGlsL3RlbmFudElkVXRpbHNcIjtcbmltcG9ydCB7IGNyZWRlbnRpYWxMb2dnZXIsIGZvcm1hdEVycm9yLCBmb3JtYXRTdWNjZXNzIH0gZnJvbSBcIi4uL3V0aWwvbG9nZ2luZ1wiO1xuaW1wb3J0IHsgZW5zdXJlVmFsaWRTY29wZUZvckRldlRpbWVDcmVkcywgZ2V0U2NvcGVSZXNvdXJjZSB9IGZyb20gXCIuLi91dGlsL3Njb3BlVXRpbHNcIjtcbmltcG9ydCB7IENyZWRlbnRpYWxVbmF2YWlsYWJsZUVycm9yIH0gZnJvbSBcIi4uL2Vycm9yc1wiO1xuaW1wb3J0IGNoaWxkX3Byb2Nlc3MgZnJvbSBcImNoaWxkX3Byb2Nlc3NcIjtcbmltcG9ydCB7IHRyYWNpbmdDbGllbnQgfSBmcm9tIFwiLi4vdXRpbC90cmFjaW5nXCI7XG4vKipcbiAqIE1vY2thYmxlIHJlZmVyZW5jZSB0byB0aGUgQ0xJIGNyZWRlbnRpYWwgY2xpQ3JlZGVudGlhbEZ1bmN0aW9uc1xuICogQGludGVybmFsXG4gKi9cbmV4cG9ydCBjb25zdCBjbGlDcmVkZW50aWFsSW50ZXJuYWxzID0ge1xuICAgIC8qKlxuICAgICAqIEBpbnRlcm5hbFxuICAgICAqL1xuICAgIGdldFNhZmVXb3JraW5nRGlyKCkge1xuICAgICAgICBpZiAocHJvY2Vzcy5wbGF0Zm9ybSA9PT0gXCJ3aW4zMlwiKSB7XG4gICAgICAgICAgICBpZiAoIXByb2Nlc3MuZW52LlN5c3RlbVJvb3QpIHtcbiAgICAgICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJBenVyZSBDTEkgY3JlZGVudGlhbCBleHBlY3RzIGEgJ1N5c3RlbVJvb3QnIGVudmlyb25tZW50IHZhcmlhYmxlXCIpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcmV0dXJuIHByb2Nlc3MuZW52LlN5c3RlbVJvb3Q7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICByZXR1cm4gXCIvYmluXCI7XG4gICAgICAgIH1cbiAgICB9LFxuICAgIC8qKlxuICAgICAqIEdldHMgdGhlIGFjY2VzcyB0b2tlbiBmcm9tIEF6dXJlIENMSVxuICAgICAqIEBwYXJhbSByZXNvdXJjZSAtIFRoZSByZXNvdXJjZSB0byB1c2Ugd2hlbiBnZXR0aW5nIHRoZSB0b2tlblxuICAgICAqIEBpbnRlcm5hbFxuICAgICAqL1xuICAgIGFzeW5jIGdldEF6dXJlQ2xpQWNjZXNzVG9rZW4ocmVzb3VyY2UsIHRlbmFudElkLCB0aW1lb3V0KSB7XG4gICAgICAgIGxldCB0ZW5hbnRTZWN0aW9uID0gW107XG4gICAgICAgIGlmICh0ZW5hbnRJZCkge1xuICAgICAgICAgICAgdGVuYW50U2VjdGlvbiA9IFtcIi0tdGVuYW50XCIsIHRlbmFudElkXTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gbmV3IFByb21pc2UoKHJlc29sdmUsIHJlamVjdCkgPT4ge1xuICAgICAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgICAgICBjaGlsZF9wcm9jZXNzLmV4ZWNGaWxlKFwiYXpcIiwgW1xuICAgICAgICAgICAgICAgICAgICBcImFjY291bnRcIixcbiAgICAgICAgICAgICAgICAgICAgXCJnZXQtYWNjZXNzLXRva2VuXCIsXG4gICAgICAgICAgICAgICAgICAgIFwiLS1vdXRwdXRcIixcbiAgICAgICAgICAgICAgICAgICAgXCJqc29uXCIsXG4gICAgICAgICAgICAgICAgICAgIFwiLS1yZXNvdXJjZVwiLFxuICAgICAgICAgICAgICAgICAgICByZXNvdXJjZSxcbiAgICAgICAgICAgICAgICAgICAgLi4udGVuYW50U2VjdGlvbixcbiAgICAgICAgICAgICAgICBdLCB7IGN3ZDogY2xpQ3JlZGVudGlhbEludGVybmFscy5nZXRTYWZlV29ya2luZ0RpcigpLCBzaGVsbDogdHJ1ZSwgdGltZW91dCB9LCAoZXJyb3IsIHN0ZG91dCwgc3RkZXJyKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgIHJlc29sdmUoeyBzdGRvdXQ6IHN0ZG91dCwgc3RkZXJyOiBzdGRlcnIsIGVycm9yIH0pO1xuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgY2F0Y2ggKGVycikge1xuICAgICAgICAgICAgICAgIHJlamVjdChlcnIpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9KTtcbiAgICB9LFxufTtcbmNvbnN0IGxvZ2dlciA9IGNyZWRlbnRpYWxMb2dnZXIoXCJBenVyZUNsaUNyZWRlbnRpYWxcIik7XG4vKipcbiAqIFRoaXMgY3JlZGVudGlhbCB3aWxsIHVzZSB0aGUgY3VycmVudGx5IGxvZ2dlZC1pbiB1c2VyIGxvZ2luIGluZm9ybWF0aW9uXG4gKiB2aWEgdGhlIEF6dXJlIENMSSAoJ2F6JykgY29tbWFuZGxpbmUgdG9vbC5cbiAqIFRvIGRvIHNvLCBpdCB3aWxsIHJlYWQgdGhlIHVzZXIgYWNjZXNzIHRva2VuIGFuZCBleHBpcmUgdGltZVxuICogd2l0aCBBenVyZSBDTEkgY29tbWFuZCBcImF6IGFjY291bnQgZ2V0LWFjY2Vzcy10b2tlblwiLlxuICovXG5leHBvcnQgY2xhc3MgQXp1cmVDbGlDcmVkZW50aWFsIHtcbiAgICAvKipcbiAgICAgKiBDcmVhdGVzIGFuIGluc3RhbmNlIG9mIHRoZSB7QGxpbmsgQXp1cmVDbGlDcmVkZW50aWFsfS5cbiAgICAgKlxuICAgICAqIFRvIHVzZSB0aGlzIGNyZWRlbnRpYWwsIGVuc3VyZSB0aGF0IHlvdSBoYXZlIGFscmVhZHkgbG9nZ2VkXG4gICAgICogaW4gdmlhIHRoZSAnYXonIHRvb2wgdXNpbmcgdGhlIGNvbW1hbmQgXCJheiBsb2dpblwiIGZyb20gdGhlIGNvbW1hbmRsaW5lLlxuICAgICAqXG4gICAgICogQHBhcmFtIG9wdGlvbnMgLSBPcHRpb25zLCB0byBvcHRpb25hbGx5IGFsbG93IG11bHRpLXRlbmFudCByZXF1ZXN0cy5cbiAgICAgKi9cbiAgICBjb25zdHJ1Y3RvcihvcHRpb25zKSB7XG4gICAgICAgIGlmIChvcHRpb25zID09PSBudWxsIHx8IG9wdGlvbnMgPT09IHZvaWQgMCA/IHZvaWQgMCA6IG9wdGlvbnMudGVuYW50SWQpIHtcbiAgICAgICAgICAgIGNoZWNrVGVuYW50SWQobG9nZ2VyLCBvcHRpb25zID09PSBudWxsIHx8IG9wdGlvbnMgPT09IHZvaWQgMCA/IHZvaWQgMCA6IG9wdGlvbnMudGVuYW50SWQpO1xuICAgICAgICAgICAgdGhpcy50ZW5hbnRJZCA9IG9wdGlvbnMgPT09IG51bGwgfHwgb3B0aW9ucyA9PT0gdm9pZCAwID8gdm9pZCAwIDogb3B0aW9ucy50ZW5hbnRJZDtcbiAgICAgICAgfVxuICAgICAgICB0aGlzLmFkZGl0aW9uYWxseUFsbG93ZWRUZW5hbnRJZHMgPSByZXNvbHZlQWRkaXRpb25hbGx5QWxsb3dlZFRlbmFudElkcyhvcHRpb25zID09PSBudWxsIHx8IG9wdGlvbnMgPT09IHZvaWQgMCA/IHZvaWQgMCA6IG9wdGlvbnMuYWRkaXRpb25hbGx5QWxsb3dlZFRlbmFudHMpO1xuICAgICAgICB0aGlzLnRpbWVvdXQgPSBvcHRpb25zID09PSBudWxsIHx8IG9wdGlvbnMgPT09IHZvaWQgMCA/IHZvaWQgMCA6IG9wdGlvbnMucHJvY2Vzc1RpbWVvdXRJbk1zO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBBdXRoZW50aWNhdGVzIHdpdGggTWljcm9zb2Z0IEVudHJhIElEIGFuZCByZXR1cm5zIGFuIGFjY2VzcyB0b2tlbiBpZiBzdWNjZXNzZnVsLlxuICAgICAqIElmIGF1dGhlbnRpY2F0aW9uIGZhaWxzLCBhIHtAbGluayBDcmVkZW50aWFsVW5hdmFpbGFibGVFcnJvcn0gd2lsbCBiZSB0aHJvd24gd2l0aCB0aGUgZGV0YWlscyBvZiB0aGUgZmFpbHVyZS5cbiAgICAgKlxuICAgICAqIEBwYXJhbSBzY29wZXMgLSBUaGUgbGlzdCBvZiBzY29wZXMgZm9yIHdoaWNoIHRoZSB0b2tlbiB3aWxsIGhhdmUgYWNjZXNzLlxuICAgICAqIEBwYXJhbSBvcHRpb25zIC0gVGhlIG9wdGlvbnMgdXNlZCB0byBjb25maWd1cmUgYW55IHJlcXVlc3RzIHRoaXNcbiAgICAgKiAgICAgICAgICAgICAgICBUb2tlbkNyZWRlbnRpYWwgaW1wbGVtZW50YXRpb24gbWlnaHQgbWFrZS5cbiAgICAgKi9cbiAgICBhc3luYyBnZXRUb2tlbihzY29wZXMsIG9wdGlvbnMgPSB7fSkge1xuICAgICAgICBjb25zdCB0ZW5hbnRJZCA9IHByb2Nlc3NNdWx0aVRlbmFudFJlcXVlc3QodGhpcy50ZW5hbnRJZCwgb3B0aW9ucywgdGhpcy5hZGRpdGlvbmFsbHlBbGxvd2VkVGVuYW50SWRzKTtcbiAgICAgICAgaWYgKHRlbmFudElkKSB7XG4gICAgICAgICAgICBjaGVja1RlbmFudElkKGxvZ2dlciwgdGVuYW50SWQpO1xuICAgICAgICB9XG4gICAgICAgIGNvbnN0IHNjb3BlID0gdHlwZW9mIHNjb3BlcyA9PT0gXCJzdHJpbmdcIiA/IHNjb3BlcyA6IHNjb3Blc1swXTtcbiAgICAgICAgbG9nZ2VyLmdldFRva2VuLmluZm8oYFVzaW5nIHRoZSBzY29wZSAke3Njb3BlfWApO1xuICAgICAgICByZXR1cm4gdHJhY2luZ0NsaWVudC53aXRoU3BhbihgJHt0aGlzLmNvbnN0cnVjdG9yLm5hbWV9LmdldFRva2VuYCwgb3B0aW9ucywgYXN5bmMgKCkgPT4ge1xuICAgICAgICAgICAgdmFyIF9hLCBfYiwgX2MsIF9kO1xuICAgICAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgICAgICBlbnN1cmVWYWxpZFNjb3BlRm9yRGV2VGltZUNyZWRzKHNjb3BlLCBsb2dnZXIpO1xuICAgICAgICAgICAgICAgIGNvbnN0IHJlc291cmNlID0gZ2V0U2NvcGVSZXNvdXJjZShzY29wZSk7XG4gICAgICAgICAgICAgICAgY29uc3Qgb2JqID0gYXdhaXQgY2xpQ3JlZGVudGlhbEludGVybmFscy5nZXRBenVyZUNsaUFjY2Vzc1Rva2VuKHJlc291cmNlLCB0ZW5hbnRJZCwgdGhpcy50aW1lb3V0KTtcbiAgICAgICAgICAgICAgICBjb25zdCBzcGVjaWZpY1Njb3BlID0gKF9hID0gb2JqLnN0ZGVycikgPT09IG51bGwgfHwgX2EgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9hLm1hdGNoKFwiKC4qKWF6IGxvZ2luIC0tc2NvcGUoLiopXCIpO1xuICAgICAgICAgICAgICAgIGNvbnN0IGlzTG9naW5FcnJvciA9ICgoX2IgPSBvYmouc3RkZXJyKSA9PT0gbnVsbCB8fCBfYiA9PT0gdm9pZCAwID8gdm9pZCAwIDogX2IubWF0Y2goXCIoLiopYXogbG9naW4oLiopXCIpKSAmJiAhc3BlY2lmaWNTY29wZTtcbiAgICAgICAgICAgICAgICBjb25zdCBpc05vdEluc3RhbGxFcnJvciA9ICgoX2MgPSBvYmouc3RkZXJyKSA9PT0gbnVsbCB8fCBfYyA9PT0gdm9pZCAwID8gdm9pZCAwIDogX2MubWF0Y2goXCJhejooLiopbm90IGZvdW5kXCIpKSB8fCAoKF9kID0gb2JqLnN0ZGVycikgPT09IG51bGwgfHwgX2QgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9kLnN0YXJ0c1dpdGgoXCInYXonIGlzIG5vdCByZWNvZ25pemVkXCIpKTtcbiAgICAgICAgICAgICAgICBpZiAoaXNOb3RJbnN0YWxsRXJyb3IpIHtcbiAgICAgICAgICAgICAgICAgICAgY29uc3QgZXJyb3IgPSBuZXcgQ3JlZGVudGlhbFVuYXZhaWxhYmxlRXJyb3IoXCJBenVyZSBDTEkgY291bGQgbm90IGJlIGZvdW5kLiBQbGVhc2UgdmlzaXQgaHR0cHM6Ly9ha2EubXMvYXp1cmUtY2xpIGZvciBpbnN0YWxsYXRpb24gaW5zdHJ1Y3Rpb25zIGFuZCB0aGVuLCBvbmNlIGluc3RhbGxlZCwgYXV0aGVudGljYXRlIHRvIHlvdXIgQXp1cmUgYWNjb3VudCB1c2luZyAnYXogbG9naW4nLlwiKTtcbiAgICAgICAgICAgICAgICAgICAgbG9nZ2VyLmdldFRva2VuLmluZm8oZm9ybWF0RXJyb3Ioc2NvcGVzLCBlcnJvcikpO1xuICAgICAgICAgICAgICAgICAgICB0aHJvdyBlcnJvcjtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgaWYgKGlzTG9naW5FcnJvcikge1xuICAgICAgICAgICAgICAgICAgICBjb25zdCBlcnJvciA9IG5ldyBDcmVkZW50aWFsVW5hdmFpbGFibGVFcnJvcihcIlBsZWFzZSBydW4gJ2F6IGxvZ2luJyBmcm9tIGEgY29tbWFuZCBwcm9tcHQgdG8gYXV0aGVudGljYXRlIGJlZm9yZSB1c2luZyB0aGlzIGNyZWRlbnRpYWwuXCIpO1xuICAgICAgICAgICAgICAgICAgICBsb2dnZXIuZ2V0VG9rZW4uaW5mbyhmb3JtYXRFcnJvcihzY29wZXMsIGVycm9yKSk7XG4gICAgICAgICAgICAgICAgICAgIHRocm93IGVycm9yO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB0cnkge1xuICAgICAgICAgICAgICAgICAgICBjb25zdCByZXNwb25zZURhdGEgPSBvYmouc3Rkb3V0O1xuICAgICAgICAgICAgICAgICAgICBjb25zdCByZXNwb25zZSA9IHRoaXMucGFyc2VSYXdSZXNwb25zZShyZXNwb25zZURhdGEpO1xuICAgICAgICAgICAgICAgICAgICBsb2dnZXIuZ2V0VG9rZW4uaW5mbyhmb3JtYXRTdWNjZXNzKHNjb3BlcykpO1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gcmVzcG9uc2U7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGNhdGNoIChlKSB7XG4gICAgICAgICAgICAgICAgICAgIGlmIChvYmouc3RkZXJyKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICB0aHJvdyBuZXcgQ3JlZGVudGlhbFVuYXZhaWxhYmxlRXJyb3Iob2JqLnN0ZGVycik7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgdGhyb3cgZTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBjYXRjaCAoZXJyKSB7XG4gICAgICAgICAgICAgICAgY29uc3QgZXJyb3IgPSBlcnIubmFtZSA9PT0gXCJDcmVkZW50aWFsVW5hdmFpbGFibGVFcnJvclwiXG4gICAgICAgICAgICAgICAgICAgID8gZXJyXG4gICAgICAgICAgICAgICAgICAgIDogbmV3IENyZWRlbnRpYWxVbmF2YWlsYWJsZUVycm9yKGVyci5tZXNzYWdlIHx8IFwiVW5rbm93biBlcnJvciB3aGlsZSB0cnlpbmcgdG8gcmV0cmlldmUgdGhlIGFjY2VzcyB0b2tlblwiKTtcbiAgICAgICAgICAgICAgICBsb2dnZXIuZ2V0VG9rZW4uaW5mbyhmb3JtYXRFcnJvcihzY29wZXMsIGVycm9yKSk7XG4gICAgICAgICAgICAgICAgdGhyb3cgZXJyb3I7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0pO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBQYXJzZXMgdGhlIHJhdyBKU09OIHJlc3BvbnNlIGZyb20gdGhlIEF6dXJlIENMSSBpbnRvIGEgdXNhYmxlIEFjY2Vzc1Rva2VuIG9iamVjdFxuICAgICAqXG4gICAgICogQHBhcmFtIHJhd1Jlc3BvbnNlIC0gVGhlIHJhdyBKU09OIHJlc3BvbnNlIGZyb20gdGhlIEF6dXJlIENMSVxuICAgICAqIEByZXR1cm5zIEFuIGFjY2VzcyB0b2tlbiB3aXRoIHRoZSBleHBpcnkgdGltZSBwYXJzZWQgZnJvbSB0aGUgcmF3IHJlc3BvbnNlXG4gICAgICpcbiAgICAgKiBUaGUgZXhwaXJ5VGltZSBvZiB0aGUgY3JlZGVudGlhbCdzIGFjY2VzcyB0b2tlbiwgaW4gbWlsbGlzZWNvbmRzLCBpcyBjYWxjdWxhdGVkIGFzIGZvbGxvd3M6XG4gICAgICpcbiAgICAgKiBXaGVuIGF2YWlsYWJsZSwgZXhwaXJlc19vbiAoaW50cm9kdWNlZCBpbiBBenVyZSBDTEkgdjIuNTQuMCkgd2lsbCBiZSBwcmVmZXJyZWQuIE90aGVyd2lzZSBmYWxscyBiYWNrIHRvIGV4cGlyZXNPbi5cbiAgICAgKi9cbiAgICBwYXJzZVJhd1Jlc3BvbnNlKHJhd1Jlc3BvbnNlKSB7XG4gICAgICAgIGNvbnN0IHJlc3BvbnNlID0gSlNPTi5wYXJzZShyYXdSZXNwb25zZSk7XG4gICAgICAgIGNvbnN0IHRva2VuID0gcmVzcG9uc2UuYWNjZXNzVG9rZW47XG4gICAgICAgIC8vIGlmIGF2YWlsYWJsZSwgZXhwaXJlc19vbiB3aWxsIGJlIGEgbnVtYmVyIHJlcHJlc2VudGluZyBzZWNvbmRzIHNpbmNlIGVwb2NoLlxuICAgICAgICAvLyBlbnN1cmUgaXQncyBhIG51bWJlciBvciBOYU5cbiAgICAgICAgbGV0IGV4cGlyZXNPblRpbWVzdGFtcCA9IE51bWJlci5wYXJzZUludChyZXNwb25zZS5leHBpcmVzX29uLCAxMCkgKiAxMDAwO1xuICAgICAgICBpZiAoIWlzTmFOKGV4cGlyZXNPblRpbWVzdGFtcCkpIHtcbiAgICAgICAgICAgIGxvZ2dlci5nZXRUb2tlbi5pbmZvKFwiZXhwaXJlc19vbiBpcyBhdmFpbGFibGUgYW5kIGlzIHZhbGlkLCB1c2luZyBpdFwiKTtcbiAgICAgICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICAgICAgdG9rZW4sXG4gICAgICAgICAgICAgICAgZXhwaXJlc09uVGltZXN0YW1wLFxuICAgICAgICAgICAgfTtcbiAgICAgICAgfVxuICAgICAgICAvLyBmYWxsYmFjayB0byB0aGUgb2xkZXIgZXhwaXJlc09uIC0gYW4gUkZDMzMzOSBkYXRlIHN0cmluZ1xuICAgICAgICBleHBpcmVzT25UaW1lc3RhbXAgPSBuZXcgRGF0ZShyZXNwb25zZS5leHBpcmVzT24pLmdldFRpbWUoKTtcbiAgICAgICAgLy8gZW5zdXJlIGV4cGlyZXNPbiBpcyB3ZWxsLWZvcm1hdHRlZFxuICAgICAgICBpZiAoaXNOYU4oZXhwaXJlc09uVGltZXN0YW1wKSkge1xuICAgICAgICAgICAgdGhyb3cgbmV3IENyZWRlbnRpYWxVbmF2YWlsYWJsZUVycm9yKGBVbmV4cGVjdGVkIHJlc3BvbnNlIGZyb20gQXp1cmUgQ0xJIHdoZW4gZ2V0dGluZyB0b2tlbi4gRXhwZWN0ZWQgXCJleHBpcmVzT25cIiB0byBiZSBhIFJGQzMzMzkgZGF0ZSBzdHJpbmcuIEdvdDogXCIke3Jlc3BvbnNlLmV4cGlyZXNPbn1cImApO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICB0b2tlbixcbiAgICAgICAgICAgIGV4cGlyZXNPblRpbWVzdGFtcCxcbiAgICAgICAgfTtcbiAgICB9XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1henVyZUNsaUNyZWRlbnRpYWwuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/identity/dist-esm/src/credentials/azureCliCredential.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/identity/dist-esm/src/credentials/azureDeveloperCliCredential.js":
/*!**********************************************************************************************!*\
  !*** ./node_modules/@azure/identity/dist-esm/src/credentials/azureDeveloperCliCredential.js ***!
  \**********************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AzureDeveloperCliCredential: () => (/* binding */ AzureDeveloperCliCredential),\n/* harmony export */   developerCliCredentialInternals: () => (/* binding */ developerCliCredentialInternals)\n/* harmony export */ });\n/* harmony import */ var _util_logging__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../util/logging */ \"(rsc)/./node_modules/@azure/identity/dist-esm/src/util/logging.js\");\n/* harmony import */ var _errors__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../errors */ \"(rsc)/./node_modules/@azure/identity/dist-esm/src/errors.js\");\n/* harmony import */ var child_process__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! child_process */ \"child_process\");\n/* harmony import */ var child_process__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(child_process__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _util_tenantIdUtils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../util/tenantIdUtils */ \"(rsc)/./node_modules/@azure/identity/dist-esm/src/util/tenantIdUtils.js\");\n/* harmony import */ var _util_tenantIdUtils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../util/tenantIdUtils */ \"(rsc)/./node_modules/@azure/identity/dist-esm/src/util/processMultiTenantRequest.js\");\n/* harmony import */ var _util_tracing__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../util/tracing */ \"(rsc)/./node_modules/@azure/identity/dist-esm/src/util/tracing.js\");\n/* harmony import */ var _util_scopeUtils__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../util/scopeUtils */ \"(rsc)/./node_modules/@azure/identity/dist-esm/src/util/scopeUtils.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\n\n\n\n\n\n/**\n * Mockable reference to the Developer CLI credential cliCredentialFunctions\n * @internal\n */\nconst developerCliCredentialInternals = {\n    /**\n     * @internal\n     */\n    getSafeWorkingDir() {\n        if (process.platform === \"win32\") {\n            if (!process.env.SystemRoot) {\n                throw new Error(\"Azure Developer CLI credential expects a 'SystemRoot' environment variable\");\n            }\n            return process.env.SystemRoot;\n        }\n        else {\n            return \"/bin\";\n        }\n    },\n    /**\n     * Gets the access token from Azure Developer CLI\n     * @param scopes - The scopes to use when getting the token\n     * @internal\n     */\n    async getAzdAccessToken(scopes, tenantId, timeout) {\n        let tenantSection = [];\n        if (tenantId) {\n            tenantSection = [\"--tenant-id\", tenantId];\n        }\n        return new Promise((resolve, reject) => {\n            try {\n                child_process__WEBPACK_IMPORTED_MODULE_0___default().execFile(\"azd\", [\n                    \"auth\",\n                    \"token\",\n                    \"--output\",\n                    \"json\",\n                    ...scopes.reduce((previous, current) => previous.concat(\"--scope\", current), []),\n                    ...tenantSection,\n                ], {\n                    cwd: developerCliCredentialInternals.getSafeWorkingDir(),\n                    timeout,\n                }, (error, stdout, stderr) => {\n                    resolve({ stdout, stderr, error });\n                });\n            }\n            catch (err) {\n                reject(err);\n            }\n        });\n    },\n};\nconst logger = (0,_util_logging__WEBPACK_IMPORTED_MODULE_1__.credentialLogger)(\"AzureDeveloperCliCredential\");\n/**\n * Azure Developer CLI is a command-line interface tool that allows developers to create, manage, and deploy\n * resources in Azure. It's built on top of the Azure CLI and provides additional functionality specific\n * to Azure developers. It allows users to authenticate as a user and/or a service principal against\n * <a href=\"https://learn.microsoft.com/entra/fundamentals/\">Microsoft Entra ID</a>. The\n * AzureDeveloperCliCredential authenticates in a development environment and acquires a token on behalf of\n * the logged-in user or service principal in the Azure Developer CLI. It acts as the Azure Developer CLI logged in user or\n * service principal and executes an Azure CLI command underneath to authenticate the application against\n * Microsoft Entra ID.\n *\n * <h2> Configure AzureDeveloperCliCredential </h2>\n *\n * To use this credential, the developer needs to authenticate locally in Azure Developer CLI using one of the\n * commands below:\n *\n * <ol>\n *     <li>Run \"azd auth login\" in Azure Developer CLI to authenticate interactively as a user.</li>\n *     <li>Run \"azd auth login --client-id clientID --client-secret clientSecret\n *     --tenant-id tenantID\" to authenticate as a service principal.</li>\n * </ol>\n *\n * You may need to repeat this process after a certain time period, depending on the refresh token validity in your\n * organization. Generally, the refresh token validity period is a few weeks to a few months.\n * AzureDeveloperCliCredential will prompt you to sign in again.\n */\nclass AzureDeveloperCliCredential {\n    /**\n     * Creates an instance of the {@link AzureDeveloperCliCredential}.\n     *\n     * To use this credential, ensure that you have already logged\n     * in via the 'azd' tool using the command \"azd auth login\" from the commandline.\n     *\n     * @param options - Options, to optionally allow multi-tenant requests.\n     */\n    constructor(options) {\n        if (options === null || options === void 0 ? void 0 : options.tenantId) {\n            (0,_util_tenantIdUtils__WEBPACK_IMPORTED_MODULE_2__.checkTenantId)(logger, options === null || options === void 0 ? void 0 : options.tenantId);\n            this.tenantId = options === null || options === void 0 ? void 0 : options.tenantId;\n        }\n        this.additionallyAllowedTenantIds = (0,_util_tenantIdUtils__WEBPACK_IMPORTED_MODULE_2__.resolveAdditionallyAllowedTenantIds)(options === null || options === void 0 ? void 0 : options.additionallyAllowedTenants);\n        this.timeout = options === null || options === void 0 ? void 0 : options.processTimeoutInMs;\n    }\n    /**\n     * Authenticates with Microsoft Entra ID and returns an access token if successful.\n     * If authentication fails, a {@link CredentialUnavailableError} will be thrown with the details of the failure.\n     *\n     * @param scopes - The list of scopes for which the token will have access.\n     * @param options - The options used to configure any requests this\n     *                TokenCredential implementation might make.\n     */\n    async getToken(scopes, options = {}) {\n        const tenantId = (0,_util_tenantIdUtils__WEBPACK_IMPORTED_MODULE_3__.processMultiTenantRequest)(this.tenantId, options, this.additionallyAllowedTenantIds);\n        if (tenantId) {\n            (0,_util_tenantIdUtils__WEBPACK_IMPORTED_MODULE_2__.checkTenantId)(logger, tenantId);\n        }\n        let scopeList;\n        if (typeof scopes === \"string\") {\n            scopeList = [scopes];\n        }\n        else {\n            scopeList = scopes;\n        }\n        logger.getToken.info(`Using the scopes ${scopes}`);\n        return _util_tracing__WEBPACK_IMPORTED_MODULE_4__.tracingClient.withSpan(`${this.constructor.name}.getToken`, options, async () => {\n            var _a, _b, _c, _d;\n            try {\n                scopeList.forEach((scope) => {\n                    (0,_util_scopeUtils__WEBPACK_IMPORTED_MODULE_5__.ensureValidScopeForDevTimeCreds)(scope, logger);\n                });\n                const obj = await developerCliCredentialInternals.getAzdAccessToken(scopeList, tenantId, this.timeout);\n                const isNotLoggedInError = ((_a = obj.stderr) === null || _a === void 0 ? void 0 : _a.match(\"not logged in, run `azd login` to login\")) ||\n                    ((_b = obj.stderr) === null || _b === void 0 ? void 0 : _b.match(\"not logged in, run `azd auth login` to login\"));\n                const isNotInstallError = ((_c = obj.stderr) === null || _c === void 0 ? void 0 : _c.match(\"azd:(.*)not found\")) ||\n                    ((_d = obj.stderr) === null || _d === void 0 ? void 0 : _d.startsWith(\"'azd' is not recognized\"));\n                if (isNotInstallError || (obj.error && obj.error.code === \"ENOENT\")) {\n                    const error = new _errors__WEBPACK_IMPORTED_MODULE_6__.CredentialUnavailableError(\"Azure Developer CLI couldn't be found. To mitigate this issue, see the troubleshooting guidelines at https://aka.ms/azsdk/js/identity/azdevclicredential/troubleshoot.\");\n                    logger.getToken.info((0,_util_logging__WEBPACK_IMPORTED_MODULE_1__.formatError)(scopes, error));\n                    throw error;\n                }\n                if (isNotLoggedInError) {\n                    const error = new _errors__WEBPACK_IMPORTED_MODULE_6__.CredentialUnavailableError(\"Please run 'azd auth login' from a command prompt to authenticate before using this credential. For more information, see the troubleshooting guidelines at https://aka.ms/azsdk/js/identity/azdevclicredential/troubleshoot.\");\n                    logger.getToken.info((0,_util_logging__WEBPACK_IMPORTED_MODULE_1__.formatError)(scopes, error));\n                    throw error;\n                }\n                try {\n                    const resp = JSON.parse(obj.stdout);\n                    logger.getToken.info((0,_util_logging__WEBPACK_IMPORTED_MODULE_1__.formatSuccess)(scopes));\n                    return {\n                        token: resp.token,\n                        expiresOnTimestamp: new Date(resp.expiresOn).getTime(),\n                    };\n                }\n                catch (e) {\n                    if (obj.stderr) {\n                        throw new _errors__WEBPACK_IMPORTED_MODULE_6__.CredentialUnavailableError(obj.stderr);\n                    }\n                    throw e;\n                }\n            }\n            catch (err) {\n                const error = err.name === \"CredentialUnavailableError\"\n                    ? err\n                    : new _errors__WEBPACK_IMPORTED_MODULE_6__.CredentialUnavailableError(err.message || \"Unknown error while trying to retrieve the access token\");\n                logger.getToken.info((0,_util_logging__WEBPACK_IMPORTED_MODULE_1__.formatError)(scopes, error));\n                throw error;\n            }\n        });\n    }\n}\n//# sourceMappingURL=azureDeveloperCliCredential.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2lkZW50aXR5L2Rpc3QtZXNtL3NyYy9jcmVkZW50aWFscy9henVyZURldmVsb3BlckNsaUNyZWRlbnRpYWwuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7OztBQUFBO0FBQ0E7QUFDK0U7QUFDeEI7QUFDYjtBQUM2RTtBQUN2RTtBQUNxQjtBQUNyRTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0JBQWdCLDZEQUFzQjtBQUN0QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUI7QUFDakIsOEJBQThCLHVCQUF1QjtBQUNyRCxpQkFBaUI7QUFDakI7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1QsS0FBSztBQUNMO0FBQ0EsZUFBZSwrREFBZ0I7QUFDL0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0EsbUNBQW1DLGtDQUFrQztBQUNyRTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsWUFBWSxrRUFBYTtBQUN6QjtBQUNBO0FBQ0EsNENBQTRDLHdGQUFtQztBQUMvRTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG1DQUFtQyxrQ0FBa0M7QUFDckU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHVDQUF1QztBQUN2Qyx5QkFBeUIsOEVBQXlCO0FBQ2xEO0FBQ0EsWUFBWSxrRUFBYTtBQUN6QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaURBQWlELE9BQU87QUFDeEQsZUFBZSx3REFBYSxhQUFhLHNCQUFzQjtBQUMvRDtBQUNBO0FBQ0E7QUFDQSxvQkFBb0IsaUZBQStCO0FBQ25ELGlCQUFpQjtBQUNqQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxzQ0FBc0MsK0RBQTBCO0FBQ2hFLHlDQUF5QywwREFBVztBQUNwRDtBQUNBO0FBQ0E7QUFDQSxzQ0FBc0MsK0RBQTBCO0FBQ2hFLHlDQUF5QywwREFBVztBQUNwRDtBQUNBO0FBQ0E7QUFDQTtBQUNBLHlDQUF5Qyw0REFBYTtBQUN0RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtDQUFrQywrREFBMEI7QUFDNUQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwwQkFBMEIsK0RBQTBCO0FBQ3BELHFDQUFxQywwREFBVztBQUNoRDtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2RhbmllbDMtdnAyLy4vbm9kZV9tb2R1bGVzL0BhenVyZS9pZGVudGl0eS9kaXN0LWVzbS9zcmMvY3JlZGVudGlhbHMvYXp1cmVEZXZlbG9wZXJDbGlDcmVkZW50aWFsLmpzP2QyYTQiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uXG4vLyBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UuXG5pbXBvcnQgeyBjcmVkZW50aWFsTG9nZ2VyLCBmb3JtYXRFcnJvciwgZm9ybWF0U3VjY2VzcyB9IGZyb20gXCIuLi91dGlsL2xvZ2dpbmdcIjtcbmltcG9ydCB7IENyZWRlbnRpYWxVbmF2YWlsYWJsZUVycm9yIH0gZnJvbSBcIi4uL2Vycm9yc1wiO1xuaW1wb3J0IGNoaWxkX3Byb2Nlc3MgZnJvbSBcImNoaWxkX3Byb2Nlc3NcIjtcbmltcG9ydCB7IGNoZWNrVGVuYW50SWQsIHByb2Nlc3NNdWx0aVRlbmFudFJlcXVlc3QsIHJlc29sdmVBZGRpdGlvbmFsbHlBbGxvd2VkVGVuYW50SWRzLCB9IGZyb20gXCIuLi91dGlsL3RlbmFudElkVXRpbHNcIjtcbmltcG9ydCB7IHRyYWNpbmdDbGllbnQgfSBmcm9tIFwiLi4vdXRpbC90cmFjaW5nXCI7XG5pbXBvcnQgeyBlbnN1cmVWYWxpZFNjb3BlRm9yRGV2VGltZUNyZWRzIH0gZnJvbSBcIi4uL3V0aWwvc2NvcGVVdGlsc1wiO1xuLyoqXG4gKiBNb2NrYWJsZSByZWZlcmVuY2UgdG8gdGhlIERldmVsb3BlciBDTEkgY3JlZGVudGlhbCBjbGlDcmVkZW50aWFsRnVuY3Rpb25zXG4gKiBAaW50ZXJuYWxcbiAqL1xuZXhwb3J0IGNvbnN0IGRldmVsb3BlckNsaUNyZWRlbnRpYWxJbnRlcm5hbHMgPSB7XG4gICAgLyoqXG4gICAgICogQGludGVybmFsXG4gICAgICovXG4gICAgZ2V0U2FmZVdvcmtpbmdEaXIoKSB7XG4gICAgICAgIGlmIChwcm9jZXNzLnBsYXRmb3JtID09PSBcIndpbjMyXCIpIHtcbiAgICAgICAgICAgIGlmICghcHJvY2Vzcy5lbnYuU3lzdGVtUm9vdCkge1xuICAgICAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihcIkF6dXJlIERldmVsb3BlciBDTEkgY3JlZGVudGlhbCBleHBlY3RzIGEgJ1N5c3RlbVJvb3QnIGVudmlyb25tZW50IHZhcmlhYmxlXCIpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcmV0dXJuIHByb2Nlc3MuZW52LlN5c3RlbVJvb3Q7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICByZXR1cm4gXCIvYmluXCI7XG4gICAgICAgIH1cbiAgICB9LFxuICAgIC8qKlxuICAgICAqIEdldHMgdGhlIGFjY2VzcyB0b2tlbiBmcm9tIEF6dXJlIERldmVsb3BlciBDTElcbiAgICAgKiBAcGFyYW0gc2NvcGVzIC0gVGhlIHNjb3BlcyB0byB1c2Ugd2hlbiBnZXR0aW5nIHRoZSB0b2tlblxuICAgICAqIEBpbnRlcm5hbFxuICAgICAqL1xuICAgIGFzeW5jIGdldEF6ZEFjY2Vzc1Rva2VuKHNjb3BlcywgdGVuYW50SWQsIHRpbWVvdXQpIHtcbiAgICAgICAgbGV0IHRlbmFudFNlY3Rpb24gPSBbXTtcbiAgICAgICAgaWYgKHRlbmFudElkKSB7XG4gICAgICAgICAgICB0ZW5hbnRTZWN0aW9uID0gW1wiLS10ZW5hbnQtaWRcIiwgdGVuYW50SWRdO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBuZXcgUHJvbWlzZSgocmVzb2x2ZSwgcmVqZWN0KSA9PiB7XG4gICAgICAgICAgICB0cnkge1xuICAgICAgICAgICAgICAgIGNoaWxkX3Byb2Nlc3MuZXhlY0ZpbGUoXCJhemRcIiwgW1xuICAgICAgICAgICAgICAgICAgICBcImF1dGhcIixcbiAgICAgICAgICAgICAgICAgICAgXCJ0b2tlblwiLFxuICAgICAgICAgICAgICAgICAgICBcIi0tb3V0cHV0XCIsXG4gICAgICAgICAgICAgICAgICAgIFwianNvblwiLFxuICAgICAgICAgICAgICAgICAgICAuLi5zY29wZXMucmVkdWNlKChwcmV2aW91cywgY3VycmVudCkgPT4gcHJldmlvdXMuY29uY2F0KFwiLS1zY29wZVwiLCBjdXJyZW50KSwgW10pLFxuICAgICAgICAgICAgICAgICAgICAuLi50ZW5hbnRTZWN0aW9uLFxuICAgICAgICAgICAgICAgIF0sIHtcbiAgICAgICAgICAgICAgICAgICAgY3dkOiBkZXZlbG9wZXJDbGlDcmVkZW50aWFsSW50ZXJuYWxzLmdldFNhZmVXb3JraW5nRGlyKCksXG4gICAgICAgICAgICAgICAgICAgIHRpbWVvdXQsXG4gICAgICAgICAgICAgICAgfSwgKGVycm9yLCBzdGRvdXQsIHN0ZGVycikgPT4ge1xuICAgICAgICAgICAgICAgICAgICByZXNvbHZlKHsgc3Rkb3V0LCBzdGRlcnIsIGVycm9yIH0pO1xuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgY2F0Y2ggKGVycikge1xuICAgICAgICAgICAgICAgIHJlamVjdChlcnIpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9KTtcbiAgICB9LFxufTtcbmNvbnN0IGxvZ2dlciA9IGNyZWRlbnRpYWxMb2dnZXIoXCJBenVyZURldmVsb3BlckNsaUNyZWRlbnRpYWxcIik7XG4vKipcbiAqIEF6dXJlIERldmVsb3BlciBDTEkgaXMgYSBjb21tYW5kLWxpbmUgaW50ZXJmYWNlIHRvb2wgdGhhdCBhbGxvd3MgZGV2ZWxvcGVycyB0byBjcmVhdGUsIG1hbmFnZSwgYW5kIGRlcGxveVxuICogcmVzb3VyY2VzIGluIEF6dXJlLiBJdCdzIGJ1aWx0IG9uIHRvcCBvZiB0aGUgQXp1cmUgQ0xJIGFuZCBwcm92aWRlcyBhZGRpdGlvbmFsIGZ1bmN0aW9uYWxpdHkgc3BlY2lmaWNcbiAqIHRvIEF6dXJlIGRldmVsb3BlcnMuIEl0IGFsbG93cyB1c2VycyB0byBhdXRoZW50aWNhdGUgYXMgYSB1c2VyIGFuZC9vciBhIHNlcnZpY2UgcHJpbmNpcGFsIGFnYWluc3RcbiAqIDxhIGhyZWY9XCJodHRwczovL2xlYXJuLm1pY3Jvc29mdC5jb20vZW50cmEvZnVuZGFtZW50YWxzL1wiPk1pY3Jvc29mdCBFbnRyYSBJRDwvYT4uIFRoZVxuICogQXp1cmVEZXZlbG9wZXJDbGlDcmVkZW50aWFsIGF1dGhlbnRpY2F0ZXMgaW4gYSBkZXZlbG9wbWVudCBlbnZpcm9ubWVudCBhbmQgYWNxdWlyZXMgYSB0b2tlbiBvbiBiZWhhbGYgb2ZcbiAqIHRoZSBsb2dnZWQtaW4gdXNlciBvciBzZXJ2aWNlIHByaW5jaXBhbCBpbiB0aGUgQXp1cmUgRGV2ZWxvcGVyIENMSS4gSXQgYWN0cyBhcyB0aGUgQXp1cmUgRGV2ZWxvcGVyIENMSSBsb2dnZWQgaW4gdXNlciBvclxuICogc2VydmljZSBwcmluY2lwYWwgYW5kIGV4ZWN1dGVzIGFuIEF6dXJlIENMSSBjb21tYW5kIHVuZGVybmVhdGggdG8gYXV0aGVudGljYXRlIHRoZSBhcHBsaWNhdGlvbiBhZ2FpbnN0XG4gKiBNaWNyb3NvZnQgRW50cmEgSUQuXG4gKlxuICogPGgyPiBDb25maWd1cmUgQXp1cmVEZXZlbG9wZXJDbGlDcmVkZW50aWFsIDwvaDI+XG4gKlxuICogVG8gdXNlIHRoaXMgY3JlZGVudGlhbCwgdGhlIGRldmVsb3BlciBuZWVkcyB0byBhdXRoZW50aWNhdGUgbG9jYWxseSBpbiBBenVyZSBEZXZlbG9wZXIgQ0xJIHVzaW5nIG9uZSBvZiB0aGVcbiAqIGNvbW1hbmRzIGJlbG93OlxuICpcbiAqIDxvbD5cbiAqICAgICA8bGk+UnVuIFwiYXpkIGF1dGggbG9naW5cIiBpbiBBenVyZSBEZXZlbG9wZXIgQ0xJIHRvIGF1dGhlbnRpY2F0ZSBpbnRlcmFjdGl2ZWx5IGFzIGEgdXNlci48L2xpPlxuICogICAgIDxsaT5SdW4gXCJhemQgYXV0aCBsb2dpbiAtLWNsaWVudC1pZCBjbGllbnRJRCAtLWNsaWVudC1zZWNyZXQgY2xpZW50U2VjcmV0XG4gKiAgICAgLS10ZW5hbnQtaWQgdGVuYW50SURcIiB0byBhdXRoZW50aWNhdGUgYXMgYSBzZXJ2aWNlIHByaW5jaXBhbC48L2xpPlxuICogPC9vbD5cbiAqXG4gKiBZb3UgbWF5IG5lZWQgdG8gcmVwZWF0IHRoaXMgcHJvY2VzcyBhZnRlciBhIGNlcnRhaW4gdGltZSBwZXJpb2QsIGRlcGVuZGluZyBvbiB0aGUgcmVmcmVzaCB0b2tlbiB2YWxpZGl0eSBpbiB5b3VyXG4gKiBvcmdhbml6YXRpb24uIEdlbmVyYWxseSwgdGhlIHJlZnJlc2ggdG9rZW4gdmFsaWRpdHkgcGVyaW9kIGlzIGEgZmV3IHdlZWtzIHRvIGEgZmV3IG1vbnRocy5cbiAqIEF6dXJlRGV2ZWxvcGVyQ2xpQ3JlZGVudGlhbCB3aWxsIHByb21wdCB5b3UgdG8gc2lnbiBpbiBhZ2Fpbi5cbiAqL1xuZXhwb3J0IGNsYXNzIEF6dXJlRGV2ZWxvcGVyQ2xpQ3JlZGVudGlhbCB7XG4gICAgLyoqXG4gICAgICogQ3JlYXRlcyBhbiBpbnN0YW5jZSBvZiB0aGUge0BsaW5rIEF6dXJlRGV2ZWxvcGVyQ2xpQ3JlZGVudGlhbH0uXG4gICAgICpcbiAgICAgKiBUbyB1c2UgdGhpcyBjcmVkZW50aWFsLCBlbnN1cmUgdGhhdCB5b3UgaGF2ZSBhbHJlYWR5IGxvZ2dlZFxuICAgICAqIGluIHZpYSB0aGUgJ2F6ZCcgdG9vbCB1c2luZyB0aGUgY29tbWFuZCBcImF6ZCBhdXRoIGxvZ2luXCIgZnJvbSB0aGUgY29tbWFuZGxpbmUuXG4gICAgICpcbiAgICAgKiBAcGFyYW0gb3B0aW9ucyAtIE9wdGlvbnMsIHRvIG9wdGlvbmFsbHkgYWxsb3cgbXVsdGktdGVuYW50IHJlcXVlc3RzLlxuICAgICAqL1xuICAgIGNvbnN0cnVjdG9yKG9wdGlvbnMpIHtcbiAgICAgICAgaWYgKG9wdGlvbnMgPT09IG51bGwgfHwgb3B0aW9ucyA9PT0gdm9pZCAwID8gdm9pZCAwIDogb3B0aW9ucy50ZW5hbnRJZCkge1xuICAgICAgICAgICAgY2hlY2tUZW5hbnRJZChsb2dnZXIsIG9wdGlvbnMgPT09IG51bGwgfHwgb3B0aW9ucyA9PT0gdm9pZCAwID8gdm9pZCAwIDogb3B0aW9ucy50ZW5hbnRJZCk7XG4gICAgICAgICAgICB0aGlzLnRlbmFudElkID0gb3B0aW9ucyA9PT0gbnVsbCB8fCBvcHRpb25zID09PSB2b2lkIDAgPyB2b2lkIDAgOiBvcHRpb25zLnRlbmFudElkO1xuICAgICAgICB9XG4gICAgICAgIHRoaXMuYWRkaXRpb25hbGx5QWxsb3dlZFRlbmFudElkcyA9IHJlc29sdmVBZGRpdGlvbmFsbHlBbGxvd2VkVGVuYW50SWRzKG9wdGlvbnMgPT09IG51bGwgfHwgb3B0aW9ucyA9PT0gdm9pZCAwID8gdm9pZCAwIDogb3B0aW9ucy5hZGRpdGlvbmFsbHlBbGxvd2VkVGVuYW50cyk7XG4gICAgICAgIHRoaXMudGltZW91dCA9IG9wdGlvbnMgPT09IG51bGwgfHwgb3B0aW9ucyA9PT0gdm9pZCAwID8gdm9pZCAwIDogb3B0aW9ucy5wcm9jZXNzVGltZW91dEluTXM7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIEF1dGhlbnRpY2F0ZXMgd2l0aCBNaWNyb3NvZnQgRW50cmEgSUQgYW5kIHJldHVybnMgYW4gYWNjZXNzIHRva2VuIGlmIHN1Y2Nlc3NmdWwuXG4gICAgICogSWYgYXV0aGVudGljYXRpb24gZmFpbHMsIGEge0BsaW5rIENyZWRlbnRpYWxVbmF2YWlsYWJsZUVycm9yfSB3aWxsIGJlIHRocm93biB3aXRoIHRoZSBkZXRhaWxzIG9mIHRoZSBmYWlsdXJlLlxuICAgICAqXG4gICAgICogQHBhcmFtIHNjb3BlcyAtIFRoZSBsaXN0IG9mIHNjb3BlcyBmb3Igd2hpY2ggdGhlIHRva2VuIHdpbGwgaGF2ZSBhY2Nlc3MuXG4gICAgICogQHBhcmFtIG9wdGlvbnMgLSBUaGUgb3B0aW9ucyB1c2VkIHRvIGNvbmZpZ3VyZSBhbnkgcmVxdWVzdHMgdGhpc1xuICAgICAqICAgICAgICAgICAgICAgIFRva2VuQ3JlZGVudGlhbCBpbXBsZW1lbnRhdGlvbiBtaWdodCBtYWtlLlxuICAgICAqL1xuICAgIGFzeW5jIGdldFRva2VuKHNjb3Blcywgb3B0aW9ucyA9IHt9KSB7XG4gICAgICAgIGNvbnN0IHRlbmFudElkID0gcHJvY2Vzc011bHRpVGVuYW50UmVxdWVzdCh0aGlzLnRlbmFudElkLCBvcHRpb25zLCB0aGlzLmFkZGl0aW9uYWxseUFsbG93ZWRUZW5hbnRJZHMpO1xuICAgICAgICBpZiAodGVuYW50SWQpIHtcbiAgICAgICAgICAgIGNoZWNrVGVuYW50SWQobG9nZ2VyLCB0ZW5hbnRJZCk7XG4gICAgICAgIH1cbiAgICAgICAgbGV0IHNjb3BlTGlzdDtcbiAgICAgICAgaWYgKHR5cGVvZiBzY29wZXMgPT09IFwic3RyaW5nXCIpIHtcbiAgICAgICAgICAgIHNjb3BlTGlzdCA9IFtzY29wZXNdO1xuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgc2NvcGVMaXN0ID0gc2NvcGVzO1xuICAgICAgICB9XG4gICAgICAgIGxvZ2dlci5nZXRUb2tlbi5pbmZvKGBVc2luZyB0aGUgc2NvcGVzICR7c2NvcGVzfWApO1xuICAgICAgICByZXR1cm4gdHJhY2luZ0NsaWVudC53aXRoU3BhbihgJHt0aGlzLmNvbnN0cnVjdG9yLm5hbWV9LmdldFRva2VuYCwgb3B0aW9ucywgYXN5bmMgKCkgPT4ge1xuICAgICAgICAgICAgdmFyIF9hLCBfYiwgX2MsIF9kO1xuICAgICAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgICAgICBzY29wZUxpc3QuZm9yRWFjaCgoc2NvcGUpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgZW5zdXJlVmFsaWRTY29wZUZvckRldlRpbWVDcmVkcyhzY29wZSwgbG9nZ2VyKTtcbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICBjb25zdCBvYmogPSBhd2FpdCBkZXZlbG9wZXJDbGlDcmVkZW50aWFsSW50ZXJuYWxzLmdldEF6ZEFjY2Vzc1Rva2VuKHNjb3BlTGlzdCwgdGVuYW50SWQsIHRoaXMudGltZW91dCk7XG4gICAgICAgICAgICAgICAgY29uc3QgaXNOb3RMb2dnZWRJbkVycm9yID0gKChfYSA9IG9iai5zdGRlcnIpID09PSBudWxsIHx8IF9hID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfYS5tYXRjaChcIm5vdCBsb2dnZWQgaW4sIHJ1biBgYXpkIGxvZ2luYCB0byBsb2dpblwiKSkgfHxcbiAgICAgICAgICAgICAgICAgICAgKChfYiA9IG9iai5zdGRlcnIpID09PSBudWxsIHx8IF9iID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfYi5tYXRjaChcIm5vdCBsb2dnZWQgaW4sIHJ1biBgYXpkIGF1dGggbG9naW5gIHRvIGxvZ2luXCIpKTtcbiAgICAgICAgICAgICAgICBjb25zdCBpc05vdEluc3RhbGxFcnJvciA9ICgoX2MgPSBvYmouc3RkZXJyKSA9PT0gbnVsbCB8fCBfYyA9PT0gdm9pZCAwID8gdm9pZCAwIDogX2MubWF0Y2goXCJhemQ6KC4qKW5vdCBmb3VuZFwiKSkgfHxcbiAgICAgICAgICAgICAgICAgICAgKChfZCA9IG9iai5zdGRlcnIpID09PSBudWxsIHx8IF9kID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfZC5zdGFydHNXaXRoKFwiJ2F6ZCcgaXMgbm90IHJlY29nbml6ZWRcIikpO1xuICAgICAgICAgICAgICAgIGlmIChpc05vdEluc3RhbGxFcnJvciB8fCAob2JqLmVycm9yICYmIG9iai5lcnJvci5jb2RlID09PSBcIkVOT0VOVFwiKSkge1xuICAgICAgICAgICAgICAgICAgICBjb25zdCBlcnJvciA9IG5ldyBDcmVkZW50aWFsVW5hdmFpbGFibGVFcnJvcihcIkF6dXJlIERldmVsb3BlciBDTEkgY291bGRuJ3QgYmUgZm91bmQuIFRvIG1pdGlnYXRlIHRoaXMgaXNzdWUsIHNlZSB0aGUgdHJvdWJsZXNob290aW5nIGd1aWRlbGluZXMgYXQgaHR0cHM6Ly9ha2EubXMvYXpzZGsvanMvaWRlbnRpdHkvYXpkZXZjbGljcmVkZW50aWFsL3Ryb3VibGVzaG9vdC5cIik7XG4gICAgICAgICAgICAgICAgICAgIGxvZ2dlci5nZXRUb2tlbi5pbmZvKGZvcm1hdEVycm9yKHNjb3BlcywgZXJyb3IpKTtcbiAgICAgICAgICAgICAgICAgICAgdGhyb3cgZXJyb3I7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGlmIChpc05vdExvZ2dlZEluRXJyb3IpIHtcbiAgICAgICAgICAgICAgICAgICAgY29uc3QgZXJyb3IgPSBuZXcgQ3JlZGVudGlhbFVuYXZhaWxhYmxlRXJyb3IoXCJQbGVhc2UgcnVuICdhemQgYXV0aCBsb2dpbicgZnJvbSBhIGNvbW1hbmQgcHJvbXB0IHRvIGF1dGhlbnRpY2F0ZSBiZWZvcmUgdXNpbmcgdGhpcyBjcmVkZW50aWFsLiBGb3IgbW9yZSBpbmZvcm1hdGlvbiwgc2VlIHRoZSB0cm91Ymxlc2hvb3RpbmcgZ3VpZGVsaW5lcyBhdCBodHRwczovL2FrYS5tcy9henNkay9qcy9pZGVudGl0eS9hemRldmNsaWNyZWRlbnRpYWwvdHJvdWJsZXNob290LlwiKTtcbiAgICAgICAgICAgICAgICAgICAgbG9nZ2VyLmdldFRva2VuLmluZm8oZm9ybWF0RXJyb3Ioc2NvcGVzLCBlcnJvcikpO1xuICAgICAgICAgICAgICAgICAgICB0aHJvdyBlcnJvcjtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgICAgICAgICAgY29uc3QgcmVzcCA9IEpTT04ucGFyc2Uob2JqLnN0ZG91dCk7XG4gICAgICAgICAgICAgICAgICAgIGxvZ2dlci5nZXRUb2tlbi5pbmZvKGZvcm1hdFN1Y2Nlc3Moc2NvcGVzKSk7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICAgICAgICAgICAgICB0b2tlbjogcmVzcC50b2tlbixcbiAgICAgICAgICAgICAgICAgICAgICAgIGV4cGlyZXNPblRpbWVzdGFtcDogbmV3IERhdGUocmVzcC5leHBpcmVzT24pLmdldFRpbWUoKSxcbiAgICAgICAgICAgICAgICAgICAgfTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgY2F0Y2ggKGUpIHtcbiAgICAgICAgICAgICAgICAgICAgaWYgKG9iai5zdGRlcnIpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHRocm93IG5ldyBDcmVkZW50aWFsVW5hdmFpbGFibGVFcnJvcihvYmouc3RkZXJyKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICB0aHJvdyBlO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGNhdGNoIChlcnIpIHtcbiAgICAgICAgICAgICAgICBjb25zdCBlcnJvciA9IGVyci5uYW1lID09PSBcIkNyZWRlbnRpYWxVbmF2YWlsYWJsZUVycm9yXCJcbiAgICAgICAgICAgICAgICAgICAgPyBlcnJcbiAgICAgICAgICAgICAgICAgICAgOiBuZXcgQ3JlZGVudGlhbFVuYXZhaWxhYmxlRXJyb3IoZXJyLm1lc3NhZ2UgfHwgXCJVbmtub3duIGVycm9yIHdoaWxlIHRyeWluZyB0byByZXRyaWV2ZSB0aGUgYWNjZXNzIHRva2VuXCIpO1xuICAgICAgICAgICAgICAgIGxvZ2dlci5nZXRUb2tlbi5pbmZvKGZvcm1hdEVycm9yKHNjb3BlcywgZXJyb3IpKTtcbiAgICAgICAgICAgICAgICB0aHJvdyBlcnJvcjtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSk7XG4gICAgfVxufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9YXp1cmVEZXZlbG9wZXJDbGlDcmVkZW50aWFsLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/identity/dist-esm/src/credentials/azureDeveloperCliCredential.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/identity/dist-esm/src/credentials/azurePipelinesCredential.js":
/*!*******************************************************************************************!*\
  !*** ./node_modules/@azure/identity/dist-esm/src/credentials/azurePipelinesCredential.js ***!
  \*******************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AzurePipelinesCredential: () => (/* binding */ AzurePipelinesCredential)\n/* harmony export */ });\n/* harmony import */ var _clientAssertionCredential__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./clientAssertionCredential */ \"(rsc)/./node_modules/@azure/identity/dist-esm/src/credentials/clientAssertionCredential.js\");\n/* harmony import */ var _errors__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../errors */ \"(rsc)/./node_modules/@azure/identity/dist-esm/src/errors.js\");\n/* harmony import */ var _util_logging__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../util/logging */ \"(rsc)/./node_modules/@azure/identity/dist-esm/src/util/logging.js\");\n/* harmony import */ var _util_tenantIdUtils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../util/tenantIdUtils */ \"(rsc)/./node_modules/@azure/identity/dist-esm/src/util/tenantIdUtils.js\");\n/* harmony import */ var _azure_core_rest_pipeline__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @azure/core-rest-pipeline */ \"(rsc)/./node_modules/@azure/core-rest-pipeline/dist/esm/index.js\");\n/* harmony import */ var _client_identityClient__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../client/identityClient */ \"(rsc)/./node_modules/@azure/identity/dist-esm/src/client/identityClient.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\n\n\n\n\n\nconst credentialName = \"AzurePipelinesCredential\";\nconst logger = (0,_util_logging__WEBPACK_IMPORTED_MODULE_1__.credentialLogger)(credentialName);\nconst OIDC_API_VERSION = \"7.1\";\n/**\n * This credential is designed to be used in Azure Pipelines with service connections\n * as a setup for workload identity federation.\n */\nclass AzurePipelinesCredential {\n    /**\n     * AzurePipelinesCredential supports Federated Identity on Azure Pipelines through Service Connections.\n     * @param tenantId - tenantId associated with the service connection\n     * @param clientId - clientId associated with the service connection\n     * @param serviceConnectionId - Unique ID for the service connection, as found in the querystring's resourceId key\n     * @param systemAccessToken - The pipeline's <see href=\"https://learn.microsoft.com/azure/devops/pipelines/build/variables?view=azure-devops%26tabs=yaml#systemaccesstoken\">System.AccessToken</see> value.\n     * @param options - The identity client options to use for authentication.\n     */\n    constructor(tenantId, clientId, serviceConnectionId, systemAccessToken, options) {\n        if (!clientId || !tenantId || !serviceConnectionId || !systemAccessToken) {\n            throw new _errors__WEBPACK_IMPORTED_MODULE_2__.CredentialUnavailableError(`${credentialName}: is unavailable. tenantId, clientId, serviceConnectionId, and systemAccessToken are required parameters.`);\n        }\n        this.identityClient = new _client_identityClient__WEBPACK_IMPORTED_MODULE_3__.IdentityClient(options);\n        (0,_util_tenantIdUtils__WEBPACK_IMPORTED_MODULE_4__.checkTenantId)(logger, tenantId);\n        logger.info(`Invoking AzurePipelinesCredential with tenant ID: ${tenantId}, client ID: ${clientId}, and service connection ID: ${serviceConnectionId}`);\n        if (!process.env.SYSTEM_OIDCREQUESTURI) {\n            throw new _errors__WEBPACK_IMPORTED_MODULE_2__.CredentialUnavailableError(`${credentialName}: is unavailable. Ensure that you're running this task in an Azure Pipeline, so that following missing system variable(s) can be defined- \"SYSTEM_OIDCREQUESTURI\"`);\n        }\n        const oidcRequestUrl = `${process.env.SYSTEM_OIDCREQUESTURI}?api-version=${OIDC_API_VERSION}&serviceConnectionId=${serviceConnectionId}`;\n        logger.info(`Invoking ClientAssertionCredential with tenant ID: ${tenantId}, client ID: ${clientId} and service connection ID: ${serviceConnectionId}`);\n        this.clientAssertionCredential = new _clientAssertionCredential__WEBPACK_IMPORTED_MODULE_5__.ClientAssertionCredential(tenantId, clientId, this.requestOidcToken.bind(this, oidcRequestUrl, systemAccessToken), options);\n    }\n    /**\n     * Authenticates with Microsoft Entra ID and returns an access token if successful.\n     * If authentication fails, a {@link CredentialUnavailableError} or {@link AuthenticationError} will be thrown with the details of the failure.\n     *\n     * @param scopes - The list of scopes for which the token will have access.\n     * @param options - The options used to configure any requests this\n     *                TokenCredential implementation might make.\n     */\n    async getToken(scopes, options) {\n        if (!this.clientAssertionCredential) {\n            const errorMessage = `${credentialName}: is unavailable. To use Federation Identity in Azure Pipelines, the following parameters are required - \n      tenantId,\n      clientId,\n      serviceConnectionId,\n      systemAccessToken,\n      \"SYSTEM_OIDCREQUESTURI\".      \n      See the troubleshooting guide for more information: https://aka.ms/azsdk/js/identity/azurepipelinescredential/troubleshoot`;\n            logger.error(errorMessage);\n            throw new _errors__WEBPACK_IMPORTED_MODULE_2__.CredentialUnavailableError(errorMessage);\n        }\n        logger.info(\"Invoking getToken() of Client Assertion Credential\");\n        return this.clientAssertionCredential.getToken(scopes, options);\n    }\n    /**\n     *\n     * @param oidcRequestUrl - oidc request url\n     * @param systemAccessToken - system access token\n     * @returns OIDC token from Azure Pipelines\n     */\n    async requestOidcToken(oidcRequestUrl, systemAccessToken) {\n        logger.info(\"Requesting OIDC token from Azure Pipelines...\");\n        logger.info(oidcRequestUrl);\n        const request = (0,_azure_core_rest_pipeline__WEBPACK_IMPORTED_MODULE_0__.createPipelineRequest)({\n            url: oidcRequestUrl,\n            method: \"POST\",\n            headers: (0,_azure_core_rest_pipeline__WEBPACK_IMPORTED_MODULE_0__.createHttpHeaders)({\n                \"Content-Type\": \"application/json\",\n                Authorization: `Bearer ${systemAccessToken}`,\n            }),\n        });\n        const response = await this.identityClient.sendRequest(request);\n        const text = response.bodyAsText;\n        if (!text) {\n            logger.error(`${credentialName}: Authenticated Failed. Received null token from OIDC request. Response status- ${response.status}. Complete response - ${JSON.stringify(response)}`);\n            throw new _errors__WEBPACK_IMPORTED_MODULE_2__.AuthenticationError(response.status, `${credentialName}: Authenticated Failed. Received null token from OIDC request. Response status- ${response.status}. Complete response - ${JSON.stringify(response)}`);\n        }\n        try {\n            const result = JSON.parse(text);\n            if (result === null || result === void 0 ? void 0 : result.oidcToken) {\n                return result.oidcToken;\n            }\n            else {\n                let errorMessage = `${credentialName}: Authentication Failed. oidcToken field not detected in the response.`;\n                if (response.status !== 200) {\n                    errorMessage += `Response = ${JSON.stringify(result)}`;\n                }\n                logger.error(errorMessage);\n                throw new _errors__WEBPACK_IMPORTED_MODULE_2__.AuthenticationError(response.status, errorMessage);\n            }\n        }\n        catch (e) {\n            logger.error(e.message);\n            logger.error(`${credentialName}: Authentication Failed. oidcToken field not detected in the response. Response = ${text}`);\n            throw new _errors__WEBPACK_IMPORTED_MODULE_2__.AuthenticationError(response.status, `${credentialName}: Authentication Failed. oidcToken field not detected in the response. Response = ${text}`);\n        }\n    }\n}\n//# sourceMappingURL=azurePipelinesCredential.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/identity/dist-esm/src/credentials/azurePipelinesCredential.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/identity/dist-esm/src/credentials/azurePowerShellCredential.js":
/*!********************************************************************************************!*\
  !*** ./node_modules/@azure/identity/dist-esm/src/credentials/azurePowerShellCredential.js ***!
  \********************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AzurePowerShellCredential: () => (/* binding */ AzurePowerShellCredential),\n/* harmony export */   commandStack: () => (/* binding */ commandStack),\n/* harmony export */   formatCommand: () => (/* binding */ formatCommand),\n/* harmony export */   powerShellErrors: () => (/* binding */ powerShellErrors),\n/* harmony export */   powerShellPublicErrorMessages: () => (/* binding */ powerShellPublicErrorMessages)\n/* harmony export */ });\n/* harmony import */ var _util_tenantIdUtils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../util/tenantIdUtils */ \"(rsc)/./node_modules/@azure/identity/dist-esm/src/util/tenantIdUtils.js\");\n/* harmony import */ var _util_tenantIdUtils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../util/tenantIdUtils */ \"(rsc)/./node_modules/@azure/identity/dist-esm/src/util/processMultiTenantRequest.js\");\n/* harmony import */ var _util_logging__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../util/logging */ \"(rsc)/./node_modules/@azure/identity/dist-esm/src/util/logging.js\");\n/* harmony import */ var _util_scopeUtils__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../util/scopeUtils */ \"(rsc)/./node_modules/@azure/identity/dist-esm/src/util/scopeUtils.js\");\n/* harmony import */ var _errors__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../errors */ \"(rsc)/./node_modules/@azure/identity/dist-esm/src/errors.js\");\n/* harmony import */ var _util_processUtils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../util/processUtils */ \"(rsc)/./node_modules/@azure/identity/dist-esm/src/util/processUtils.js\");\n/* harmony import */ var _util_tracing__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../util/tracing */ \"(rsc)/./node_modules/@azure/identity/dist-esm/src/util/tracing.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\n\n\n\n\n\nconst logger = (0,_util_logging__WEBPACK_IMPORTED_MODULE_0__.credentialLogger)(\"AzurePowerShellCredential\");\nconst isWindows = process.platform === \"win32\";\n/**\n * Returns a platform-appropriate command name by appending \".exe\" on Windows.\n *\n * @internal\n */\nfunction formatCommand(commandName) {\n    if (isWindows) {\n        return `${commandName}.exe`;\n    }\n    else {\n        return commandName;\n    }\n}\n/**\n * Receives a list of commands to run, executes them, then returns the outputs.\n * If anything fails, an error is thrown.\n * @internal\n */\nasync function runCommands(commands, timeout) {\n    const results = [];\n    for (const command of commands) {\n        const [file, ...parameters] = command;\n        const result = (await _util_processUtils__WEBPACK_IMPORTED_MODULE_1__.processUtils.execFile(file, parameters, {\n            encoding: \"utf8\",\n            timeout,\n        }));\n        results.push(result);\n    }\n    return results;\n}\n/**\n * Known PowerShell errors\n * @internal\n */\nconst powerShellErrors = {\n    login: \"Run Connect-AzAccount to login\",\n    installed: \"The specified module 'Az.Accounts' with version '2.2.0' was not loaded because no valid module file was found in any module directory\",\n};\n/**\n * Messages to use when throwing in this credential.\n * @internal\n */\nconst powerShellPublicErrorMessages = {\n    login: \"Please run 'Connect-AzAccount' from PowerShell to authenticate before using this credential.\",\n    installed: `The 'Az.Account' module >= 2.2.0 is not installed. Install the Azure Az PowerShell module with: \"Install-Module -Name Az -Scope CurrentUser -Repository PSGallery -Force\".`,\n    troubleshoot: `To troubleshoot, visit https://aka.ms/azsdk/js/identity/powershellcredential/troubleshoot.`,\n};\n// PowerShell Azure User not logged in error check.\nconst isLoginError = (err) => err.message.match(`(.*)${powerShellErrors.login}(.*)`);\n// Az Module not Installed in Azure PowerShell check.\nconst isNotInstalledError = (err) => err.message.match(powerShellErrors.installed);\n/**\n * The PowerShell commands to be tried, in order.\n *\n * @internal\n */\nconst commandStack = [formatCommand(\"pwsh\")];\nif (isWindows) {\n    commandStack.push(formatCommand(\"powershell\"));\n}\n/**\n * This credential will use the currently logged-in user information from the\n * Azure PowerShell module. To do so, it will read the user access token and\n * expire time with Azure PowerShell command `Get-AzAccessToken -ResourceUrl {ResourceScope}`\n */\nclass AzurePowerShellCredential {\n    /**\n     * Creates an instance of the {@link AzurePowerShellCredential}.\n     *\n     * To use this credential:\n     * - Install the Azure Az PowerShell module with:\n     *   `Install-Module -Name Az -Scope CurrentUser -Repository PSGallery -Force`.\n     * - You have already logged in to Azure PowerShell using the command\n     * `Connect-AzAccount` from the command line.\n     *\n     * @param options - Options, to optionally allow multi-tenant requests.\n     */\n    constructor(options) {\n        if (options === null || options === void 0 ? void 0 : options.tenantId) {\n            (0,_util_tenantIdUtils__WEBPACK_IMPORTED_MODULE_2__.checkTenantId)(logger, options === null || options === void 0 ? void 0 : options.tenantId);\n            this.tenantId = options === null || options === void 0 ? void 0 : options.tenantId;\n        }\n        this.additionallyAllowedTenantIds = (0,_util_tenantIdUtils__WEBPACK_IMPORTED_MODULE_2__.resolveAdditionallyAllowedTenantIds)(options === null || options === void 0 ? void 0 : options.additionallyAllowedTenants);\n        this.timeout = options === null || options === void 0 ? void 0 : options.processTimeoutInMs;\n    }\n    /**\n     * Gets the access token from Azure PowerShell\n     * @param resource - The resource to use when getting the token\n     */\n    async getAzurePowerShellAccessToken(resource, tenantId, timeout) {\n        // Clone the stack to avoid mutating it while iterating\n        for (const powerShellCommand of [...commandStack]) {\n            try {\n                await runCommands([[powerShellCommand, \"/?\"]], timeout);\n            }\n            catch (e) {\n                // Remove this credential from the original stack so that we don't try it again.\n                commandStack.shift();\n                continue;\n            }\n            let tenantSection = \"\";\n            if (tenantId) {\n                tenantSection = `-TenantId \"${tenantId}\"`;\n            }\n            const results = await runCommands([\n                [\n                    powerShellCommand,\n                    \"-NoProfile\",\n                    \"-NonInteractive\",\n                    \"-Command\",\n                    \"Import-Module Az.Accounts -MinimumVersion 2.2.0 -PassThru\",\n                ],\n                [\n                    powerShellCommand,\n                    \"-NoProfile\",\n                    \"-NonInteractive\",\n                    \"-Command\",\n                    `Get-AzAccessToken ${tenantSection} -ResourceUrl \"${resource}\" | ConvertTo-Json`,\n                ],\n            ]);\n            const result = results[1];\n            try {\n                return JSON.parse(result);\n            }\n            catch (e) {\n                throw new Error(`Unable to parse the output of PowerShell. Received output: ${result}`);\n            }\n        }\n        throw new Error(`Unable to execute PowerShell. Ensure that it is installed in your system`);\n    }\n    /**\n     * Authenticates with Microsoft Entra ID and returns an access token if successful.\n     * If the authentication cannot be performed through PowerShell, a {@link CredentialUnavailableError} will be thrown.\n     *\n     * @param scopes - The list of scopes for which the token will have access.\n     * @param options - The options used to configure any requests this TokenCredential implementation might make.\n     */\n    async getToken(scopes, options = {}) {\n        return _util_tracing__WEBPACK_IMPORTED_MODULE_3__.tracingClient.withSpan(`${this.constructor.name}.getToken`, options, async () => {\n            const tenantId = (0,_util_tenantIdUtils__WEBPACK_IMPORTED_MODULE_4__.processMultiTenantRequest)(this.tenantId, options, this.additionallyAllowedTenantIds);\n            const scope = typeof scopes === \"string\" ? scopes : scopes[0];\n            if (tenantId) {\n                (0,_util_tenantIdUtils__WEBPACK_IMPORTED_MODULE_2__.checkTenantId)(logger, tenantId);\n            }\n            try {\n                (0,_util_scopeUtils__WEBPACK_IMPORTED_MODULE_5__.ensureValidScopeForDevTimeCreds)(scope, logger);\n                logger.getToken.info(`Using the scope ${scope}`);\n                const resource = (0,_util_scopeUtils__WEBPACK_IMPORTED_MODULE_5__.getScopeResource)(scope);\n                const response = await this.getAzurePowerShellAccessToken(resource, tenantId, this.timeout);\n                logger.getToken.info((0,_util_logging__WEBPACK_IMPORTED_MODULE_0__.formatSuccess)(scopes));\n                return {\n                    token: response.Token,\n                    expiresOnTimestamp: new Date(response.ExpiresOn).getTime(),\n                };\n            }\n            catch (err) {\n                if (isNotInstalledError(err)) {\n                    const error = new _errors__WEBPACK_IMPORTED_MODULE_6__.CredentialUnavailableError(powerShellPublicErrorMessages.installed);\n                    logger.getToken.info((0,_util_logging__WEBPACK_IMPORTED_MODULE_0__.formatError)(scope, error));\n                    throw error;\n                }\n                else if (isLoginError(err)) {\n                    const error = new _errors__WEBPACK_IMPORTED_MODULE_6__.CredentialUnavailableError(powerShellPublicErrorMessages.login);\n                    logger.getToken.info((0,_util_logging__WEBPACK_IMPORTED_MODULE_0__.formatError)(scope, error));\n                    throw error;\n                }\n                const error = new _errors__WEBPACK_IMPORTED_MODULE_6__.CredentialUnavailableError(`${err}. ${powerShellPublicErrorMessages.troubleshoot}`);\n                logger.getToken.info((0,_util_logging__WEBPACK_IMPORTED_MODULE_0__.formatError)(scope, error));\n                throw error;\n            }\n        });\n    }\n}\n//# sourceMappingURL=azurePowerShellCredential.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/identity/dist-esm/src/credentials/azurePowerShellCredential.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/identity/dist-esm/src/credentials/chainedTokenCredential.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/@azure/identity/dist-esm/src/credentials/chainedTokenCredential.js ***!
  \*****************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ChainedTokenCredential: () => (/* binding */ ChainedTokenCredential),\n/* harmony export */   logger: () => (/* binding */ logger)\n/* harmony export */ });\n/* harmony import */ var _errors__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../errors */ \"(rsc)/./node_modules/@azure/identity/dist-esm/src/errors.js\");\n/* harmony import */ var _util_logging__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../util/logging */ \"(rsc)/./node_modules/@azure/identity/dist-esm/src/util/logging.js\");\n/* harmony import */ var _util_tracing__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../util/tracing */ \"(rsc)/./node_modules/@azure/identity/dist-esm/src/util/tracing.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\n\n\n/**\n * @internal\n */\nconst logger = (0,_util_logging__WEBPACK_IMPORTED_MODULE_0__.credentialLogger)(\"ChainedTokenCredential\");\n/**\n * Enables multiple `TokenCredential` implementations to be tried in order\n * until one of the getToken methods returns an access token.\n */\nclass ChainedTokenCredential {\n    /**\n     * Creates an instance of ChainedTokenCredential using the given credentials.\n     *\n     * @param sources - `TokenCredential` implementations to be tried in order.\n     *\n     * Example usage:\n     * ```javascript\n     * const firstCredential = new ClientSecretCredential(tenantId, clientId, clientSecret);\n     * const secondCredential = new ClientSecretCredential(tenantId, anotherClientId, anotherSecret);\n     * const credentialChain = new ChainedTokenCredential(firstCredential, secondCredential);\n     * ```\n     */\n    constructor(...sources) {\n        this._sources = [];\n        this._sources = sources;\n    }\n    /**\n     * Returns the first access token returned by one of the chained\n     * `TokenCredential` implementations.  Throws an {@link AggregateAuthenticationError}\n     * when one or more credentials throws an {@link AuthenticationError} and\n     * no credentials have returned an access token.\n     *\n     * This method is called automatically by Azure SDK client libraries. You may call this method\n     * directly, but you must also handle token caching and token refreshing.\n     *\n     * @param scopes - The list of scopes for which the token will have access.\n     * @param options - The options used to configure any requests this\n     *                `TokenCredential` implementation might make.\n     */\n    async getToken(scopes, options = {}) {\n        const { token } = await this.getTokenInternal(scopes, options);\n        return token;\n    }\n    async getTokenInternal(scopes, options = {}) {\n        let token = null;\n        let successfulCredential;\n        const errors = [];\n        return _util_tracing__WEBPACK_IMPORTED_MODULE_1__.tracingClient.withSpan(\"ChainedTokenCredential.getToken\", options, async (updatedOptions) => {\n            for (let i = 0; i < this._sources.length && token === null; i++) {\n                try {\n                    token = await this._sources[i].getToken(scopes, updatedOptions);\n                    successfulCredential = this._sources[i];\n                }\n                catch (err) {\n                    if (err.name === \"CredentialUnavailableError\" ||\n                        err.name === \"AuthenticationRequiredError\") {\n                        errors.push(err);\n                    }\n                    else {\n                        logger.getToken.info((0,_util_logging__WEBPACK_IMPORTED_MODULE_0__.formatError)(scopes, err));\n                        throw err;\n                    }\n                }\n            }\n            if (!token && errors.length > 0) {\n                const err = new _errors__WEBPACK_IMPORTED_MODULE_2__.AggregateAuthenticationError(errors, \"ChainedTokenCredential authentication failed.\");\n                logger.getToken.info((0,_util_logging__WEBPACK_IMPORTED_MODULE_0__.formatError)(scopes, err));\n                throw err;\n            }\n            logger.getToken.info(`Result for ${successfulCredential.constructor.name}: ${(0,_util_logging__WEBPACK_IMPORTED_MODULE_0__.formatSuccess)(scopes)}`);\n            if (token === null) {\n                throw new _errors__WEBPACK_IMPORTED_MODULE_2__.CredentialUnavailableError(\"Failed to retrieve a valid token\");\n            }\n            return { token, successfulCredential };\n        });\n    }\n}\n//# sourceMappingURL=chainedTokenCredential.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2lkZW50aXR5L2Rpc3QtZXNtL3NyYy9jcmVkZW50aWFscy9jaGFpbmVkVG9rZW5DcmVkZW50aWFsLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQUE7QUFDQTtBQUNxRjtBQUNOO0FBQy9CO0FBQ2hEO0FBQ0E7QUFDQTtBQUNPLGVBQWUsK0RBQWdCO0FBQ3RDO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxzREFBc0Q7QUFDdEQsK0NBQStDLDJCQUEyQjtBQUMxRTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx1Q0FBdUM7QUFDdkMsZ0JBQWdCLFFBQVE7QUFDeEI7QUFDQTtBQUNBLCtDQUErQztBQUMvQztBQUNBO0FBQ0E7QUFDQSxlQUFlLHdEQUFhO0FBQzVCLDRCQUE0Qiw0Q0FBNEM7QUFDeEU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw2Q0FBNkMsMERBQVc7QUFDeEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdDQUFnQyxpRUFBNEI7QUFDNUQscUNBQXFDLDBEQUFXO0FBQ2hEO0FBQ0E7QUFDQSwrQ0FBK0Msc0NBQXNDLElBQUksNERBQWEsU0FBUztBQUMvRztBQUNBLDBCQUEwQiwrREFBMEI7QUFDcEQ7QUFDQSxxQkFBcUI7QUFDckIsU0FBUztBQUNUO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2RhbmllbDMtdnAyLy4vbm9kZV9tb2R1bGVzL0BhenVyZS9pZGVudGl0eS9kaXN0LWVzbS9zcmMvY3JlZGVudGlhbHMvY2hhaW5lZFRva2VuQ3JlZGVudGlhbC5qcz9hMjI4Il0sInNvdXJjZXNDb250ZW50IjpbIi8vIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLlxuLy8gTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlLlxuaW1wb3J0IHsgQWdncmVnYXRlQXV0aGVudGljYXRpb25FcnJvciwgQ3JlZGVudGlhbFVuYXZhaWxhYmxlRXJyb3IgfSBmcm9tIFwiLi4vZXJyb3JzXCI7XG5pbXBvcnQgeyBjcmVkZW50aWFsTG9nZ2VyLCBmb3JtYXRFcnJvciwgZm9ybWF0U3VjY2VzcyB9IGZyb20gXCIuLi91dGlsL2xvZ2dpbmdcIjtcbmltcG9ydCB7IHRyYWNpbmdDbGllbnQgfSBmcm9tIFwiLi4vdXRpbC90cmFjaW5nXCI7XG4vKipcbiAqIEBpbnRlcm5hbFxuICovXG5leHBvcnQgY29uc3QgbG9nZ2VyID0gY3JlZGVudGlhbExvZ2dlcihcIkNoYWluZWRUb2tlbkNyZWRlbnRpYWxcIik7XG4vKipcbiAqIEVuYWJsZXMgbXVsdGlwbGUgYFRva2VuQ3JlZGVudGlhbGAgaW1wbGVtZW50YXRpb25zIHRvIGJlIHRyaWVkIGluIG9yZGVyXG4gKiB1bnRpbCBvbmUgb2YgdGhlIGdldFRva2VuIG1ldGhvZHMgcmV0dXJucyBhbiBhY2Nlc3MgdG9rZW4uXG4gKi9cbmV4cG9ydCBjbGFzcyBDaGFpbmVkVG9rZW5DcmVkZW50aWFsIHtcbiAgICAvKipcbiAgICAgKiBDcmVhdGVzIGFuIGluc3RhbmNlIG9mIENoYWluZWRUb2tlbkNyZWRlbnRpYWwgdXNpbmcgdGhlIGdpdmVuIGNyZWRlbnRpYWxzLlxuICAgICAqXG4gICAgICogQHBhcmFtIHNvdXJjZXMgLSBgVG9rZW5DcmVkZW50aWFsYCBpbXBsZW1lbnRhdGlvbnMgdG8gYmUgdHJpZWQgaW4gb3JkZXIuXG4gICAgICpcbiAgICAgKiBFeGFtcGxlIHVzYWdlOlxuICAgICAqIGBgYGphdmFzY3JpcHRcbiAgICAgKiBjb25zdCBmaXJzdENyZWRlbnRpYWwgPSBuZXcgQ2xpZW50U2VjcmV0Q3JlZGVudGlhbCh0ZW5hbnRJZCwgY2xpZW50SWQsIGNsaWVudFNlY3JldCk7XG4gICAgICogY29uc3Qgc2Vjb25kQ3JlZGVudGlhbCA9IG5ldyBDbGllbnRTZWNyZXRDcmVkZW50aWFsKHRlbmFudElkLCBhbm90aGVyQ2xpZW50SWQsIGFub3RoZXJTZWNyZXQpO1xuICAgICAqIGNvbnN0IGNyZWRlbnRpYWxDaGFpbiA9IG5ldyBDaGFpbmVkVG9rZW5DcmVkZW50aWFsKGZpcnN0Q3JlZGVudGlhbCwgc2Vjb25kQ3JlZGVudGlhbCk7XG4gICAgICogYGBgXG4gICAgICovXG4gICAgY29uc3RydWN0b3IoLi4uc291cmNlcykge1xuICAgICAgICB0aGlzLl9zb3VyY2VzID0gW107XG4gICAgICAgIHRoaXMuX3NvdXJjZXMgPSBzb3VyY2VzO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBSZXR1cm5zIHRoZSBmaXJzdCBhY2Nlc3MgdG9rZW4gcmV0dXJuZWQgYnkgb25lIG9mIHRoZSBjaGFpbmVkXG4gICAgICogYFRva2VuQ3JlZGVudGlhbGAgaW1wbGVtZW50YXRpb25zLiAgVGhyb3dzIGFuIHtAbGluayBBZ2dyZWdhdGVBdXRoZW50aWNhdGlvbkVycm9yfVxuICAgICAqIHdoZW4gb25lIG9yIG1vcmUgY3JlZGVudGlhbHMgdGhyb3dzIGFuIHtAbGluayBBdXRoZW50aWNhdGlvbkVycm9yfSBhbmRcbiAgICAgKiBubyBjcmVkZW50aWFscyBoYXZlIHJldHVybmVkIGFuIGFjY2VzcyB0b2tlbi5cbiAgICAgKlxuICAgICAqIFRoaXMgbWV0aG9kIGlzIGNhbGxlZCBhdXRvbWF0aWNhbGx5IGJ5IEF6dXJlIFNESyBjbGllbnQgbGlicmFyaWVzLiBZb3UgbWF5IGNhbGwgdGhpcyBtZXRob2RcbiAgICAgKiBkaXJlY3RseSwgYnV0IHlvdSBtdXN0IGFsc28gaGFuZGxlIHRva2VuIGNhY2hpbmcgYW5kIHRva2VuIHJlZnJlc2hpbmcuXG4gICAgICpcbiAgICAgKiBAcGFyYW0gc2NvcGVzIC0gVGhlIGxpc3Qgb2Ygc2NvcGVzIGZvciB3aGljaCB0aGUgdG9rZW4gd2lsbCBoYXZlIGFjY2Vzcy5cbiAgICAgKiBAcGFyYW0gb3B0aW9ucyAtIFRoZSBvcHRpb25zIHVzZWQgdG8gY29uZmlndXJlIGFueSByZXF1ZXN0cyB0aGlzXG4gICAgICogICAgICAgICAgICAgICAgYFRva2VuQ3JlZGVudGlhbGAgaW1wbGVtZW50YXRpb24gbWlnaHQgbWFrZS5cbiAgICAgKi9cbiAgICBhc3luYyBnZXRUb2tlbihzY29wZXMsIG9wdGlvbnMgPSB7fSkge1xuICAgICAgICBjb25zdCB7IHRva2VuIH0gPSBhd2FpdCB0aGlzLmdldFRva2VuSW50ZXJuYWwoc2NvcGVzLCBvcHRpb25zKTtcbiAgICAgICAgcmV0dXJuIHRva2VuO1xuICAgIH1cbiAgICBhc3luYyBnZXRUb2tlbkludGVybmFsKHNjb3Blcywgb3B0aW9ucyA9IHt9KSB7XG4gICAgICAgIGxldCB0b2tlbiA9IG51bGw7XG4gICAgICAgIGxldCBzdWNjZXNzZnVsQ3JlZGVudGlhbDtcbiAgICAgICAgY29uc3QgZXJyb3JzID0gW107XG4gICAgICAgIHJldHVybiB0cmFjaW5nQ2xpZW50LndpdGhTcGFuKFwiQ2hhaW5lZFRva2VuQ3JlZGVudGlhbC5nZXRUb2tlblwiLCBvcHRpb25zLCBhc3luYyAodXBkYXRlZE9wdGlvbnMpID0+IHtcbiAgICAgICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgdGhpcy5fc291cmNlcy5sZW5ndGggJiYgdG9rZW4gPT09IG51bGw7IGkrKykge1xuICAgICAgICAgICAgICAgIHRyeSB7XG4gICAgICAgICAgICAgICAgICAgIHRva2VuID0gYXdhaXQgdGhpcy5fc291cmNlc1tpXS5nZXRUb2tlbihzY29wZXMsIHVwZGF0ZWRPcHRpb25zKTtcbiAgICAgICAgICAgICAgICAgICAgc3VjY2Vzc2Z1bENyZWRlbnRpYWwgPSB0aGlzLl9zb3VyY2VzW2ldO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBjYXRjaCAoZXJyKSB7XG4gICAgICAgICAgICAgICAgICAgIGlmIChlcnIubmFtZSA9PT0gXCJDcmVkZW50aWFsVW5hdmFpbGFibGVFcnJvclwiIHx8XG4gICAgICAgICAgICAgICAgICAgICAgICBlcnIubmFtZSA9PT0gXCJBdXRoZW50aWNhdGlvblJlcXVpcmVkRXJyb3JcIikge1xuICAgICAgICAgICAgICAgICAgICAgICAgZXJyb3JzLnB1c2goZXJyKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGxvZ2dlci5nZXRUb2tlbi5pbmZvKGZvcm1hdEVycm9yKHNjb3BlcywgZXJyKSk7XG4gICAgICAgICAgICAgICAgICAgICAgICB0aHJvdyBlcnI7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAoIXRva2VuICYmIGVycm9ycy5sZW5ndGggPiAwKSB7XG4gICAgICAgICAgICAgICAgY29uc3QgZXJyID0gbmV3IEFnZ3JlZ2F0ZUF1dGhlbnRpY2F0aW9uRXJyb3IoZXJyb3JzLCBcIkNoYWluZWRUb2tlbkNyZWRlbnRpYWwgYXV0aGVudGljYXRpb24gZmFpbGVkLlwiKTtcbiAgICAgICAgICAgICAgICBsb2dnZXIuZ2V0VG9rZW4uaW5mbyhmb3JtYXRFcnJvcihzY29wZXMsIGVycikpO1xuICAgICAgICAgICAgICAgIHRocm93IGVycjtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGxvZ2dlci5nZXRUb2tlbi5pbmZvKGBSZXN1bHQgZm9yICR7c3VjY2Vzc2Z1bENyZWRlbnRpYWwuY29uc3RydWN0b3IubmFtZX06ICR7Zm9ybWF0U3VjY2VzcyhzY29wZXMpfWApO1xuICAgICAgICAgICAgaWYgKHRva2VuID09PSBudWxsKSB7XG4gICAgICAgICAgICAgICAgdGhyb3cgbmV3IENyZWRlbnRpYWxVbmF2YWlsYWJsZUVycm9yKFwiRmFpbGVkIHRvIHJldHJpZXZlIGEgdmFsaWQgdG9rZW5cIik7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXR1cm4geyB0b2tlbiwgc3VjY2Vzc2Z1bENyZWRlbnRpYWwgfTtcbiAgICAgICAgfSk7XG4gICAgfVxufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Y2hhaW5lZFRva2VuQ3JlZGVudGlhbC5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/identity/dist-esm/src/credentials/chainedTokenCredential.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/identity/dist-esm/src/credentials/clientAssertionCredential.js":
/*!********************************************************************************************!*\
  !*** ./node_modules/@azure/identity/dist-esm/src/credentials/clientAssertionCredential.js ***!
  \********************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ClientAssertionCredential: () => (/* binding */ ClientAssertionCredential)\n/* harmony export */ });\n/* harmony import */ var _msal_nodeFlows_msalClient__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../msal/nodeFlows/msalClient */ \"(rsc)/./node_modules/@azure/identity/dist-esm/src/msal/nodeFlows/msalClient.js\");\n/* harmony import */ var _util_tenantIdUtils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../util/tenantIdUtils */ \"(rsc)/./node_modules/@azure/identity/dist-esm/src/util/tenantIdUtils.js\");\n/* harmony import */ var _util_tenantIdUtils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../util/tenantIdUtils */ \"(rsc)/./node_modules/@azure/identity/dist-esm/src/util/processMultiTenantRequest.js\");\n/* harmony import */ var _util_logging__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../util/logging */ \"(rsc)/./node_modules/@azure/identity/dist-esm/src/util/logging.js\");\n/* harmony import */ var _util_tracing__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../util/tracing */ \"(rsc)/./node_modules/@azure/identity/dist-esm/src/util/tracing.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\n\n\n\nconst logger = (0,_util_logging__WEBPACK_IMPORTED_MODULE_0__.credentialLogger)(\"ClientAssertionCredential\");\n/**\n * Authenticates a service principal with a JWT assertion.\n */\nclass ClientAssertionCredential {\n    /**\n     * Creates an instance of the ClientAssertionCredential with the details\n     * needed to authenticate against Microsoft Entra ID with a client\n     * assertion provided by the developer through the `getAssertion` function parameter.\n     *\n     * @param tenantId - The Microsoft Entra tenant (directory) ID.\n     * @param clientId - The client (application) ID of an App Registration in the tenant.\n     * @param getAssertion - A function that retrieves the assertion for the credential to use.\n     * @param options - Options for configuring the client which makes the authentication request.\n     */\n    constructor(tenantId, clientId, getAssertion, options = {}) {\n        if (!tenantId || !clientId || !getAssertion) {\n            throw new Error(\"ClientAssertionCredential: tenantId, clientId, and clientAssertion are required parameters.\");\n        }\n        this.tenantId = tenantId;\n        this.additionallyAllowedTenantIds = (0,_util_tenantIdUtils__WEBPACK_IMPORTED_MODULE_1__.resolveAdditionallyAllowedTenantIds)(options === null || options === void 0 ? void 0 : options.additionallyAllowedTenants);\n        this.options = options;\n        this.getAssertion = getAssertion;\n        this.msalClient = (0,_msal_nodeFlows_msalClient__WEBPACK_IMPORTED_MODULE_2__.createMsalClient)(clientId, tenantId, Object.assign(Object.assign({}, options), { logger, tokenCredentialOptions: this.options }));\n    }\n    /**\n     * Authenticates with Microsoft Entra ID and returns an access token if successful.\n     * If authentication fails, a {@link CredentialUnavailableError} will be thrown with the details of the failure.\n     *\n     * @param scopes - The list of scopes for which the token will have access.\n     * @param options - The options used to configure any requests this\n     *                TokenCredential implementation might make.\n     */\n    async getToken(scopes, options = {}) {\n        return _util_tracing__WEBPACK_IMPORTED_MODULE_3__.tracingClient.withSpan(`${this.constructor.name}.getToken`, options, async (newOptions) => {\n            newOptions.tenantId = (0,_util_tenantIdUtils__WEBPACK_IMPORTED_MODULE_4__.processMultiTenantRequest)(this.tenantId, newOptions, this.additionallyAllowedTenantIds, logger);\n            const arrayScopes = Array.isArray(scopes) ? scopes : [scopes];\n            return this.msalClient.getTokenByClientAssertion(arrayScopes, this.getAssertion, newOptions);\n        });\n    }\n}\n//# sourceMappingURL=clientAssertionCredential.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2lkZW50aXR5L2Rpc3QtZXNtL3NyYy9jcmVkZW50aWFscy9jbGllbnRBc3NlcnRpb25DcmVkZW50aWFsLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUFBO0FBQ0E7QUFDZ0U7QUFDd0M7QUFDckQ7QUFDSDtBQUNoRCxlQUFlLCtEQUFnQjtBQUMvQjtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsOERBQThEO0FBQzlEO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNENBQTRDLHdGQUFtQztBQUMvRTtBQUNBO0FBQ0EsMEJBQTBCLDRFQUFnQixtREFBbUQsY0FBYyw4Q0FBOEM7QUFDeko7QUFDQTtBQUNBO0FBQ0EsbUNBQW1DLGtDQUFrQztBQUNyRTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsdUNBQXVDO0FBQ3ZDLGVBQWUsd0RBQWEsYUFBYSxzQkFBc0I7QUFDL0Qsa0NBQWtDLDhFQUF5QjtBQUMzRDtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2RhbmllbDMtdnAyLy4vbm9kZV9tb2R1bGVzL0BhenVyZS9pZGVudGl0eS9kaXN0LWVzbS9zcmMvY3JlZGVudGlhbHMvY2xpZW50QXNzZXJ0aW9uQ3JlZGVudGlhbC5qcz9lZDA3Il0sInNvdXJjZXNDb250ZW50IjpbIi8vIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLlxuLy8gTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlLlxuaW1wb3J0IHsgY3JlYXRlTXNhbENsaWVudCB9IGZyb20gXCIuLi9tc2FsL25vZGVGbG93cy9tc2FsQ2xpZW50XCI7XG5pbXBvcnQgeyBwcm9jZXNzTXVsdGlUZW5hbnRSZXF1ZXN0LCByZXNvbHZlQWRkaXRpb25hbGx5QWxsb3dlZFRlbmFudElkcywgfSBmcm9tIFwiLi4vdXRpbC90ZW5hbnRJZFV0aWxzXCI7XG5pbXBvcnQgeyBjcmVkZW50aWFsTG9nZ2VyIH0gZnJvbSBcIi4uL3V0aWwvbG9nZ2luZ1wiO1xuaW1wb3J0IHsgdHJhY2luZ0NsaWVudCB9IGZyb20gXCIuLi91dGlsL3RyYWNpbmdcIjtcbmNvbnN0IGxvZ2dlciA9IGNyZWRlbnRpYWxMb2dnZXIoXCJDbGllbnRBc3NlcnRpb25DcmVkZW50aWFsXCIpO1xuLyoqXG4gKiBBdXRoZW50aWNhdGVzIGEgc2VydmljZSBwcmluY2lwYWwgd2l0aCBhIEpXVCBhc3NlcnRpb24uXG4gKi9cbmV4cG9ydCBjbGFzcyBDbGllbnRBc3NlcnRpb25DcmVkZW50aWFsIHtcbiAgICAvKipcbiAgICAgKiBDcmVhdGVzIGFuIGluc3RhbmNlIG9mIHRoZSBDbGllbnRBc3NlcnRpb25DcmVkZW50aWFsIHdpdGggdGhlIGRldGFpbHNcbiAgICAgKiBuZWVkZWQgdG8gYXV0aGVudGljYXRlIGFnYWluc3QgTWljcm9zb2Z0IEVudHJhIElEIHdpdGggYSBjbGllbnRcbiAgICAgKiBhc3NlcnRpb24gcHJvdmlkZWQgYnkgdGhlIGRldmVsb3BlciB0aHJvdWdoIHRoZSBgZ2V0QXNzZXJ0aW9uYCBmdW5jdGlvbiBwYXJhbWV0ZXIuXG4gICAgICpcbiAgICAgKiBAcGFyYW0gdGVuYW50SWQgLSBUaGUgTWljcm9zb2Z0IEVudHJhIHRlbmFudCAoZGlyZWN0b3J5KSBJRC5cbiAgICAgKiBAcGFyYW0gY2xpZW50SWQgLSBUaGUgY2xpZW50IChhcHBsaWNhdGlvbikgSUQgb2YgYW4gQXBwIFJlZ2lzdHJhdGlvbiBpbiB0aGUgdGVuYW50LlxuICAgICAqIEBwYXJhbSBnZXRBc3NlcnRpb24gLSBBIGZ1bmN0aW9uIHRoYXQgcmV0cmlldmVzIHRoZSBhc3NlcnRpb24gZm9yIHRoZSBjcmVkZW50aWFsIHRvIHVzZS5cbiAgICAgKiBAcGFyYW0gb3B0aW9ucyAtIE9wdGlvbnMgZm9yIGNvbmZpZ3VyaW5nIHRoZSBjbGllbnQgd2hpY2ggbWFrZXMgdGhlIGF1dGhlbnRpY2F0aW9uIHJlcXVlc3QuXG4gICAgICovXG4gICAgY29uc3RydWN0b3IodGVuYW50SWQsIGNsaWVudElkLCBnZXRBc3NlcnRpb24sIG9wdGlvbnMgPSB7fSkge1xuICAgICAgICBpZiAoIXRlbmFudElkIHx8ICFjbGllbnRJZCB8fCAhZ2V0QXNzZXJ0aW9uKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJDbGllbnRBc3NlcnRpb25DcmVkZW50aWFsOiB0ZW5hbnRJZCwgY2xpZW50SWQsIGFuZCBjbGllbnRBc3NlcnRpb24gYXJlIHJlcXVpcmVkIHBhcmFtZXRlcnMuXCIpO1xuICAgICAgICB9XG4gICAgICAgIHRoaXMudGVuYW50SWQgPSB0ZW5hbnRJZDtcbiAgICAgICAgdGhpcy5hZGRpdGlvbmFsbHlBbGxvd2VkVGVuYW50SWRzID0gcmVzb2x2ZUFkZGl0aW9uYWxseUFsbG93ZWRUZW5hbnRJZHMob3B0aW9ucyA9PT0gbnVsbCB8fCBvcHRpb25zID09PSB2b2lkIDAgPyB2b2lkIDAgOiBvcHRpb25zLmFkZGl0aW9uYWxseUFsbG93ZWRUZW5hbnRzKTtcbiAgICAgICAgdGhpcy5vcHRpb25zID0gb3B0aW9ucztcbiAgICAgICAgdGhpcy5nZXRBc3NlcnRpb24gPSBnZXRBc3NlcnRpb247XG4gICAgICAgIHRoaXMubXNhbENsaWVudCA9IGNyZWF0ZU1zYWxDbGllbnQoY2xpZW50SWQsIHRlbmFudElkLCBPYmplY3QuYXNzaWduKE9iamVjdC5hc3NpZ24oe30sIG9wdGlvbnMpLCB7IGxvZ2dlciwgdG9rZW5DcmVkZW50aWFsT3B0aW9uczogdGhpcy5vcHRpb25zIH0pKTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogQXV0aGVudGljYXRlcyB3aXRoIE1pY3Jvc29mdCBFbnRyYSBJRCBhbmQgcmV0dXJucyBhbiBhY2Nlc3MgdG9rZW4gaWYgc3VjY2Vzc2Z1bC5cbiAgICAgKiBJZiBhdXRoZW50aWNhdGlvbiBmYWlscywgYSB7QGxpbmsgQ3JlZGVudGlhbFVuYXZhaWxhYmxlRXJyb3J9IHdpbGwgYmUgdGhyb3duIHdpdGggdGhlIGRldGFpbHMgb2YgdGhlIGZhaWx1cmUuXG4gICAgICpcbiAgICAgKiBAcGFyYW0gc2NvcGVzIC0gVGhlIGxpc3Qgb2Ygc2NvcGVzIGZvciB3aGljaCB0aGUgdG9rZW4gd2lsbCBoYXZlIGFjY2Vzcy5cbiAgICAgKiBAcGFyYW0gb3B0aW9ucyAtIFRoZSBvcHRpb25zIHVzZWQgdG8gY29uZmlndXJlIGFueSByZXF1ZXN0cyB0aGlzXG4gICAgICogICAgICAgICAgICAgICAgVG9rZW5DcmVkZW50aWFsIGltcGxlbWVudGF0aW9uIG1pZ2h0IG1ha2UuXG4gICAgICovXG4gICAgYXN5bmMgZ2V0VG9rZW4oc2NvcGVzLCBvcHRpb25zID0ge30pIHtcbiAgICAgICAgcmV0dXJuIHRyYWNpbmdDbGllbnQud2l0aFNwYW4oYCR7dGhpcy5jb25zdHJ1Y3Rvci5uYW1lfS5nZXRUb2tlbmAsIG9wdGlvbnMsIGFzeW5jIChuZXdPcHRpb25zKSA9PiB7XG4gICAgICAgICAgICBuZXdPcHRpb25zLnRlbmFudElkID0gcHJvY2Vzc011bHRpVGVuYW50UmVxdWVzdCh0aGlzLnRlbmFudElkLCBuZXdPcHRpb25zLCB0aGlzLmFkZGl0aW9uYWxseUFsbG93ZWRUZW5hbnRJZHMsIGxvZ2dlcik7XG4gICAgICAgICAgICBjb25zdCBhcnJheVNjb3BlcyA9IEFycmF5LmlzQXJyYXkoc2NvcGVzKSA/IHNjb3BlcyA6IFtzY29wZXNdO1xuICAgICAgICAgICAgcmV0dXJuIHRoaXMubXNhbENsaWVudC5nZXRUb2tlbkJ5Q2xpZW50QXNzZXJ0aW9uKGFycmF5U2NvcGVzLCB0aGlzLmdldEFzc2VydGlvbiwgbmV3T3B0aW9ucyk7XG4gICAgICAgIH0pO1xuICAgIH1cbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWNsaWVudEFzc2VydGlvbkNyZWRlbnRpYWwuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/identity/dist-esm/src/credentials/clientAssertionCredential.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/identity/dist-esm/src/credentials/clientCertificateCredential.js":
/*!**********************************************************************************************!*\
  !*** ./node_modules/@azure/identity/dist-esm/src/credentials/clientCertificateCredential.js ***!
  \**********************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ClientCertificateCredential: () => (/* binding */ ClientCertificateCredential)\n/* harmony export */ });\n/* harmony import */ var _msal_nodeFlows_msalClient__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../msal/nodeFlows/msalClient */ \"(rsc)/./node_modules/@azure/identity/dist-esm/src/msal/nodeFlows/msalClient.js\");\n/* harmony import */ var crypto__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! crypto */ \"crypto\");\n/* harmony import */ var crypto__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(crypto__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _util_tenantIdUtils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../util/tenantIdUtils */ \"(rsc)/./node_modules/@azure/identity/dist-esm/src/util/tenantIdUtils.js\");\n/* harmony import */ var _util_tenantIdUtils__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../util/tenantIdUtils */ \"(rsc)/./node_modules/@azure/identity/dist-esm/src/util/processMultiTenantRequest.js\");\n/* harmony import */ var _util_logging__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../util/logging */ \"(rsc)/./node_modules/@azure/identity/dist-esm/src/util/logging.js\");\n/* harmony import */ var fs_promises__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! fs/promises */ \"fs/promises\");\n/* harmony import */ var fs_promises__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(fs_promises__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _util_tracing__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../util/tracing */ \"(rsc)/./node_modules/@azure/identity/dist-esm/src/util/tracing.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\n\n\n\n\n\nconst credentialName = \"ClientCertificateCredential\";\nconst logger = (0,_util_logging__WEBPACK_IMPORTED_MODULE_2__.credentialLogger)(credentialName);\n/**\n * Enables authentication to Microsoft Entra ID using a PEM-encoded\n * certificate that is assigned to an App Registration. More information\n * on how to configure certificate authentication can be found here:\n *\n * https://learn.microsoft.com/en-us/azure/active-directory/develop/active-directory-certificate-credentials#register-your-certificate-with-azure-ad\n *\n */\nclass ClientCertificateCredential {\n    constructor(tenantId, clientId, certificatePathOrConfiguration, options = {}) {\n        if (!tenantId || !clientId) {\n            throw new Error(`${credentialName}: tenantId and clientId are required parameters.`);\n        }\n        this.tenantId = tenantId;\n        this.additionallyAllowedTenantIds = (0,_util_tenantIdUtils__WEBPACK_IMPORTED_MODULE_3__.resolveAdditionallyAllowedTenantIds)(options === null || options === void 0 ? void 0 : options.additionallyAllowedTenants);\n        this.sendCertificateChain = options.sendCertificateChain;\n        this.certificateConfiguration = Object.assign({}, (typeof certificatePathOrConfiguration === \"string\"\n            ? {\n                certificatePath: certificatePathOrConfiguration,\n            }\n            : certificatePathOrConfiguration));\n        const certificate = this.certificateConfiguration.certificate;\n        const certificatePath = this.certificateConfiguration.certificatePath;\n        if (!this.certificateConfiguration || !(certificate || certificatePath)) {\n            throw new Error(`${credentialName}: Provide either a PEM certificate in string form, or the path to that certificate in the filesystem. To troubleshoot, visit https://aka.ms/azsdk/js/identity/serviceprincipalauthentication/troubleshoot.`);\n        }\n        if (certificate && certificatePath) {\n            throw new Error(`${credentialName}: To avoid unexpected behaviors, providing both the contents of a PEM certificate and the path to a PEM certificate is forbidden. To troubleshoot, visit https://aka.ms/azsdk/js/identity/serviceprincipalauthentication/troubleshoot.`);\n        }\n        this.msalClient = (0,_msal_nodeFlows_msalClient__WEBPACK_IMPORTED_MODULE_4__.createMsalClient)(clientId, tenantId, Object.assign(Object.assign({}, options), { logger, tokenCredentialOptions: options }));\n    }\n    /**\n     * Authenticates with Microsoft Entra ID and returns an access token if successful.\n     * If authentication fails, a {@link CredentialUnavailableError} will be thrown with the details of the failure.\n     *\n     * @param scopes - The list of scopes for which the token will have access.\n     * @param options - The options used to configure any requests this\n     *                TokenCredential implementation might make.\n     */\n    async getToken(scopes, options = {}) {\n        return _util_tracing__WEBPACK_IMPORTED_MODULE_5__.tracingClient.withSpan(`${credentialName}.getToken`, options, async (newOptions) => {\n            newOptions.tenantId = (0,_util_tenantIdUtils__WEBPACK_IMPORTED_MODULE_6__.processMultiTenantRequest)(this.tenantId, newOptions, this.additionallyAllowedTenantIds, logger);\n            const arrayScopes = Array.isArray(scopes) ? scopes : [scopes];\n            const certificate = await this.buildClientCertificate();\n            return this.msalClient.getTokenByClientCertificate(arrayScopes, certificate, newOptions);\n        });\n    }\n    async buildClientCertificate() {\n        const parts = await this.parseCertificate();\n        let privateKey;\n        if (this.certificateConfiguration.certificatePassword !== undefined) {\n            privateKey = (0,crypto__WEBPACK_IMPORTED_MODULE_0__.createPrivateKey)({\n                key: parts.certificateContents,\n                passphrase: this.certificateConfiguration.certificatePassword,\n                format: \"pem\",\n            })\n                .export({\n                format: \"pem\",\n                type: \"pkcs8\",\n            })\n                .toString();\n        }\n        else {\n            privateKey = parts.certificateContents;\n        }\n        return {\n            thumbprint: parts.thumbprint,\n            privateKey,\n            x5c: parts.x5c,\n        };\n    }\n    async parseCertificate() {\n        const certificate = this.certificateConfiguration.certificate;\n        const certificatePath = this.certificateConfiguration.certificatePath;\n        const certificateContents = certificate || (await (0,fs_promises__WEBPACK_IMPORTED_MODULE_1__.readFile)(certificatePath, \"utf8\"));\n        const x5c = this.sendCertificateChain ? certificateContents : undefined;\n        const certificatePattern = /(-+BEGIN CERTIFICATE-+)(\\n\\r?|\\r\\n?)([A-Za-z0-9+/\\n\\r]+=*)(\\n\\r?|\\r\\n?)(-+END CERTIFICATE-+)/g;\n        const publicKeys = [];\n        // Match all possible certificates, in the order they are in the file. These will form the chain that is used for x5c\n        let match;\n        do {\n            match = certificatePattern.exec(certificateContents);\n            if (match) {\n                publicKeys.push(match[3]);\n            }\n        } while (match);\n        if (publicKeys.length === 0) {\n            throw new Error(\"The file at the specified path does not contain a PEM-encoded certificate.\");\n        }\n        const thumbprint = (0,crypto__WEBPACK_IMPORTED_MODULE_0__.createHash)(\"sha1\")\n            .update(Buffer.from(publicKeys[0], \"base64\"))\n            .digest(\"hex\")\n            .toUpperCase();\n        return {\n            certificateContents,\n            thumbprint,\n            x5c,\n        };\n    }\n}\n//# sourceMappingURL=clientCertificateCredential.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/identity/dist-esm/src/credentials/clientCertificateCredential.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/identity/dist-esm/src/credentials/clientSecretCredential.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/@azure/identity/dist-esm/src/credentials/clientSecretCredential.js ***!
  \*****************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ClientSecretCredential: () => (/* binding */ ClientSecretCredential)\n/* harmony export */ });\n/* harmony import */ var _msal_nodeFlows_msalClient__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../msal/nodeFlows/msalClient */ \"(rsc)/./node_modules/@azure/identity/dist-esm/src/msal/nodeFlows/msalClient.js\");\n/* harmony import */ var _util_tenantIdUtils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../util/tenantIdUtils */ \"(rsc)/./node_modules/@azure/identity/dist-esm/src/util/tenantIdUtils.js\");\n/* harmony import */ var _util_tenantIdUtils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../util/tenantIdUtils */ \"(rsc)/./node_modules/@azure/identity/dist-esm/src/util/processMultiTenantRequest.js\");\n/* harmony import */ var _util_logging__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../util/logging */ \"(rsc)/./node_modules/@azure/identity/dist-esm/src/util/logging.js\");\n/* harmony import */ var _util_scopeUtils__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../util/scopeUtils */ \"(rsc)/./node_modules/@azure/identity/dist-esm/src/util/scopeUtils.js\");\n/* harmony import */ var _util_tracing__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../util/tracing */ \"(rsc)/./node_modules/@azure/identity/dist-esm/src/util/tracing.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\n\n\n\n\nconst logger = (0,_util_logging__WEBPACK_IMPORTED_MODULE_0__.credentialLogger)(\"ClientSecretCredential\");\n/**\n * Enables authentication to Microsoft Entra ID using a client secret\n * that was generated for an App Registration. More information on how\n * to configure a client secret can be found here:\n *\n * https://learn.microsoft.com/entra/identity-platform/quickstart-configure-app-access-web-apis#add-credentials-to-your-web-application\n *\n */\nclass ClientSecretCredential {\n    /**\n     * Creates an instance of the ClientSecretCredential with the details\n     * needed to authenticate against Microsoft Entra ID with a client\n     * secret.\n     *\n     * @param tenantId - The Microsoft Entra tenant (directory) ID.\n     * @param clientId - The client (application) ID of an App Registration in the tenant.\n     * @param clientSecret - A client secret that was generated for the App Registration.\n     * @param options - Options for configuring the client which makes the authentication request.\n     */\n    constructor(tenantId, clientId, clientSecret, options = {}) {\n        if (!tenantId || !clientId || !clientSecret) {\n            throw new Error(\"ClientSecretCredential: tenantId, clientId, and clientSecret are required parameters. To troubleshoot, visit https://aka.ms/azsdk/js/identity/serviceprincipalauthentication/troubleshoot.\");\n        }\n        this.clientSecret = clientSecret;\n        this.tenantId = tenantId;\n        this.additionallyAllowedTenantIds = (0,_util_tenantIdUtils__WEBPACK_IMPORTED_MODULE_1__.resolveAdditionallyAllowedTenantIds)(options === null || options === void 0 ? void 0 : options.additionallyAllowedTenants);\n        this.msalClient = (0,_msal_nodeFlows_msalClient__WEBPACK_IMPORTED_MODULE_2__.createMsalClient)(clientId, tenantId, Object.assign(Object.assign({}, options), { logger, tokenCredentialOptions: options }));\n    }\n    /**\n     * Authenticates with Microsoft Entra ID and returns an access token if successful.\n     * If authentication fails, a {@link CredentialUnavailableError} will be thrown with the details of the failure.\n     *\n     * @param scopes - The list of scopes for which the token will have access.\n     * @param options - The options used to configure any requests this\n     *                TokenCredential implementation might make.\n     */\n    async getToken(scopes, options = {}) {\n        return _util_tracing__WEBPACK_IMPORTED_MODULE_3__.tracingClient.withSpan(`${this.constructor.name}.getToken`, options, async (newOptions) => {\n            newOptions.tenantId = (0,_util_tenantIdUtils__WEBPACK_IMPORTED_MODULE_4__.processMultiTenantRequest)(this.tenantId, newOptions, this.additionallyAllowedTenantIds, logger);\n            const arrayScopes = (0,_util_scopeUtils__WEBPACK_IMPORTED_MODULE_5__.ensureScopes)(scopes);\n            return this.msalClient.getTokenByClientSecret(arrayScopes, this.clientSecret, newOptions);\n        });\n    }\n}\n//# sourceMappingURL=clientSecretCredential.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2lkZW50aXR5L2Rpc3QtZXNtL3NyYy9jcmVkZW50aWFscy9jbGllbnRTZWNyZXRDcmVkZW50aWFsLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7QUFBQTtBQUNBO0FBQ2dFO0FBQ3dDO0FBQ3JEO0FBQ0Q7QUFDRjtBQUNoRCxlQUFlLCtEQUFnQjtBQUMvQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDhEQUE4RDtBQUM5RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNENBQTRDLHdGQUFtQztBQUMvRSwwQkFBMEIsNEVBQWdCLG1EQUFtRCxjQUFjLHlDQUF5QztBQUNwSjtBQUNBO0FBQ0E7QUFDQSxtQ0FBbUMsa0NBQWtDO0FBQ3JFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx1Q0FBdUM7QUFDdkMsZUFBZSx3REFBYSxhQUFhLHNCQUFzQjtBQUMvRCxrQ0FBa0MsOEVBQXlCO0FBQzNELGdDQUFnQyw4REFBWTtBQUM1QztBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9kYW5pZWwzLXZwMi8uL25vZGVfbW9kdWxlcy9AYXp1cmUvaWRlbnRpdHkvZGlzdC1lc20vc3JjL2NyZWRlbnRpYWxzL2NsaWVudFNlY3JldENyZWRlbnRpYWwuanM/MDIxMSJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi5cbi8vIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZS5cbmltcG9ydCB7IGNyZWF0ZU1zYWxDbGllbnQgfSBmcm9tIFwiLi4vbXNhbC9ub2RlRmxvd3MvbXNhbENsaWVudFwiO1xuaW1wb3J0IHsgcHJvY2Vzc011bHRpVGVuYW50UmVxdWVzdCwgcmVzb2x2ZUFkZGl0aW9uYWxseUFsbG93ZWRUZW5hbnRJZHMsIH0gZnJvbSBcIi4uL3V0aWwvdGVuYW50SWRVdGlsc1wiO1xuaW1wb3J0IHsgY3JlZGVudGlhbExvZ2dlciB9IGZyb20gXCIuLi91dGlsL2xvZ2dpbmdcIjtcbmltcG9ydCB7IGVuc3VyZVNjb3BlcyB9IGZyb20gXCIuLi91dGlsL3Njb3BlVXRpbHNcIjtcbmltcG9ydCB7IHRyYWNpbmdDbGllbnQgfSBmcm9tIFwiLi4vdXRpbC90cmFjaW5nXCI7XG5jb25zdCBsb2dnZXIgPSBjcmVkZW50aWFsTG9nZ2VyKFwiQ2xpZW50U2VjcmV0Q3JlZGVudGlhbFwiKTtcbi8qKlxuICogRW5hYmxlcyBhdXRoZW50aWNhdGlvbiB0byBNaWNyb3NvZnQgRW50cmEgSUQgdXNpbmcgYSBjbGllbnQgc2VjcmV0XG4gKiB0aGF0IHdhcyBnZW5lcmF0ZWQgZm9yIGFuIEFwcCBSZWdpc3RyYXRpb24uIE1vcmUgaW5mb3JtYXRpb24gb24gaG93XG4gKiB0byBjb25maWd1cmUgYSBjbGllbnQgc2VjcmV0IGNhbiBiZSBmb3VuZCBoZXJlOlxuICpcbiAqIGh0dHBzOi8vbGVhcm4ubWljcm9zb2Z0LmNvbS9lbnRyYS9pZGVudGl0eS1wbGF0Zm9ybS9xdWlja3N0YXJ0LWNvbmZpZ3VyZS1hcHAtYWNjZXNzLXdlYi1hcGlzI2FkZC1jcmVkZW50aWFscy10by15b3VyLXdlYi1hcHBsaWNhdGlvblxuICpcbiAqL1xuZXhwb3J0IGNsYXNzIENsaWVudFNlY3JldENyZWRlbnRpYWwge1xuICAgIC8qKlxuICAgICAqIENyZWF0ZXMgYW4gaW5zdGFuY2Ugb2YgdGhlIENsaWVudFNlY3JldENyZWRlbnRpYWwgd2l0aCB0aGUgZGV0YWlsc1xuICAgICAqIG5lZWRlZCB0byBhdXRoZW50aWNhdGUgYWdhaW5zdCBNaWNyb3NvZnQgRW50cmEgSUQgd2l0aCBhIGNsaWVudFxuICAgICAqIHNlY3JldC5cbiAgICAgKlxuICAgICAqIEBwYXJhbSB0ZW5hbnRJZCAtIFRoZSBNaWNyb3NvZnQgRW50cmEgdGVuYW50IChkaXJlY3RvcnkpIElELlxuICAgICAqIEBwYXJhbSBjbGllbnRJZCAtIFRoZSBjbGllbnQgKGFwcGxpY2F0aW9uKSBJRCBvZiBhbiBBcHAgUmVnaXN0cmF0aW9uIGluIHRoZSB0ZW5hbnQuXG4gICAgICogQHBhcmFtIGNsaWVudFNlY3JldCAtIEEgY2xpZW50IHNlY3JldCB0aGF0IHdhcyBnZW5lcmF0ZWQgZm9yIHRoZSBBcHAgUmVnaXN0cmF0aW9uLlxuICAgICAqIEBwYXJhbSBvcHRpb25zIC0gT3B0aW9ucyBmb3IgY29uZmlndXJpbmcgdGhlIGNsaWVudCB3aGljaCBtYWtlcyB0aGUgYXV0aGVudGljYXRpb24gcmVxdWVzdC5cbiAgICAgKi9cbiAgICBjb25zdHJ1Y3Rvcih0ZW5hbnRJZCwgY2xpZW50SWQsIGNsaWVudFNlY3JldCwgb3B0aW9ucyA9IHt9KSB7XG4gICAgICAgIGlmICghdGVuYW50SWQgfHwgIWNsaWVudElkIHx8ICFjbGllbnRTZWNyZXQpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihcIkNsaWVudFNlY3JldENyZWRlbnRpYWw6IHRlbmFudElkLCBjbGllbnRJZCwgYW5kIGNsaWVudFNlY3JldCBhcmUgcmVxdWlyZWQgcGFyYW1ldGVycy4gVG8gdHJvdWJsZXNob290LCB2aXNpdCBodHRwczovL2FrYS5tcy9henNkay9qcy9pZGVudGl0eS9zZXJ2aWNlcHJpbmNpcGFsYXV0aGVudGljYXRpb24vdHJvdWJsZXNob290LlwiKTtcbiAgICAgICAgfVxuICAgICAgICB0aGlzLmNsaWVudFNlY3JldCA9IGNsaWVudFNlY3JldDtcbiAgICAgICAgdGhpcy50ZW5hbnRJZCA9IHRlbmFudElkO1xuICAgICAgICB0aGlzLmFkZGl0aW9uYWxseUFsbG93ZWRUZW5hbnRJZHMgPSByZXNvbHZlQWRkaXRpb25hbGx5QWxsb3dlZFRlbmFudElkcyhvcHRpb25zID09PSBudWxsIHx8IG9wdGlvbnMgPT09IHZvaWQgMCA/IHZvaWQgMCA6IG9wdGlvbnMuYWRkaXRpb25hbGx5QWxsb3dlZFRlbmFudHMpO1xuICAgICAgICB0aGlzLm1zYWxDbGllbnQgPSBjcmVhdGVNc2FsQ2xpZW50KGNsaWVudElkLCB0ZW5hbnRJZCwgT2JqZWN0LmFzc2lnbihPYmplY3QuYXNzaWduKHt9LCBvcHRpb25zKSwgeyBsb2dnZXIsIHRva2VuQ3JlZGVudGlhbE9wdGlvbnM6IG9wdGlvbnMgfSkpO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBBdXRoZW50aWNhdGVzIHdpdGggTWljcm9zb2Z0IEVudHJhIElEIGFuZCByZXR1cm5zIGFuIGFjY2VzcyB0b2tlbiBpZiBzdWNjZXNzZnVsLlxuICAgICAqIElmIGF1dGhlbnRpY2F0aW9uIGZhaWxzLCBhIHtAbGluayBDcmVkZW50aWFsVW5hdmFpbGFibGVFcnJvcn0gd2lsbCBiZSB0aHJvd24gd2l0aCB0aGUgZGV0YWlscyBvZiB0aGUgZmFpbHVyZS5cbiAgICAgKlxuICAgICAqIEBwYXJhbSBzY29wZXMgLSBUaGUgbGlzdCBvZiBzY29wZXMgZm9yIHdoaWNoIHRoZSB0b2tlbiB3aWxsIGhhdmUgYWNjZXNzLlxuICAgICAqIEBwYXJhbSBvcHRpb25zIC0gVGhlIG9wdGlvbnMgdXNlZCB0byBjb25maWd1cmUgYW55IHJlcXVlc3RzIHRoaXNcbiAgICAgKiAgICAgICAgICAgICAgICBUb2tlbkNyZWRlbnRpYWwgaW1wbGVtZW50YXRpb24gbWlnaHQgbWFrZS5cbiAgICAgKi9cbiAgICBhc3luYyBnZXRUb2tlbihzY29wZXMsIG9wdGlvbnMgPSB7fSkge1xuICAgICAgICByZXR1cm4gdHJhY2luZ0NsaWVudC53aXRoU3BhbihgJHt0aGlzLmNvbnN0cnVjdG9yLm5hbWV9LmdldFRva2VuYCwgb3B0aW9ucywgYXN5bmMgKG5ld09wdGlvbnMpID0+IHtcbiAgICAgICAgICAgIG5ld09wdGlvbnMudGVuYW50SWQgPSBwcm9jZXNzTXVsdGlUZW5hbnRSZXF1ZXN0KHRoaXMudGVuYW50SWQsIG5ld09wdGlvbnMsIHRoaXMuYWRkaXRpb25hbGx5QWxsb3dlZFRlbmFudElkcywgbG9nZ2VyKTtcbiAgICAgICAgICAgIGNvbnN0IGFycmF5U2NvcGVzID0gZW5zdXJlU2NvcGVzKHNjb3Blcyk7XG4gICAgICAgICAgICByZXR1cm4gdGhpcy5tc2FsQ2xpZW50LmdldFRva2VuQnlDbGllbnRTZWNyZXQoYXJyYXlTY29wZXMsIHRoaXMuY2xpZW50U2VjcmV0LCBuZXdPcHRpb25zKTtcbiAgICAgICAgfSk7XG4gICAgfVxufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Y2xpZW50U2VjcmV0Q3JlZGVudGlhbC5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/identity/dist-esm/src/credentials/clientSecretCredential.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/identity/dist-esm/src/credentials/defaultAzureCredential.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/@azure/identity/dist-esm/src/credentials/defaultAzureCredential.js ***!
  \*****************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DefaultAzureCredential: () => (/* binding */ DefaultAzureCredential),\n/* harmony export */   UnavailableDefaultCredential: () => (/* binding */ UnavailableDefaultCredential),\n/* harmony export */   createDefaultManagedIdentityCredential: () => (/* binding */ createDefaultManagedIdentityCredential),\n/* harmony export */   createEnvironmentCredential: () => (/* binding */ createEnvironmentCredential)\n/* harmony export */ });\n/* harmony import */ var _managedIdentityCredential__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./managedIdentityCredential */ \"(rsc)/./node_modules/@azure/identity/dist-esm/src/credentials/managedIdentityCredential/index.js\");\n/* harmony import */ var _azureCliCredential__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./azureCliCredential */ \"(rsc)/./node_modules/@azure/identity/dist-esm/src/credentials/azureCliCredential.js\");\n/* harmony import */ var _azureDeveloperCliCredential__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./azureDeveloperCliCredential */ \"(rsc)/./node_modules/@azure/identity/dist-esm/src/credentials/azureDeveloperCliCredential.js\");\n/* harmony import */ var _azurePowerShellCredential__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./azurePowerShellCredential */ \"(rsc)/./node_modules/@azure/identity/dist-esm/src/credentials/azurePowerShellCredential.js\");\n/* harmony import */ var _chainedTokenCredential__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./chainedTokenCredential */ \"(rsc)/./node_modules/@azure/identity/dist-esm/src/credentials/chainedTokenCredential.js\");\n/* harmony import */ var _environmentCredential__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./environmentCredential */ \"(rsc)/./node_modules/@azure/identity/dist-esm/src/credentials/environmentCredential.js\");\n/* harmony import */ var _workloadIdentityCredential__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./workloadIdentityCredential */ \"(rsc)/./node_modules/@azure/identity/dist-esm/src/credentials/workloadIdentityCredential.js\");\n/* harmony import */ var _util_logging__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../util/logging */ \"(rsc)/./node_modules/@azure/identity/dist-esm/src/util/logging.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\n\n\n\n\n\n\n\nconst logger = (0,_util_logging__WEBPACK_IMPORTED_MODULE_0__.credentialLogger)(\"DefaultAzureCredential\");\n/**\n * Creates a {@link ManagedIdentityCredential} from the provided options.\n * @param options - Options to configure the credential.\n *\n * @internal\n */\nfunction createDefaultManagedIdentityCredential(options = {}) {\n    var _a, _b, _c, _d;\n    (_a = options.retryOptions) !== null && _a !== void 0 ? _a : (options.retryOptions = {\n        maxRetries: 5,\n        retryDelayInMs: 800,\n    });\n    const managedIdentityClientId = (_b = options === null || options === void 0 ? void 0 : options.managedIdentityClientId) !== null && _b !== void 0 ? _b : process.env.AZURE_CLIENT_ID;\n    const workloadIdentityClientId = (_c = options === null || options === void 0 ? void 0 : options.workloadIdentityClientId) !== null && _c !== void 0 ? _c : managedIdentityClientId;\n    const managedResourceId = options === null || options === void 0 ? void 0 : options.managedIdentityResourceId;\n    const workloadFile = process.env.AZURE_FEDERATED_TOKEN_FILE;\n    const tenantId = (_d = options === null || options === void 0 ? void 0 : options.tenantId) !== null && _d !== void 0 ? _d : process.env.AZURE_TENANT_ID;\n    if (managedResourceId) {\n        const managedIdentityResourceIdOptions = Object.assign(Object.assign({}, options), { resourceId: managedResourceId });\n        return new _managedIdentityCredential__WEBPACK_IMPORTED_MODULE_1__.ManagedIdentityCredential(managedIdentityResourceIdOptions);\n    }\n    if (workloadFile && workloadIdentityClientId) {\n        const workloadIdentityCredentialOptions = Object.assign(Object.assign({}, options), { tenantId: tenantId });\n        return new _managedIdentityCredential__WEBPACK_IMPORTED_MODULE_1__.ManagedIdentityCredential(workloadIdentityClientId, workloadIdentityCredentialOptions);\n    }\n    if (managedIdentityClientId) {\n        const managedIdentityClientOptions = Object.assign(Object.assign({}, options), { clientId: managedIdentityClientId });\n        return new _managedIdentityCredential__WEBPACK_IMPORTED_MODULE_1__.ManagedIdentityCredential(managedIdentityClientOptions);\n    }\n    // We may be able to return a UnavailableCredential here, but that may be a breaking change\n    return new _managedIdentityCredential__WEBPACK_IMPORTED_MODULE_1__.ManagedIdentityCredential(options);\n}\n/**\n * Creates a {@link WorkloadIdentityCredential} from the provided options.\n * @param options - Options to configure the credential.\n *\n * @internal\n */\nfunction createDefaultWorkloadIdentityCredential(options) {\n    var _a, _b, _c;\n    const managedIdentityClientId = (_a = options === null || options === void 0 ? void 0 : options.managedIdentityClientId) !== null && _a !== void 0 ? _a : process.env.AZURE_CLIENT_ID;\n    const workloadIdentityClientId = (_b = options === null || options === void 0 ? void 0 : options.workloadIdentityClientId) !== null && _b !== void 0 ? _b : managedIdentityClientId;\n    const workloadFile = process.env.AZURE_FEDERATED_TOKEN_FILE;\n    const tenantId = (_c = options === null || options === void 0 ? void 0 : options.tenantId) !== null && _c !== void 0 ? _c : process.env.AZURE_TENANT_ID;\n    if (workloadFile && workloadIdentityClientId) {\n        const workloadIdentityCredentialOptions = Object.assign(Object.assign({}, options), { tenantId, clientId: workloadIdentityClientId, tokenFilePath: workloadFile });\n        return new _workloadIdentityCredential__WEBPACK_IMPORTED_MODULE_2__.WorkloadIdentityCredential(workloadIdentityCredentialOptions);\n    }\n    if (tenantId) {\n        const workloadIdentityClientTenantOptions = Object.assign(Object.assign({}, options), { tenantId });\n        return new _workloadIdentityCredential__WEBPACK_IMPORTED_MODULE_2__.WorkloadIdentityCredential(workloadIdentityClientTenantOptions);\n    }\n    // We may be able to return a UnavailableCredential here, but that may be a breaking change\n    return new _workloadIdentityCredential__WEBPACK_IMPORTED_MODULE_2__.WorkloadIdentityCredential(options);\n}\n/**\n * Creates a {@link AzureDeveloperCliCredential} from the provided options.\n * @param options - Options to configure the credential.\n *\n * @internal\n */\nfunction createDefaultAzureDeveloperCliCredential(options = {}) {\n    const processTimeoutInMs = options.processTimeoutInMs;\n    return new _azureDeveloperCliCredential__WEBPACK_IMPORTED_MODULE_3__.AzureDeveloperCliCredential(Object.assign({ processTimeoutInMs }, options));\n}\n/**\n * Creates a {@link AzureCliCredential} from the provided options.\n * @param options - Options to configure the credential.\n *\n * @internal\n */\nfunction createDefaultAzureCliCredential(options = {}) {\n    const processTimeoutInMs = options.processTimeoutInMs;\n    return new _azureCliCredential__WEBPACK_IMPORTED_MODULE_4__.AzureCliCredential(Object.assign({ processTimeoutInMs }, options));\n}\n/**\n * Creates a {@link AzurePowerShellCredential} from the provided options.\n * @param options - Options to configure the credential.\n *\n * @internal\n */\nfunction createDefaultAzurePowershellCredential(options = {}) {\n    const processTimeoutInMs = options.processTimeoutInMs;\n    return new _azurePowerShellCredential__WEBPACK_IMPORTED_MODULE_5__.AzurePowerShellCredential(Object.assign({ processTimeoutInMs }, options));\n}\n/**\n * Creates an {@link EnvironmentCredential} from the provided options.\n * @param options - Options to configure the credential.\n *\n * @internal\n */\nfunction createEnvironmentCredential(options = {}) {\n    return new _environmentCredential__WEBPACK_IMPORTED_MODULE_6__.EnvironmentCredential(options);\n}\n/**\n * A no-op credential that logs the reason it was skipped if getToken is called.\n * @internal\n */\nclass UnavailableDefaultCredential {\n    constructor(credentialName, message) {\n        this.credentialName = credentialName;\n        this.credentialUnavailableErrorMessage = message;\n    }\n    getToken() {\n        logger.getToken.info(`Skipping ${this.credentialName}, reason: ${this.credentialUnavailableErrorMessage}`);\n        return Promise.resolve(null);\n    }\n}\n/**\n * Provides a default {@link ChainedTokenCredential} configuration that should\n * work for most applications that use the Azure SDK.\n */\nclass DefaultAzureCredential extends _chainedTokenCredential__WEBPACK_IMPORTED_MODULE_7__.ChainedTokenCredential {\n    constructor(options) {\n        const credentialFunctions = [\n            createEnvironmentCredential,\n            createDefaultWorkloadIdentityCredential,\n            createDefaultManagedIdentityCredential,\n            createDefaultAzureCliCredential,\n            createDefaultAzurePowershellCredential,\n            createDefaultAzureDeveloperCliCredential,\n        ];\n        // DefaultCredential constructors should not throw, instead throwing on getToken() which is handled by ChainedTokenCredential.\n        // When adding new credentials to the default chain, consider:\n        // 1. Making the constructor parameters required and explicit\n        // 2. Validating any required parameters in the factory function\n        // 3. Returning a UnavailableDefaultCredential from the factory function if a credential is unavailable for any reason\n        const credentials = credentialFunctions.map((createCredentialFn) => {\n            try {\n                return createCredentialFn(options);\n            }\n            catch (err) {\n                logger.warning(`Skipped ${createCredentialFn.name} because of an error creating the credential: ${err}`);\n                return new UnavailableDefaultCredential(createCredentialFn.name, err.message);\n            }\n        });\n        super(...credentials);\n    }\n}\n//# sourceMappingURL=defaultAzureCredential.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/identity/dist-esm/src/credentials/defaultAzureCredential.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/identity/dist-esm/src/credentials/deviceCodeCredential.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/@azure/identity/dist-esm/src/credentials/deviceCodeCredential.js ***!
  \***************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DeviceCodeCredential: () => (/* binding */ DeviceCodeCredential),\n/* harmony export */   defaultDeviceCodePromptCallback: () => (/* binding */ defaultDeviceCodePromptCallback)\n/* harmony export */ });\n/* harmony import */ var _util_tenantIdUtils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../util/tenantIdUtils */ \"(rsc)/./node_modules/@azure/identity/dist-esm/src/util/tenantIdUtils.js\");\n/* harmony import */ var _util_tenantIdUtils__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../util/tenantIdUtils */ \"(rsc)/./node_modules/@azure/identity/dist-esm/src/util/processMultiTenantRequest.js\");\n/* harmony import */ var _util_logging__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../util/logging */ \"(rsc)/./node_modules/@azure/identity/dist-esm/src/util/logging.js\");\n/* harmony import */ var _util_scopeUtils__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../util/scopeUtils */ \"(rsc)/./node_modules/@azure/identity/dist-esm/src/util/scopeUtils.js\");\n/* harmony import */ var _util_tracing__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../util/tracing */ \"(rsc)/./node_modules/@azure/identity/dist-esm/src/util/tracing.js\");\n/* harmony import */ var _msal_nodeFlows_msalClient__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../msal/nodeFlows/msalClient */ \"(rsc)/./node_modules/@azure/identity/dist-esm/src/msal/nodeFlows/msalClient.js\");\n/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../constants */ \"(rsc)/./node_modules/@azure/identity/dist-esm/src/constants.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\n\n\n\n\n\nconst logger = (0,_util_logging__WEBPACK_IMPORTED_MODULE_0__.credentialLogger)(\"DeviceCodeCredential\");\n/**\n * Method that logs the user code from the DeviceCodeCredential.\n * @param deviceCodeInfo - The device code.\n */\nfunction defaultDeviceCodePromptCallback(deviceCodeInfo) {\n    console.log(deviceCodeInfo.message);\n}\n/**\n * Enables authentication to Microsoft Entra ID using a device code\n * that the user can enter into https://microsoft.com/devicelogin.\n */\nclass DeviceCodeCredential {\n    /**\n     * Creates an instance of DeviceCodeCredential with the details needed\n     * to initiate the device code authorization flow with Microsoft Entra ID.\n     *\n     * A message will be logged, giving users a code that they can use to authenticate once they go to https://microsoft.com/devicelogin\n     *\n     * Developers can configure how this message is shown by passing a custom `userPromptCallback`:\n     *\n     * ```js\n     * const credential = new DeviceCodeCredential({\n     *   tenantId: env.AZURE_TENANT_ID,\n     *   clientId: env.AZURE_CLIENT_ID,\n     *   userPromptCallback: (info) => {\n     *     console.log(\"CUSTOMIZED PROMPT CALLBACK\", info.message);\n     *   }\n     * });\n     * ```\n     *\n     * @param options - Options for configuring the client which makes the authentication requests.\n     */\n    constructor(options) {\n        var _a, _b;\n        this.tenantId = options === null || options === void 0 ? void 0 : options.tenantId;\n        this.additionallyAllowedTenantIds = (0,_util_tenantIdUtils__WEBPACK_IMPORTED_MODULE_1__.resolveAdditionallyAllowedTenantIds)(options === null || options === void 0 ? void 0 : options.additionallyAllowedTenants);\n        const clientId = (_a = options === null || options === void 0 ? void 0 : options.clientId) !== null && _a !== void 0 ? _a : _constants__WEBPACK_IMPORTED_MODULE_2__.DeveloperSignOnClientId;\n        const tenantId = (0,_util_tenantIdUtils__WEBPACK_IMPORTED_MODULE_1__.resolveTenantId)(logger, options === null || options === void 0 ? void 0 : options.tenantId, clientId);\n        this.userPromptCallback = (_b = options === null || options === void 0 ? void 0 : options.userPromptCallback) !== null && _b !== void 0 ? _b : defaultDeviceCodePromptCallback;\n        this.msalClient = (0,_msal_nodeFlows_msalClient__WEBPACK_IMPORTED_MODULE_3__.createMsalClient)(clientId, tenantId, Object.assign(Object.assign({}, options), { logger, tokenCredentialOptions: options || {} }));\n        this.disableAutomaticAuthentication = options === null || options === void 0 ? void 0 : options.disableAutomaticAuthentication;\n    }\n    /**\n     * Authenticates with Microsoft Entra ID and returns an access token if successful.\n     * If authentication fails, a {@link CredentialUnavailableError} will be thrown with the details of the failure.\n     *\n     * If the user provided the option `disableAutomaticAuthentication`,\n     * once the token can't be retrieved silently,\n     * this method won't attempt to request user interaction to retrieve the token.\n     *\n     * @param scopes - The list of scopes for which the token will have access.\n     * @param options - The options used to configure any requests this\n     *                TokenCredential implementation might make.\n     */\n    async getToken(scopes, options = {}) {\n        return _util_tracing__WEBPACK_IMPORTED_MODULE_4__.tracingClient.withSpan(`${this.constructor.name}.getToken`, options, async (newOptions) => {\n            newOptions.tenantId = (0,_util_tenantIdUtils__WEBPACK_IMPORTED_MODULE_5__.processMultiTenantRequest)(this.tenantId, newOptions, this.additionallyAllowedTenantIds, logger);\n            const arrayScopes = (0,_util_scopeUtils__WEBPACK_IMPORTED_MODULE_6__.ensureScopes)(scopes);\n            return this.msalClient.getTokenByDeviceCode(arrayScopes, this.userPromptCallback, Object.assign(Object.assign({}, newOptions), { disableAutomaticAuthentication: this.disableAutomaticAuthentication }));\n        });\n    }\n    /**\n     * Authenticates with Microsoft Entra ID and returns an access token if successful.\n     * If authentication fails, a {@link CredentialUnavailableError} will be thrown with the details of the failure.\n     *\n     * If the token can't be retrieved silently, this method will require user interaction to retrieve the token.\n     *\n     * @param scopes - The list of scopes for which the token will have access.\n     * @param options - The options used to configure any requests this\n     *                  TokenCredential implementation might make.\n     */\n    async authenticate(scopes, options = {}) {\n        return _util_tracing__WEBPACK_IMPORTED_MODULE_4__.tracingClient.withSpan(`${this.constructor.name}.authenticate`, options, async (newOptions) => {\n            const arrayScopes = Array.isArray(scopes) ? scopes : [scopes];\n            await this.msalClient.getTokenByDeviceCode(arrayScopes, this.userPromptCallback, Object.assign(Object.assign({}, newOptions), { disableAutomaticAuthentication: false }));\n            return this.msalClient.getActiveAccount();\n        });\n    }\n}\n//# sourceMappingURL=deviceCodeCredential.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/identity/dist-esm/src/credentials/deviceCodeCredential.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/identity/dist-esm/src/credentials/environmentCredential.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/@azure/identity/dist-esm/src/credentials/environmentCredential.js ***!
  \****************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AllSupportedEnvironmentVariables: () => (/* binding */ AllSupportedEnvironmentVariables),\n/* harmony export */   EnvironmentCredential: () => (/* binding */ EnvironmentCredential)\n/* harmony export */ });\n/* harmony import */ var _errors__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../errors */ \"(rsc)/./node_modules/@azure/identity/dist-esm/src/errors.js\");\n/* harmony import */ var _util_logging__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../util/logging */ \"(rsc)/./node_modules/@azure/identity/dist-esm/src/util/logging.js\");\n/* harmony import */ var _clientCertificateCredential__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./clientCertificateCredential */ \"(rsc)/./node_modules/@azure/identity/dist-esm/src/credentials/clientCertificateCredential.js\");\n/* harmony import */ var _clientSecretCredential__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./clientSecretCredential */ \"(rsc)/./node_modules/@azure/identity/dist-esm/src/credentials/clientSecretCredential.js\");\n/* harmony import */ var _usernamePasswordCredential__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./usernamePasswordCredential */ \"(rsc)/./node_modules/@azure/identity/dist-esm/src/credentials/usernamePasswordCredential.js\");\n/* harmony import */ var _util_tenantIdUtils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../util/tenantIdUtils */ \"(rsc)/./node_modules/@azure/identity/dist-esm/src/util/tenantIdUtils.js\");\n/* harmony import */ var _util_tracing__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../util/tracing */ \"(rsc)/./node_modules/@azure/identity/dist-esm/src/util/tracing.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\n\n\n\n\n\n\n/**\n * Contains the list of all supported environment variable names so that an\n * appropriate error message can be generated when no credentials can be\n * configured.\n *\n * @internal\n */\nconst AllSupportedEnvironmentVariables = [\n    \"AZURE_TENANT_ID\",\n    \"AZURE_CLIENT_ID\",\n    \"AZURE_CLIENT_SECRET\",\n    \"AZURE_CLIENT_CERTIFICATE_PATH\",\n    \"AZURE_CLIENT_CERTIFICATE_PASSWORD\",\n    \"AZURE_USERNAME\",\n    \"AZURE_PASSWORD\",\n    \"AZURE_ADDITIONALLY_ALLOWED_TENANTS\",\n];\nfunction getAdditionallyAllowedTenants() {\n    var _a;\n    const additionallyAllowedValues = (_a = process.env.AZURE_ADDITIONALLY_ALLOWED_TENANTS) !== null && _a !== void 0 ? _a : \"\";\n    return additionallyAllowedValues.split(\";\");\n}\nconst credentialName = \"EnvironmentCredential\";\nconst logger = (0,_util_logging__WEBPACK_IMPORTED_MODULE_0__.credentialLogger)(credentialName);\n/**\n * Enables authentication to Microsoft Entra ID using a client secret or certificate, or as a user\n * with a username and password.\n */\nclass EnvironmentCredential {\n    /**\n     * Creates an instance of the EnvironmentCredential class and decides what credential to use depending on the available environment variables.\n     *\n     * Required environment variables:\n     * - `AZURE_TENANT_ID`: The Microsoft Entra tenant (directory) ID.\n     * - `AZURE_CLIENT_ID`: The client (application) ID of an App Registration in the tenant.\n     *\n     * If setting the AZURE_TENANT_ID, then you can also set the additionally allowed tenants\n     * - `AZURE_ADDITIONALLY_ALLOWED_TENANTS`: For multi-tenant applications, specifies additional tenants for which the credential may acquire tokens with a single semicolon delimited string. Use * to allow all tenants.\n     *\n     * Environment variables used for client credential authentication:\n     * - `AZURE_CLIENT_SECRET`: A client secret that was generated for the App Registration.\n     * - `AZURE_CLIENT_CERTIFICATE_PATH`: The path to a PEM certificate to use during the authentication, instead of the client secret.\n     * - `AZURE_CLIENT_CERTIFICATE_PASSWORD`: (optional) password for the certificate file.\n     *\n     * Alternatively, users can provide environment variables for username and password authentication:\n     * - `AZURE_USERNAME`: Username to authenticate with.\n     * - `AZURE_PASSWORD`: Password to authenticate with.\n     *\n     * If the environment variables required to perform the authentication are missing, a {@link CredentialUnavailableError} will be thrown.\n     * If the authentication fails, or if there's an unknown error, an {@link AuthenticationError} will be thrown.\n     *\n     * @param options - Options for configuring the client which makes the authentication request.\n     */\n    constructor(options) {\n        // Keep track of any missing environment variables for error details\n        this._credential = undefined;\n        const assigned = (0,_util_logging__WEBPACK_IMPORTED_MODULE_0__.processEnvVars)(AllSupportedEnvironmentVariables).assigned.join(\", \");\n        logger.info(`Found the following environment variables: ${assigned}`);\n        const tenantId = process.env.AZURE_TENANT_ID, clientId = process.env.AZURE_CLIENT_ID, clientSecret = process.env.AZURE_CLIENT_SECRET;\n        const additionallyAllowedTenantIds = getAdditionallyAllowedTenants();\n        const newOptions = Object.assign(Object.assign({}, options), { additionallyAllowedTenantIds });\n        if (tenantId) {\n            (0,_util_tenantIdUtils__WEBPACK_IMPORTED_MODULE_1__.checkTenantId)(logger, tenantId);\n        }\n        if (tenantId && clientId && clientSecret) {\n            logger.info(`Invoking ClientSecretCredential with tenant ID: ${tenantId}, clientId: ${clientId} and clientSecret: [REDACTED]`);\n            this._credential = new _clientSecretCredential__WEBPACK_IMPORTED_MODULE_2__.ClientSecretCredential(tenantId, clientId, clientSecret, newOptions);\n            return;\n        }\n        const certificatePath = process.env.AZURE_CLIENT_CERTIFICATE_PATH;\n        const certificatePassword = process.env.AZURE_CLIENT_CERTIFICATE_PASSWORD;\n        if (tenantId && clientId && certificatePath) {\n            logger.info(`Invoking ClientCertificateCredential with tenant ID: ${tenantId}, clientId: ${clientId} and certificatePath: ${certificatePath}`);\n            this._credential = new _clientCertificateCredential__WEBPACK_IMPORTED_MODULE_3__.ClientCertificateCredential(tenantId, clientId, { certificatePath, certificatePassword }, newOptions);\n            return;\n        }\n        const username = process.env.AZURE_USERNAME;\n        const password = process.env.AZURE_PASSWORD;\n        if (tenantId && clientId && username && password) {\n            logger.info(`Invoking UsernamePasswordCredential with tenant ID: ${tenantId}, clientId: ${clientId} and username: ${username}`);\n            this._credential = new _usernamePasswordCredential__WEBPACK_IMPORTED_MODULE_4__.UsernamePasswordCredential(tenantId, clientId, username, password, newOptions);\n        }\n    }\n    /**\n     * Authenticates with Microsoft Entra ID and returns an access token if successful.\n     *\n     * @param scopes - The list of scopes for which the token will have access.\n     * @param options - Optional parameters. See {@link GetTokenOptions}.\n     */\n    async getToken(scopes, options = {}) {\n        return _util_tracing__WEBPACK_IMPORTED_MODULE_5__.tracingClient.withSpan(`${credentialName}.getToken`, options, async (newOptions) => {\n            if (this._credential) {\n                try {\n                    const result = await this._credential.getToken(scopes, newOptions);\n                    logger.getToken.info((0,_util_logging__WEBPACK_IMPORTED_MODULE_0__.formatSuccess)(scopes));\n                    return result;\n                }\n                catch (err) {\n                    const authenticationError = new _errors__WEBPACK_IMPORTED_MODULE_6__.AuthenticationError(400, {\n                        error: `${credentialName} authentication failed. To troubleshoot, visit https://aka.ms/azsdk/js/identity/environmentcredential/troubleshoot.`,\n                        error_description: err.message.toString().split(\"More details:\").join(\"\"),\n                    });\n                    logger.getToken.info((0,_util_logging__WEBPACK_IMPORTED_MODULE_0__.formatError)(scopes, authenticationError));\n                    throw authenticationError;\n                }\n            }\n            throw new _errors__WEBPACK_IMPORTED_MODULE_6__.CredentialUnavailableError(`${credentialName} is unavailable. No underlying credential could be used. To troubleshoot, visit https://aka.ms/azsdk/js/identity/environmentcredential/troubleshoot.`);\n        });\n    }\n}\n//# sourceMappingURL=environmentCredential.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/identity/dist-esm/src/credentials/environmentCredential.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/identity/dist-esm/src/credentials/interactiveBrowserCredential.js":
/*!***********************************************************************************************!*\
  !*** ./node_modules/@azure/identity/dist-esm/src/credentials/interactiveBrowserCredential.js ***!
  \***********************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   InteractiveBrowserCredential: () => (/* binding */ InteractiveBrowserCredential)\n/* harmony export */ });\n/* harmony import */ var _util_tenantIdUtils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../util/tenantIdUtils */ \"(rsc)/./node_modules/@azure/identity/dist-esm/src/util/tenantIdUtils.js\");\n/* harmony import */ var _util_tenantIdUtils__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../util/tenantIdUtils */ \"(rsc)/./node_modules/@azure/identity/dist-esm/src/util/processMultiTenantRequest.js\");\n/* harmony import */ var _util_logging__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../util/logging */ \"(rsc)/./node_modules/@azure/identity/dist-esm/src/util/logging.js\");\n/* harmony import */ var _util_scopeUtils__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../util/scopeUtils */ \"(rsc)/./node_modules/@azure/identity/dist-esm/src/util/scopeUtils.js\");\n/* harmony import */ var _util_tracing__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../util/tracing */ \"(rsc)/./node_modules/@azure/identity/dist-esm/src/util/tracing.js\");\n/* harmony import */ var _msal_nodeFlows_msalClient__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../msal/nodeFlows/msalClient */ \"(rsc)/./node_modules/@azure/identity/dist-esm/src/msal/nodeFlows/msalClient.js\");\n/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../constants */ \"(rsc)/./node_modules/@azure/identity/dist-esm/src/constants.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\n\n\n\n\n\nconst logger = (0,_util_logging__WEBPACK_IMPORTED_MODULE_0__.credentialLogger)(\"InteractiveBrowserCredential\");\n/**\n * Enables authentication to Microsoft Entra ID inside of the web browser\n * using the interactive login flow.\n */\nclass InteractiveBrowserCredential {\n    /**\n     * Creates an instance of InteractiveBrowserCredential with the details needed.\n     *\n     * This credential uses the [Authorization Code Flow](https://learn.microsoft.com/entra/identity-platform/v2-oauth2-auth-code-flow).\n     * On Node.js, it will open a browser window while it listens for a redirect response from the authentication service.\n     * On browsers, it authenticates via popups. The `loginStyle` optional parameter can be set to `redirect` to authenticate by redirecting the user to an Azure secure login page, which then will redirect the user back to the web application where the authentication started.\n     *\n     * For Node.js, if a `clientId` is provided, the Microsoft Entra application will need to be configured to have a \"Mobile and desktop applications\" redirect endpoint.\n     * Follow our guide on [setting up Redirect URIs for Desktop apps that calls to web APIs](https://learn.microsoft.com/entra/identity-platform/scenario-desktop-app-registration#redirect-uris).\n     *\n     * @param options - Options for configuring the client which makes the authentication requests.\n     */\n    constructor(options) {\n        var _a, _b, _c, _d, _e;\n        this.tenantId = (0,_util_tenantIdUtils__WEBPACK_IMPORTED_MODULE_1__.resolveTenantId)(logger, options.tenantId, options.clientId);\n        this.additionallyAllowedTenantIds = (0,_util_tenantIdUtils__WEBPACK_IMPORTED_MODULE_1__.resolveAdditionallyAllowedTenantIds)(options === null || options === void 0 ? void 0 : options.additionallyAllowedTenants);\n        const msalClientOptions = Object.assign(Object.assign({}, options), { tokenCredentialOptions: options, logger });\n        const ibcNodeOptions = options;\n        this.browserCustomizationOptions = ibcNodeOptions.browserCustomizationOptions;\n        this.loginHint = ibcNodeOptions.loginHint;\n        if ((_a = ibcNodeOptions === null || ibcNodeOptions === void 0 ? void 0 : ibcNodeOptions.brokerOptions) === null || _a === void 0 ? void 0 : _a.enabled) {\n            if (!((_b = ibcNodeOptions === null || ibcNodeOptions === void 0 ? void 0 : ibcNodeOptions.brokerOptions) === null || _b === void 0 ? void 0 : _b.parentWindowHandle)) {\n                throw new Error(\"In order to do WAM authentication, `parentWindowHandle` under `brokerOptions` is a required parameter\");\n            }\n            else {\n                msalClientOptions.brokerOptions = {\n                    enabled: true,\n                    parentWindowHandle: ibcNodeOptions.brokerOptions.parentWindowHandle,\n                    legacyEnableMsaPassthrough: (_c = ibcNodeOptions.brokerOptions) === null || _c === void 0 ? void 0 : _c.legacyEnableMsaPassthrough,\n                    useDefaultBrokerAccount: (_d = ibcNodeOptions.brokerOptions) === null || _d === void 0 ? void 0 : _d.useDefaultBrokerAccount,\n                };\n            }\n        }\n        this.msalClient = (0,_msal_nodeFlows_msalClient__WEBPACK_IMPORTED_MODULE_2__.createMsalClient)((_e = options.clientId) !== null && _e !== void 0 ? _e : _constants__WEBPACK_IMPORTED_MODULE_3__.DeveloperSignOnClientId, this.tenantId, msalClientOptions);\n        this.disableAutomaticAuthentication = options === null || options === void 0 ? void 0 : options.disableAutomaticAuthentication;\n    }\n    /**\n     * Authenticates with Microsoft Entra ID and returns an access token if successful.\n     * If authentication fails, a {@link CredentialUnavailableError} will be thrown with the details of the failure.\n     *\n     * If the user provided the option `disableAutomaticAuthentication`,\n     * once the token can't be retrieved silently,\n     * this method won't attempt to request user interaction to retrieve the token.\n     *\n     * @param scopes - The list of scopes for which the token will have access.\n     * @param options - The options used to configure any requests this\n     *                TokenCredential implementation might make.\n     */\n    async getToken(scopes, options = {}) {\n        return _util_tracing__WEBPACK_IMPORTED_MODULE_4__.tracingClient.withSpan(`${this.constructor.name}.getToken`, options, async (newOptions) => {\n            newOptions.tenantId = (0,_util_tenantIdUtils__WEBPACK_IMPORTED_MODULE_5__.processMultiTenantRequest)(this.tenantId, newOptions, this.additionallyAllowedTenantIds, logger);\n            const arrayScopes = (0,_util_scopeUtils__WEBPACK_IMPORTED_MODULE_6__.ensureScopes)(scopes);\n            return this.msalClient.getTokenByInteractiveRequest(arrayScopes, Object.assign(Object.assign({}, newOptions), { disableAutomaticAuthentication: this.disableAutomaticAuthentication, browserCustomizationOptions: this.browserCustomizationOptions, loginHint: this.loginHint }));\n        });\n    }\n    /**\n     * Authenticates with Microsoft Entra ID and returns an access token if successful.\n     * If authentication fails, a {@link CredentialUnavailableError} will be thrown with the details of the failure.\n     *\n     * If the token can't be retrieved silently, this method will require user interaction to retrieve the token.\n     *\n     * On Node.js, this credential has [Proof Key for Code Exchange (PKCE)](https://datatracker.ietf.org/doc/html/rfc7636) enabled by default.\n     * PKCE is a security feature that mitigates authentication code interception attacks.\n     *\n     * @param scopes - The list of scopes for which the token will have access.\n     * @param options - The options used to configure any requests this\n     *                  TokenCredential implementation might make.\n     */\n    async authenticate(scopes, options = {}) {\n        return _util_tracing__WEBPACK_IMPORTED_MODULE_4__.tracingClient.withSpan(`${this.constructor.name}.authenticate`, options, async (newOptions) => {\n            const arrayScopes = (0,_util_scopeUtils__WEBPACK_IMPORTED_MODULE_6__.ensureScopes)(scopes);\n            await this.msalClient.getTokenByInteractiveRequest(arrayScopes, Object.assign(Object.assign({}, newOptions), { disableAutomaticAuthentication: false, browserCustomizationOptions: this.browserCustomizationOptions, loginHint: this.loginHint }));\n            return this.msalClient.getActiveAccount();\n        });\n    }\n}\n//# sourceMappingURL=interactiveBrowserCredential.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/identity/dist-esm/src/credentials/interactiveBrowserCredential.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/identity/dist-esm/src/credentials/managedIdentityCredential/appServiceMsi2017.js":
/*!**************************************************************************************************************!*\
  !*** ./node_modules/@azure/identity/dist-esm/src/credentials/managedIdentityCredential/appServiceMsi2017.js ***!
  \**************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   appServiceMsi2017: () => (/* binding */ appServiceMsi2017)\n/* harmony export */ });\n/* harmony import */ var _azure_core_rest_pipeline__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @azure/core-rest-pipeline */ \"(rsc)/./node_modules/@azure/core-rest-pipeline/dist/esm/index.js\");\n/* harmony import */ var _util_logging__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../util/logging */ \"(rsc)/./node_modules/@azure/identity/dist-esm/src/util/logging.js\");\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./utils */ \"(rsc)/./node_modules/@azure/identity/dist-esm/src/credentials/managedIdentityCredential/utils.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\n\n\nconst msiName = \"ManagedIdentityCredential - AppServiceMSI 2017\";\nconst logger = (0,_util_logging__WEBPACK_IMPORTED_MODULE_1__.credentialLogger)(msiName);\n/**\n * Generates the options used on the request for an access token.\n */\nfunction prepareRequestOptions(scopes, clientId) {\n    const resource = (0,_utils__WEBPACK_IMPORTED_MODULE_2__.mapScopesToResource)(scopes);\n    if (!resource) {\n        throw new Error(`${msiName}: Multiple scopes are not supported.`);\n    }\n    const queryParameters = {\n        resource,\n        \"api-version\": \"2017-09-01\",\n    };\n    if (clientId) {\n        queryParameters.clientid = clientId;\n    }\n    const query = new URLSearchParams(queryParameters);\n    // This error should not bubble up, since we verify that this environment variable is defined in the isAvailable() method defined below.\n    if (!process.env.MSI_ENDPOINT) {\n        throw new Error(`${msiName}: Missing environment variable: MSI_ENDPOINT`);\n    }\n    if (!process.env.MSI_SECRET) {\n        throw new Error(`${msiName}: Missing environment variable: MSI_SECRET`);\n    }\n    return {\n        url: `${process.env.MSI_ENDPOINT}?${query.toString()}`,\n        method: \"GET\",\n        headers: (0,_azure_core_rest_pipeline__WEBPACK_IMPORTED_MODULE_0__.createHttpHeaders)({\n            Accept: \"application/json\",\n            secret: process.env.MSI_SECRET,\n        }),\n    };\n}\n/**\n * Defines how to determine whether the Azure App Service MSI is available, and also how to retrieve a token from the Azure App Service MSI.\n */\nconst appServiceMsi2017 = {\n    name: \"appServiceMsi2017\",\n    async isAvailable({ scopes }) {\n        const resource = (0,_utils__WEBPACK_IMPORTED_MODULE_2__.mapScopesToResource)(scopes);\n        if (!resource) {\n            logger.info(`${msiName}: Unavailable. Multiple scopes are not supported.`);\n            return false;\n        }\n        const env = process.env;\n        const result = Boolean(env.MSI_ENDPOINT && env.MSI_SECRET);\n        if (!result) {\n            logger.info(`${msiName}: Unavailable. The environment variables needed are: MSI_ENDPOINT and MSI_SECRET.`);\n        }\n        return result;\n    },\n    async getToken(configuration, getTokenOptions = {}) {\n        const { identityClient, scopes, clientId, resourceId } = configuration;\n        if (resourceId) {\n            logger.warning(`${msiName}: managed Identity by resource Id is not supported. Argument resourceId might be ignored by the service.`);\n        }\n        logger.info(`${msiName}: Using the endpoint and the secret coming form the environment variables: MSI_ENDPOINT=${process.env.MSI_ENDPOINT} and MSI_SECRET=[REDACTED].`);\n        const request = (0,_azure_core_rest_pipeline__WEBPACK_IMPORTED_MODULE_0__.createPipelineRequest)(Object.assign(Object.assign({ abortSignal: getTokenOptions.abortSignal }, prepareRequestOptions(scopes, clientId)), { \n            // Generally, MSI endpoints use the HTTP protocol, without transport layer security (TLS).\n            allowInsecureConnection: true }));\n        const tokenResponse = await identityClient.sendTokenRequest(request);\n        return (tokenResponse && tokenResponse.accessToken) || null;\n    },\n};\n//# sourceMappingURL=appServiceMsi2017.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2lkZW50aXR5L2Rpc3QtZXNtL3NyYy9jcmVkZW50aWFscy9tYW5hZ2VkSWRlbnRpdHlDcmVkZW50aWFsL2FwcFNlcnZpY2VNc2kyMDE3LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTtBQUNBO0FBQ3NGO0FBQ2hDO0FBQ1I7QUFDOUM7QUFDQSxlQUFlLCtEQUFnQjtBQUMvQjtBQUNBO0FBQ0E7QUFDQTtBQUNBLHFCQUFxQiwyREFBbUI7QUFDeEM7QUFDQSwyQkFBMkIsUUFBUTtBQUNuQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMkJBQTJCLFFBQVE7QUFDbkM7QUFDQTtBQUNBLDJCQUEyQixRQUFRO0FBQ25DO0FBQ0E7QUFDQSxnQkFBZ0IseUJBQXlCLEdBQUcsaUJBQWlCO0FBQzdEO0FBQ0EsaUJBQWlCLDRFQUFpQjtBQUNsQztBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0Esd0JBQXdCLFFBQVE7QUFDaEMseUJBQXlCLDJEQUFtQjtBQUM1QztBQUNBLDJCQUEyQixRQUFRO0FBQ25DO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwyQkFBMkIsUUFBUTtBQUNuQztBQUNBO0FBQ0EsS0FBSztBQUNMLHNEQUFzRDtBQUN0RCxnQkFBZ0IsK0NBQStDO0FBQy9EO0FBQ0EsOEJBQThCLFFBQVE7QUFDdEM7QUFDQSx1QkFBdUIsUUFBUSwwRkFBMEYsMEJBQTBCO0FBQ25KLHdCQUF3QixnRkFBcUIsK0JBQStCLDBDQUEwQztBQUN0SDtBQUNBLDJDQUEyQztBQUMzQztBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9kYW5pZWwzLXZwMi8uL25vZGVfbW9kdWxlcy9AYXp1cmUvaWRlbnRpdHkvZGlzdC1lc20vc3JjL2NyZWRlbnRpYWxzL21hbmFnZWRJZGVudGl0eUNyZWRlbnRpYWwvYXBwU2VydmljZU1zaTIwMTcuanM/YTM1OSJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi5cbi8vIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZS5cbmltcG9ydCB7IGNyZWF0ZUh0dHBIZWFkZXJzLCBjcmVhdGVQaXBlbGluZVJlcXVlc3QsIH0gZnJvbSBcIkBhenVyZS9jb3JlLXJlc3QtcGlwZWxpbmVcIjtcbmltcG9ydCB7IGNyZWRlbnRpYWxMb2dnZXIgfSBmcm9tIFwiLi4vLi4vdXRpbC9sb2dnaW5nXCI7XG5pbXBvcnQgeyBtYXBTY29wZXNUb1Jlc291cmNlIH0gZnJvbSBcIi4vdXRpbHNcIjtcbmNvbnN0IG1zaU5hbWUgPSBcIk1hbmFnZWRJZGVudGl0eUNyZWRlbnRpYWwgLSBBcHBTZXJ2aWNlTVNJIDIwMTdcIjtcbmNvbnN0IGxvZ2dlciA9IGNyZWRlbnRpYWxMb2dnZXIobXNpTmFtZSk7XG4vKipcbiAqIEdlbmVyYXRlcyB0aGUgb3B0aW9ucyB1c2VkIG9uIHRoZSByZXF1ZXN0IGZvciBhbiBhY2Nlc3MgdG9rZW4uXG4gKi9cbmZ1bmN0aW9uIHByZXBhcmVSZXF1ZXN0T3B0aW9ucyhzY29wZXMsIGNsaWVudElkKSB7XG4gICAgY29uc3QgcmVzb3VyY2UgPSBtYXBTY29wZXNUb1Jlc291cmNlKHNjb3Blcyk7XG4gICAgaWYgKCFyZXNvdXJjZSkge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYCR7bXNpTmFtZX06IE11bHRpcGxlIHNjb3BlcyBhcmUgbm90IHN1cHBvcnRlZC5gKTtcbiAgICB9XG4gICAgY29uc3QgcXVlcnlQYXJhbWV0ZXJzID0ge1xuICAgICAgICByZXNvdXJjZSxcbiAgICAgICAgXCJhcGktdmVyc2lvblwiOiBcIjIwMTctMDktMDFcIixcbiAgICB9O1xuICAgIGlmIChjbGllbnRJZCkge1xuICAgICAgICBxdWVyeVBhcmFtZXRlcnMuY2xpZW50aWQgPSBjbGllbnRJZDtcbiAgICB9XG4gICAgY29uc3QgcXVlcnkgPSBuZXcgVVJMU2VhcmNoUGFyYW1zKHF1ZXJ5UGFyYW1ldGVycyk7XG4gICAgLy8gVGhpcyBlcnJvciBzaG91bGQgbm90IGJ1YmJsZSB1cCwgc2luY2Ugd2UgdmVyaWZ5IHRoYXQgdGhpcyBlbnZpcm9ubWVudCB2YXJpYWJsZSBpcyBkZWZpbmVkIGluIHRoZSBpc0F2YWlsYWJsZSgpIG1ldGhvZCBkZWZpbmVkIGJlbG93LlxuICAgIGlmICghcHJvY2Vzcy5lbnYuTVNJX0VORFBPSU5UKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcihgJHttc2lOYW1lfTogTWlzc2luZyBlbnZpcm9ubWVudCB2YXJpYWJsZTogTVNJX0VORFBPSU5UYCk7XG4gICAgfVxuICAgIGlmICghcHJvY2Vzcy5lbnYuTVNJX1NFQ1JFVCkge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYCR7bXNpTmFtZX06IE1pc3NpbmcgZW52aXJvbm1lbnQgdmFyaWFibGU6IE1TSV9TRUNSRVRgKTtcbiAgICB9XG4gICAgcmV0dXJuIHtcbiAgICAgICAgdXJsOiBgJHtwcm9jZXNzLmVudi5NU0lfRU5EUE9JTlR9PyR7cXVlcnkudG9TdHJpbmcoKX1gLFxuICAgICAgICBtZXRob2Q6IFwiR0VUXCIsXG4gICAgICAgIGhlYWRlcnM6IGNyZWF0ZUh0dHBIZWFkZXJzKHtcbiAgICAgICAgICAgIEFjY2VwdDogXCJhcHBsaWNhdGlvbi9qc29uXCIsXG4gICAgICAgICAgICBzZWNyZXQ6IHByb2Nlc3MuZW52Lk1TSV9TRUNSRVQsXG4gICAgICAgIH0pLFxuICAgIH07XG59XG4vKipcbiAqIERlZmluZXMgaG93IHRvIGRldGVybWluZSB3aGV0aGVyIHRoZSBBenVyZSBBcHAgU2VydmljZSBNU0kgaXMgYXZhaWxhYmxlLCBhbmQgYWxzbyBob3cgdG8gcmV0cmlldmUgYSB0b2tlbiBmcm9tIHRoZSBBenVyZSBBcHAgU2VydmljZSBNU0kuXG4gKi9cbmV4cG9ydCBjb25zdCBhcHBTZXJ2aWNlTXNpMjAxNyA9IHtcbiAgICBuYW1lOiBcImFwcFNlcnZpY2VNc2kyMDE3XCIsXG4gICAgYXN5bmMgaXNBdmFpbGFibGUoeyBzY29wZXMgfSkge1xuICAgICAgICBjb25zdCByZXNvdXJjZSA9IG1hcFNjb3Blc1RvUmVzb3VyY2Uoc2NvcGVzKTtcbiAgICAgICAgaWYgKCFyZXNvdXJjZSkge1xuICAgICAgICAgICAgbG9nZ2VyLmluZm8oYCR7bXNpTmFtZX06IFVuYXZhaWxhYmxlLiBNdWx0aXBsZSBzY29wZXMgYXJlIG5vdCBzdXBwb3J0ZWQuYCk7XG4gICAgICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICAgIH1cbiAgICAgICAgY29uc3QgZW52ID0gcHJvY2Vzcy5lbnY7XG4gICAgICAgIGNvbnN0IHJlc3VsdCA9IEJvb2xlYW4oZW52Lk1TSV9FTkRQT0lOVCAmJiBlbnYuTVNJX1NFQ1JFVCk7XG4gICAgICAgIGlmICghcmVzdWx0KSB7XG4gICAgICAgICAgICBsb2dnZXIuaW5mbyhgJHttc2lOYW1lfTogVW5hdmFpbGFibGUuIFRoZSBlbnZpcm9ubWVudCB2YXJpYWJsZXMgbmVlZGVkIGFyZTogTVNJX0VORFBPSU5UIGFuZCBNU0lfU0VDUkVULmApO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiByZXN1bHQ7XG4gICAgfSxcbiAgICBhc3luYyBnZXRUb2tlbihjb25maWd1cmF0aW9uLCBnZXRUb2tlbk9wdGlvbnMgPSB7fSkge1xuICAgICAgICBjb25zdCB7IGlkZW50aXR5Q2xpZW50LCBzY29wZXMsIGNsaWVudElkLCByZXNvdXJjZUlkIH0gPSBjb25maWd1cmF0aW9uO1xuICAgICAgICBpZiAocmVzb3VyY2VJZCkge1xuICAgICAgICAgICAgbG9nZ2VyLndhcm5pbmcoYCR7bXNpTmFtZX06IG1hbmFnZWQgSWRlbnRpdHkgYnkgcmVzb3VyY2UgSWQgaXMgbm90IHN1cHBvcnRlZC4gQXJndW1lbnQgcmVzb3VyY2VJZCBtaWdodCBiZSBpZ25vcmVkIGJ5IHRoZSBzZXJ2aWNlLmApO1xuICAgICAgICB9XG4gICAgICAgIGxvZ2dlci5pbmZvKGAke21zaU5hbWV9OiBVc2luZyB0aGUgZW5kcG9pbnQgYW5kIHRoZSBzZWNyZXQgY29taW5nIGZvcm0gdGhlIGVudmlyb25tZW50IHZhcmlhYmxlczogTVNJX0VORFBPSU5UPSR7cHJvY2Vzcy5lbnYuTVNJX0VORFBPSU5UfSBhbmQgTVNJX1NFQ1JFVD1bUkVEQUNURURdLmApO1xuICAgICAgICBjb25zdCByZXF1ZXN0ID0gY3JlYXRlUGlwZWxpbmVSZXF1ZXN0KE9iamVjdC5hc3NpZ24oT2JqZWN0LmFzc2lnbih7IGFib3J0U2lnbmFsOiBnZXRUb2tlbk9wdGlvbnMuYWJvcnRTaWduYWwgfSwgcHJlcGFyZVJlcXVlc3RPcHRpb25zKHNjb3BlcywgY2xpZW50SWQpKSwgeyBcbiAgICAgICAgICAgIC8vIEdlbmVyYWxseSwgTVNJIGVuZHBvaW50cyB1c2UgdGhlIEhUVFAgcHJvdG9jb2wsIHdpdGhvdXQgdHJhbnNwb3J0IGxheWVyIHNlY3VyaXR5IChUTFMpLlxuICAgICAgICAgICAgYWxsb3dJbnNlY3VyZUNvbm5lY3Rpb246IHRydWUgfSkpO1xuICAgICAgICBjb25zdCB0b2tlblJlc3BvbnNlID0gYXdhaXQgaWRlbnRpdHlDbGllbnQuc2VuZFRva2VuUmVxdWVzdChyZXF1ZXN0KTtcbiAgICAgICAgcmV0dXJuICh0b2tlblJlc3BvbnNlICYmIHRva2VuUmVzcG9uc2UuYWNjZXNzVG9rZW4pIHx8IG51bGw7XG4gICAgfSxcbn07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1hcHBTZXJ2aWNlTXNpMjAxNy5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/identity/dist-esm/src/credentials/managedIdentityCredential/appServiceMsi2017.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/identity/dist-esm/src/credentials/managedIdentityCredential/appServiceMsi2019.js":
/*!**************************************************************************************************************!*\
  !*** ./node_modules/@azure/identity/dist-esm/src/credentials/managedIdentityCredential/appServiceMsi2019.js ***!
  \**************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   appServiceMsi2019: () => (/* binding */ appServiceMsi2019)\n/* harmony export */ });\n/* harmony import */ var _azure_core_rest_pipeline__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @azure/core-rest-pipeline */ \"(rsc)/./node_modules/@azure/core-rest-pipeline/dist/esm/index.js\");\n/* harmony import */ var _util_logging__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../util/logging */ \"(rsc)/./node_modules/@azure/identity/dist-esm/src/util/logging.js\");\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./utils */ \"(rsc)/./node_modules/@azure/identity/dist-esm/src/credentials/managedIdentityCredential/utils.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\n\n\nconst msiName = \"ManagedIdentityCredential - AppServiceMSI 2019\";\nconst logger = (0,_util_logging__WEBPACK_IMPORTED_MODULE_1__.credentialLogger)(msiName);\n/**\n * Generates the options used on the request for an access token.\n */\nfunction prepareRequestOptions(scopes, clientId, resourceId) {\n    const resource = (0,_utils__WEBPACK_IMPORTED_MODULE_2__.mapScopesToResource)(scopes);\n    if (!resource) {\n        throw new Error(`${msiName}: Multiple scopes are not supported.`);\n    }\n    const queryParameters = {\n        resource,\n        \"api-version\": \"2019-08-01\",\n    };\n    if (clientId) {\n        queryParameters.client_id = clientId;\n    }\n    if (resourceId) {\n        queryParameters.mi_res_id = resourceId;\n    }\n    const query = new URLSearchParams(queryParameters);\n    // This error should not bubble up, since we verify that this environment variable is defined in the isAvailable() method defined below.\n    if (!process.env.IDENTITY_ENDPOINT) {\n        throw new Error(`${msiName}: Missing environment variable: IDENTITY_ENDPOINT`);\n    }\n    if (!process.env.IDENTITY_HEADER) {\n        throw new Error(`${msiName}: Missing environment variable: IDENTITY_HEADER`);\n    }\n    return {\n        url: `${process.env.IDENTITY_ENDPOINT}?${query.toString()}`,\n        method: \"GET\",\n        headers: (0,_azure_core_rest_pipeline__WEBPACK_IMPORTED_MODULE_0__.createHttpHeaders)({\n            Accept: \"application/json\",\n            \"X-IDENTITY-HEADER\": process.env.IDENTITY_HEADER,\n        }),\n    };\n}\n/**\n * Defines how to determine whether the Azure App Service MSI is available, and also how to retrieve a token from the Azure App Service MSI.\n */\nconst appServiceMsi2019 = {\n    name: \"appServiceMsi2019\",\n    async isAvailable({ scopes }) {\n        const resource = (0,_utils__WEBPACK_IMPORTED_MODULE_2__.mapScopesToResource)(scopes);\n        if (!resource) {\n            logger.info(`${msiName}: Unavailable. Multiple scopes are not supported.`);\n            return false;\n        }\n        const env = process.env;\n        const result = Boolean(env.IDENTITY_ENDPOINT && env.IDENTITY_HEADER);\n        if (!result) {\n            logger.info(`${msiName}: Unavailable. The environment variables needed are: IDENTITY_ENDPOINT and IDENTITY_HEADER.`);\n        }\n        return result;\n    },\n    async getToken(configuration, getTokenOptions = {}) {\n        const { identityClient, scopes, clientId, resourceId } = configuration;\n        logger.info(`${msiName}: Using the endpoint and the secret coming form the environment variables: IDENTITY_ENDPOINT=${process.env.IDENTITY_ENDPOINT} and IDENTITY_HEADER=[REDACTED].`);\n        const request = (0,_azure_core_rest_pipeline__WEBPACK_IMPORTED_MODULE_0__.createPipelineRequest)(Object.assign(Object.assign({ abortSignal: getTokenOptions.abortSignal }, prepareRequestOptions(scopes, clientId, resourceId)), { \n            // Generally, MSI endpoints use the HTTP protocol, without transport layer security (TLS).\n            allowInsecureConnection: true }));\n        const tokenResponse = await identityClient.sendTokenRequest(request);\n        return (tokenResponse && tokenResponse.accessToken) || null;\n    },\n};\n//# sourceMappingURL=appServiceMsi2019.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2lkZW50aXR5L2Rpc3QtZXNtL3NyYy9jcmVkZW50aWFscy9tYW5hZ2VkSWRlbnRpdHlDcmVkZW50aWFsL2FwcFNlcnZpY2VNc2kyMDE5LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTtBQUNBO0FBQ3NGO0FBQ2hDO0FBQ1I7QUFDOUM7QUFDQSxlQUFlLCtEQUFnQjtBQUMvQjtBQUNBO0FBQ0E7QUFDQTtBQUNBLHFCQUFxQiwyREFBbUI7QUFDeEM7QUFDQSwyQkFBMkIsUUFBUTtBQUNuQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMkJBQTJCLFFBQVE7QUFDbkM7QUFDQTtBQUNBLDJCQUEyQixRQUFRO0FBQ25DO0FBQ0E7QUFDQSxnQkFBZ0IsOEJBQThCLEdBQUcsaUJBQWlCO0FBQ2xFO0FBQ0EsaUJBQWlCLDRFQUFpQjtBQUNsQztBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0Esd0JBQXdCLFFBQVE7QUFDaEMseUJBQXlCLDJEQUFtQjtBQUM1QztBQUNBLDJCQUEyQixRQUFRO0FBQ25DO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwyQkFBMkIsUUFBUTtBQUNuQztBQUNBO0FBQ0EsS0FBSztBQUNMLHNEQUFzRDtBQUN0RCxnQkFBZ0IsK0NBQStDO0FBQy9ELHVCQUF1QixRQUFRLCtGQUErRiwrQkFBK0I7QUFDN0osd0JBQXdCLGdGQUFxQiwrQkFBK0IsMENBQTBDO0FBQ3RIO0FBQ0EsMkNBQTJDO0FBQzNDO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2RhbmllbDMtdnAyLy4vbm9kZV9tb2R1bGVzL0BhenVyZS9pZGVudGl0eS9kaXN0LWVzbS9zcmMvY3JlZGVudGlhbHMvbWFuYWdlZElkZW50aXR5Q3JlZGVudGlhbC9hcHBTZXJ2aWNlTXNpMjAxOS5qcz9mMGU5Il0sInNvdXJjZXNDb250ZW50IjpbIi8vIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLlxuLy8gTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlLlxuaW1wb3J0IHsgY3JlYXRlSHR0cEhlYWRlcnMsIGNyZWF0ZVBpcGVsaW5lUmVxdWVzdCwgfSBmcm9tIFwiQGF6dXJlL2NvcmUtcmVzdC1waXBlbGluZVwiO1xuaW1wb3J0IHsgY3JlZGVudGlhbExvZ2dlciB9IGZyb20gXCIuLi8uLi91dGlsL2xvZ2dpbmdcIjtcbmltcG9ydCB7IG1hcFNjb3Blc1RvUmVzb3VyY2UgfSBmcm9tIFwiLi91dGlsc1wiO1xuY29uc3QgbXNpTmFtZSA9IFwiTWFuYWdlZElkZW50aXR5Q3JlZGVudGlhbCAtIEFwcFNlcnZpY2VNU0kgMjAxOVwiO1xuY29uc3QgbG9nZ2VyID0gY3JlZGVudGlhbExvZ2dlcihtc2lOYW1lKTtcbi8qKlxuICogR2VuZXJhdGVzIHRoZSBvcHRpb25zIHVzZWQgb24gdGhlIHJlcXVlc3QgZm9yIGFuIGFjY2VzcyB0b2tlbi5cbiAqL1xuZnVuY3Rpb24gcHJlcGFyZVJlcXVlc3RPcHRpb25zKHNjb3BlcywgY2xpZW50SWQsIHJlc291cmNlSWQpIHtcbiAgICBjb25zdCByZXNvdXJjZSA9IG1hcFNjb3Blc1RvUmVzb3VyY2Uoc2NvcGVzKTtcbiAgICBpZiAoIXJlc291cmNlKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcihgJHttc2lOYW1lfTogTXVsdGlwbGUgc2NvcGVzIGFyZSBub3Qgc3VwcG9ydGVkLmApO1xuICAgIH1cbiAgICBjb25zdCBxdWVyeVBhcmFtZXRlcnMgPSB7XG4gICAgICAgIHJlc291cmNlLFxuICAgICAgICBcImFwaS12ZXJzaW9uXCI6IFwiMjAxOS0wOC0wMVwiLFxuICAgIH07XG4gICAgaWYgKGNsaWVudElkKSB7XG4gICAgICAgIHF1ZXJ5UGFyYW1ldGVycy5jbGllbnRfaWQgPSBjbGllbnRJZDtcbiAgICB9XG4gICAgaWYgKHJlc291cmNlSWQpIHtcbiAgICAgICAgcXVlcnlQYXJhbWV0ZXJzLm1pX3Jlc19pZCA9IHJlc291cmNlSWQ7XG4gICAgfVxuICAgIGNvbnN0IHF1ZXJ5ID0gbmV3IFVSTFNlYXJjaFBhcmFtcyhxdWVyeVBhcmFtZXRlcnMpO1xuICAgIC8vIFRoaXMgZXJyb3Igc2hvdWxkIG5vdCBidWJibGUgdXAsIHNpbmNlIHdlIHZlcmlmeSB0aGF0IHRoaXMgZW52aXJvbm1lbnQgdmFyaWFibGUgaXMgZGVmaW5lZCBpbiB0aGUgaXNBdmFpbGFibGUoKSBtZXRob2QgZGVmaW5lZCBiZWxvdy5cbiAgICBpZiAoIXByb2Nlc3MuZW52LklERU5USVRZX0VORFBPSU5UKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcihgJHttc2lOYW1lfTogTWlzc2luZyBlbnZpcm9ubWVudCB2YXJpYWJsZTogSURFTlRJVFlfRU5EUE9JTlRgKTtcbiAgICB9XG4gICAgaWYgKCFwcm9jZXNzLmVudi5JREVOVElUWV9IRUFERVIpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKGAke21zaU5hbWV9OiBNaXNzaW5nIGVudmlyb25tZW50IHZhcmlhYmxlOiBJREVOVElUWV9IRUFERVJgKTtcbiAgICB9XG4gICAgcmV0dXJuIHtcbiAgICAgICAgdXJsOiBgJHtwcm9jZXNzLmVudi5JREVOVElUWV9FTkRQT0lOVH0/JHtxdWVyeS50b1N0cmluZygpfWAsXG4gICAgICAgIG1ldGhvZDogXCJHRVRcIixcbiAgICAgICAgaGVhZGVyczogY3JlYXRlSHR0cEhlYWRlcnMoe1xuICAgICAgICAgICAgQWNjZXB0OiBcImFwcGxpY2F0aW9uL2pzb25cIixcbiAgICAgICAgICAgIFwiWC1JREVOVElUWS1IRUFERVJcIjogcHJvY2Vzcy5lbnYuSURFTlRJVFlfSEVBREVSLFxuICAgICAgICB9KSxcbiAgICB9O1xufVxuLyoqXG4gKiBEZWZpbmVzIGhvdyB0byBkZXRlcm1pbmUgd2hldGhlciB0aGUgQXp1cmUgQXBwIFNlcnZpY2UgTVNJIGlzIGF2YWlsYWJsZSwgYW5kIGFsc28gaG93IHRvIHJldHJpZXZlIGEgdG9rZW4gZnJvbSB0aGUgQXp1cmUgQXBwIFNlcnZpY2UgTVNJLlxuICovXG5leHBvcnQgY29uc3QgYXBwU2VydmljZU1zaTIwMTkgPSB7XG4gICAgbmFtZTogXCJhcHBTZXJ2aWNlTXNpMjAxOVwiLFxuICAgIGFzeW5jIGlzQXZhaWxhYmxlKHsgc2NvcGVzIH0pIHtcbiAgICAgICAgY29uc3QgcmVzb3VyY2UgPSBtYXBTY29wZXNUb1Jlc291cmNlKHNjb3Blcyk7XG4gICAgICAgIGlmICghcmVzb3VyY2UpIHtcbiAgICAgICAgICAgIGxvZ2dlci5pbmZvKGAke21zaU5hbWV9OiBVbmF2YWlsYWJsZS4gTXVsdGlwbGUgc2NvcGVzIGFyZSBub3Qgc3VwcG9ydGVkLmApO1xuICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICB9XG4gICAgICAgIGNvbnN0IGVudiA9IHByb2Nlc3MuZW52O1xuICAgICAgICBjb25zdCByZXN1bHQgPSBCb29sZWFuKGVudi5JREVOVElUWV9FTkRQT0lOVCAmJiBlbnYuSURFTlRJVFlfSEVBREVSKTtcbiAgICAgICAgaWYgKCFyZXN1bHQpIHtcbiAgICAgICAgICAgIGxvZ2dlci5pbmZvKGAke21zaU5hbWV9OiBVbmF2YWlsYWJsZS4gVGhlIGVudmlyb25tZW50IHZhcmlhYmxlcyBuZWVkZWQgYXJlOiBJREVOVElUWV9FTkRQT0lOVCBhbmQgSURFTlRJVFlfSEVBREVSLmApO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiByZXN1bHQ7XG4gICAgfSxcbiAgICBhc3luYyBnZXRUb2tlbihjb25maWd1cmF0aW9uLCBnZXRUb2tlbk9wdGlvbnMgPSB7fSkge1xuICAgICAgICBjb25zdCB7IGlkZW50aXR5Q2xpZW50LCBzY29wZXMsIGNsaWVudElkLCByZXNvdXJjZUlkIH0gPSBjb25maWd1cmF0aW9uO1xuICAgICAgICBsb2dnZXIuaW5mbyhgJHttc2lOYW1lfTogVXNpbmcgdGhlIGVuZHBvaW50IGFuZCB0aGUgc2VjcmV0IGNvbWluZyBmb3JtIHRoZSBlbnZpcm9ubWVudCB2YXJpYWJsZXM6IElERU5USVRZX0VORFBPSU5UPSR7cHJvY2Vzcy5lbnYuSURFTlRJVFlfRU5EUE9JTlR9IGFuZCBJREVOVElUWV9IRUFERVI9W1JFREFDVEVEXS5gKTtcbiAgICAgICAgY29uc3QgcmVxdWVzdCA9IGNyZWF0ZVBpcGVsaW5lUmVxdWVzdChPYmplY3QuYXNzaWduKE9iamVjdC5hc3NpZ24oeyBhYm9ydFNpZ25hbDogZ2V0VG9rZW5PcHRpb25zLmFib3J0U2lnbmFsIH0sIHByZXBhcmVSZXF1ZXN0T3B0aW9ucyhzY29wZXMsIGNsaWVudElkLCByZXNvdXJjZUlkKSksIHsgXG4gICAgICAgICAgICAvLyBHZW5lcmFsbHksIE1TSSBlbmRwb2ludHMgdXNlIHRoZSBIVFRQIHByb3RvY29sLCB3aXRob3V0IHRyYW5zcG9ydCBsYXllciBzZWN1cml0eSAoVExTKS5cbiAgICAgICAgICAgIGFsbG93SW5zZWN1cmVDb25uZWN0aW9uOiB0cnVlIH0pKTtcbiAgICAgICAgY29uc3QgdG9rZW5SZXNwb25zZSA9IGF3YWl0IGlkZW50aXR5Q2xpZW50LnNlbmRUb2tlblJlcXVlc3QocmVxdWVzdCk7XG4gICAgICAgIHJldHVybiAodG9rZW5SZXNwb25zZSAmJiB0b2tlblJlc3BvbnNlLmFjY2Vzc1Rva2VuKSB8fCBudWxsO1xuICAgIH0sXG59O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9YXBwU2VydmljZU1zaTIwMTkuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/identity/dist-esm/src/credentials/managedIdentityCredential/appServiceMsi2019.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/identity/dist-esm/src/credentials/managedIdentityCredential/arcMsi.js":
/*!***************************************************************************************************!*\
  !*** ./node_modules/@azure/identity/dist-esm/src/credentials/managedIdentityCredential/arcMsi.js ***!
  \***************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   arcMsi: () => (/* binding */ arcMsi),\n/* harmony export */   platformToFilePath: () => (/* binding */ platformToFilePath),\n/* harmony export */   validateKeyFile: () => (/* binding */ validateKeyFile)\n/* harmony export */ });\n/* harmony import */ var _azure_core_rest_pipeline__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @azure/core-rest-pipeline */ \"(rsc)/./node_modules/@azure/core-rest-pipeline/dist/esm/index.js\");\n/* harmony import */ var _errors__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../errors */ \"(rsc)/./node_modules/@azure/identity/dist-esm/src/errors.js\");\n/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./constants */ \"(rsc)/./node_modules/@azure/identity/dist-esm/src/credentials/managedIdentityCredential/constants.js\");\n/* harmony import */ var _util_logging__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../util/logging */ \"(rsc)/./node_modules/@azure/identity/dist-esm/src/util/logging.js\");\n/* harmony import */ var node_fs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! node:fs */ \"node:fs\");\n/* harmony import */ var node_fs__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(node_fs__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./utils */ \"(rsc)/./node_modules/@azure/identity/dist-esm/src/credentials/managedIdentityCredential/utils.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\n\n\n\n\n\nconst msiName = \"ManagedIdentityCredential - Azure Arc MSI\";\nconst logger = (0,_util_logging__WEBPACK_IMPORTED_MODULE_2__.credentialLogger)(msiName);\n/**\n * Generates the options used on the request for an access token.\n */\nfunction prepareRequestOptions(scopes, clientId, resourceId) {\n    const resource = (0,_utils__WEBPACK_IMPORTED_MODULE_3__.mapScopesToResource)(scopes);\n    if (!resource) {\n        throw new Error(`${msiName}: Multiple scopes are not supported.`);\n    }\n    const queryParameters = {\n        resource,\n        \"api-version\": _constants__WEBPACK_IMPORTED_MODULE_4__.azureArcAPIVersion,\n    };\n    if (clientId) {\n        queryParameters.client_id = clientId;\n    }\n    if (resourceId) {\n        queryParameters.msi_res_id = resourceId;\n    }\n    // This error should not bubble up, since we verify that this environment variable is defined in the isAvailable() method defined below.\n    if (!process.env.IDENTITY_ENDPOINT) {\n        throw new Error(`${msiName}: Missing environment variable: IDENTITY_ENDPOINT`);\n    }\n    const query = new URLSearchParams(queryParameters);\n    return (0,_azure_core_rest_pipeline__WEBPACK_IMPORTED_MODULE_0__.createPipelineRequest)({\n        // Should be similar to: http://localhost:40342/metadata/identity/oauth2/token\n        url: `${process.env.IDENTITY_ENDPOINT}?${query.toString()}`,\n        method: \"GET\",\n        headers: (0,_azure_core_rest_pipeline__WEBPACK_IMPORTED_MODULE_0__.createHttpHeaders)({\n            Accept: \"application/json\",\n            Metadata: \"true\",\n        }),\n    });\n}\n/**\n * Does a request to the authentication provider that results in a file path.\n */\nasync function filePathRequest(identityClient, requestPrepareOptions) {\n    const response = await identityClient.sendRequest((0,_azure_core_rest_pipeline__WEBPACK_IMPORTED_MODULE_0__.createPipelineRequest)(requestPrepareOptions));\n    if (response.status !== 401) {\n        let message = \"\";\n        if (response.bodyAsText) {\n            message = ` Response: ${response.bodyAsText}`;\n        }\n        throw new _errors__WEBPACK_IMPORTED_MODULE_5__.AuthenticationError(response.status, `${msiName}: To authenticate with Azure Arc MSI, status code 401 is expected on the first request. ${message}`);\n    }\n    const authHeader = response.headers.get(\"www-authenticate\") || \"\";\n    try {\n        return authHeader.split(\"=\").slice(1)[0];\n    }\n    catch (e) {\n        throw Error(`Invalid www-authenticate header format: ${authHeader}`);\n    }\n}\nfunction platformToFilePath() {\n    switch (process.platform) {\n        case \"win32\":\n            if (!process.env.PROGRAMDATA) {\n                throw new Error(`${msiName}: PROGRAMDATA environment variable has no value.`);\n            }\n            return `${process.env.PROGRAMDATA}\\\\AzureConnectedMachineAgent\\\\Tokens`;\n        case \"linux\":\n            return \"/var/opt/azcmagent/tokens\";\n        default:\n            throw new Error(`${msiName}: Unsupported platform ${process.platform}.`);\n    }\n}\n/**\n * Validates that a given Azure Arc MSI file path is valid for use.\n *\n * A valid file will:\n * 1. Be in the expected path for the current platform.\n * 2. Have a `.key` extension.\n * 3. Be at most 4096 bytes in size.\n */\nfunction validateKeyFile(filePath) {\n    if (!filePath) {\n        throw new Error(`${msiName}: Failed to find the token file.`);\n    }\n    if (!filePath.endsWith(\".key\")) {\n        throw new Error(`${msiName}: unexpected file path from HIMDS service: ${filePath}.`);\n    }\n    const expectedPath = platformToFilePath();\n    if (!filePath.startsWith(expectedPath)) {\n        throw new Error(`${msiName}: unexpected file path from HIMDS service: ${filePath}.`);\n    }\n    const stats = node_fs__WEBPACK_IMPORTED_MODULE_1___default().statSync(filePath);\n    if (stats.size > 4096) {\n        throw new Error(`${msiName}: The file at ${filePath} is larger than expected at ${stats.size} bytes.`);\n    }\n}\n/**\n * Defines how to determine whether the Azure Arc MSI is available, and also how to retrieve a token from the Azure Arc MSI.\n */\nconst arcMsi = {\n    name: \"arc\",\n    async isAvailable({ scopes }) {\n        const resource = (0,_utils__WEBPACK_IMPORTED_MODULE_3__.mapScopesToResource)(scopes);\n        if (!resource) {\n            logger.info(`${msiName}: Unavailable. Multiple scopes are not supported.`);\n            return false;\n        }\n        const result = Boolean(process.env.IMDS_ENDPOINT && process.env.IDENTITY_ENDPOINT);\n        if (!result) {\n            logger.info(`${msiName}: The environment variables needed are: IMDS_ENDPOINT and IDENTITY_ENDPOINT`);\n        }\n        return result;\n    },\n    async getToken(configuration, getTokenOptions = {}) {\n        var _a;\n        const { identityClient, scopes, clientId, resourceId } = configuration;\n        if (clientId) {\n            logger.warning(`${msiName}: user-assigned identities not supported. The argument clientId might be ignored by the service.`);\n        }\n        if (resourceId) {\n            logger.warning(`${msiName}: user defined managed Identity by resource Id is not supported. Argument resourceId will be ignored.`);\n        }\n        logger.info(`${msiName}: Authenticating.`);\n        const requestOptions = Object.assign(Object.assign({ disableJsonStringifyOnBody: true, deserializationMapper: undefined, abortSignal: getTokenOptions.abortSignal }, prepareRequestOptions(scopes, clientId, resourceId)), { allowInsecureConnection: true });\n        const filePath = await filePathRequest(identityClient, requestOptions);\n        validateKeyFile(filePath);\n        const key = await node_fs__WEBPACK_IMPORTED_MODULE_1___default().promises.readFile(filePath, { encoding: \"utf-8\" });\n        (_a = requestOptions.headers) === null || _a === void 0 ? void 0 : _a.set(\"Authorization\", `Basic ${key}`);\n        const request = (0,_azure_core_rest_pipeline__WEBPACK_IMPORTED_MODULE_0__.createPipelineRequest)(Object.assign(Object.assign({}, requestOptions), { \n            // Generally, MSI endpoints use the HTTP protocol, without transport layer security (TLS).\n            allowInsecureConnection: true }));\n        const tokenResponse = await identityClient.sendTokenRequest(request);\n        return (tokenResponse && tokenResponse.accessToken) || null;\n    },\n};\n//# sourceMappingURL=arcMsi.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/identity/dist-esm/src/credentials/managedIdentityCredential/arcMsi.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/identity/dist-esm/src/credentials/managedIdentityCredential/cloudShellMsi.js":
/*!**********************************************************************************************************!*\
  !*** ./node_modules/@azure/identity/dist-esm/src/credentials/managedIdentityCredential/cloudShellMsi.js ***!
  \**********************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   cloudShellMsi: () => (/* binding */ cloudShellMsi),\n/* harmony export */   logger: () => (/* binding */ logger)\n/* harmony export */ });\n/* harmony import */ var _azure_core_rest_pipeline__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @azure/core-rest-pipeline */ \"(rsc)/./node_modules/@azure/core-rest-pipeline/dist/esm/index.js\");\n/* harmony import */ var _util_logging__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../util/logging */ \"(rsc)/./node_modules/@azure/identity/dist-esm/src/util/logging.js\");\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./utils */ \"(rsc)/./node_modules/@azure/identity/dist-esm/src/credentials/managedIdentityCredential/utils.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\n\n\nconst msiName = \"ManagedIdentityCredential - CloudShellMSI\";\nconst logger = (0,_util_logging__WEBPACK_IMPORTED_MODULE_1__.credentialLogger)(msiName);\n/**\n * Generates the options used on the request for an access token.\n */\nfunction prepareRequestOptions(scopes, clientId, resourceId) {\n    const resource = (0,_utils__WEBPACK_IMPORTED_MODULE_2__.mapScopesToResource)(scopes);\n    if (!resource) {\n        throw new Error(`${msiName}: Multiple scopes are not supported.`);\n    }\n    const body = {\n        resource,\n    };\n    if (clientId) {\n        body.client_id = clientId;\n    }\n    if (resourceId) {\n        body.msi_res_id = resourceId;\n    }\n    // This error should not bubble up, since we verify that this environment variable is defined in the isAvailable() method defined below.\n    if (!process.env.MSI_ENDPOINT) {\n        throw new Error(`${msiName}: Missing environment variable: MSI_ENDPOINT`);\n    }\n    const params = new URLSearchParams(body);\n    return {\n        url: process.env.MSI_ENDPOINT,\n        method: \"POST\",\n        body: params.toString(),\n        headers: (0,_azure_core_rest_pipeline__WEBPACK_IMPORTED_MODULE_0__.createHttpHeaders)({\n            Accept: \"application/json\",\n            Metadata: \"true\",\n            \"Content-Type\": \"application/x-www-form-urlencoded\",\n        }),\n    };\n}\n/**\n * Defines how to determine whether the Azure Cloud Shell MSI is available, and also how to retrieve a token from the Azure Cloud Shell MSI.\n * Since Azure Managed Identities aren't available in the Azure Cloud Shell, we log a warning for users that try to access cloud shell using user assigned identity.\n */\nconst cloudShellMsi = {\n    name: \"cloudShellMsi\",\n    async isAvailable({ scopes }) {\n        const resource = (0,_utils__WEBPACK_IMPORTED_MODULE_2__.mapScopesToResource)(scopes);\n        if (!resource) {\n            logger.info(`${msiName}: Unavailable. Multiple scopes are not supported.`);\n            return false;\n        }\n        const result = Boolean(process.env.MSI_ENDPOINT);\n        if (!result) {\n            logger.info(`${msiName}: Unavailable. The environment variable MSI_ENDPOINT is needed.`);\n        }\n        return result;\n    },\n    async getToken(configuration, getTokenOptions = {}) {\n        const { identityClient, scopes, clientId, resourceId } = configuration;\n        if (clientId) {\n            logger.warning(`${msiName}: user-assigned identities not supported. The argument clientId might be ignored by the service.`);\n        }\n        if (resourceId) {\n            logger.warning(`${msiName}: user defined managed Identity by resource Id not supported. The argument resourceId might be ignored by the service.`);\n        }\n        logger.info(`${msiName}: Using the endpoint coming form the environment variable MSI_ENDPOINT = ${process.env.MSI_ENDPOINT}.`);\n        const request = (0,_azure_core_rest_pipeline__WEBPACK_IMPORTED_MODULE_0__.createPipelineRequest)(Object.assign(Object.assign({ abortSignal: getTokenOptions.abortSignal }, prepareRequestOptions(scopes, clientId, resourceId)), { \n            // Generally, MSI endpoints use the HTTP protocol, without transport layer security (TLS).\n            allowInsecureConnection: true }));\n        const tokenResponse = await identityClient.sendTokenRequest(request);\n        return (tokenResponse && tokenResponse.accessToken) || null;\n    },\n};\n//# sourceMappingURL=cloudShellMsi.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2lkZW50aXR5L2Rpc3QtZXNtL3NyYy9jcmVkZW50aWFscy9tYW5hZ2VkSWRlbnRpdHlDcmVkZW50aWFsL2Nsb3VkU2hlbGxNc2kuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBQTtBQUNBO0FBQ3NGO0FBQ2hDO0FBQ1I7QUFDOUM7QUFDTyxlQUFlLCtEQUFnQjtBQUN0QztBQUNBO0FBQ0E7QUFDQTtBQUNBLHFCQUFxQiwyREFBbUI7QUFDeEM7QUFDQSwyQkFBMkIsUUFBUTtBQUNuQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwyQkFBMkIsUUFBUTtBQUNuQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUIsNEVBQWlCO0FBQ2xDO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0Esd0JBQXdCLFFBQVE7QUFDaEMseUJBQXlCLDJEQUFtQjtBQUM1QztBQUNBLDJCQUEyQixRQUFRO0FBQ25DO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMkJBQTJCLFFBQVE7QUFDbkM7QUFDQTtBQUNBLEtBQUs7QUFDTCxzREFBc0Q7QUFDdEQsZ0JBQWdCLCtDQUErQztBQUMvRDtBQUNBLDhCQUE4QixRQUFRO0FBQ3RDO0FBQ0E7QUFDQSw4QkFBOEIsUUFBUTtBQUN0QztBQUNBLHVCQUF1QixRQUFRLDJFQUEyRSx5QkFBeUI7QUFDbkksd0JBQXdCLGdGQUFxQiwrQkFBK0IsMENBQTBDO0FBQ3RIO0FBQ0EsMkNBQTJDO0FBQzNDO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2RhbmllbDMtdnAyLy4vbm9kZV9tb2R1bGVzL0BhenVyZS9pZGVudGl0eS9kaXN0LWVzbS9zcmMvY3JlZGVudGlhbHMvbWFuYWdlZElkZW50aXR5Q3JlZGVudGlhbC9jbG91ZFNoZWxsTXNpLmpzP2I1NTQiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uXG4vLyBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UuXG5pbXBvcnQgeyBjcmVhdGVIdHRwSGVhZGVycywgY3JlYXRlUGlwZWxpbmVSZXF1ZXN0LCB9IGZyb20gXCJAYXp1cmUvY29yZS1yZXN0LXBpcGVsaW5lXCI7XG5pbXBvcnQgeyBjcmVkZW50aWFsTG9nZ2VyIH0gZnJvbSBcIi4uLy4uL3V0aWwvbG9nZ2luZ1wiO1xuaW1wb3J0IHsgbWFwU2NvcGVzVG9SZXNvdXJjZSB9IGZyb20gXCIuL3V0aWxzXCI7XG5jb25zdCBtc2lOYW1lID0gXCJNYW5hZ2VkSWRlbnRpdHlDcmVkZW50aWFsIC0gQ2xvdWRTaGVsbE1TSVwiO1xuZXhwb3J0IGNvbnN0IGxvZ2dlciA9IGNyZWRlbnRpYWxMb2dnZXIobXNpTmFtZSk7XG4vKipcbiAqIEdlbmVyYXRlcyB0aGUgb3B0aW9ucyB1c2VkIG9uIHRoZSByZXF1ZXN0IGZvciBhbiBhY2Nlc3MgdG9rZW4uXG4gKi9cbmZ1bmN0aW9uIHByZXBhcmVSZXF1ZXN0T3B0aW9ucyhzY29wZXMsIGNsaWVudElkLCByZXNvdXJjZUlkKSB7XG4gICAgY29uc3QgcmVzb3VyY2UgPSBtYXBTY29wZXNUb1Jlc291cmNlKHNjb3Blcyk7XG4gICAgaWYgKCFyZXNvdXJjZSkge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYCR7bXNpTmFtZX06IE11bHRpcGxlIHNjb3BlcyBhcmUgbm90IHN1cHBvcnRlZC5gKTtcbiAgICB9XG4gICAgY29uc3QgYm9keSA9IHtcbiAgICAgICAgcmVzb3VyY2UsXG4gICAgfTtcbiAgICBpZiAoY2xpZW50SWQpIHtcbiAgICAgICAgYm9keS5jbGllbnRfaWQgPSBjbGllbnRJZDtcbiAgICB9XG4gICAgaWYgKHJlc291cmNlSWQpIHtcbiAgICAgICAgYm9keS5tc2lfcmVzX2lkID0gcmVzb3VyY2VJZDtcbiAgICB9XG4gICAgLy8gVGhpcyBlcnJvciBzaG91bGQgbm90IGJ1YmJsZSB1cCwgc2luY2Ugd2UgdmVyaWZ5IHRoYXQgdGhpcyBlbnZpcm9ubWVudCB2YXJpYWJsZSBpcyBkZWZpbmVkIGluIHRoZSBpc0F2YWlsYWJsZSgpIG1ldGhvZCBkZWZpbmVkIGJlbG93LlxuICAgIGlmICghcHJvY2Vzcy5lbnYuTVNJX0VORFBPSU5UKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcihgJHttc2lOYW1lfTogTWlzc2luZyBlbnZpcm9ubWVudCB2YXJpYWJsZTogTVNJX0VORFBPSU5UYCk7XG4gICAgfVxuICAgIGNvbnN0IHBhcmFtcyA9IG5ldyBVUkxTZWFyY2hQYXJhbXMoYm9keSk7XG4gICAgcmV0dXJuIHtcbiAgICAgICAgdXJsOiBwcm9jZXNzLmVudi5NU0lfRU5EUE9JTlQsXG4gICAgICAgIG1ldGhvZDogXCJQT1NUXCIsXG4gICAgICAgIGJvZHk6IHBhcmFtcy50b1N0cmluZygpLFxuICAgICAgICBoZWFkZXJzOiBjcmVhdGVIdHRwSGVhZGVycyh7XG4gICAgICAgICAgICBBY2NlcHQ6IFwiYXBwbGljYXRpb24vanNvblwiLFxuICAgICAgICAgICAgTWV0YWRhdGE6IFwidHJ1ZVwiLFxuICAgICAgICAgICAgXCJDb250ZW50LVR5cGVcIjogXCJhcHBsaWNhdGlvbi94LXd3dy1mb3JtLXVybGVuY29kZWRcIixcbiAgICAgICAgfSksXG4gICAgfTtcbn1cbi8qKlxuICogRGVmaW5lcyBob3cgdG8gZGV0ZXJtaW5lIHdoZXRoZXIgdGhlIEF6dXJlIENsb3VkIFNoZWxsIE1TSSBpcyBhdmFpbGFibGUsIGFuZCBhbHNvIGhvdyB0byByZXRyaWV2ZSBhIHRva2VuIGZyb20gdGhlIEF6dXJlIENsb3VkIFNoZWxsIE1TSS5cbiAqIFNpbmNlIEF6dXJlIE1hbmFnZWQgSWRlbnRpdGllcyBhcmVuJ3QgYXZhaWxhYmxlIGluIHRoZSBBenVyZSBDbG91ZCBTaGVsbCwgd2UgbG9nIGEgd2FybmluZyBmb3IgdXNlcnMgdGhhdCB0cnkgdG8gYWNjZXNzIGNsb3VkIHNoZWxsIHVzaW5nIHVzZXIgYXNzaWduZWQgaWRlbnRpdHkuXG4gKi9cbmV4cG9ydCBjb25zdCBjbG91ZFNoZWxsTXNpID0ge1xuICAgIG5hbWU6IFwiY2xvdWRTaGVsbE1zaVwiLFxuICAgIGFzeW5jIGlzQXZhaWxhYmxlKHsgc2NvcGVzIH0pIHtcbiAgICAgICAgY29uc3QgcmVzb3VyY2UgPSBtYXBTY29wZXNUb1Jlc291cmNlKHNjb3Blcyk7XG4gICAgICAgIGlmICghcmVzb3VyY2UpIHtcbiAgICAgICAgICAgIGxvZ2dlci5pbmZvKGAke21zaU5hbWV9OiBVbmF2YWlsYWJsZS4gTXVsdGlwbGUgc2NvcGVzIGFyZSBub3Qgc3VwcG9ydGVkLmApO1xuICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICB9XG4gICAgICAgIGNvbnN0IHJlc3VsdCA9IEJvb2xlYW4ocHJvY2Vzcy5lbnYuTVNJX0VORFBPSU5UKTtcbiAgICAgICAgaWYgKCFyZXN1bHQpIHtcbiAgICAgICAgICAgIGxvZ2dlci5pbmZvKGAke21zaU5hbWV9OiBVbmF2YWlsYWJsZS4gVGhlIGVudmlyb25tZW50IHZhcmlhYmxlIE1TSV9FTkRQT0lOVCBpcyBuZWVkZWQuYCk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHJlc3VsdDtcbiAgICB9LFxuICAgIGFzeW5jIGdldFRva2VuKGNvbmZpZ3VyYXRpb24sIGdldFRva2VuT3B0aW9ucyA9IHt9KSB7XG4gICAgICAgIGNvbnN0IHsgaWRlbnRpdHlDbGllbnQsIHNjb3BlcywgY2xpZW50SWQsIHJlc291cmNlSWQgfSA9IGNvbmZpZ3VyYXRpb247XG4gICAgICAgIGlmIChjbGllbnRJZCkge1xuICAgICAgICAgICAgbG9nZ2VyLndhcm5pbmcoYCR7bXNpTmFtZX06IHVzZXItYXNzaWduZWQgaWRlbnRpdGllcyBub3Qgc3VwcG9ydGVkLiBUaGUgYXJndW1lbnQgY2xpZW50SWQgbWlnaHQgYmUgaWdub3JlZCBieSB0aGUgc2VydmljZS5gKTtcbiAgICAgICAgfVxuICAgICAgICBpZiAocmVzb3VyY2VJZCkge1xuICAgICAgICAgICAgbG9nZ2VyLndhcm5pbmcoYCR7bXNpTmFtZX06IHVzZXIgZGVmaW5lZCBtYW5hZ2VkIElkZW50aXR5IGJ5IHJlc291cmNlIElkIG5vdCBzdXBwb3J0ZWQuIFRoZSBhcmd1bWVudCByZXNvdXJjZUlkIG1pZ2h0IGJlIGlnbm9yZWQgYnkgdGhlIHNlcnZpY2UuYCk7XG4gICAgICAgIH1cbiAgICAgICAgbG9nZ2VyLmluZm8oYCR7bXNpTmFtZX06IFVzaW5nIHRoZSBlbmRwb2ludCBjb21pbmcgZm9ybSB0aGUgZW52aXJvbm1lbnQgdmFyaWFibGUgTVNJX0VORFBPSU5UID0gJHtwcm9jZXNzLmVudi5NU0lfRU5EUE9JTlR9LmApO1xuICAgICAgICBjb25zdCByZXF1ZXN0ID0gY3JlYXRlUGlwZWxpbmVSZXF1ZXN0KE9iamVjdC5hc3NpZ24oT2JqZWN0LmFzc2lnbih7IGFib3J0U2lnbmFsOiBnZXRUb2tlbk9wdGlvbnMuYWJvcnRTaWduYWwgfSwgcHJlcGFyZVJlcXVlc3RPcHRpb25zKHNjb3BlcywgY2xpZW50SWQsIHJlc291cmNlSWQpKSwgeyBcbiAgICAgICAgICAgIC8vIEdlbmVyYWxseSwgTVNJIGVuZHBvaW50cyB1c2UgdGhlIEhUVFAgcHJvdG9jb2wsIHdpdGhvdXQgdHJhbnNwb3J0IGxheWVyIHNlY3VyaXR5IChUTFMpLlxuICAgICAgICAgICAgYWxsb3dJbnNlY3VyZUNvbm5lY3Rpb246IHRydWUgfSkpO1xuICAgICAgICBjb25zdCB0b2tlblJlc3BvbnNlID0gYXdhaXQgaWRlbnRpdHlDbGllbnQuc2VuZFRva2VuUmVxdWVzdChyZXF1ZXN0KTtcbiAgICAgICAgcmV0dXJuICh0b2tlblJlc3BvbnNlICYmIHRva2VuUmVzcG9uc2UuYWNjZXNzVG9rZW4pIHx8IG51bGw7XG4gICAgfSxcbn07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1jbG91ZFNoZWxsTXNpLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/identity/dist-esm/src/credentials/managedIdentityCredential/cloudShellMsi.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/identity/dist-esm/src/credentials/managedIdentityCredential/constants.js":
/*!******************************************************************************************************!*\
  !*** ./node_modules/@azure/identity/dist-esm/src/credentials/managedIdentityCredential/constants.js ***!
  \******************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DefaultScopeSuffix: () => (/* binding */ DefaultScopeSuffix),\n/* harmony export */   azureArcAPIVersion: () => (/* binding */ azureArcAPIVersion),\n/* harmony export */   azureFabricVersion: () => (/* binding */ azureFabricVersion),\n/* harmony export */   imdsApiVersion: () => (/* binding */ imdsApiVersion),\n/* harmony export */   imdsEndpointPath: () => (/* binding */ imdsEndpointPath),\n/* harmony export */   imdsHost: () => (/* binding */ imdsHost)\n/* harmony export */ });\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\nconst DefaultScopeSuffix = \"/.default\";\nconst imdsHost = \"http://169.254.169.254\";\nconst imdsEndpointPath = \"/metadata/identity/oauth2/token\";\nconst imdsApiVersion = \"2018-02-01\";\nconst azureArcAPIVersion = \"2019-11-01\";\nconst azureFabricVersion = \"2019-07-01-preview\";\n//# sourceMappingURL=constants.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2lkZW50aXR5L2Rpc3QtZXNtL3NyYy9jcmVkZW50aWFscy9tYW5hZ2VkSWRlbnRpdHlDcmVkZW50aWFsL2NvbnN0YW50cy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFBQTtBQUNBO0FBQ087QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ1AiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9kYW5pZWwzLXZwMi8uL25vZGVfbW9kdWxlcy9AYXp1cmUvaWRlbnRpdHkvZGlzdC1lc20vc3JjL2NyZWRlbnRpYWxzL21hbmFnZWRJZGVudGl0eUNyZWRlbnRpYWwvY29uc3RhbnRzLmpzP2I5NjYiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uXG4vLyBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UuXG5leHBvcnQgY29uc3QgRGVmYXVsdFNjb3BlU3VmZml4ID0gXCIvLmRlZmF1bHRcIjtcbmV4cG9ydCBjb25zdCBpbWRzSG9zdCA9IFwiaHR0cDovLzE2OS4yNTQuMTY5LjI1NFwiO1xuZXhwb3J0IGNvbnN0IGltZHNFbmRwb2ludFBhdGggPSBcIi9tZXRhZGF0YS9pZGVudGl0eS9vYXV0aDIvdG9rZW5cIjtcbmV4cG9ydCBjb25zdCBpbWRzQXBpVmVyc2lvbiA9IFwiMjAxOC0wMi0wMVwiO1xuZXhwb3J0IGNvbnN0IGF6dXJlQXJjQVBJVmVyc2lvbiA9IFwiMjAxOS0xMS0wMVwiO1xuZXhwb3J0IGNvbnN0IGF6dXJlRmFicmljVmVyc2lvbiA9IFwiMjAxOS0wNy0wMS1wcmV2aWV3XCI7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1jb25zdGFudHMuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/identity/dist-esm/src/credentials/managedIdentityCredential/constants.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/identity/dist-esm/src/credentials/managedIdentityCredential/fabricMsi.js":
/*!******************************************************************************************************!*\
  !*** ./node_modules/@azure/identity/dist-esm/src/credentials/managedIdentityCredential/fabricMsi.js ***!
  \******************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   fabricMsi: () => (/* binding */ fabricMsi)\n/* harmony export */ });\n/* harmony import */ var https__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! https */ \"https\");\n/* harmony import */ var https__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(https__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _azure_core_rest_pipeline__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @azure/core-rest-pipeline */ \"(rsc)/./node_modules/@azure/core-rest-pipeline/dist/esm/index.js\");\n/* harmony import */ var _util_logging__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../util/logging */ \"(rsc)/./node_modules/@azure/identity/dist-esm/src/util/logging.js\");\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./utils */ \"(rsc)/./node_modules/@azure/identity/dist-esm/src/credentials/managedIdentityCredential/utils.js\");\n/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./constants */ \"(rsc)/./node_modules/@azure/identity/dist-esm/src/credentials/managedIdentityCredential/constants.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\n\n\n\n\n// This MSI can be easily tested by deploying a container to Azure Service Fabric with the Dockerfile:\n//\n//   FROM node:12\n//   RUN wget https://host.any/path/bash.sh\n//   CMD [\"bash\", \"bash.sh\"]\n//\n// Where the bash script contains:\n//\n//   curl --insecure $IDENTITY_ENDPOINT'?api-version=2019-07-01-preview&resource=https://vault.azure.net/' -H \"Secret: $IDENTITY_HEADER\"\n//\nconst msiName = \"ManagedIdentityCredential - Fabric MSI\";\nconst logger = (0,_util_logging__WEBPACK_IMPORTED_MODULE_2__.credentialLogger)(msiName);\n/**\n * Generates the options used on the request for an access token.\n */\nfunction prepareRequestOptions(scopes, clientId, resourceId) {\n    const resource = (0,_utils__WEBPACK_IMPORTED_MODULE_3__.mapScopesToResource)(scopes);\n    if (!resource) {\n        throw new Error(`${msiName}: Multiple scopes are not supported.`);\n    }\n    const queryParameters = {\n        resource,\n        \"api-version\": _constants__WEBPACK_IMPORTED_MODULE_4__.azureFabricVersion,\n    };\n    if (clientId) {\n        queryParameters.client_id = clientId;\n    }\n    if (resourceId) {\n        queryParameters.msi_res_id = resourceId;\n    }\n    const query = new URLSearchParams(queryParameters);\n    // This error should not bubble up, since we verify that this environment variable is defined in the isAvailable() method defined below.\n    if (!process.env.IDENTITY_ENDPOINT) {\n        throw new Error(\"Missing environment variable: IDENTITY_ENDPOINT\");\n    }\n    if (!process.env.IDENTITY_HEADER) {\n        throw new Error(\"Missing environment variable: IDENTITY_HEADER\");\n    }\n    return {\n        url: `${process.env.IDENTITY_ENDPOINT}?${query.toString()}`,\n        method: \"GET\",\n        headers: (0,_azure_core_rest_pipeline__WEBPACK_IMPORTED_MODULE_1__.createHttpHeaders)({\n            Accept: \"application/json\",\n            secret: process.env.IDENTITY_HEADER,\n        }),\n    };\n}\n/**\n * Defines how to determine whether the Azure Service Fabric MSI is available, and also how to retrieve a token from the Azure Service Fabric MSI.\n */\nconst fabricMsi = {\n    name: \"fabricMsi\",\n    async isAvailable({ scopes }) {\n        const resource = (0,_utils__WEBPACK_IMPORTED_MODULE_3__.mapScopesToResource)(scopes);\n        if (!resource) {\n            logger.info(`${msiName}: Unavailable. Multiple scopes are not supported.`);\n            return false;\n        }\n        const env = process.env;\n        const result = Boolean(env.IDENTITY_ENDPOINT && env.IDENTITY_HEADER && env.IDENTITY_SERVER_THUMBPRINT);\n        if (!result) {\n            logger.info(`${msiName}: Unavailable. The environment variables needed are: IDENTITY_ENDPOINT, IDENTITY_HEADER and IDENTITY_SERVER_THUMBPRINT`);\n        }\n        return result;\n    },\n    async getToken(configuration, getTokenOptions = {}) {\n        const { scopes, identityClient, clientId, resourceId } = configuration;\n        if (resourceId) {\n            logger.warning(`${msiName}: user defined managed Identity by resource Id is not supported. Argument resourceId might be ignored by the service.`);\n        }\n        logger.info([\n            `${msiName}:`,\n            \"Using the endpoint and the secret coming from the environment variables:\",\n            `IDENTITY_ENDPOINT=${process.env.IDENTITY_ENDPOINT},`,\n            \"IDENTITY_HEADER=[REDACTED] and\",\n            \"IDENTITY_SERVER_THUMBPRINT=[REDACTED].\",\n        ].join(\" \"));\n        const request = (0,_azure_core_rest_pipeline__WEBPACK_IMPORTED_MODULE_1__.createPipelineRequest)(Object.assign({ abortSignal: getTokenOptions.abortSignal }, prepareRequestOptions(scopes, clientId, resourceId)));\n        request.agent = new (https__WEBPACK_IMPORTED_MODULE_0___default().Agent)({\n            // This is necessary because Service Fabric provides a self-signed certificate.\n            // The alternative path is to verify the certificate using the IDENTITY_SERVER_THUMBPRINT env variable.\n            rejectUnauthorized: false,\n        });\n        const tokenResponse = await identityClient.sendTokenRequest(request);\n        return (tokenResponse && tokenResponse.accessToken) || null;\n    },\n};\n//# sourceMappingURL=fabricMsi.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2lkZW50aXR5L2Rpc3QtZXNtL3NyYy9jcmVkZW50aWFscy9tYW5hZ2VkSWRlbnRpdHlDcmVkZW50aWFsL2ZhYnJpY01zaS5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7O0FBQUE7QUFDQTtBQUMwQjtBQUM0RDtBQUNoQztBQUNSO0FBQ0c7QUFDakQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWUsK0RBQWdCO0FBQy9CO0FBQ0E7QUFDQTtBQUNBO0FBQ0EscUJBQXFCLDJEQUFtQjtBQUN4QztBQUNBLDJCQUEyQixRQUFRO0FBQ25DO0FBQ0E7QUFDQTtBQUNBLHVCQUF1QiwwREFBa0I7QUFDekM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnQkFBZ0IsOEJBQThCLEdBQUcsaUJBQWlCO0FBQ2xFO0FBQ0EsaUJBQWlCLDRFQUFpQjtBQUNsQztBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0Esd0JBQXdCLFFBQVE7QUFDaEMseUJBQXlCLDJEQUFtQjtBQUM1QztBQUNBLDJCQUEyQixRQUFRO0FBQ25DO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwyQkFBMkIsUUFBUTtBQUNuQztBQUNBO0FBQ0EsS0FBSztBQUNMLHNEQUFzRDtBQUN0RCxnQkFBZ0IsK0NBQStDO0FBQy9EO0FBQ0EsOEJBQThCLFFBQVE7QUFDdEM7QUFDQTtBQUNBLGVBQWUsUUFBUTtBQUN2QjtBQUNBLGlDQUFpQyw4QkFBOEI7QUFDL0Q7QUFDQTtBQUNBO0FBQ0Esd0JBQXdCLGdGQUFxQixpQkFBaUIsMENBQTBDO0FBQ3hHLDRCQUE0QixvREFBVztBQUN2QztBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZGFuaWVsMy12cDIvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2lkZW50aXR5L2Rpc3QtZXNtL3NyYy9jcmVkZW50aWFscy9tYW5hZ2VkSWRlbnRpdHlDcmVkZW50aWFsL2ZhYnJpY01zaS5qcz85Zjk2Il0sInNvdXJjZXNDb250ZW50IjpbIi8vIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLlxuLy8gTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlLlxuaW1wb3J0IGh0dHBzIGZyb20gXCJodHRwc1wiO1xuaW1wb3J0IHsgY3JlYXRlSHR0cEhlYWRlcnMsIGNyZWF0ZVBpcGVsaW5lUmVxdWVzdCwgfSBmcm9tIFwiQGF6dXJlL2NvcmUtcmVzdC1waXBlbGluZVwiO1xuaW1wb3J0IHsgY3JlZGVudGlhbExvZ2dlciB9IGZyb20gXCIuLi8uLi91dGlsL2xvZ2dpbmdcIjtcbmltcG9ydCB7IG1hcFNjb3Blc1RvUmVzb3VyY2UgfSBmcm9tIFwiLi91dGlsc1wiO1xuaW1wb3J0IHsgYXp1cmVGYWJyaWNWZXJzaW9uIH0gZnJvbSBcIi4vY29uc3RhbnRzXCI7XG4vLyBUaGlzIE1TSSBjYW4gYmUgZWFzaWx5IHRlc3RlZCBieSBkZXBsb3lpbmcgYSBjb250YWluZXIgdG8gQXp1cmUgU2VydmljZSBGYWJyaWMgd2l0aCB0aGUgRG9ja2VyZmlsZTpcbi8vXG4vLyAgIEZST00gbm9kZToxMlxuLy8gICBSVU4gd2dldCBodHRwczovL2hvc3QuYW55L3BhdGgvYmFzaC5zaFxuLy8gICBDTUQgW1wiYmFzaFwiLCBcImJhc2guc2hcIl1cbi8vXG4vLyBXaGVyZSB0aGUgYmFzaCBzY3JpcHQgY29udGFpbnM6XG4vL1xuLy8gICBjdXJsIC0taW5zZWN1cmUgJElERU5USVRZX0VORFBPSU5UJz9hcGktdmVyc2lvbj0yMDE5LTA3LTAxLXByZXZpZXcmcmVzb3VyY2U9aHR0cHM6Ly92YXVsdC5henVyZS5uZXQvJyAtSCBcIlNlY3JldDogJElERU5USVRZX0hFQURFUlwiXG4vL1xuY29uc3QgbXNpTmFtZSA9IFwiTWFuYWdlZElkZW50aXR5Q3JlZGVudGlhbCAtIEZhYnJpYyBNU0lcIjtcbmNvbnN0IGxvZ2dlciA9IGNyZWRlbnRpYWxMb2dnZXIobXNpTmFtZSk7XG4vKipcbiAqIEdlbmVyYXRlcyB0aGUgb3B0aW9ucyB1c2VkIG9uIHRoZSByZXF1ZXN0IGZvciBhbiBhY2Nlc3MgdG9rZW4uXG4gKi9cbmZ1bmN0aW9uIHByZXBhcmVSZXF1ZXN0T3B0aW9ucyhzY29wZXMsIGNsaWVudElkLCByZXNvdXJjZUlkKSB7XG4gICAgY29uc3QgcmVzb3VyY2UgPSBtYXBTY29wZXNUb1Jlc291cmNlKHNjb3Blcyk7XG4gICAgaWYgKCFyZXNvdXJjZSkge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYCR7bXNpTmFtZX06IE11bHRpcGxlIHNjb3BlcyBhcmUgbm90IHN1cHBvcnRlZC5gKTtcbiAgICB9XG4gICAgY29uc3QgcXVlcnlQYXJhbWV0ZXJzID0ge1xuICAgICAgICByZXNvdXJjZSxcbiAgICAgICAgXCJhcGktdmVyc2lvblwiOiBhenVyZUZhYnJpY1ZlcnNpb24sXG4gICAgfTtcbiAgICBpZiAoY2xpZW50SWQpIHtcbiAgICAgICAgcXVlcnlQYXJhbWV0ZXJzLmNsaWVudF9pZCA9IGNsaWVudElkO1xuICAgIH1cbiAgICBpZiAocmVzb3VyY2VJZCkge1xuICAgICAgICBxdWVyeVBhcmFtZXRlcnMubXNpX3Jlc19pZCA9IHJlc291cmNlSWQ7XG4gICAgfVxuICAgIGNvbnN0IHF1ZXJ5ID0gbmV3IFVSTFNlYXJjaFBhcmFtcyhxdWVyeVBhcmFtZXRlcnMpO1xuICAgIC8vIFRoaXMgZXJyb3Igc2hvdWxkIG5vdCBidWJibGUgdXAsIHNpbmNlIHdlIHZlcmlmeSB0aGF0IHRoaXMgZW52aXJvbm1lbnQgdmFyaWFibGUgaXMgZGVmaW5lZCBpbiB0aGUgaXNBdmFpbGFibGUoKSBtZXRob2QgZGVmaW5lZCBiZWxvdy5cbiAgICBpZiAoIXByb2Nlc3MuZW52LklERU5USVRZX0VORFBPSU5UKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcihcIk1pc3NpbmcgZW52aXJvbm1lbnQgdmFyaWFibGU6IElERU5USVRZX0VORFBPSU5UXCIpO1xuICAgIH1cbiAgICBpZiAoIXByb2Nlc3MuZW52LklERU5USVRZX0hFQURFUikge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJNaXNzaW5nIGVudmlyb25tZW50IHZhcmlhYmxlOiBJREVOVElUWV9IRUFERVJcIik7XG4gICAgfVxuICAgIHJldHVybiB7XG4gICAgICAgIHVybDogYCR7cHJvY2Vzcy5lbnYuSURFTlRJVFlfRU5EUE9JTlR9PyR7cXVlcnkudG9TdHJpbmcoKX1gLFxuICAgICAgICBtZXRob2Q6IFwiR0VUXCIsXG4gICAgICAgIGhlYWRlcnM6IGNyZWF0ZUh0dHBIZWFkZXJzKHtcbiAgICAgICAgICAgIEFjY2VwdDogXCJhcHBsaWNhdGlvbi9qc29uXCIsXG4gICAgICAgICAgICBzZWNyZXQ6IHByb2Nlc3MuZW52LklERU5USVRZX0hFQURFUixcbiAgICAgICAgfSksXG4gICAgfTtcbn1cbi8qKlxuICogRGVmaW5lcyBob3cgdG8gZGV0ZXJtaW5lIHdoZXRoZXIgdGhlIEF6dXJlIFNlcnZpY2UgRmFicmljIE1TSSBpcyBhdmFpbGFibGUsIGFuZCBhbHNvIGhvdyB0byByZXRyaWV2ZSBhIHRva2VuIGZyb20gdGhlIEF6dXJlIFNlcnZpY2UgRmFicmljIE1TSS5cbiAqL1xuZXhwb3J0IGNvbnN0IGZhYnJpY01zaSA9IHtcbiAgICBuYW1lOiBcImZhYnJpY01zaVwiLFxuICAgIGFzeW5jIGlzQXZhaWxhYmxlKHsgc2NvcGVzIH0pIHtcbiAgICAgICAgY29uc3QgcmVzb3VyY2UgPSBtYXBTY29wZXNUb1Jlc291cmNlKHNjb3Blcyk7XG4gICAgICAgIGlmICghcmVzb3VyY2UpIHtcbiAgICAgICAgICAgIGxvZ2dlci5pbmZvKGAke21zaU5hbWV9OiBVbmF2YWlsYWJsZS4gTXVsdGlwbGUgc2NvcGVzIGFyZSBub3Qgc3VwcG9ydGVkLmApO1xuICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICB9XG4gICAgICAgIGNvbnN0IGVudiA9IHByb2Nlc3MuZW52O1xuICAgICAgICBjb25zdCByZXN1bHQgPSBCb29sZWFuKGVudi5JREVOVElUWV9FTkRQT0lOVCAmJiBlbnYuSURFTlRJVFlfSEVBREVSICYmIGVudi5JREVOVElUWV9TRVJWRVJfVEhVTUJQUklOVCk7XG4gICAgICAgIGlmICghcmVzdWx0KSB7XG4gICAgICAgICAgICBsb2dnZXIuaW5mbyhgJHttc2lOYW1lfTogVW5hdmFpbGFibGUuIFRoZSBlbnZpcm9ubWVudCB2YXJpYWJsZXMgbmVlZGVkIGFyZTogSURFTlRJVFlfRU5EUE9JTlQsIElERU5USVRZX0hFQURFUiBhbmQgSURFTlRJVFlfU0VSVkVSX1RIVU1CUFJJTlRgKTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gcmVzdWx0O1xuICAgIH0sXG4gICAgYXN5bmMgZ2V0VG9rZW4oY29uZmlndXJhdGlvbiwgZ2V0VG9rZW5PcHRpb25zID0ge30pIHtcbiAgICAgICAgY29uc3QgeyBzY29wZXMsIGlkZW50aXR5Q2xpZW50LCBjbGllbnRJZCwgcmVzb3VyY2VJZCB9ID0gY29uZmlndXJhdGlvbjtcbiAgICAgICAgaWYgKHJlc291cmNlSWQpIHtcbiAgICAgICAgICAgIGxvZ2dlci53YXJuaW5nKGAke21zaU5hbWV9OiB1c2VyIGRlZmluZWQgbWFuYWdlZCBJZGVudGl0eSBieSByZXNvdXJjZSBJZCBpcyBub3Qgc3VwcG9ydGVkLiBBcmd1bWVudCByZXNvdXJjZUlkIG1pZ2h0IGJlIGlnbm9yZWQgYnkgdGhlIHNlcnZpY2UuYCk7XG4gICAgICAgIH1cbiAgICAgICAgbG9nZ2VyLmluZm8oW1xuICAgICAgICAgICAgYCR7bXNpTmFtZX06YCxcbiAgICAgICAgICAgIFwiVXNpbmcgdGhlIGVuZHBvaW50IGFuZCB0aGUgc2VjcmV0IGNvbWluZyBmcm9tIHRoZSBlbnZpcm9ubWVudCB2YXJpYWJsZXM6XCIsXG4gICAgICAgICAgICBgSURFTlRJVFlfRU5EUE9JTlQ9JHtwcm9jZXNzLmVudi5JREVOVElUWV9FTkRQT0lOVH0sYCxcbiAgICAgICAgICAgIFwiSURFTlRJVFlfSEVBREVSPVtSRURBQ1RFRF0gYW5kXCIsXG4gICAgICAgICAgICBcIklERU5USVRZX1NFUlZFUl9USFVNQlBSSU5UPVtSRURBQ1RFRF0uXCIsXG4gICAgICAgIF0uam9pbihcIiBcIikpO1xuICAgICAgICBjb25zdCByZXF1ZXN0ID0gY3JlYXRlUGlwZWxpbmVSZXF1ZXN0KE9iamVjdC5hc3NpZ24oeyBhYm9ydFNpZ25hbDogZ2V0VG9rZW5PcHRpb25zLmFib3J0U2lnbmFsIH0sIHByZXBhcmVSZXF1ZXN0T3B0aW9ucyhzY29wZXMsIGNsaWVudElkLCByZXNvdXJjZUlkKSkpO1xuICAgICAgICByZXF1ZXN0LmFnZW50ID0gbmV3IGh0dHBzLkFnZW50KHtcbiAgICAgICAgICAgIC8vIFRoaXMgaXMgbmVjZXNzYXJ5IGJlY2F1c2UgU2VydmljZSBGYWJyaWMgcHJvdmlkZXMgYSBzZWxmLXNpZ25lZCBjZXJ0aWZpY2F0ZS5cbiAgICAgICAgICAgIC8vIFRoZSBhbHRlcm5hdGl2ZSBwYXRoIGlzIHRvIHZlcmlmeSB0aGUgY2VydGlmaWNhdGUgdXNpbmcgdGhlIElERU5USVRZX1NFUlZFUl9USFVNQlBSSU5UIGVudiB2YXJpYWJsZS5cbiAgICAgICAgICAgIHJlamVjdFVuYXV0aG9yaXplZDogZmFsc2UsXG4gICAgICAgIH0pO1xuICAgICAgICBjb25zdCB0b2tlblJlc3BvbnNlID0gYXdhaXQgaWRlbnRpdHlDbGllbnQuc2VuZFRva2VuUmVxdWVzdChyZXF1ZXN0KTtcbiAgICAgICAgcmV0dXJuICh0b2tlblJlc3BvbnNlICYmIHRva2VuUmVzcG9uc2UuYWNjZXNzVG9rZW4pIHx8IG51bGw7XG4gICAgfSxcbn07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1mYWJyaWNNc2kuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/identity/dist-esm/src/credentials/managedIdentityCredential/fabricMsi.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/identity/dist-esm/src/credentials/managedIdentityCredential/imdsMsi.js":
/*!****************************************************************************************************!*\
  !*** ./node_modules/@azure/identity/dist-esm/src/credentials/managedIdentityCredential/imdsMsi.js ***!
  \****************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   imdsMsi: () => (/* binding */ imdsMsi)\n/* harmony export */ });\n/* harmony import */ var _azure_core_rest_pipeline__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @azure/core-rest-pipeline */ \"(rsc)/./node_modules/@azure/core-rest-pipeline/dist/esm/index.js\");\n/* harmony import */ var _azure_core_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @azure/core-util */ \"(rsc)/./node_modules/@azure/core-util/dist/esm/index.js\");\n/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./constants */ \"(rsc)/./node_modules/@azure/identity/dist-esm/src/credentials/managedIdentityCredential/constants.js\");\n/* harmony import */ var _errors__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../errors */ \"(rsc)/./node_modules/@azure/identity/dist-esm/src/errors.js\");\n/* harmony import */ var _util_logging__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../util/logging */ \"(rsc)/./node_modules/@azure/identity/dist-esm/src/util/logging.js\");\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./utils */ \"(rsc)/./node_modules/@azure/identity/dist-esm/src/credentials/managedIdentityCredential/utils.js\");\n/* harmony import */ var _util_tracing__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../util/tracing */ \"(rsc)/./node_modules/@azure/identity/dist-esm/src/util/tracing.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\n\n\n\n\n\n\nconst msiName = \"ManagedIdentityCredential - IMDS\";\nconst logger = (0,_util_logging__WEBPACK_IMPORTED_MODULE_2__.credentialLogger)(msiName);\n/**\n * Generates the options used on the request for an access token.\n */\nfunction prepareRequestOptions(scopes, clientId, resourceId, options) {\n    var _a;\n    const resource = (0,_utils__WEBPACK_IMPORTED_MODULE_3__.mapScopesToResource)(scopes);\n    if (!resource) {\n        throw new Error(`${msiName}: Multiple scopes are not supported.`);\n    }\n    const { skipQuery, skipMetadataHeader } = options || {};\n    let query = \"\";\n    // Pod Identity will try to process this request even if the Metadata header is missing.\n    // We can exclude the request query to ensure no IMDS endpoint tries to process the ping request.\n    if (!skipQuery) {\n        const queryParameters = {\n            resource,\n            \"api-version\": _constants__WEBPACK_IMPORTED_MODULE_4__.imdsApiVersion,\n        };\n        if (clientId) {\n            queryParameters.client_id = clientId;\n        }\n        if (resourceId) {\n            queryParameters.msi_res_id = resourceId;\n        }\n        const params = new URLSearchParams(queryParameters);\n        query = `?${params.toString()}`;\n    }\n    const url = new URL(_constants__WEBPACK_IMPORTED_MODULE_4__.imdsEndpointPath, (_a = process.env.AZURE_POD_IDENTITY_AUTHORITY_HOST) !== null && _a !== void 0 ? _a : _constants__WEBPACK_IMPORTED_MODULE_4__.imdsHost);\n    const rawHeaders = {\n        Accept: \"application/json\",\n        Metadata: \"true\",\n    };\n    // Remove the Metadata header to invoke a request error from some IMDS endpoints.\n    if (skipMetadataHeader) {\n        delete rawHeaders.Metadata;\n    }\n    return {\n        // In this case, the `?` should be added in the \"query\" variable `skipQuery` is not set.\n        url: `${url}${query}`,\n        method: \"GET\",\n        headers: (0,_azure_core_rest_pipeline__WEBPACK_IMPORTED_MODULE_0__.createHttpHeaders)(rawHeaders),\n    };\n}\n/**\n * Defines how to determine whether the Azure IMDS MSI is available, and also how to retrieve a token from the Azure IMDS MSI.\n */\nconst imdsMsi = {\n    name: \"imdsMsi\",\n    async isAvailable({ scopes, identityClient, clientId, resourceId, getTokenOptions = {}, }) {\n        const resource = (0,_utils__WEBPACK_IMPORTED_MODULE_3__.mapScopesToResource)(scopes);\n        if (!resource) {\n            logger.info(`${msiName}: Unavailable. Multiple scopes are not supported.`);\n            return false;\n        }\n        // if the PodIdentityEndpoint environment variable was set no need to probe the endpoint, it can be assumed to exist\n        if (process.env.AZURE_POD_IDENTITY_AUTHORITY_HOST) {\n            return true;\n        }\n        if (!identityClient) {\n            throw new Error(\"Missing IdentityClient\");\n        }\n        const requestOptions = prepareRequestOptions(resource, clientId, resourceId, {\n            skipMetadataHeader: true,\n            skipQuery: true,\n        });\n        return _util_tracing__WEBPACK_IMPORTED_MODULE_5__.tracingClient.withSpan(\"ManagedIdentityCredential-pingImdsEndpoint\", getTokenOptions, async (options) => {\n            var _a, _b;\n            requestOptions.tracingOptions = options.tracingOptions;\n            // Create a request with a timeout since we expect that\n            // not having a \"Metadata\" header should cause an error to be\n            // returned quickly from the endpoint, proving its availability.\n            const request = (0,_azure_core_rest_pipeline__WEBPACK_IMPORTED_MODULE_0__.createPipelineRequest)(requestOptions);\n            // Default to 1000 if the default of 0 is used.\n            // Negative values can still be used to disable the timeout.\n            request.timeout = ((_a = options.requestOptions) === null || _a === void 0 ? void 0 : _a.timeout) || 1000;\n            // This MSI uses the imdsEndpoint to get the token, which only uses http://\n            request.allowInsecureConnection = true;\n            let response;\n            try {\n                logger.info(`${msiName}: Pinging the Azure IMDS endpoint`);\n                response = await identityClient.sendRequest(request);\n            }\n            catch (err) {\n                // If the request failed, or Node.js was unable to establish a connection,\n                // or the host was down, we'll assume the IMDS endpoint isn't available.\n                if ((0,_azure_core_util__WEBPACK_IMPORTED_MODULE_1__.isError)(err)) {\n                    logger.verbose(`${msiName}: Caught error ${err.name}: ${err.message}`);\n                }\n                // This is a special case for Docker Desktop which responds with a 403 with a message that contains \"A socket operation was attempted to an unreachable network\" or \"A socket operation was attempted to an unreachable host\"\n                // rather than just timing out, as expected.\n                logger.info(`${msiName}: The Azure IMDS endpoint is unavailable`);\n                return false;\n            }\n            if (response.status === 403) {\n                if ((_b = response.bodyAsText) === null || _b === void 0 ? void 0 : _b.includes(\"unreachable\")) {\n                    logger.info(`${msiName}: The Azure IMDS endpoint is unavailable`);\n                    logger.info(`${msiName}: ${response.bodyAsText}`);\n                    return false;\n                }\n            }\n            // If we received any response, the endpoint is available\n            logger.info(`${msiName}: The Azure IMDS endpoint is available`);\n            return true;\n        });\n    },\n    async getToken(configuration, getTokenOptions = {}) {\n        const { identityClient, scopes, clientId, resourceId } = configuration;\n        if (process.env.AZURE_POD_IDENTITY_AUTHORITY_HOST) {\n            logger.info(`${msiName}: Using the Azure IMDS endpoint coming from the environment variable AZURE_POD_IDENTITY_AUTHORITY_HOST=${process.env.AZURE_POD_IDENTITY_AUTHORITY_HOST}.`);\n        }\n        else {\n            logger.info(`${msiName}: Using the default Azure IMDS endpoint ${_constants__WEBPACK_IMPORTED_MODULE_4__.imdsHost}.`);\n        }\n        let nextDelayInMs = configuration.retryConfig.startDelayInMs;\n        for (let retries = 0; retries < configuration.retryConfig.maxRetries; retries++) {\n            try {\n                const request = (0,_azure_core_rest_pipeline__WEBPACK_IMPORTED_MODULE_0__.createPipelineRequest)(Object.assign(Object.assign({ abortSignal: getTokenOptions.abortSignal }, prepareRequestOptions(scopes, clientId, resourceId)), { allowInsecureConnection: true }));\n                const tokenResponse = await identityClient.sendTokenRequest(request);\n                return (tokenResponse && tokenResponse.accessToken) || null;\n            }\n            catch (error) {\n                if (error.statusCode === 404) {\n                    await (0,_azure_core_util__WEBPACK_IMPORTED_MODULE_1__.delay)(nextDelayInMs);\n                    nextDelayInMs *= configuration.retryConfig.intervalIncrement;\n                    continue;\n                }\n                throw error;\n            }\n        }\n        throw new _errors__WEBPACK_IMPORTED_MODULE_6__.AuthenticationError(404, `${msiName}: Failed to retrieve IMDS token after ${configuration.retryConfig.maxRetries} retries.`);\n    },\n};\n//# sourceMappingURL=imdsMsi.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/identity/dist-esm/src/credentials/managedIdentityCredential/imdsMsi.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/identity/dist-esm/src/credentials/managedIdentityCredential/index.js":
/*!**************************************************************************************************!*\
  !*** ./node_modules/@azure/identity/dist-esm/src/credentials/managedIdentityCredential/index.js ***!
  \**************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ManagedIdentityCredential: () => (/* binding */ ManagedIdentityCredential)\n/* harmony export */ });\n/* harmony import */ var _legacyMsiProvider__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./legacyMsiProvider */ \"(rsc)/./node_modules/@azure/identity/dist-esm/src/credentials/managedIdentityCredential/legacyMsiProvider.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\n/**\n * Attempts authentication using a managed identity available at the deployment environment.\n * This authentication type works in Azure VMs, App Service instances, Azure Functions applications,\n * Azure Kubernetes Services, Azure Service Fabric instances and inside of the Azure Cloud Shell.\n *\n * More information about configuring managed identities can be found here:\n * https://learn.microsoft.com/en-us/azure/active-directory/managed-identities-azure-resources/overview\n */\nclass ManagedIdentityCredential {\n    /**\n     * @internal\n     * @hidden\n     */\n    constructor(clientIdOrOptions, options) {\n        this.implProvider = new _legacyMsiProvider__WEBPACK_IMPORTED_MODULE_0__.LegacyMsiProvider(clientIdOrOptions, options);\n    }\n    /**\n     * Authenticates with Microsoft Entra ID and returns an access token if successful.\n     * If authentication fails, a {@link CredentialUnavailableError} will be thrown with the details of the failure.\n     * If an unexpected error occurs, an {@link AuthenticationError} will be thrown with the details of the failure.\n     *\n     * @param scopes - The list of scopes for which the token will have access.\n     * @param options - The options used to configure any requests this\n     *                TokenCredential implementation might make.\n     */\n    async getToken(scopes, options) {\n        return this.implProvider.getToken(scopes, options);\n    }\n}\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2lkZW50aXR5L2Rpc3QtZXNtL3NyYy9jcmVkZW50aWFscy9tYW5hZ2VkSWRlbnRpdHlDcmVkZW50aWFsL2luZGV4LmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQUE7QUFDQTtBQUN3RDtBQUN4RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0NBQWdDLGlFQUFpQjtBQUNqRDtBQUNBO0FBQ0E7QUFDQSxtQ0FBbUMsa0NBQWtDO0FBQ3JFLDBDQUEwQywyQkFBMkI7QUFDckU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9kYW5pZWwzLXZwMi8uL25vZGVfbW9kdWxlcy9AYXp1cmUvaWRlbnRpdHkvZGlzdC1lc20vc3JjL2NyZWRlbnRpYWxzL21hbmFnZWRJZGVudGl0eUNyZWRlbnRpYWwvaW5kZXguanM/YTlkNyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi5cbi8vIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZS5cbmltcG9ydCB7IExlZ2FjeU1zaVByb3ZpZGVyIH0gZnJvbSBcIi4vbGVnYWN5TXNpUHJvdmlkZXJcIjtcbi8qKlxuICogQXR0ZW1wdHMgYXV0aGVudGljYXRpb24gdXNpbmcgYSBtYW5hZ2VkIGlkZW50aXR5IGF2YWlsYWJsZSBhdCB0aGUgZGVwbG95bWVudCBlbnZpcm9ubWVudC5cbiAqIFRoaXMgYXV0aGVudGljYXRpb24gdHlwZSB3b3JrcyBpbiBBenVyZSBWTXMsIEFwcCBTZXJ2aWNlIGluc3RhbmNlcywgQXp1cmUgRnVuY3Rpb25zIGFwcGxpY2F0aW9ucyxcbiAqIEF6dXJlIEt1YmVybmV0ZXMgU2VydmljZXMsIEF6dXJlIFNlcnZpY2UgRmFicmljIGluc3RhbmNlcyBhbmQgaW5zaWRlIG9mIHRoZSBBenVyZSBDbG91ZCBTaGVsbC5cbiAqXG4gKiBNb3JlIGluZm9ybWF0aW9uIGFib3V0IGNvbmZpZ3VyaW5nIG1hbmFnZWQgaWRlbnRpdGllcyBjYW4gYmUgZm91bmQgaGVyZTpcbiAqIGh0dHBzOi8vbGVhcm4ubWljcm9zb2Z0LmNvbS9lbi11cy9henVyZS9hY3RpdmUtZGlyZWN0b3J5L21hbmFnZWQtaWRlbnRpdGllcy1henVyZS1yZXNvdXJjZXMvb3ZlcnZpZXdcbiAqL1xuZXhwb3J0IGNsYXNzIE1hbmFnZWRJZGVudGl0eUNyZWRlbnRpYWwge1xuICAgIC8qKlxuICAgICAqIEBpbnRlcm5hbFxuICAgICAqIEBoaWRkZW5cbiAgICAgKi9cbiAgICBjb25zdHJ1Y3RvcihjbGllbnRJZE9yT3B0aW9ucywgb3B0aW9ucykge1xuICAgICAgICB0aGlzLmltcGxQcm92aWRlciA9IG5ldyBMZWdhY3lNc2lQcm92aWRlcihjbGllbnRJZE9yT3B0aW9ucywgb3B0aW9ucyk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIEF1dGhlbnRpY2F0ZXMgd2l0aCBNaWNyb3NvZnQgRW50cmEgSUQgYW5kIHJldHVybnMgYW4gYWNjZXNzIHRva2VuIGlmIHN1Y2Nlc3NmdWwuXG4gICAgICogSWYgYXV0aGVudGljYXRpb24gZmFpbHMsIGEge0BsaW5rIENyZWRlbnRpYWxVbmF2YWlsYWJsZUVycm9yfSB3aWxsIGJlIHRocm93biB3aXRoIHRoZSBkZXRhaWxzIG9mIHRoZSBmYWlsdXJlLlxuICAgICAqIElmIGFuIHVuZXhwZWN0ZWQgZXJyb3Igb2NjdXJzLCBhbiB7QGxpbmsgQXV0aGVudGljYXRpb25FcnJvcn0gd2lsbCBiZSB0aHJvd24gd2l0aCB0aGUgZGV0YWlscyBvZiB0aGUgZmFpbHVyZS5cbiAgICAgKlxuICAgICAqIEBwYXJhbSBzY29wZXMgLSBUaGUgbGlzdCBvZiBzY29wZXMgZm9yIHdoaWNoIHRoZSB0b2tlbiB3aWxsIGhhdmUgYWNjZXNzLlxuICAgICAqIEBwYXJhbSBvcHRpb25zIC0gVGhlIG9wdGlvbnMgdXNlZCB0byBjb25maWd1cmUgYW55IHJlcXVlc3RzIHRoaXNcbiAgICAgKiAgICAgICAgICAgICAgICBUb2tlbkNyZWRlbnRpYWwgaW1wbGVtZW50YXRpb24gbWlnaHQgbWFrZS5cbiAgICAgKi9cbiAgICBhc3luYyBnZXRUb2tlbihzY29wZXMsIG9wdGlvbnMpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuaW1wbFByb3ZpZGVyLmdldFRva2VuKHNjb3Blcywgb3B0aW9ucyk7XG4gICAgfVxufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW5kZXguanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/identity/dist-esm/src/credentials/managedIdentityCredential/index.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/identity/dist-esm/src/credentials/managedIdentityCredential/legacyMsiProvider.js":
/*!**************************************************************************************************************!*\
  !*** ./node_modules/@azure/identity/dist-esm/src/credentials/managedIdentityCredential/legacyMsiProvider.js ***!
  \**************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   LegacyMsiProvider: () => (/* binding */ LegacyMsiProvider)\n/* harmony export */ });\n/* harmony import */ var _azure_msal_node__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @azure/msal-node */ \"(rsc)/./node_modules/@azure/msal-node/dist/index.mjs\");\n/* harmony import */ var _errors__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../../errors */ \"(rsc)/./node_modules/@azure/identity/dist-esm/src/errors.js\");\n/* harmony import */ var _cloudShellMsi__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./cloudShellMsi */ \"(rsc)/./node_modules/@azure/identity/dist-esm/src/credentials/managedIdentityCredential/cloudShellMsi.js\");\n/* harmony import */ var _util_logging__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../util/logging */ \"(rsc)/./node_modules/@azure/identity/dist-esm/src/util/logging.js\");\n/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../constants */ \"(rsc)/./node_modules/@azure/identity/dist-esm/src/constants.js\");\n/* harmony import */ var _client_identityClient__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../client/identityClient */ \"(rsc)/./node_modules/@azure/identity/dist-esm/src/client/identityClient.js\");\n/* harmony import */ var _appServiceMsi2017__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./appServiceMsi2017 */ \"(rsc)/./node_modules/@azure/identity/dist-esm/src/credentials/managedIdentityCredential/appServiceMsi2017.js\");\n/* harmony import */ var _appServiceMsi2019__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./appServiceMsi2019 */ \"(rsc)/./node_modules/@azure/identity/dist-esm/src/credentials/managedIdentityCredential/appServiceMsi2019.js\");\n/* harmony import */ var _arcMsi__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./arcMsi */ \"(rsc)/./node_modules/@azure/identity/dist-esm/src/credentials/managedIdentityCredential/arcMsi.js\");\n/* harmony import */ var _fabricMsi__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./fabricMsi */ \"(rsc)/./node_modules/@azure/identity/dist-esm/src/credentials/managedIdentityCredential/fabricMsi.js\");\n/* harmony import */ var _azure_logger__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @azure/logger */ \"(rsc)/./node_modules/@azure/logger/dist/esm/index.js\");\n/* harmony import */ var _msal_utils__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../msal/utils */ \"(rsc)/./node_modules/@azure/identity/dist-esm/src/msal/utils.js\");\n/* harmony import */ var _imdsMsi__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./imdsMsi */ \"(rsc)/./node_modules/@azure/identity/dist-esm/src/credentials/managedIdentityCredential/imdsMsi.js\");\n/* harmony import */ var _tokenExchangeMsi__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./tokenExchangeMsi */ \"(rsc)/./node_modules/@azure/identity/dist-esm/src/credentials/managedIdentityCredential/tokenExchangeMsi.js\");\n/* harmony import */ var _util_tracing__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ../../util/tracing */ \"(rsc)/./node_modules/@azure/identity/dist-esm/src/util/tracing.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nconst logger = (0,_util_logging__WEBPACK_IMPORTED_MODULE_2__.credentialLogger)(\"ManagedIdentityCredential\");\nclass LegacyMsiProvider {\n    constructor(clientIdOrOptions, options) {\n        var _a, _b;\n        this.isEndpointUnavailable = null;\n        this.isAppTokenProviderInitialized = false;\n        this.msiRetryConfig = {\n            maxRetries: 5,\n            startDelayInMs: 800,\n            intervalIncrement: 2,\n        };\n        let _options;\n        if (typeof clientIdOrOptions === \"string\") {\n            this.clientId = clientIdOrOptions;\n            _options = options;\n        }\n        else {\n            this.clientId = clientIdOrOptions === null || clientIdOrOptions === void 0 ? void 0 : clientIdOrOptions.clientId;\n            _options = clientIdOrOptions;\n        }\n        this.resourceId = _options === null || _options === void 0 ? void 0 : _options.resourceId;\n        // For JavaScript users.\n        if (this.clientId && this.resourceId) {\n            throw new Error(`ManagedIdentityCredential - Client Id and Resource Id can't be provided at the same time.`);\n        }\n        if (((_a = _options === null || _options === void 0 ? void 0 : _options.retryOptions) === null || _a === void 0 ? void 0 : _a.maxRetries) !== undefined) {\n            this.msiRetryConfig.maxRetries = _options.retryOptions.maxRetries;\n        }\n        this.identityClient = new _client_identityClient__WEBPACK_IMPORTED_MODULE_3__.IdentityClient(_options);\n        this.isAvailableIdentityClient = new _client_identityClient__WEBPACK_IMPORTED_MODULE_3__.IdentityClient(Object.assign(Object.assign({}, _options), { retryOptions: {\n                maxRetries: 0,\n            } }));\n        /**  authority host validation and metadata discovery to be skipped in managed identity\n         * since this wasn't done previously before adding token cache support\n         */\n        this.confidentialApp = new _azure_msal_node__WEBPACK_IMPORTED_MODULE_0__.ConfidentialClientApplication({\n            auth: {\n                authority: \"https://login.microsoftonline.com/managed_identity\",\n                clientId: (_b = this.clientId) !== null && _b !== void 0 ? _b : _constants__WEBPACK_IMPORTED_MODULE_4__.DeveloperSignOnClientId,\n                clientSecret: \"dummy-secret\",\n                cloudDiscoveryMetadata: '{\"tenant_discovery_endpoint\":\"https://login.microsoftonline.com/common/v2.0/.well-known/openid-configuration\",\"api-version\":\"1.1\",\"metadata\":[{\"preferred_network\":\"login.microsoftonline.com\",\"preferred_cache\":\"login.windows.net\",\"aliases\":[\"login.microsoftonline.com\",\"login.windows.net\",\"login.microsoft.com\",\"sts.windows.net\"]},{\"preferred_network\":\"login.partner.microsoftonline.cn\",\"preferred_cache\":\"login.partner.microsoftonline.cn\",\"aliases\":[\"login.partner.microsoftonline.cn\",\"login.chinacloudapi.cn\"]},{\"preferred_network\":\"login.microsoftonline.de\",\"preferred_cache\":\"login.microsoftonline.de\",\"aliases\":[\"login.microsoftonline.de\"]},{\"preferred_network\":\"login.microsoftonline.us\",\"preferred_cache\":\"login.microsoftonline.us\",\"aliases\":[\"login.microsoftonline.us\",\"login.usgovcloudapi.net\"]},{\"preferred_network\":\"login-us.microsoftonline.com\",\"preferred_cache\":\"login-us.microsoftonline.com\",\"aliases\":[\"login-us.microsoftonline.com\"]}]}',\n                authorityMetadata: '{\"token_endpoint\":\"https://login.microsoftonline.com/common/oauth2/v2.0/token\",\"token_endpoint_auth_methods_supported\":[\"client_secret_post\",\"private_key_jwt\",\"client_secret_basic\"],\"jwks_uri\":\"https://login.microsoftonline.com/common/discovery/v2.0/keys\",\"response_modes_supported\":[\"query\",\"fragment\",\"form_post\"],\"subject_types_supported\":[\"pairwise\"],\"id_token_signing_alg_values_supported\":[\"RS256\"],\"response_types_supported\":[\"code\",\"id_token\",\"code id_token\",\"id_token token\"],\"scopes_supported\":[\"openid\",\"profile\",\"email\",\"offline_access\"],\"issuer\":\"https://login.microsoftonline.com/{tenantid}/v2.0\",\"request_uri_parameter_supported\":false,\"userinfo_endpoint\":\"https://graph.microsoft.com/oidc/userinfo\",\"authorization_endpoint\":\"https://login.microsoftonline.com/common/oauth2/v2.0/authorize\",\"device_authorization_endpoint\":\"https://login.microsoftonline.com/common/oauth2/v2.0/devicecode\",\"http_logout_supported\":true,\"frontchannel_logout_supported\":true,\"end_session_endpoint\":\"https://login.microsoftonline.com/common/oauth2/v2.0/logout\",\"claims_supported\":[\"sub\",\"iss\",\"cloud_instance_name\",\"cloud_instance_host_name\",\"cloud_graph_host_name\",\"msgraph_host\",\"aud\",\"exp\",\"iat\",\"auth_time\",\"acr\",\"nonce\",\"preferred_username\",\"name\",\"tid\",\"ver\",\"at_hash\",\"c_hash\",\"email\"],\"kerberos_endpoint\":\"https://login.microsoftonline.com/common/kerberos\",\"tenant_region_scope\":null,\"cloud_instance_name\":\"microsoftonline.com\",\"cloud_graph_host_name\":\"graph.windows.net\",\"msgraph_host\":\"graph.microsoft.com\",\"rbac_url\":\"https://pas.windows.net\"}',\n                clientCapabilities: [],\n            },\n            system: {\n                loggerOptions: {\n                    logLevel: (0,_msal_utils__WEBPACK_IMPORTED_MODULE_5__.getMSALLogLevel)((0,_azure_logger__WEBPACK_IMPORTED_MODULE_1__.getLogLevel)()),\n                },\n            },\n        });\n    }\n    async cachedAvailableMSI(scopes, getTokenOptions) {\n        if (this.cachedMSI) {\n            return this.cachedMSI;\n        }\n        const MSIs = [\n            _arcMsi__WEBPACK_IMPORTED_MODULE_6__.arcMsi,\n            _fabricMsi__WEBPACK_IMPORTED_MODULE_7__.fabricMsi,\n            _appServiceMsi2019__WEBPACK_IMPORTED_MODULE_8__.appServiceMsi2019,\n            _appServiceMsi2017__WEBPACK_IMPORTED_MODULE_9__.appServiceMsi2017,\n            _cloudShellMsi__WEBPACK_IMPORTED_MODULE_10__.cloudShellMsi,\n            (0,_tokenExchangeMsi__WEBPACK_IMPORTED_MODULE_11__.tokenExchangeMsi)(),\n            _imdsMsi__WEBPACK_IMPORTED_MODULE_12__.imdsMsi,\n        ];\n        for (const msi of MSIs) {\n            if (await msi.isAvailable({\n                scopes,\n                identityClient: this.isAvailableIdentityClient,\n                clientId: this.clientId,\n                resourceId: this.resourceId,\n                getTokenOptions,\n            })) {\n                this.cachedMSI = msi;\n                return msi;\n            }\n        }\n        throw new _errors__WEBPACK_IMPORTED_MODULE_13__.CredentialUnavailableError(`ManagedIdentityCredential - No MSI credential available`);\n    }\n    async authenticateManagedIdentity(scopes, getTokenOptions) {\n        const { span, updatedOptions } = _util_tracing__WEBPACK_IMPORTED_MODULE_14__.tracingClient.startSpan(`ManagedIdentityCredential.authenticateManagedIdentity`, getTokenOptions);\n        try {\n            // Determining the available MSI, and avoiding checking for other MSIs while the program is running.\n            const availableMSI = await this.cachedAvailableMSI(scopes, updatedOptions);\n            return availableMSI.getToken({\n                identityClient: this.identityClient,\n                scopes,\n                clientId: this.clientId,\n                resourceId: this.resourceId,\n                retryConfig: this.msiRetryConfig,\n            }, updatedOptions);\n        }\n        catch (err) {\n            span.setStatus({\n                status: \"error\",\n                error: err,\n            });\n            throw err;\n        }\n        finally {\n            span.end();\n        }\n    }\n    /**\n     * Authenticates with Microsoft Entra ID and returns an access token if successful.\n     * If authentication fails, a {@link CredentialUnavailableError} will be thrown with the details of the failure.\n     * If an unexpected error occurs, an {@link AuthenticationError} will be thrown with the details of the failure.\n     *\n     * @param scopes - The list of scopes for which the token will have access.\n     * @param options - The options used to configure any requests this\n     *                TokenCredential implementation might make.\n     */\n    async getToken(scopes, options) {\n        let result = null;\n        const { span, updatedOptions } = _util_tracing__WEBPACK_IMPORTED_MODULE_14__.tracingClient.startSpan(`ManagedIdentityCredential.getToken`, options);\n        try {\n            // isEndpointAvailable can be true, false, or null,\n            // If it's null, it means we don't yet know whether\n            // the endpoint is available and need to check for it.\n            if (this.isEndpointUnavailable !== true) {\n                const availableMSI = await this.cachedAvailableMSI(scopes, updatedOptions);\n                if (availableMSI.name === \"tokenExchangeMsi\") {\n                    result = await this.authenticateManagedIdentity(scopes, updatedOptions);\n                }\n                else {\n                    const appTokenParameters = {\n                        correlationId: this.identityClient.getCorrelationId(),\n                        tenantId: (options === null || options === void 0 ? void 0 : options.tenantId) || \"managed_identity\",\n                        scopes: Array.isArray(scopes) ? scopes : [scopes],\n                        claims: options === null || options === void 0 ? void 0 : options.claims,\n                    };\n                    // Added a check to see if SetAppTokenProvider was already defined.\n                    this.initializeSetAppTokenProvider();\n                    const authenticationResult = await this.confidentialApp.acquireTokenByClientCredential(Object.assign({}, appTokenParameters));\n                    result = this.handleResult(scopes, authenticationResult || undefined);\n                }\n                if (result === null) {\n                    // If authenticateManagedIdentity returns null,\n                    // it means no MSI endpoints are available.\n                    // If so, we avoid trying to reach to them in future requests.\n                    this.isEndpointUnavailable = true;\n                    // It also means that the endpoint answered with either 200 or 201 (see the sendTokenRequest method),\n                    // yet we had no access token. For this reason, we'll throw once with a specific message:\n                    const error = new _errors__WEBPACK_IMPORTED_MODULE_13__.CredentialUnavailableError(\"The managed identity endpoint was reached, yet no tokens were received.\");\n                    logger.getToken.info((0,_util_logging__WEBPACK_IMPORTED_MODULE_2__.formatError)(scopes, error));\n                    throw error;\n                }\n                // Since `authenticateManagedIdentity` didn't throw, and the result was not null,\n                // We will assume that this endpoint is reachable from this point forward,\n                // and avoid pinging again to it.\n                this.isEndpointUnavailable = false;\n            }\n            else {\n                // We've previously determined that the endpoint was unavailable,\n                // either because it was unreachable or permanently unable to authenticate.\n                const error = new _errors__WEBPACK_IMPORTED_MODULE_13__.CredentialUnavailableError(\"The managed identity endpoint is not currently available\");\n                logger.getToken.info((0,_util_logging__WEBPACK_IMPORTED_MODULE_2__.formatError)(scopes, error));\n                throw error;\n            }\n            logger.getToken.info((0,_util_logging__WEBPACK_IMPORTED_MODULE_2__.formatSuccess)(scopes));\n            return result;\n        }\n        catch (err) {\n            // CredentialUnavailable errors are expected to reach here.\n            // We intend them to bubble up, so that DefaultAzureCredential can catch them.\n            if (err.name === \"AuthenticationRequiredError\") {\n                throw err;\n            }\n            // Expected errors to reach this point:\n            // - Errors coming from a method unexpectedly breaking.\n            // - When identityClient.sendTokenRequest throws, in which case\n            //   if the status code was 400, it means that the endpoint is working,\n            //   but no identity is available.\n            span.setStatus({\n                status: \"error\",\n                error: err,\n            });\n            // If either the network is unreachable,\n            // we can safely assume the credential is unavailable.\n            if (err.code === \"ENETUNREACH\") {\n                const error = new _errors__WEBPACK_IMPORTED_MODULE_13__.CredentialUnavailableError(`ManagedIdentityCredential: Unavailable. Network unreachable. Message: ${err.message}`);\n                logger.getToken.info((0,_util_logging__WEBPACK_IMPORTED_MODULE_2__.formatError)(scopes, error));\n                throw error;\n            }\n            // If either the host was unreachable,\n            // we can safely assume the credential is unavailable.\n            if (err.code === \"EHOSTUNREACH\") {\n                const error = new _errors__WEBPACK_IMPORTED_MODULE_13__.CredentialUnavailableError(`ManagedIdentityCredential: Unavailable. No managed identity endpoint found. Message: ${err.message}`);\n                logger.getToken.info((0,_util_logging__WEBPACK_IMPORTED_MODULE_2__.formatError)(scopes, error));\n                throw error;\n            }\n            // If err.statusCode has a value of 400, it comes from sendTokenRequest,\n            // and it means that the endpoint is working, but that no identity is available.\n            if (err.statusCode === 400) {\n                throw new _errors__WEBPACK_IMPORTED_MODULE_13__.CredentialUnavailableError(`ManagedIdentityCredential: The managed identity endpoint is indicating there's no available identity. Message: ${err.message}`);\n            }\n            // This is a special case for Docker Desktop which responds with a 403 with a message that contains \"A socket operation was attempted to an unreachable network\" or \"A socket operation was attempted to an unreachable host\"\n            // rather than just timing out, as expected.\n            if (err.statusCode === 403 || err.code === 403) {\n                if (err.message.includes(\"unreachable\")) {\n                    const error = new _errors__WEBPACK_IMPORTED_MODULE_13__.CredentialUnavailableError(`ManagedIdentityCredential: Unavailable. Network unreachable. Message: ${err.message}`);\n                    logger.getToken.info((0,_util_logging__WEBPACK_IMPORTED_MODULE_2__.formatError)(scopes, error));\n                    throw error;\n                }\n            }\n            // If the error has no status code, we can assume there was no available identity.\n            // This will throw silently during any ChainedTokenCredential.\n            if (err.statusCode === undefined) {\n                throw new _errors__WEBPACK_IMPORTED_MODULE_13__.CredentialUnavailableError(`ManagedIdentityCredential: Authentication failed. Message ${err.message}`);\n            }\n            // Any other error should break the chain.\n            throw new _errors__WEBPACK_IMPORTED_MODULE_13__.AuthenticationError(err.statusCode, {\n                error: `ManagedIdentityCredential authentication failed.`,\n                error_description: err.message,\n            });\n        }\n        finally {\n            // Finally is always called, both if we return and if we throw in the above try/catch.\n            span.end();\n        }\n    }\n    /**\n     * Handles the MSAL authentication result.\n     * If the result has an account, we update the local account reference.\n     * If the token received is invalid, an error will be thrown depending on what's missing.\n     */\n    handleResult(scopes, result, getTokenOptions) {\n        this.ensureValidMsalToken(scopes, result, getTokenOptions);\n        logger.getToken.info((0,_util_logging__WEBPACK_IMPORTED_MODULE_2__.formatSuccess)(scopes));\n        return {\n            token: result.accessToken,\n            expiresOnTimestamp: result.expiresOn.getTime(),\n        };\n    }\n    /**\n     * Ensures the validity of the MSAL token\n     */\n    ensureValidMsalToken(scopes, msalToken, getTokenOptions) {\n        const error = (message) => {\n            logger.getToken.info(message);\n            return new _errors__WEBPACK_IMPORTED_MODULE_13__.AuthenticationRequiredError({\n                scopes: Array.isArray(scopes) ? scopes : [scopes],\n                getTokenOptions,\n                message,\n            });\n        };\n        if (!msalToken) {\n            throw error(\"No response\");\n        }\n        if (!msalToken.expiresOn) {\n            throw error(`Response had no \"expiresOn\" property.`);\n        }\n        if (!msalToken.accessToken) {\n            throw error(`Response had no \"accessToken\" property.`);\n        }\n    }\n    initializeSetAppTokenProvider() {\n        if (!this.isAppTokenProviderInitialized) {\n            this.confidentialApp.SetAppTokenProvider(async (appTokenProviderParameters) => {\n                logger.info(`SetAppTokenProvider invoked with parameters- ${JSON.stringify(appTokenProviderParameters)}`);\n                const getTokenOptions = Object.assign({}, appTokenProviderParameters);\n                logger.info(`authenticateManagedIdentity invoked with scopes- ${JSON.stringify(appTokenProviderParameters.scopes)} and getTokenOptions - ${JSON.stringify(getTokenOptions)}`);\n                const resultToken = await this.authenticateManagedIdentity(appTokenProviderParameters.scopes, getTokenOptions);\n                if (resultToken) {\n                    logger.info(`SetAppTokenProvider will save the token in cache`);\n                    const expiresInSeconds = (resultToken === null || resultToken === void 0 ? void 0 : resultToken.expiresOnTimestamp)\n                        ? Math.floor((resultToken.expiresOnTimestamp - Date.now()) / 1000)\n                        : 0;\n                    return {\n                        accessToken: resultToken === null || resultToken === void 0 ? void 0 : resultToken.token,\n                        expiresInSeconds,\n                    };\n                }\n                else {\n                    logger.info(`SetAppTokenProvider token has \"no_access_token_returned\" as the saved token`);\n                    return {\n                        accessToken: \"no_access_token_returned\",\n                        expiresInSeconds: 0,\n                    };\n                }\n            });\n            this.isAppTokenProviderInitialized = true;\n        }\n    }\n}\n//# sourceMappingURL=legacyMsiProvider.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/identity/dist-esm/src/credentials/managedIdentityCredential/legacyMsiProvider.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/identity/dist-esm/src/credentials/managedIdentityCredential/tokenExchangeMsi.js":
/*!*************************************************************************************************************!*\
  !*** ./node_modules/@azure/identity/dist-esm/src/credentials/managedIdentityCredential/tokenExchangeMsi.js ***!
  \*************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   tokenExchangeMsi: () => (/* binding */ tokenExchangeMsi)\n/* harmony export */ });\n/* harmony import */ var _workloadIdentityCredential__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../workloadIdentityCredential */ \"(rsc)/./node_modules/@azure/identity/dist-esm/src/credentials/workloadIdentityCredential.js\");\n/* harmony import */ var _util_logging__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../util/logging */ \"(rsc)/./node_modules/@azure/identity/dist-esm/src/util/logging.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\n\nconst msiName = \"ManagedIdentityCredential - Token Exchange\";\nconst logger = (0,_util_logging__WEBPACK_IMPORTED_MODULE_0__.credentialLogger)(msiName);\n/**\n * Defines how to determine whether the token exchange MSI is available, and also how to retrieve a token from the token exchange MSI.\n */\nfunction tokenExchangeMsi() {\n    return {\n        name: \"tokenExchangeMsi\",\n        async isAvailable({ clientId }) {\n            const env = process.env;\n            const result = Boolean((clientId || env.AZURE_CLIENT_ID) &&\n                env.AZURE_TENANT_ID &&\n                process.env.AZURE_FEDERATED_TOKEN_FILE);\n            if (!result) {\n                logger.info(`${msiName}: Unavailable. The environment variables needed are: AZURE_CLIENT_ID (or the client ID sent through the parameters), AZURE_TENANT_ID and AZURE_FEDERATED_TOKEN_FILE`);\n            }\n            return result;\n        },\n        async getToken(configuration, getTokenOptions = {}) {\n            const { scopes, clientId } = configuration;\n            const identityClientTokenCredentialOptions = {};\n            const workloadIdentityCredential = new _workloadIdentityCredential__WEBPACK_IMPORTED_MODULE_1__.WorkloadIdentityCredential(Object.assign(Object.assign({ clientId, tenantId: process.env.AZURE_TENANT_ID, tokenFilePath: process.env.AZURE_FEDERATED_TOKEN_FILE }, identityClientTokenCredentialOptions), { disableInstanceDiscovery: true }));\n            const token = await workloadIdentityCredential.getToken(scopes, getTokenOptions);\n            return token;\n        },\n    };\n}\n//# sourceMappingURL=tokenExchangeMsi.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2lkZW50aXR5L2Rpc3QtZXNtL3NyYy9jcmVkZW50aWFscy9tYW5hZ2VkSWRlbnRpdHlDcmVkZW50aWFsL3Rva2VuRXhjaGFuZ2VNc2kuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUE7QUFDQTtBQUMyRTtBQUNyQjtBQUN0RDtBQUNBLGVBQWUsK0RBQWdCO0FBQy9CO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBLDRCQUE0QixVQUFVO0FBQ3RDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwrQkFBK0IsUUFBUTtBQUN2QztBQUNBO0FBQ0EsU0FBUztBQUNULDBEQUEwRDtBQUMxRCxvQkFBb0IsbUJBQW1CO0FBQ3ZDO0FBQ0EsbURBQW1ELG1GQUEwQiwrQkFBK0Isd0dBQXdHLDJDQUEyQyxnQ0FBZ0M7QUFDL1I7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9kYW5pZWwzLXZwMi8uL25vZGVfbW9kdWxlcy9AYXp1cmUvaWRlbnRpdHkvZGlzdC1lc20vc3JjL2NyZWRlbnRpYWxzL21hbmFnZWRJZGVudGl0eUNyZWRlbnRpYWwvdG9rZW5FeGNoYW5nZU1zaS5qcz9iZDk3Il0sInNvdXJjZXNDb250ZW50IjpbIi8vIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLlxuLy8gTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlLlxuaW1wb3J0IHsgV29ya2xvYWRJZGVudGl0eUNyZWRlbnRpYWwgfSBmcm9tIFwiLi4vd29ya2xvYWRJZGVudGl0eUNyZWRlbnRpYWxcIjtcbmltcG9ydCB7IGNyZWRlbnRpYWxMb2dnZXIgfSBmcm9tIFwiLi4vLi4vdXRpbC9sb2dnaW5nXCI7XG5jb25zdCBtc2lOYW1lID0gXCJNYW5hZ2VkSWRlbnRpdHlDcmVkZW50aWFsIC0gVG9rZW4gRXhjaGFuZ2VcIjtcbmNvbnN0IGxvZ2dlciA9IGNyZWRlbnRpYWxMb2dnZXIobXNpTmFtZSk7XG4vKipcbiAqIERlZmluZXMgaG93IHRvIGRldGVybWluZSB3aGV0aGVyIHRoZSB0b2tlbiBleGNoYW5nZSBNU0kgaXMgYXZhaWxhYmxlLCBhbmQgYWxzbyBob3cgdG8gcmV0cmlldmUgYSB0b2tlbiBmcm9tIHRoZSB0b2tlbiBleGNoYW5nZSBNU0kuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiB0b2tlbkV4Y2hhbmdlTXNpKCkge1xuICAgIHJldHVybiB7XG4gICAgICAgIG5hbWU6IFwidG9rZW5FeGNoYW5nZU1zaVwiLFxuICAgICAgICBhc3luYyBpc0F2YWlsYWJsZSh7IGNsaWVudElkIH0pIHtcbiAgICAgICAgICAgIGNvbnN0IGVudiA9IHByb2Nlc3MuZW52O1xuICAgICAgICAgICAgY29uc3QgcmVzdWx0ID0gQm9vbGVhbigoY2xpZW50SWQgfHwgZW52LkFaVVJFX0NMSUVOVF9JRCkgJiZcbiAgICAgICAgICAgICAgICBlbnYuQVpVUkVfVEVOQU5UX0lEICYmXG4gICAgICAgICAgICAgICAgcHJvY2Vzcy5lbnYuQVpVUkVfRkVERVJBVEVEX1RPS0VOX0ZJTEUpO1xuICAgICAgICAgICAgaWYgKCFyZXN1bHQpIHtcbiAgICAgICAgICAgICAgICBsb2dnZXIuaW5mbyhgJHttc2lOYW1lfTogVW5hdmFpbGFibGUuIFRoZSBlbnZpcm9ubWVudCB2YXJpYWJsZXMgbmVlZGVkIGFyZTogQVpVUkVfQ0xJRU5UX0lEIChvciB0aGUgY2xpZW50IElEIHNlbnQgdGhyb3VnaCB0aGUgcGFyYW1ldGVycyksIEFaVVJFX1RFTkFOVF9JRCBhbmQgQVpVUkVfRkVERVJBVEVEX1RPS0VOX0ZJTEVgKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJldHVybiByZXN1bHQ7XG4gICAgICAgIH0sXG4gICAgICAgIGFzeW5jIGdldFRva2VuKGNvbmZpZ3VyYXRpb24sIGdldFRva2VuT3B0aW9ucyA9IHt9KSB7XG4gICAgICAgICAgICBjb25zdCB7IHNjb3BlcywgY2xpZW50SWQgfSA9IGNvbmZpZ3VyYXRpb247XG4gICAgICAgICAgICBjb25zdCBpZGVudGl0eUNsaWVudFRva2VuQ3JlZGVudGlhbE9wdGlvbnMgPSB7fTtcbiAgICAgICAgICAgIGNvbnN0IHdvcmtsb2FkSWRlbnRpdHlDcmVkZW50aWFsID0gbmV3IFdvcmtsb2FkSWRlbnRpdHlDcmVkZW50aWFsKE9iamVjdC5hc3NpZ24oT2JqZWN0LmFzc2lnbih7IGNsaWVudElkLCB0ZW5hbnRJZDogcHJvY2Vzcy5lbnYuQVpVUkVfVEVOQU5UX0lELCB0b2tlbkZpbGVQYXRoOiBwcm9jZXNzLmVudi5BWlVSRV9GRURFUkFURURfVE9LRU5fRklMRSB9LCBpZGVudGl0eUNsaWVudFRva2VuQ3JlZGVudGlhbE9wdGlvbnMpLCB7IGRpc2FibGVJbnN0YW5jZURpc2NvdmVyeTogdHJ1ZSB9KSk7XG4gICAgICAgICAgICBjb25zdCB0b2tlbiA9IGF3YWl0IHdvcmtsb2FkSWRlbnRpdHlDcmVkZW50aWFsLmdldFRva2VuKHNjb3BlcywgZ2V0VG9rZW5PcHRpb25zKTtcbiAgICAgICAgICAgIHJldHVybiB0b2tlbjtcbiAgICAgICAgfSxcbiAgICB9O1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9dG9rZW5FeGNoYW5nZU1zaS5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/identity/dist-esm/src/credentials/managedIdentityCredential/tokenExchangeMsi.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/identity/dist-esm/src/credentials/managedIdentityCredential/utils.js":
/*!**************************************************************************************************!*\
  !*** ./node_modules/@azure/identity/dist-esm/src/credentials/managedIdentityCredential/utils.js ***!
  \**************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   mapScopesToResource: () => (/* binding */ mapScopesToResource),\n/* harmony export */   parseExpirationTimestamp: () => (/* binding */ parseExpirationTimestamp)\n/* harmony export */ });\n/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./constants */ \"(rsc)/./node_modules/@azure/identity/dist-esm/src/credentials/managedIdentityCredential/constants.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\n/**\n * Most MSIs send requests to the IMDS endpoint, or a similar endpoint.\n * These are GET requests that require sending a `resource` parameter on the query.\n * This resource can be derived from the scopes received through the getToken call, as long as only one scope is received.\n * Multiple scopes assume that the resulting token will have access to multiple resources, which won't be the case.\n *\n * For that reason, when we encounter multiple scopes, we return undefined.\n * It's up to the individual MSI implementations to throw the errors (which helps us provide less generic errors).\n */\nfunction mapScopesToResource(scopes) {\n    let scope = \"\";\n    if (Array.isArray(scopes)) {\n        if (scopes.length !== 1) {\n            return;\n        }\n        scope = scopes[0];\n    }\n    else if (typeof scopes === \"string\") {\n        scope = scopes;\n    }\n    if (!scope.endsWith(_constants__WEBPACK_IMPORTED_MODULE_0__.DefaultScopeSuffix)) {\n        return scope;\n    }\n    return scope.substr(0, scope.lastIndexOf(_constants__WEBPACK_IMPORTED_MODULE_0__.DefaultScopeSuffix));\n}\n/**\n * Given a token response, return the expiration timestamp as the number of milliseconds from the Unix epoch.\n * @param body - A parsed response body from the authentication endpoint.\n */\nfunction parseExpirationTimestamp(body) {\n    if (typeof body.expires_on === \"number\") {\n        return body.expires_on * 1000;\n    }\n    if (typeof body.expires_on === \"string\") {\n        const asNumber = +body.expires_on;\n        if (!isNaN(asNumber)) {\n            return asNumber * 1000;\n        }\n        const asDate = Date.parse(body.expires_on);\n        if (!isNaN(asDate)) {\n            return asDate;\n        }\n    }\n    if (typeof body.expires_in === \"number\") {\n        return Date.now() + body.expires_in * 1000;\n    }\n    throw new Error(`Failed to parse token expiration from body. expires_in=\"${body.expires_in}\", expires_on=\"${body.expires_on}\"`);\n}\n//# sourceMappingURL=utils.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2lkZW50aXR5L2Rpc3QtZXNtL3NyYy9jcmVkZW50aWFscy9tYW5hZ2VkSWRlbnRpdHlDcmVkZW50aWFsL3V0aWxzLmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFBO0FBQ0E7QUFDaUQ7QUFDakQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHdCQUF3QiwwREFBa0I7QUFDMUM7QUFDQTtBQUNBLDZDQUE2QywwREFBa0I7QUFDL0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwrRUFBK0UsZ0JBQWdCLGlCQUFpQixnQkFBZ0I7QUFDaEk7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2RhbmllbDMtdnAyLy4vbm9kZV9tb2R1bGVzL0BhenVyZS9pZGVudGl0eS9kaXN0LWVzbS9zcmMvY3JlZGVudGlhbHMvbWFuYWdlZElkZW50aXR5Q3JlZGVudGlhbC91dGlscy5qcz83Yjk5Il0sInNvdXJjZXNDb250ZW50IjpbIi8vIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLlxuLy8gTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlLlxuaW1wb3J0IHsgRGVmYXVsdFNjb3BlU3VmZml4IH0gZnJvbSBcIi4vY29uc3RhbnRzXCI7XG4vKipcbiAqIE1vc3QgTVNJcyBzZW5kIHJlcXVlc3RzIHRvIHRoZSBJTURTIGVuZHBvaW50LCBvciBhIHNpbWlsYXIgZW5kcG9pbnQuXG4gKiBUaGVzZSBhcmUgR0VUIHJlcXVlc3RzIHRoYXQgcmVxdWlyZSBzZW5kaW5nIGEgYHJlc291cmNlYCBwYXJhbWV0ZXIgb24gdGhlIHF1ZXJ5LlxuICogVGhpcyByZXNvdXJjZSBjYW4gYmUgZGVyaXZlZCBmcm9tIHRoZSBzY29wZXMgcmVjZWl2ZWQgdGhyb3VnaCB0aGUgZ2V0VG9rZW4gY2FsbCwgYXMgbG9uZyBhcyBvbmx5IG9uZSBzY29wZSBpcyByZWNlaXZlZC5cbiAqIE11bHRpcGxlIHNjb3BlcyBhc3N1bWUgdGhhdCB0aGUgcmVzdWx0aW5nIHRva2VuIHdpbGwgaGF2ZSBhY2Nlc3MgdG8gbXVsdGlwbGUgcmVzb3VyY2VzLCB3aGljaCB3b24ndCBiZSB0aGUgY2FzZS5cbiAqXG4gKiBGb3IgdGhhdCByZWFzb24sIHdoZW4gd2UgZW5jb3VudGVyIG11bHRpcGxlIHNjb3Blcywgd2UgcmV0dXJuIHVuZGVmaW5lZC5cbiAqIEl0J3MgdXAgdG8gdGhlIGluZGl2aWR1YWwgTVNJIGltcGxlbWVudGF0aW9ucyB0byB0aHJvdyB0aGUgZXJyb3JzICh3aGljaCBoZWxwcyB1cyBwcm92aWRlIGxlc3MgZ2VuZXJpYyBlcnJvcnMpLlxuICovXG5leHBvcnQgZnVuY3Rpb24gbWFwU2NvcGVzVG9SZXNvdXJjZShzY29wZXMpIHtcbiAgICBsZXQgc2NvcGUgPSBcIlwiO1xuICAgIGlmIChBcnJheS5pc0FycmF5KHNjb3BlcykpIHtcbiAgICAgICAgaWYgKHNjb3Blcy5sZW5ndGggIT09IDEpIHtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuICAgICAgICBzY29wZSA9IHNjb3Blc1swXTtcbiAgICB9XG4gICAgZWxzZSBpZiAodHlwZW9mIHNjb3BlcyA9PT0gXCJzdHJpbmdcIikge1xuICAgICAgICBzY29wZSA9IHNjb3BlcztcbiAgICB9XG4gICAgaWYgKCFzY29wZS5lbmRzV2l0aChEZWZhdWx0U2NvcGVTdWZmaXgpKSB7XG4gICAgICAgIHJldHVybiBzY29wZTtcbiAgICB9XG4gICAgcmV0dXJuIHNjb3BlLnN1YnN0cigwLCBzY29wZS5sYXN0SW5kZXhPZihEZWZhdWx0U2NvcGVTdWZmaXgpKTtcbn1cbi8qKlxuICogR2l2ZW4gYSB0b2tlbiByZXNwb25zZSwgcmV0dXJuIHRoZSBleHBpcmF0aW9uIHRpbWVzdGFtcCBhcyB0aGUgbnVtYmVyIG9mIG1pbGxpc2Vjb25kcyBmcm9tIHRoZSBVbml4IGVwb2NoLlxuICogQHBhcmFtIGJvZHkgLSBBIHBhcnNlZCByZXNwb25zZSBib2R5IGZyb20gdGhlIGF1dGhlbnRpY2F0aW9uIGVuZHBvaW50LlxuICovXG5leHBvcnQgZnVuY3Rpb24gcGFyc2VFeHBpcmF0aW9uVGltZXN0YW1wKGJvZHkpIHtcbiAgICBpZiAodHlwZW9mIGJvZHkuZXhwaXJlc19vbiA9PT0gXCJudW1iZXJcIikge1xuICAgICAgICByZXR1cm4gYm9keS5leHBpcmVzX29uICogMTAwMDtcbiAgICB9XG4gICAgaWYgKHR5cGVvZiBib2R5LmV4cGlyZXNfb24gPT09IFwic3RyaW5nXCIpIHtcbiAgICAgICAgY29uc3QgYXNOdW1iZXIgPSArYm9keS5leHBpcmVzX29uO1xuICAgICAgICBpZiAoIWlzTmFOKGFzTnVtYmVyKSkge1xuICAgICAgICAgICAgcmV0dXJuIGFzTnVtYmVyICogMTAwMDtcbiAgICAgICAgfVxuICAgICAgICBjb25zdCBhc0RhdGUgPSBEYXRlLnBhcnNlKGJvZHkuZXhwaXJlc19vbik7XG4gICAgICAgIGlmICghaXNOYU4oYXNEYXRlKSkge1xuICAgICAgICAgICAgcmV0dXJuIGFzRGF0ZTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBpZiAodHlwZW9mIGJvZHkuZXhwaXJlc19pbiA9PT0gXCJudW1iZXJcIikge1xuICAgICAgICByZXR1cm4gRGF0ZS5ub3coKSArIGJvZHkuZXhwaXJlc19pbiAqIDEwMDA7XG4gICAgfVxuICAgIHRocm93IG5ldyBFcnJvcihgRmFpbGVkIHRvIHBhcnNlIHRva2VuIGV4cGlyYXRpb24gZnJvbSBib2R5LiBleHBpcmVzX2luPVwiJHtib2R5LmV4cGlyZXNfaW59XCIsIGV4cGlyZXNfb249XCIke2JvZHkuZXhwaXJlc19vbn1cImApO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9dXRpbHMuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/identity/dist-esm/src/credentials/managedIdentityCredential/utils.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/identity/dist-esm/src/credentials/onBehalfOfCredential.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/@azure/identity/dist-esm/src/credentials/onBehalfOfCredential.js ***!
  \***************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   OnBehalfOfCredential: () => (/* binding */ OnBehalfOfCredential)\n/* harmony export */ });\n/* harmony import */ var _util_tenantIdUtils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../util/tenantIdUtils */ \"(rsc)/./node_modules/@azure/identity/dist-esm/src/util/tenantIdUtils.js\");\n/* harmony import */ var _util_tenantIdUtils__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../util/tenantIdUtils */ \"(rsc)/./node_modules/@azure/identity/dist-esm/src/util/processMultiTenantRequest.js\");\n/* harmony import */ var _util_logging__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../util/logging */ \"(rsc)/./node_modules/@azure/identity/dist-esm/src/util/logging.js\");\n/* harmony import */ var _util_scopeUtils__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../util/scopeUtils */ \"(rsc)/./node_modules/@azure/identity/dist-esm/src/util/scopeUtils.js\");\n/* harmony import */ var _util_tracing__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../util/tracing */ \"(rsc)/./node_modules/@azure/identity/dist-esm/src/util/tracing.js\");\n/* harmony import */ var _msal_nodeFlows_msalClient__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../msal/nodeFlows/msalClient */ \"(rsc)/./node_modules/@azure/identity/dist-esm/src/msal/nodeFlows/msalClient.js\");\n/* harmony import */ var node_fs_promises__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! node:fs/promises */ \"node:fs/promises\");\n/* harmony import */ var node_fs_promises__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(node_fs_promises__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var node_crypto__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! node:crypto */ \"node:crypto\");\n/* harmony import */ var node_crypto__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(node_crypto__WEBPACK_IMPORTED_MODULE_1__);\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\n\n\n\n\n\n\nconst credentialName = \"OnBehalfOfCredential\";\nconst logger = (0,_util_logging__WEBPACK_IMPORTED_MODULE_2__.credentialLogger)(credentialName);\n/**\n * Enables authentication to Microsoft Entra ID using the [On Behalf Of flow](https://learn.microsoft.com/entra/identity-platform/v2-oauth2-on-behalf-of-flow).\n */\nclass OnBehalfOfCredential {\n    constructor(options) {\n        const { clientSecret } = options;\n        const { certificatePath, sendCertificateChain } = options;\n        const { getAssertion } = options;\n        const { tenantId, clientId, userAssertionToken, additionallyAllowedTenants: additionallyAllowedTenantIds, } = options;\n        if (!tenantId ||\n            !clientId ||\n            !(clientSecret || certificatePath || getAssertion) ||\n            !userAssertionToken) {\n            throw new Error(`${credentialName}: tenantId, clientId, clientSecret (or certificatePath or getAssertion) and userAssertionToken are required parameters.`);\n        }\n        this.certificatePath = certificatePath;\n        this.clientSecret = clientSecret;\n        this.userAssertionToken = userAssertionToken;\n        this.sendCertificateChain = sendCertificateChain;\n        this.clientAssertion = getAssertion;\n        this.tenantId = tenantId;\n        this.additionallyAllowedTenantIds = (0,_util_tenantIdUtils__WEBPACK_IMPORTED_MODULE_3__.resolveAdditionallyAllowedTenantIds)(additionallyAllowedTenantIds);\n        this.msalClient = (0,_msal_nodeFlows_msalClient__WEBPACK_IMPORTED_MODULE_4__.createMsalClient)(clientId, this.tenantId, Object.assign(Object.assign({}, options), { logger, tokenCredentialOptions: options }));\n    }\n    /**\n     * Authenticates with Microsoft Entra ID and returns an access token if successful.\n     * If authentication fails, a {@link CredentialUnavailableError} will be thrown with the details of the failure.\n     *\n     * @param scopes - The list of scopes for which the token will have access.\n     * @param options - The options used to configure the underlying network requests.\n     */\n    async getToken(scopes, options = {}) {\n        return _util_tracing__WEBPACK_IMPORTED_MODULE_5__.tracingClient.withSpan(`${credentialName}.getToken`, options, async (newOptions) => {\n            newOptions.tenantId = (0,_util_tenantIdUtils__WEBPACK_IMPORTED_MODULE_6__.processMultiTenantRequest)(this.tenantId, newOptions, this.additionallyAllowedTenantIds, logger);\n            const arrayScopes = (0,_util_scopeUtils__WEBPACK_IMPORTED_MODULE_7__.ensureScopes)(scopes);\n            if (this.certificatePath) {\n                const clientCertificate = await this.buildClientCertificate(this.certificatePath);\n                return this.msalClient.getTokenOnBehalfOf(arrayScopes, this.userAssertionToken, clientCertificate, newOptions);\n            }\n            else if (this.clientSecret) {\n                return this.msalClient.getTokenOnBehalfOf(arrayScopes, this.userAssertionToken, this.clientSecret, options);\n            }\n            else if (this.clientAssertion) {\n                return this.msalClient.getTokenOnBehalfOf(arrayScopes, this.userAssertionToken, this.clientAssertion, options);\n            }\n            else {\n                // this is an invalid scenario and is a bug, as the constructor should have thrown an error if neither clientSecret nor certificatePath nor clientAssertion were provided\n                throw new Error(\"Expected either clientSecret or certificatePath or clientAssertion to be defined.\");\n            }\n        });\n    }\n    async buildClientCertificate(certificatePath) {\n        try {\n            const parts = await this.parseCertificate({ certificatePath }, this.sendCertificateChain);\n            return {\n                thumbprint: parts.thumbprint,\n                privateKey: parts.certificateContents,\n                x5c: parts.x5c,\n            };\n        }\n        catch (error) {\n            logger.info((0,_util_logging__WEBPACK_IMPORTED_MODULE_2__.formatError)(\"\", error));\n            throw error;\n        }\n    }\n    async parseCertificate(configuration, sendCertificateChain) {\n        const certificatePath = configuration.certificatePath;\n        const certificateContents = await (0,node_fs_promises__WEBPACK_IMPORTED_MODULE_0__.readFile)(certificatePath, \"utf8\");\n        const x5c = sendCertificateChain ? certificateContents : undefined;\n        const certificatePattern = /(-+BEGIN CERTIFICATE-+)(\\n\\r?|\\r\\n?)([A-Za-z0-9+/\\n\\r]+=*)(\\n\\r?|\\r\\n?)(-+END CERTIFICATE-+)/g;\n        const publicKeys = [];\n        // Match all possible certificates, in the order they are in the file. These will form the chain that is used for x5c\n        let match;\n        do {\n            match = certificatePattern.exec(certificateContents);\n            if (match) {\n                publicKeys.push(match[3]);\n            }\n        } while (match);\n        if (publicKeys.length === 0) {\n            throw new Error(\"The file at the specified path does not contain a PEM-encoded certificate.\");\n        }\n        const thumbprint = (0,node_crypto__WEBPACK_IMPORTED_MODULE_1__.createHash)(\"sha1\")\n            .update(Buffer.from(publicKeys[0], \"base64\"))\n            .digest(\"hex\")\n            .toUpperCase();\n        return {\n            certificateContents,\n            thumbprint,\n            x5c,\n        };\n    }\n}\n//# sourceMappingURL=onBehalfOfCredential.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/identity/dist-esm/src/credentials/onBehalfOfCredential.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/identity/dist-esm/src/credentials/usernamePasswordCredential.js":
/*!*********************************************************************************************!*\
  !*** ./node_modules/@azure/identity/dist-esm/src/credentials/usernamePasswordCredential.js ***!
  \*********************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   UsernamePasswordCredential: () => (/* binding */ UsernamePasswordCredential)\n/* harmony export */ });\n/* harmony import */ var _util_tenantIdUtils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../util/tenantIdUtils */ \"(rsc)/./node_modules/@azure/identity/dist-esm/src/util/tenantIdUtils.js\");\n/* harmony import */ var _util_tenantIdUtils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../util/tenantIdUtils */ \"(rsc)/./node_modules/@azure/identity/dist-esm/src/util/processMultiTenantRequest.js\");\n/* harmony import */ var _util_logging__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../util/logging */ \"(rsc)/./node_modules/@azure/identity/dist-esm/src/util/logging.js\");\n/* harmony import */ var _util_scopeUtils__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../util/scopeUtils */ \"(rsc)/./node_modules/@azure/identity/dist-esm/src/util/scopeUtils.js\");\n/* harmony import */ var _util_tracing__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../util/tracing */ \"(rsc)/./node_modules/@azure/identity/dist-esm/src/util/tracing.js\");\n/* harmony import */ var _msal_nodeFlows_msalClient__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../msal/nodeFlows/msalClient */ \"(rsc)/./node_modules/@azure/identity/dist-esm/src/msal/nodeFlows/msalClient.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\n\n\n\n\nconst logger = (0,_util_logging__WEBPACK_IMPORTED_MODULE_0__.credentialLogger)(\"UsernamePasswordCredential\");\n/**\n * Enables authentication to Microsoft Entra ID with a user's\n * username and password. This credential requires a high degree of\n * trust so you should only use it when other, more secure credential\n * types can't be used.\n */\nclass UsernamePasswordCredential {\n    /**\n     * Creates an instance of the UsernamePasswordCredential with the details\n     * needed to authenticate against Microsoft Entra ID with a username\n     * and password.\n     *\n     * @param tenantId - The Microsoft Entra tenant (directory).\n     * @param clientId - The client (application) ID of an App Registration in the tenant.\n     * @param username - The user account's e-mail address (user name).\n     * @param password - The user account's account password\n     * @param options - Options for configuring the client which makes the authentication request.\n     */\n    constructor(tenantId, clientId, username, password, options = {}) {\n        if (!tenantId || !clientId || !username || !password) {\n            throw new Error(\"UsernamePasswordCredential: tenantId, clientId, username and password are required parameters. To troubleshoot, visit https://aka.ms/azsdk/js/identity/usernamepasswordcredential/troubleshoot.\");\n        }\n        this.tenantId = tenantId;\n        this.additionallyAllowedTenantIds = (0,_util_tenantIdUtils__WEBPACK_IMPORTED_MODULE_1__.resolveAdditionallyAllowedTenantIds)(options === null || options === void 0 ? void 0 : options.additionallyAllowedTenants);\n        this.username = username;\n        this.password = password;\n        this.msalClient = (0,_msal_nodeFlows_msalClient__WEBPACK_IMPORTED_MODULE_2__.createMsalClient)(clientId, this.tenantId, Object.assign(Object.assign({}, options), { tokenCredentialOptions: options !== null && options !== void 0 ? options : {} }));\n    }\n    /**\n     * Authenticates with Microsoft Entra ID and returns an access token if successful.\n     * If authentication fails, a {@link CredentialUnavailableError} will be thrown with the details of the failure.\n     *\n     * If the user provided the option `disableAutomaticAuthentication`,\n     * once the token can't be retrieved silently,\n     * this method won't attempt to request user interaction to retrieve the token.\n     *\n     * @param scopes - The list of scopes for which the token will have access.\n     * @param options - The options used to configure any requests this\n     *                TokenCredential implementation might make.\n     */\n    async getToken(scopes, options = {}) {\n        return _util_tracing__WEBPACK_IMPORTED_MODULE_3__.tracingClient.withSpan(`${this.constructor.name}.getToken`, options, async (newOptions) => {\n            newOptions.tenantId = (0,_util_tenantIdUtils__WEBPACK_IMPORTED_MODULE_4__.processMultiTenantRequest)(this.tenantId, newOptions, this.additionallyAllowedTenantIds, logger);\n            const arrayScopes = (0,_util_scopeUtils__WEBPACK_IMPORTED_MODULE_5__.ensureScopes)(scopes);\n            return this.msalClient.getTokenByUsernamePassword(arrayScopes, this.username, this.password, newOptions);\n        });\n    }\n}\n//# sourceMappingURL=usernamePasswordCredential.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2lkZW50aXR5L2Rpc3QtZXNtL3NyYy9jcmVkZW50aWFscy91c2VybmFtZVBhc3N3b3JkQ3JlZGVudGlhbC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7O0FBQUE7QUFDQTtBQUN3RztBQUNyRDtBQUNEO0FBQ0Y7QUFDZ0I7QUFDaEUsZUFBZSwrREFBZ0I7QUFDL0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esb0VBQW9FO0FBQ3BFO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNENBQTRDLHdGQUFtQztBQUMvRTtBQUNBO0FBQ0EsMEJBQTBCLDRFQUFnQix3REFBd0QsY0FBYywrRUFBK0U7QUFDL0w7QUFDQTtBQUNBO0FBQ0EsbUNBQW1DLGtDQUFrQztBQUNyRTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx1Q0FBdUM7QUFDdkMsZUFBZSx3REFBYSxhQUFhLHNCQUFzQjtBQUMvRCxrQ0FBa0MsOEVBQXlCO0FBQzNELGdDQUFnQyw4REFBWTtBQUM1QztBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9kYW5pZWwzLXZwMi8uL25vZGVfbW9kdWxlcy9AYXp1cmUvaWRlbnRpdHkvZGlzdC1lc20vc3JjL2NyZWRlbnRpYWxzL3VzZXJuYW1lUGFzc3dvcmRDcmVkZW50aWFsLmpzPzAwMDQiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uXG4vLyBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UuXG5pbXBvcnQgeyBwcm9jZXNzTXVsdGlUZW5hbnRSZXF1ZXN0LCByZXNvbHZlQWRkaXRpb25hbGx5QWxsb3dlZFRlbmFudElkcywgfSBmcm9tIFwiLi4vdXRpbC90ZW5hbnRJZFV0aWxzXCI7XG5pbXBvcnQgeyBjcmVkZW50aWFsTG9nZ2VyIH0gZnJvbSBcIi4uL3V0aWwvbG9nZ2luZ1wiO1xuaW1wb3J0IHsgZW5zdXJlU2NvcGVzIH0gZnJvbSBcIi4uL3V0aWwvc2NvcGVVdGlsc1wiO1xuaW1wb3J0IHsgdHJhY2luZ0NsaWVudCB9IGZyb20gXCIuLi91dGlsL3RyYWNpbmdcIjtcbmltcG9ydCB7IGNyZWF0ZU1zYWxDbGllbnQgfSBmcm9tIFwiLi4vbXNhbC9ub2RlRmxvd3MvbXNhbENsaWVudFwiO1xuY29uc3QgbG9nZ2VyID0gY3JlZGVudGlhbExvZ2dlcihcIlVzZXJuYW1lUGFzc3dvcmRDcmVkZW50aWFsXCIpO1xuLyoqXG4gKiBFbmFibGVzIGF1dGhlbnRpY2F0aW9uIHRvIE1pY3Jvc29mdCBFbnRyYSBJRCB3aXRoIGEgdXNlcidzXG4gKiB1c2VybmFtZSBhbmQgcGFzc3dvcmQuIFRoaXMgY3JlZGVudGlhbCByZXF1aXJlcyBhIGhpZ2ggZGVncmVlIG9mXG4gKiB0cnVzdCBzbyB5b3Ugc2hvdWxkIG9ubHkgdXNlIGl0IHdoZW4gb3RoZXIsIG1vcmUgc2VjdXJlIGNyZWRlbnRpYWxcbiAqIHR5cGVzIGNhbid0IGJlIHVzZWQuXG4gKi9cbmV4cG9ydCBjbGFzcyBVc2VybmFtZVBhc3N3b3JkQ3JlZGVudGlhbCB7XG4gICAgLyoqXG4gICAgICogQ3JlYXRlcyBhbiBpbnN0YW5jZSBvZiB0aGUgVXNlcm5hbWVQYXNzd29yZENyZWRlbnRpYWwgd2l0aCB0aGUgZGV0YWlsc1xuICAgICAqIG5lZWRlZCB0byBhdXRoZW50aWNhdGUgYWdhaW5zdCBNaWNyb3NvZnQgRW50cmEgSUQgd2l0aCBhIHVzZXJuYW1lXG4gICAgICogYW5kIHBhc3N3b3JkLlxuICAgICAqXG4gICAgICogQHBhcmFtIHRlbmFudElkIC0gVGhlIE1pY3Jvc29mdCBFbnRyYSB0ZW5hbnQgKGRpcmVjdG9yeSkuXG4gICAgICogQHBhcmFtIGNsaWVudElkIC0gVGhlIGNsaWVudCAoYXBwbGljYXRpb24pIElEIG9mIGFuIEFwcCBSZWdpc3RyYXRpb24gaW4gdGhlIHRlbmFudC5cbiAgICAgKiBAcGFyYW0gdXNlcm5hbWUgLSBUaGUgdXNlciBhY2NvdW50J3MgZS1tYWlsIGFkZHJlc3MgKHVzZXIgbmFtZSkuXG4gICAgICogQHBhcmFtIHBhc3N3b3JkIC0gVGhlIHVzZXIgYWNjb3VudCdzIGFjY291bnQgcGFzc3dvcmRcbiAgICAgKiBAcGFyYW0gb3B0aW9ucyAtIE9wdGlvbnMgZm9yIGNvbmZpZ3VyaW5nIHRoZSBjbGllbnQgd2hpY2ggbWFrZXMgdGhlIGF1dGhlbnRpY2F0aW9uIHJlcXVlc3QuXG4gICAgICovXG4gICAgY29uc3RydWN0b3IodGVuYW50SWQsIGNsaWVudElkLCB1c2VybmFtZSwgcGFzc3dvcmQsIG9wdGlvbnMgPSB7fSkge1xuICAgICAgICBpZiAoIXRlbmFudElkIHx8ICFjbGllbnRJZCB8fCAhdXNlcm5hbWUgfHwgIXBhc3N3b3JkKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJVc2VybmFtZVBhc3N3b3JkQ3JlZGVudGlhbDogdGVuYW50SWQsIGNsaWVudElkLCB1c2VybmFtZSBhbmQgcGFzc3dvcmQgYXJlIHJlcXVpcmVkIHBhcmFtZXRlcnMuIFRvIHRyb3VibGVzaG9vdCwgdmlzaXQgaHR0cHM6Ly9ha2EubXMvYXpzZGsvanMvaWRlbnRpdHkvdXNlcm5hbWVwYXNzd29yZGNyZWRlbnRpYWwvdHJvdWJsZXNob290LlwiKTtcbiAgICAgICAgfVxuICAgICAgICB0aGlzLnRlbmFudElkID0gdGVuYW50SWQ7XG4gICAgICAgIHRoaXMuYWRkaXRpb25hbGx5QWxsb3dlZFRlbmFudElkcyA9IHJlc29sdmVBZGRpdGlvbmFsbHlBbGxvd2VkVGVuYW50SWRzKG9wdGlvbnMgPT09IG51bGwgfHwgb3B0aW9ucyA9PT0gdm9pZCAwID8gdm9pZCAwIDogb3B0aW9ucy5hZGRpdGlvbmFsbHlBbGxvd2VkVGVuYW50cyk7XG4gICAgICAgIHRoaXMudXNlcm5hbWUgPSB1c2VybmFtZTtcbiAgICAgICAgdGhpcy5wYXNzd29yZCA9IHBhc3N3b3JkO1xuICAgICAgICB0aGlzLm1zYWxDbGllbnQgPSBjcmVhdGVNc2FsQ2xpZW50KGNsaWVudElkLCB0aGlzLnRlbmFudElkLCBPYmplY3QuYXNzaWduKE9iamVjdC5hc3NpZ24oe30sIG9wdGlvbnMpLCB7IHRva2VuQ3JlZGVudGlhbE9wdGlvbnM6IG9wdGlvbnMgIT09IG51bGwgJiYgb3B0aW9ucyAhPT0gdm9pZCAwID8gb3B0aW9ucyA6IHt9IH0pKTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogQXV0aGVudGljYXRlcyB3aXRoIE1pY3Jvc29mdCBFbnRyYSBJRCBhbmQgcmV0dXJucyBhbiBhY2Nlc3MgdG9rZW4gaWYgc3VjY2Vzc2Z1bC5cbiAgICAgKiBJZiBhdXRoZW50aWNhdGlvbiBmYWlscywgYSB7QGxpbmsgQ3JlZGVudGlhbFVuYXZhaWxhYmxlRXJyb3J9IHdpbGwgYmUgdGhyb3duIHdpdGggdGhlIGRldGFpbHMgb2YgdGhlIGZhaWx1cmUuXG4gICAgICpcbiAgICAgKiBJZiB0aGUgdXNlciBwcm92aWRlZCB0aGUgb3B0aW9uIGBkaXNhYmxlQXV0b21hdGljQXV0aGVudGljYXRpb25gLFxuICAgICAqIG9uY2UgdGhlIHRva2VuIGNhbid0IGJlIHJldHJpZXZlZCBzaWxlbnRseSxcbiAgICAgKiB0aGlzIG1ldGhvZCB3b24ndCBhdHRlbXB0IHRvIHJlcXVlc3QgdXNlciBpbnRlcmFjdGlvbiB0byByZXRyaWV2ZSB0aGUgdG9rZW4uXG4gICAgICpcbiAgICAgKiBAcGFyYW0gc2NvcGVzIC0gVGhlIGxpc3Qgb2Ygc2NvcGVzIGZvciB3aGljaCB0aGUgdG9rZW4gd2lsbCBoYXZlIGFjY2Vzcy5cbiAgICAgKiBAcGFyYW0gb3B0aW9ucyAtIFRoZSBvcHRpb25zIHVzZWQgdG8gY29uZmlndXJlIGFueSByZXF1ZXN0cyB0aGlzXG4gICAgICogICAgICAgICAgICAgICAgVG9rZW5DcmVkZW50aWFsIGltcGxlbWVudGF0aW9uIG1pZ2h0IG1ha2UuXG4gICAgICovXG4gICAgYXN5bmMgZ2V0VG9rZW4oc2NvcGVzLCBvcHRpb25zID0ge30pIHtcbiAgICAgICAgcmV0dXJuIHRyYWNpbmdDbGllbnQud2l0aFNwYW4oYCR7dGhpcy5jb25zdHJ1Y3Rvci5uYW1lfS5nZXRUb2tlbmAsIG9wdGlvbnMsIGFzeW5jIChuZXdPcHRpb25zKSA9PiB7XG4gICAgICAgICAgICBuZXdPcHRpb25zLnRlbmFudElkID0gcHJvY2Vzc011bHRpVGVuYW50UmVxdWVzdCh0aGlzLnRlbmFudElkLCBuZXdPcHRpb25zLCB0aGlzLmFkZGl0aW9uYWxseUFsbG93ZWRUZW5hbnRJZHMsIGxvZ2dlcik7XG4gICAgICAgICAgICBjb25zdCBhcnJheVNjb3BlcyA9IGVuc3VyZVNjb3BlcyhzY29wZXMpO1xuICAgICAgICAgICAgcmV0dXJuIHRoaXMubXNhbENsaWVudC5nZXRUb2tlbkJ5VXNlcm5hbWVQYXNzd29yZChhcnJheVNjb3BlcywgdGhpcy51c2VybmFtZSwgdGhpcy5wYXNzd29yZCwgbmV3T3B0aW9ucyk7XG4gICAgICAgIH0pO1xuICAgIH1cbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXVzZXJuYW1lUGFzc3dvcmRDcmVkZW50aWFsLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/identity/dist-esm/src/credentials/usernamePasswordCredential.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/identity/dist-esm/src/credentials/visualStudioCodeCredential.js":
/*!*********************************************************************************************!*\
  !*** ./node_modules/@azure/identity/dist-esm/src/credentials/visualStudioCodeCredential.js ***!
  \*********************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   VisualStudioCodeCredential: () => (/* binding */ VisualStudioCodeCredential),\n/* harmony export */   getPropertyFromVSCode: () => (/* binding */ getPropertyFromVSCode),\n/* harmony export */   vsCodeCredentialControl: () => (/* binding */ vsCodeCredentialControl)\n/* harmony export */ });\n/* harmony import */ var _util_logging__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../util/logging */ \"(rsc)/./node_modules/@azure/identity/dist-esm/src/util/logging.js\");\n/* harmony import */ var _util_tenantIdUtils__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../util/tenantIdUtils */ \"(rsc)/./node_modules/@azure/identity/dist-esm/src/util/tenantIdUtils.js\");\n/* harmony import */ var _util_tenantIdUtils__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../util/tenantIdUtils */ \"(rsc)/./node_modules/@azure/identity/dist-esm/src/util/processMultiTenantRequest.js\");\n/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../constants */ \"(rsc)/./node_modules/@azure/identity/dist-esm/src/constants.js\");\n/* harmony import */ var _errors__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../errors */ \"(rsc)/./node_modules/@azure/identity/dist-esm/src/errors.js\");\n/* harmony import */ var _client_identityClient__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../client/identityClient */ \"(rsc)/./node_modules/@azure/identity/dist-esm/src/client/identityClient.js\");\n/* harmony import */ var fs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! fs */ \"fs\");\n/* harmony import */ var fs__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(fs__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var os__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! os */ \"os\");\n/* harmony import */ var os__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(os__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var path__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! path */ \"path\");\n/* harmony import */ var path__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(path__WEBPACK_IMPORTED_MODULE_2__);\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\n\n\n\n\n\n\n\n\nconst CommonTenantId = \"common\";\nconst AzureAccountClientId = \"aebc6443-996d-45c2-90f0-388ff96faa56\"; // VSC: 'aebc6443-996d-45c2-90f0-388ff96faa56'\nconst logger = (0,_util_logging__WEBPACK_IMPORTED_MODULE_3__.credentialLogger)(\"VisualStudioCodeCredential\");\nlet findCredentials = undefined;\nconst vsCodeCredentialControl = {\n    setVsCodeCredentialFinder(finder) {\n        findCredentials = finder;\n    },\n};\n// Map of unsupported Tenant IDs and the errors we will be throwing.\nconst unsupportedTenantIds = {\n    adfs: \"The VisualStudioCodeCredential does not support authentication with ADFS tenants.\",\n};\nfunction checkUnsupportedTenant(tenantId) {\n    // If the Tenant ID isn't supported, we throw.\n    const unsupportedTenantError = unsupportedTenantIds[tenantId];\n    if (unsupportedTenantError) {\n        throw new _errors__WEBPACK_IMPORTED_MODULE_4__.CredentialUnavailableError(unsupportedTenantError);\n    }\n}\nconst mapVSCodeAuthorityHosts = {\n    AzureCloud: _constants__WEBPACK_IMPORTED_MODULE_5__.AzureAuthorityHosts.AzurePublicCloud,\n    AzureChina: _constants__WEBPACK_IMPORTED_MODULE_5__.AzureAuthorityHosts.AzureChina,\n    AzureGermanCloud: _constants__WEBPACK_IMPORTED_MODULE_5__.AzureAuthorityHosts.AzureGermany,\n    AzureUSGovernment: _constants__WEBPACK_IMPORTED_MODULE_5__.AzureAuthorityHosts.AzureGovernment,\n};\n/**\n * Attempts to load a specific property from the VSCode configurations of the current OS.\n * If it fails at any point, returns undefined.\n */\nfunction getPropertyFromVSCode(property) {\n    const settingsPath = [\"User\", \"settings.json\"];\n    // Eventually we can add more folders for more versions of VSCode.\n    const vsCodeFolder = \"Code\";\n    const homedir = os__WEBPACK_IMPORTED_MODULE_1___default().homedir();\n    function loadProperty(...pathSegments) {\n        const fullPath = path__WEBPACK_IMPORTED_MODULE_2___default().join(...pathSegments, vsCodeFolder, ...settingsPath);\n        const settings = JSON.parse(fs__WEBPACK_IMPORTED_MODULE_0___default().readFileSync(fullPath, { encoding: \"utf8\" }));\n        return settings[property];\n    }\n    try {\n        let appData;\n        switch (process.platform) {\n            case \"win32\":\n                appData = process.env.APPDATA;\n                return appData ? loadProperty(appData) : undefined;\n            case \"darwin\":\n                return loadProperty(homedir, \"Library\", \"Application Support\");\n            case \"linux\":\n                return loadProperty(homedir, \".config\");\n            default:\n                return;\n        }\n    }\n    catch (e) {\n        logger.info(`Failed to load the Visual Studio Code configuration file. Error: ${e.message}`);\n        return;\n    }\n}\n/**\n * Connects to Azure using the credential provided by the VSCode extension 'Azure Account'.\n * Once the user has logged in via the extension, this credential can share the same refresh token\n * that is cached by the extension.\n *\n * It's a [known issue](https://github.com/Azure/azure-sdk-for-js/issues/20500) that this credential doesn't\n * work with [Azure Account extension](https://marketplace.visualstudio.com/items?itemName=ms-vscode.azure-account)\n * versions newer than **0.9.11**. A long-term fix to this problem is in progress. In the meantime, consider\n * authenticating with {@link AzureCliCredential}.\n */\nclass VisualStudioCodeCredential {\n    /**\n     * Creates an instance of VisualStudioCodeCredential to use for automatically authenticating via VSCode.\n     *\n     * **Note**: `VisualStudioCodeCredential` is provided by a plugin package:\n     * `@azure/identity-vscode`. If this package is not installed and registered\n     * using the plugin API (`useIdentityPlugin`), then authentication using\n     * `VisualStudioCodeCredential` will not be available.\n     *\n     * @param options - Options for configuring the client which makes the authentication request.\n     */\n    constructor(options) {\n        // We want to make sure we use the one assigned by the user on the VSCode settings.\n        // Or just `AzureCloud` by default.\n        this.cloudName = (getPropertyFromVSCode(\"azure.cloud\") || \"AzureCloud\");\n        // Picking an authority host based on the cloud name.\n        const authorityHost = mapVSCodeAuthorityHosts[this.cloudName];\n        this.identityClient = new _client_identityClient__WEBPACK_IMPORTED_MODULE_6__.IdentityClient(Object.assign({ authorityHost }, options));\n        if (options && options.tenantId) {\n            (0,_util_tenantIdUtils__WEBPACK_IMPORTED_MODULE_7__.checkTenantId)(logger, options.tenantId);\n            this.tenantId = options.tenantId;\n        }\n        else {\n            this.tenantId = CommonTenantId;\n        }\n        this.additionallyAllowedTenantIds = (0,_util_tenantIdUtils__WEBPACK_IMPORTED_MODULE_7__.resolveAdditionallyAllowedTenantIds)(options === null || options === void 0 ? void 0 : options.additionallyAllowedTenants);\n        checkUnsupportedTenant(this.tenantId);\n    }\n    /**\n     * Runs preparations for any further getToken request.\n     */\n    async prepare() {\n        // Attempts to load the tenant from the VSCode configuration file.\n        const settingsTenant = getPropertyFromVSCode(\"azure.tenant\");\n        if (settingsTenant) {\n            this.tenantId = settingsTenant;\n        }\n        checkUnsupportedTenant(this.tenantId);\n    }\n    /**\n     * Runs preparations for any further getToken, but only once.\n     */\n    prepareOnce() {\n        if (!this.preparePromise) {\n            this.preparePromise = this.prepare();\n        }\n        return this.preparePromise;\n    }\n    /**\n     * Returns the token found by searching VSCode's authentication cache or\n     * returns null if no token could be found.\n     *\n     * @param scopes - The list of scopes for which the token will have access.\n     * @param options - The options used to configure any requests this\n     *                `TokenCredential` implementation might make.\n     */\n    async getToken(scopes, options) {\n        var _a, _b;\n        await this.prepareOnce();\n        const tenantId = (0,_util_tenantIdUtils__WEBPACK_IMPORTED_MODULE_8__.processMultiTenantRequest)(this.tenantId, options, this.additionallyAllowedTenantIds, logger) || this.tenantId;\n        if (findCredentials === undefined) {\n            throw new _errors__WEBPACK_IMPORTED_MODULE_4__.CredentialUnavailableError([\n                \"No implementation of `VisualStudioCodeCredential` is available.\",\n                \"You must install the identity-vscode plugin package (`npm install --save-dev @azure/identity-vscode`)\",\n                \"and enable it by importing `useIdentityPlugin` from `@azure/identity` and calling\",\n                \"`useIdentityPlugin(vsCodePlugin)` before creating a `VisualStudioCodeCredential`.\",\n                \"To troubleshoot, visit https://aka.ms/azsdk/js/identity/vscodecredential/troubleshoot.\",\n            ].join(\" \"));\n        }\n        let scopeString = typeof scopes === \"string\" ? scopes : scopes.join(\" \");\n        // Check to make sure the scope we get back is a valid scope\n        if (!scopeString.match(/^[0-9a-zA-Z-.:/]+$/)) {\n            const error = new Error(\"Invalid scope was specified by the user or calling client\");\n            logger.getToken.info((0,_util_logging__WEBPACK_IMPORTED_MODULE_3__.formatError)(scopes, error));\n            throw error;\n        }\n        if (scopeString.indexOf(\"offline_access\") < 0) {\n            scopeString += \" offline_access\";\n        }\n        // findCredentials returns an array similar to:\n        // [\n        //   {\n        //     account: \"\",\n        //     password: \"\",\n        //   },\n        //   /* ... */\n        // ]\n        const credentials = await findCredentials();\n        // If we can't find the credential based on the name, we'll pick the first one available.\n        const { password: refreshToken } = (_b = (_a = credentials.find(({ account }) => account === this.cloudName)) !== null && _a !== void 0 ? _a : credentials[0]) !== null && _b !== void 0 ? _b : {};\n        if (refreshToken) {\n            const tokenResponse = await this.identityClient.refreshAccessToken(tenantId, AzureAccountClientId, scopeString, refreshToken, undefined);\n            if (tokenResponse) {\n                logger.getToken.info((0,_util_logging__WEBPACK_IMPORTED_MODULE_3__.formatSuccess)(scopes));\n                return tokenResponse.accessToken;\n            }\n            else {\n                const error = new _errors__WEBPACK_IMPORTED_MODULE_4__.CredentialUnavailableError(\"Could not retrieve the token associated with Visual Studio Code. Have you connected using the 'Azure Account' extension recently? To troubleshoot, visit https://aka.ms/azsdk/js/identity/vscodecredential/troubleshoot.\");\n                logger.getToken.info((0,_util_logging__WEBPACK_IMPORTED_MODULE_3__.formatError)(scopes, error));\n                throw error;\n            }\n        }\n        else {\n            const error = new _errors__WEBPACK_IMPORTED_MODULE_4__.CredentialUnavailableError(\"Could not retrieve the token associated with Visual Studio Code. Did you connect using the 'Azure Account' extension? To troubleshoot, visit https://aka.ms/azsdk/js/identity/vscodecredential/troubleshoot.\");\n            logger.getToken.info((0,_util_logging__WEBPACK_IMPORTED_MODULE_3__.formatError)(scopes, error));\n            throw error;\n        }\n    }\n}\n//# sourceMappingURL=visualStudioCodeCredential.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/identity/dist-esm/src/credentials/visualStudioCodeCredential.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/identity/dist-esm/src/credentials/workloadIdentityCredential.js":
/*!*********************************************************************************************!*\
  !*** ./node_modules/@azure/identity/dist-esm/src/credentials/workloadIdentityCredential.js ***!
  \*********************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   SupportedWorkloadEnvironmentVariables: () => (/* binding */ SupportedWorkloadEnvironmentVariables),\n/* harmony export */   WorkloadIdentityCredential: () => (/* binding */ WorkloadIdentityCredential)\n/* harmony export */ });\n/* harmony import */ var _clientAssertionCredential__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./clientAssertionCredential */ \"(rsc)/./node_modules/@azure/identity/dist-esm/src/credentials/clientAssertionCredential.js\");\n/* harmony import */ var fs_promises__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! fs/promises */ \"fs/promises\");\n/* harmony import */ var fs_promises__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(fs_promises__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _errors__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../errors */ \"(rsc)/./node_modules/@azure/identity/dist-esm/src/errors.js\");\n/* harmony import */ var _util_logging__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../util/logging */ \"(rsc)/./node_modules/@azure/identity/dist-esm/src/util/logging.js\");\n/* harmony import */ var _util_tenantIdUtils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../util/tenantIdUtils */ \"(rsc)/./node_modules/@azure/identity/dist-esm/src/util/tenantIdUtils.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\n\n\n\n\nconst credentialName = \"WorkloadIdentityCredential\";\n/**\n * Contains the list of all supported environment variable names so that an\n * appropriate error message can be generated when no credentials can be\n * configured.\n *\n * @internal\n */\nconst SupportedWorkloadEnvironmentVariables = [\n    \"AZURE_TENANT_ID\",\n    \"AZURE_CLIENT_ID\",\n    \"AZURE_FEDERATED_TOKEN_FILE\",\n];\nconst logger = (0,_util_logging__WEBPACK_IMPORTED_MODULE_1__.credentialLogger)(credentialName);\n/**\n * Workload Identity authentication is a feature in Azure that allows applications running on virtual machines (VMs)\n * to access other Azure resources without the need for a service principal or managed identity. With Workload Identity\n * authentication, applications authenticate themselves using their own identity, rather than using a shared service\n * principal or managed identity. Under the hood, Workload Identity authentication uses the concept of Service Account\n * Credentials (SACs), which are automatically created by Azure and stored securely in the VM. By using Workload\n * Identity authentication, you can avoid the need to manage and rotate service principals or managed identities for\n * each application on each VM. Additionally, because SACs are created automatically and managed by Azure, you don't\n * need to worry about storing and securing sensitive credentials themselves.\n * The WorkloadIdentityCredential supports Microsoft Entra Workload ID authentication on Azure Kubernetes and acquires\n * a token using the SACs available in the Azure Kubernetes environment.\n * Refer to <a href=\"https://learn.microsoft.com/azure/aks/workload-identity-overview\">Microsoft Entra\n * Workload ID</a> for more information.\n */\nclass WorkloadIdentityCredential {\n    /**\n     * WorkloadIdentityCredential supports Microsoft Entra Workload ID on Kubernetes.\n     *\n     * @param options - The identity client options to use for authentication.\n     */\n    constructor(options) {\n        this.azureFederatedTokenFileContent = undefined;\n        this.cacheDate = undefined;\n        // Logging environment variables for error details\n        const assignedEnv = (0,_util_logging__WEBPACK_IMPORTED_MODULE_1__.processEnvVars)(SupportedWorkloadEnvironmentVariables).assigned.join(\", \");\n        logger.info(`Found the following environment variables: ${assignedEnv}`);\n        const workloadIdentityCredentialOptions = options !== null && options !== void 0 ? options : {};\n        const tenantId = workloadIdentityCredentialOptions.tenantId || process.env.AZURE_TENANT_ID;\n        const clientId = workloadIdentityCredentialOptions.clientId || process.env.AZURE_CLIENT_ID;\n        this.federatedTokenFilePath =\n            workloadIdentityCredentialOptions.tokenFilePath || process.env.AZURE_FEDERATED_TOKEN_FILE;\n        if (tenantId) {\n            (0,_util_tenantIdUtils__WEBPACK_IMPORTED_MODULE_2__.checkTenantId)(logger, tenantId);\n        }\n        if (clientId && tenantId && this.federatedTokenFilePath) {\n            logger.info(`Invoking ClientAssertionCredential with tenant ID: ${tenantId}, clientId: ${workloadIdentityCredentialOptions.clientId} and federated token path: [REDACTED]`);\n            this.client = new _clientAssertionCredential__WEBPACK_IMPORTED_MODULE_3__.ClientAssertionCredential(tenantId, clientId, this.readFileContents.bind(this), options);\n        }\n    }\n    /**\n     * Authenticates with Microsoft Entra ID and returns an access token if successful.\n     * If authentication fails, a {@link CredentialUnavailableError} will be thrown with the details of the failure.\n     *\n     * @param scopes - The list of scopes for which the token will have access.\n     * @param options - The options used to configure any requests this\n     *                TokenCredential implementation might make.\n     */\n    async getToken(scopes, options) {\n        if (!this.client) {\n            const errorMessage = `${credentialName}: is unavailable. tenantId, clientId, and federatedTokenFilePath are required parameters. \n      In DefaultAzureCredential and ManagedIdentityCredential, these can be provided as environment variables - \n      \"AZURE_TENANT_ID\",\n      \"AZURE_CLIENT_ID\",\n      \"AZURE_FEDERATED_TOKEN_FILE\". See the troubleshooting guide for more information: https://aka.ms/azsdk/js/identity/workloadidentitycredential/troubleshoot  `;\n            logger.info(errorMessage);\n            throw new _errors__WEBPACK_IMPORTED_MODULE_4__.CredentialUnavailableError(errorMessage);\n        }\n        logger.info(\"Invoking getToken() of Client Assertion Credential\");\n        return this.client.getToken(scopes, options);\n    }\n    async readFileContents() {\n        // Cached assertions expire after 5 minutes\n        if (this.cacheDate !== undefined && Date.now() - this.cacheDate >= 1000 * 60 * 5) {\n            this.azureFederatedTokenFileContent = undefined;\n        }\n        if (!this.federatedTokenFilePath) {\n            throw new _errors__WEBPACK_IMPORTED_MODULE_4__.CredentialUnavailableError(`${credentialName}: is unavailable. Invalid file path provided ${this.federatedTokenFilePath}.`);\n        }\n        if (!this.azureFederatedTokenFileContent) {\n            const file = await (0,fs_promises__WEBPACK_IMPORTED_MODULE_0__.readFile)(this.federatedTokenFilePath, \"utf8\");\n            const value = file.trim();\n            if (!value) {\n                throw new _errors__WEBPACK_IMPORTED_MODULE_4__.CredentialUnavailableError(`${credentialName}: is unavailable. No content on the file ${this.federatedTokenFilePath}.`);\n            }\n            else {\n                this.azureFederatedTokenFileContent = value;\n                this.cacheDate = Date.now();\n            }\n        }\n        return this.azureFederatedTokenFileContent;\n    }\n}\n//# sourceMappingURL=workloadIdentityCredential.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/identity/dist-esm/src/credentials/workloadIdentityCredential.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/identity/dist-esm/src/errors.js":
/*!*************************************************************!*\
  !*** ./node_modules/@azure/identity/dist-esm/src/errors.js ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AggregateAuthenticationError: () => (/* binding */ AggregateAuthenticationError),\n/* harmony export */   AggregateAuthenticationErrorName: () => (/* binding */ AggregateAuthenticationErrorName),\n/* harmony export */   AuthenticationError: () => (/* binding */ AuthenticationError),\n/* harmony export */   AuthenticationErrorName: () => (/* binding */ AuthenticationErrorName),\n/* harmony export */   AuthenticationRequiredError: () => (/* binding */ AuthenticationRequiredError),\n/* harmony export */   CredentialUnavailableError: () => (/* binding */ CredentialUnavailableError),\n/* harmony export */   CredentialUnavailableErrorName: () => (/* binding */ CredentialUnavailableErrorName)\n/* harmony export */ });\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\nfunction isErrorResponse(errorResponse) {\n    return (errorResponse &&\n        typeof errorResponse.error === \"string\" &&\n        typeof errorResponse.error_description === \"string\");\n}\n/**\n * The Error.name value of an CredentialUnavailable\n */\nconst CredentialUnavailableErrorName = \"CredentialUnavailableError\";\n/**\n * This signifies that the credential that was tried in a chained credential\n * was not available to be used as the credential. Rather than treating this as\n * an error that should halt the chain, it's caught and the chain continues\n */\nclass CredentialUnavailableError extends Error {\n    constructor(message) {\n        super(message);\n        this.name = CredentialUnavailableErrorName;\n    }\n}\n/**\n * The Error.name value of an AuthenticationError\n */\nconst AuthenticationErrorName = \"AuthenticationError\";\n/**\n * Provides details about a failure to authenticate with Azure Active\n * Directory.  The `errorResponse` field contains more details about\n * the specific failure.\n */\nclass AuthenticationError extends Error {\n    // eslint-disable-next-line @typescript-eslint/ban-types\n    constructor(statusCode, errorBody) {\n        let errorResponse = {\n            error: \"unknown\",\n            errorDescription: \"An unknown error occurred and no additional details are available.\",\n        };\n        if (isErrorResponse(errorBody)) {\n            errorResponse = convertOAuthErrorResponseToErrorResponse(errorBody);\n        }\n        else if (typeof errorBody === \"string\") {\n            try {\n                // Most error responses will contain JSON-formatted error details\n                // in the response body\n                const oauthErrorResponse = JSON.parse(errorBody);\n                errorResponse = convertOAuthErrorResponseToErrorResponse(oauthErrorResponse);\n            }\n            catch (e) {\n                if (statusCode === 400) {\n                    errorResponse = {\n                        error: \"authority_not_found\",\n                        errorDescription: \"The specified authority URL was not found.\",\n                    };\n                }\n                else {\n                    errorResponse = {\n                        error: \"unknown_error\",\n                        errorDescription: `An unknown error has occurred. Response body:\\n\\n${errorBody}`,\n                    };\n                }\n            }\n        }\n        else {\n            errorResponse = {\n                error: \"unknown_error\",\n                errorDescription: \"An unknown error occurred and no additional details are available.\",\n            };\n        }\n        super(`${errorResponse.error} Status code: ${statusCode}\\nMore details:\\n${errorResponse.errorDescription}`);\n        this.statusCode = statusCode;\n        this.errorResponse = errorResponse;\n        // Ensure that this type reports the correct name\n        this.name = AuthenticationErrorName;\n    }\n}\n/**\n * The Error.name value of an AggregateAuthenticationError\n */\nconst AggregateAuthenticationErrorName = \"AggregateAuthenticationError\";\n/**\n * Provides an `errors` array containing {@link AuthenticationError} instance\n * for authentication failures from credentials in a {@link ChainedTokenCredential}.\n */\nclass AggregateAuthenticationError extends Error {\n    constructor(errors, errorMessage) {\n        const errorDetail = errors.join(\"\\n\");\n        super(`${errorMessage}\\n${errorDetail}`);\n        this.errors = errors;\n        // Ensure that this type reports the correct name\n        this.name = AggregateAuthenticationErrorName;\n    }\n}\nfunction convertOAuthErrorResponseToErrorResponse(errorBody) {\n    return {\n        error: errorBody.error,\n        errorDescription: errorBody.error_description,\n        correlationId: errorBody.correlation_id,\n        errorCodes: errorBody.error_codes,\n        timestamp: errorBody.timestamp,\n        traceId: errorBody.trace_id,\n    };\n}\n/**\n * Error used to enforce authentication after trying to retrieve a token silently.\n */\nclass AuthenticationRequiredError extends Error {\n    constructor(\n    /**\n     * Optional parameters. A message can be specified. The {@link GetTokenOptions} of the request can also be specified to more easily associate the error with the received parameters.\n     */\n    options) {\n        super(options.message);\n        this.scopes = options.scopes;\n        this.getTokenOptions = options.getTokenOptions;\n        this.name = \"AuthenticationRequiredError\";\n    }\n}\n//# sourceMappingURL=errors.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2lkZW50aXR5L2Rpc3QtZXNtL3NyYy9lcnJvcnMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsOEZBQThGLFVBQVU7QUFDeEc7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUIscUJBQXFCLGVBQWUsV0FBVyxtQkFBbUIsK0JBQStCO0FBQ2xIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQSwwQ0FBMEMsMkJBQTJCO0FBQ3JFLHNEQUFzRCw2QkFBNkI7QUFDbkY7QUFDTztBQUNQO0FBQ0E7QUFDQSxpQkFBaUIsYUFBYSxJQUFJLFlBQVk7QUFDOUM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0EsNkRBQTZELHVCQUF1QjtBQUNwRjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9kYW5pZWwzLXZwMi8uL25vZGVfbW9kdWxlcy9AYXp1cmUvaWRlbnRpdHkvZGlzdC1lc20vc3JjL2Vycm9ycy5qcz9iYTkwIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLlxuLy8gTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlLlxuZnVuY3Rpb24gaXNFcnJvclJlc3BvbnNlKGVycm9yUmVzcG9uc2UpIHtcbiAgICByZXR1cm4gKGVycm9yUmVzcG9uc2UgJiZcbiAgICAgICAgdHlwZW9mIGVycm9yUmVzcG9uc2UuZXJyb3IgPT09IFwic3RyaW5nXCIgJiZcbiAgICAgICAgdHlwZW9mIGVycm9yUmVzcG9uc2UuZXJyb3JfZGVzY3JpcHRpb24gPT09IFwic3RyaW5nXCIpO1xufVxuLyoqXG4gKiBUaGUgRXJyb3IubmFtZSB2YWx1ZSBvZiBhbiBDcmVkZW50aWFsVW5hdmFpbGFibGVcbiAqL1xuZXhwb3J0IGNvbnN0IENyZWRlbnRpYWxVbmF2YWlsYWJsZUVycm9yTmFtZSA9IFwiQ3JlZGVudGlhbFVuYXZhaWxhYmxlRXJyb3JcIjtcbi8qKlxuICogVGhpcyBzaWduaWZpZXMgdGhhdCB0aGUgY3JlZGVudGlhbCB0aGF0IHdhcyB0cmllZCBpbiBhIGNoYWluZWQgY3JlZGVudGlhbFxuICogd2FzIG5vdCBhdmFpbGFibGUgdG8gYmUgdXNlZCBhcyB0aGUgY3JlZGVudGlhbC4gUmF0aGVyIHRoYW4gdHJlYXRpbmcgdGhpcyBhc1xuICogYW4gZXJyb3IgdGhhdCBzaG91bGQgaGFsdCB0aGUgY2hhaW4sIGl0J3MgY2F1Z2h0IGFuZCB0aGUgY2hhaW4gY29udGludWVzXG4gKi9cbmV4cG9ydCBjbGFzcyBDcmVkZW50aWFsVW5hdmFpbGFibGVFcnJvciBleHRlbmRzIEVycm9yIHtcbiAgICBjb25zdHJ1Y3RvcihtZXNzYWdlKSB7XG4gICAgICAgIHN1cGVyKG1lc3NhZ2UpO1xuICAgICAgICB0aGlzLm5hbWUgPSBDcmVkZW50aWFsVW5hdmFpbGFibGVFcnJvck5hbWU7XG4gICAgfVxufVxuLyoqXG4gKiBUaGUgRXJyb3IubmFtZSB2YWx1ZSBvZiBhbiBBdXRoZW50aWNhdGlvbkVycm9yXG4gKi9cbmV4cG9ydCBjb25zdCBBdXRoZW50aWNhdGlvbkVycm9yTmFtZSA9IFwiQXV0aGVudGljYXRpb25FcnJvclwiO1xuLyoqXG4gKiBQcm92aWRlcyBkZXRhaWxzIGFib3V0IGEgZmFpbHVyZSB0byBhdXRoZW50aWNhdGUgd2l0aCBBenVyZSBBY3RpdmVcbiAqIERpcmVjdG9yeS4gIFRoZSBgZXJyb3JSZXNwb25zZWAgZmllbGQgY29udGFpbnMgbW9yZSBkZXRhaWxzIGFib3V0XG4gKiB0aGUgc3BlY2lmaWMgZmFpbHVyZS5cbiAqL1xuZXhwb3J0IGNsYXNzIEF1dGhlbnRpY2F0aW9uRXJyb3IgZXh0ZW5kcyBFcnJvciB7XG4gICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIEB0eXBlc2NyaXB0LWVzbGludC9iYW4tdHlwZXNcbiAgICBjb25zdHJ1Y3RvcihzdGF0dXNDb2RlLCBlcnJvckJvZHkpIHtcbiAgICAgICAgbGV0IGVycm9yUmVzcG9uc2UgPSB7XG4gICAgICAgICAgICBlcnJvcjogXCJ1bmtub3duXCIsXG4gICAgICAgICAgICBlcnJvckRlc2NyaXB0aW9uOiBcIkFuIHVua25vd24gZXJyb3Igb2NjdXJyZWQgYW5kIG5vIGFkZGl0aW9uYWwgZGV0YWlscyBhcmUgYXZhaWxhYmxlLlwiLFxuICAgICAgICB9O1xuICAgICAgICBpZiAoaXNFcnJvclJlc3BvbnNlKGVycm9yQm9keSkpIHtcbiAgICAgICAgICAgIGVycm9yUmVzcG9uc2UgPSBjb252ZXJ0T0F1dGhFcnJvclJlc3BvbnNlVG9FcnJvclJlc3BvbnNlKGVycm9yQm9keSk7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSBpZiAodHlwZW9mIGVycm9yQm9keSA9PT0gXCJzdHJpbmdcIikge1xuICAgICAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgICAgICAvLyBNb3N0IGVycm9yIHJlc3BvbnNlcyB3aWxsIGNvbnRhaW4gSlNPTi1mb3JtYXR0ZWQgZXJyb3IgZGV0YWlsc1xuICAgICAgICAgICAgICAgIC8vIGluIHRoZSByZXNwb25zZSBib2R5XG4gICAgICAgICAgICAgICAgY29uc3Qgb2F1dGhFcnJvclJlc3BvbnNlID0gSlNPTi5wYXJzZShlcnJvckJvZHkpO1xuICAgICAgICAgICAgICAgIGVycm9yUmVzcG9uc2UgPSBjb252ZXJ0T0F1dGhFcnJvclJlc3BvbnNlVG9FcnJvclJlc3BvbnNlKG9hdXRoRXJyb3JSZXNwb25zZSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBjYXRjaCAoZSkge1xuICAgICAgICAgICAgICAgIGlmIChzdGF0dXNDb2RlID09PSA0MDApIHtcbiAgICAgICAgICAgICAgICAgICAgZXJyb3JSZXNwb25zZSA9IHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGVycm9yOiBcImF1dGhvcml0eV9ub3RfZm91bmRcIixcbiAgICAgICAgICAgICAgICAgICAgICAgIGVycm9yRGVzY3JpcHRpb246IFwiVGhlIHNwZWNpZmllZCBhdXRob3JpdHkgVVJMIHdhcyBub3QgZm91bmQuXCIsXG4gICAgICAgICAgICAgICAgICAgIH07XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICBlcnJvclJlc3BvbnNlID0ge1xuICAgICAgICAgICAgICAgICAgICAgICAgZXJyb3I6IFwidW5rbm93bl9lcnJvclwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgZXJyb3JEZXNjcmlwdGlvbjogYEFuIHVua25vd24gZXJyb3IgaGFzIG9jY3VycmVkLiBSZXNwb25zZSBib2R5OlxcblxcbiR7ZXJyb3JCb2R5fWAsXG4gICAgICAgICAgICAgICAgICAgIH07XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgZXJyb3JSZXNwb25zZSA9IHtcbiAgICAgICAgICAgICAgICBlcnJvcjogXCJ1bmtub3duX2Vycm9yXCIsXG4gICAgICAgICAgICAgICAgZXJyb3JEZXNjcmlwdGlvbjogXCJBbiB1bmtub3duIGVycm9yIG9jY3VycmVkIGFuZCBubyBhZGRpdGlvbmFsIGRldGFpbHMgYXJlIGF2YWlsYWJsZS5cIixcbiAgICAgICAgICAgIH07XG4gICAgICAgIH1cbiAgICAgICAgc3VwZXIoYCR7ZXJyb3JSZXNwb25zZS5lcnJvcn0gU3RhdHVzIGNvZGU6ICR7c3RhdHVzQ29kZX1cXG5Nb3JlIGRldGFpbHM6XFxuJHtlcnJvclJlc3BvbnNlLmVycm9yRGVzY3JpcHRpb259YCk7XG4gICAgICAgIHRoaXMuc3RhdHVzQ29kZSA9IHN0YXR1c0NvZGU7XG4gICAgICAgIHRoaXMuZXJyb3JSZXNwb25zZSA9IGVycm9yUmVzcG9uc2U7XG4gICAgICAgIC8vIEVuc3VyZSB0aGF0IHRoaXMgdHlwZSByZXBvcnRzIHRoZSBjb3JyZWN0IG5hbWVcbiAgICAgICAgdGhpcy5uYW1lID0gQXV0aGVudGljYXRpb25FcnJvck5hbWU7XG4gICAgfVxufVxuLyoqXG4gKiBUaGUgRXJyb3IubmFtZSB2YWx1ZSBvZiBhbiBBZ2dyZWdhdGVBdXRoZW50aWNhdGlvbkVycm9yXG4gKi9cbmV4cG9ydCBjb25zdCBBZ2dyZWdhdGVBdXRoZW50aWNhdGlvbkVycm9yTmFtZSA9IFwiQWdncmVnYXRlQXV0aGVudGljYXRpb25FcnJvclwiO1xuLyoqXG4gKiBQcm92aWRlcyBhbiBgZXJyb3JzYCBhcnJheSBjb250YWluaW5nIHtAbGluayBBdXRoZW50aWNhdGlvbkVycm9yfSBpbnN0YW5jZVxuICogZm9yIGF1dGhlbnRpY2F0aW9uIGZhaWx1cmVzIGZyb20gY3JlZGVudGlhbHMgaW4gYSB7QGxpbmsgQ2hhaW5lZFRva2VuQ3JlZGVudGlhbH0uXG4gKi9cbmV4cG9ydCBjbGFzcyBBZ2dyZWdhdGVBdXRoZW50aWNhdGlvbkVycm9yIGV4dGVuZHMgRXJyb3Ige1xuICAgIGNvbnN0cnVjdG9yKGVycm9ycywgZXJyb3JNZXNzYWdlKSB7XG4gICAgICAgIGNvbnN0IGVycm9yRGV0YWlsID0gZXJyb3JzLmpvaW4oXCJcXG5cIik7XG4gICAgICAgIHN1cGVyKGAke2Vycm9yTWVzc2FnZX1cXG4ke2Vycm9yRGV0YWlsfWApO1xuICAgICAgICB0aGlzLmVycm9ycyA9IGVycm9ycztcbiAgICAgICAgLy8gRW5zdXJlIHRoYXQgdGhpcyB0eXBlIHJlcG9ydHMgdGhlIGNvcnJlY3QgbmFtZVxuICAgICAgICB0aGlzLm5hbWUgPSBBZ2dyZWdhdGVBdXRoZW50aWNhdGlvbkVycm9yTmFtZTtcbiAgICB9XG59XG5mdW5jdGlvbiBjb252ZXJ0T0F1dGhFcnJvclJlc3BvbnNlVG9FcnJvclJlc3BvbnNlKGVycm9yQm9keSkge1xuICAgIHJldHVybiB7XG4gICAgICAgIGVycm9yOiBlcnJvckJvZHkuZXJyb3IsXG4gICAgICAgIGVycm9yRGVzY3JpcHRpb246IGVycm9yQm9keS5lcnJvcl9kZXNjcmlwdGlvbixcbiAgICAgICAgY29ycmVsYXRpb25JZDogZXJyb3JCb2R5LmNvcnJlbGF0aW9uX2lkLFxuICAgICAgICBlcnJvckNvZGVzOiBlcnJvckJvZHkuZXJyb3JfY29kZXMsXG4gICAgICAgIHRpbWVzdGFtcDogZXJyb3JCb2R5LnRpbWVzdGFtcCxcbiAgICAgICAgdHJhY2VJZDogZXJyb3JCb2R5LnRyYWNlX2lkLFxuICAgIH07XG59XG4vKipcbiAqIEVycm9yIHVzZWQgdG8gZW5mb3JjZSBhdXRoZW50aWNhdGlvbiBhZnRlciB0cnlpbmcgdG8gcmV0cmlldmUgYSB0b2tlbiBzaWxlbnRseS5cbiAqL1xuZXhwb3J0IGNsYXNzIEF1dGhlbnRpY2F0aW9uUmVxdWlyZWRFcnJvciBleHRlbmRzIEVycm9yIHtcbiAgICBjb25zdHJ1Y3RvcihcbiAgICAvKipcbiAgICAgKiBPcHRpb25hbCBwYXJhbWV0ZXJzLiBBIG1lc3NhZ2UgY2FuIGJlIHNwZWNpZmllZC4gVGhlIHtAbGluayBHZXRUb2tlbk9wdGlvbnN9IG9mIHRoZSByZXF1ZXN0IGNhbiBhbHNvIGJlIHNwZWNpZmllZCB0byBtb3JlIGVhc2lseSBhc3NvY2lhdGUgdGhlIGVycm9yIHdpdGggdGhlIHJlY2VpdmVkIHBhcmFtZXRlcnMuXG4gICAgICovXG4gICAgb3B0aW9ucykge1xuICAgICAgICBzdXBlcihvcHRpb25zLm1lc3NhZ2UpO1xuICAgICAgICB0aGlzLnNjb3BlcyA9IG9wdGlvbnMuc2NvcGVzO1xuICAgICAgICB0aGlzLmdldFRva2VuT3B0aW9ucyA9IG9wdGlvbnMuZ2V0VG9rZW5PcHRpb25zO1xuICAgICAgICB0aGlzLm5hbWUgPSBcIkF1dGhlbnRpY2F0aW9uUmVxdWlyZWRFcnJvclwiO1xuICAgIH1cbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWVycm9ycy5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/identity/dist-esm/src/errors.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/identity/dist-esm/src/index.js":
/*!************************************************************!*\
  !*** ./node_modules/@azure/identity/dist-esm/src/index.js ***!
  \************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AggregateAuthenticationError: () => (/* reexport safe */ _errors__WEBPACK_IMPORTED_MODULE_1__.AggregateAuthenticationError),\n/* harmony export */   AggregateAuthenticationErrorName: () => (/* reexport safe */ _errors__WEBPACK_IMPORTED_MODULE_1__.AggregateAuthenticationErrorName),\n/* harmony export */   AuthenticationError: () => (/* reexport safe */ _errors__WEBPACK_IMPORTED_MODULE_1__.AuthenticationError),\n/* harmony export */   AuthenticationErrorName: () => (/* reexport safe */ _errors__WEBPACK_IMPORTED_MODULE_1__.AuthenticationErrorName),\n/* harmony export */   AuthenticationRequiredError: () => (/* reexport safe */ _errors__WEBPACK_IMPORTED_MODULE_1__.AuthenticationRequiredError),\n/* harmony export */   AuthorizationCodeCredential: () => (/* reexport safe */ _credentials_authorizationCodeCredential__WEBPACK_IMPORTED_MODULE_15__.AuthorizationCodeCredential),\n/* harmony export */   AzureAuthorityHosts: () => (/* reexport safe */ _constants__WEBPACK_IMPORTED_MODULE_22__.AzureAuthorityHosts),\n/* harmony export */   AzureCliCredential: () => (/* reexport safe */ _credentials_azureCliCredential__WEBPACK_IMPORTED_MODULE_9__.AzureCliCredential),\n/* harmony export */   AzureDeveloperCliCredential: () => (/* reexport safe */ _credentials_azureDeveloperCliCredential__WEBPACK_IMPORTED_MODULE_10__.AzureDeveloperCliCredential),\n/* harmony export */   AzurePipelinesCredential: () => (/* reexport safe */ _credentials_azurePipelinesCredential__WEBPACK_IMPORTED_MODULE_14__.AzurePipelinesCredential),\n/* harmony export */   AzurePowerShellCredential: () => (/* reexport safe */ _credentials_azurePowerShellCredential__WEBPACK_IMPORTED_MODULE_16__.AzurePowerShellCredential),\n/* harmony export */   ChainedTokenCredential: () => (/* reexport safe */ _credentials_chainedTokenCredential__WEBPACK_IMPORTED_MODULE_3__.ChainedTokenCredential),\n/* harmony export */   ClientAssertionCredential: () => (/* reexport safe */ _credentials_clientAssertionCredential__WEBPACK_IMPORTED_MODULE_8__.ClientAssertionCredential),\n/* harmony export */   ClientCertificateCredential: () => (/* reexport safe */ _credentials_clientCertificateCredential__WEBPACK_IMPORTED_MODULE_7__.ClientCertificateCredential),\n/* harmony export */   ClientSecretCredential: () => (/* reexport safe */ _credentials_clientSecretCredential__WEBPACK_IMPORTED_MODULE_4__.ClientSecretCredential),\n/* harmony export */   CredentialUnavailableError: () => (/* reexport safe */ _errors__WEBPACK_IMPORTED_MODULE_1__.CredentialUnavailableError),\n/* harmony export */   CredentialUnavailableErrorName: () => (/* reexport safe */ _errors__WEBPACK_IMPORTED_MODULE_1__.CredentialUnavailableErrorName),\n/* harmony export */   DefaultAzureCredential: () => (/* reexport safe */ _credentials_defaultAzureCredential__WEBPACK_IMPORTED_MODULE_5__.DefaultAzureCredential),\n/* harmony export */   DeviceCodeCredential: () => (/* reexport safe */ _credentials_deviceCodeCredential__WEBPACK_IMPORTED_MODULE_13__.DeviceCodeCredential),\n/* harmony export */   EnvironmentCredential: () => (/* reexport safe */ _credentials_environmentCredential__WEBPACK_IMPORTED_MODULE_6__.EnvironmentCredential),\n/* harmony export */   InteractiveBrowserCredential: () => (/* reexport safe */ _credentials_interactiveBrowserCredential__WEBPACK_IMPORTED_MODULE_11__.InteractiveBrowserCredential),\n/* harmony export */   ManagedIdentityCredential: () => (/* reexport safe */ _credentials_managedIdentityCredential__WEBPACK_IMPORTED_MODULE_12__.ManagedIdentityCredential),\n/* harmony export */   OnBehalfOfCredential: () => (/* reexport safe */ _credentials_onBehalfOfCredential__WEBPACK_IMPORTED_MODULE_19__.OnBehalfOfCredential),\n/* harmony export */   UsernamePasswordCredential: () => (/* reexport safe */ _credentials_usernamePasswordCredential__WEBPACK_IMPORTED_MODULE_17__.UsernamePasswordCredential),\n/* harmony export */   VisualStudioCodeCredential: () => (/* reexport safe */ _credentials_visualStudioCodeCredential__WEBPACK_IMPORTED_MODULE_18__.VisualStudioCodeCredential),\n/* harmony export */   WorkloadIdentityCredential: () => (/* reexport safe */ _credentials_workloadIdentityCredential__WEBPACK_IMPORTED_MODULE_20__.WorkloadIdentityCredential),\n/* harmony export */   deserializeAuthenticationRecord: () => (/* reexport safe */ _msal_utils__WEBPACK_IMPORTED_MODULE_2__.deserializeAuthenticationRecord),\n/* harmony export */   getBearerTokenProvider: () => (/* reexport safe */ _tokenProvider__WEBPACK_IMPORTED_MODULE_23__.getBearerTokenProvider),\n/* harmony export */   getDefaultAzureCredential: () => (/* binding */ getDefaultAzureCredential),\n/* harmony export */   logger: () => (/* reexport safe */ _util_logging__WEBPACK_IMPORTED_MODULE_21__.logger),\n/* harmony export */   serializeAuthenticationRecord: () => (/* reexport safe */ _msal_utils__WEBPACK_IMPORTED_MODULE_2__.serializeAuthenticationRecord),\n/* harmony export */   useIdentityPlugin: () => (/* reexport safe */ _plugins_consumer__WEBPACK_IMPORTED_MODULE_0__.useIdentityPlugin)\n/* harmony export */ });\n/* harmony import */ var _plugins_consumer__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./plugins/consumer */ \"(rsc)/./node_modules/@azure/identity/dist-esm/src/plugins/consumer.js\");\n/* harmony import */ var _credentials_defaultAzureCredential__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./credentials/defaultAzureCredential */ \"(rsc)/./node_modules/@azure/identity/dist-esm/src/credentials/defaultAzureCredential.js\");\n/* harmony import */ var _errors__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./errors */ \"(rsc)/./node_modules/@azure/identity/dist-esm/src/errors.js\");\n/* harmony import */ var _msal_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./msal/utils */ \"(rsc)/./node_modules/@azure/identity/dist-esm/src/msal/utils.js\");\n/* harmony import */ var _credentials_chainedTokenCredential__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./credentials/chainedTokenCredential */ \"(rsc)/./node_modules/@azure/identity/dist-esm/src/credentials/chainedTokenCredential.js\");\n/* harmony import */ var _credentials_clientSecretCredential__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./credentials/clientSecretCredential */ \"(rsc)/./node_modules/@azure/identity/dist-esm/src/credentials/clientSecretCredential.js\");\n/* harmony import */ var _credentials_environmentCredential__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./credentials/environmentCredential */ \"(rsc)/./node_modules/@azure/identity/dist-esm/src/credentials/environmentCredential.js\");\n/* harmony import */ var _credentials_clientCertificateCredential__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./credentials/clientCertificateCredential */ \"(rsc)/./node_modules/@azure/identity/dist-esm/src/credentials/clientCertificateCredential.js\");\n/* harmony import */ var _credentials_clientAssertionCredential__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./credentials/clientAssertionCredential */ \"(rsc)/./node_modules/@azure/identity/dist-esm/src/credentials/clientAssertionCredential.js\");\n/* harmony import */ var _credentials_azureCliCredential__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./credentials/azureCliCredential */ \"(rsc)/./node_modules/@azure/identity/dist-esm/src/credentials/azureCliCredential.js\");\n/* harmony import */ var _credentials_azureDeveloperCliCredential__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./credentials/azureDeveloperCliCredential */ \"(rsc)/./node_modules/@azure/identity/dist-esm/src/credentials/azureDeveloperCliCredential.js\");\n/* harmony import */ var _credentials_interactiveBrowserCredential__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./credentials/interactiveBrowserCredential */ \"(rsc)/./node_modules/@azure/identity/dist-esm/src/credentials/interactiveBrowserCredential.js\");\n/* harmony import */ var _credentials_managedIdentityCredential__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./credentials/managedIdentityCredential */ \"(rsc)/./node_modules/@azure/identity/dist-esm/src/credentials/managedIdentityCredential/index.js\");\n/* harmony import */ var _credentials_deviceCodeCredential__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./credentials/deviceCodeCredential */ \"(rsc)/./node_modules/@azure/identity/dist-esm/src/credentials/deviceCodeCredential.js\");\n/* harmony import */ var _credentials_azurePipelinesCredential__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./credentials/azurePipelinesCredential */ \"(rsc)/./node_modules/@azure/identity/dist-esm/src/credentials/azurePipelinesCredential.js\");\n/* harmony import */ var _credentials_authorizationCodeCredential__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./credentials/authorizationCodeCredential */ \"(rsc)/./node_modules/@azure/identity/dist-esm/src/credentials/authorizationCodeCredential.js\");\n/* harmony import */ var _credentials_azurePowerShellCredential__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./credentials/azurePowerShellCredential */ \"(rsc)/./node_modules/@azure/identity/dist-esm/src/credentials/azurePowerShellCredential.js\");\n/* harmony import */ var _credentials_usernamePasswordCredential__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./credentials/usernamePasswordCredential */ \"(rsc)/./node_modules/@azure/identity/dist-esm/src/credentials/usernamePasswordCredential.js\");\n/* harmony import */ var _credentials_visualStudioCodeCredential__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./credentials/visualStudioCodeCredential */ \"(rsc)/./node_modules/@azure/identity/dist-esm/src/credentials/visualStudioCodeCredential.js\");\n/* harmony import */ var _credentials_onBehalfOfCredential__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ./credentials/onBehalfOfCredential */ \"(rsc)/./node_modules/@azure/identity/dist-esm/src/credentials/onBehalfOfCredential.js\");\n/* harmony import */ var _credentials_workloadIdentityCredential__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ./credentials/workloadIdentityCredential */ \"(rsc)/./node_modules/@azure/identity/dist-esm/src/credentials/workloadIdentityCredential.js\");\n/* harmony import */ var _util_logging__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ./util/logging */ \"(rsc)/./node_modules/@azure/identity/dist-esm/src/util/logging.js\");\n/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! ./constants */ \"(rsc)/./node_modules/@azure/identity/dist-esm/src/constants.js\");\n/* harmony import */ var _tokenProvider__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! ./tokenProvider */ \"(rsc)/./node_modules/@azure/identity/dist-esm/src/tokenProvider.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n/**\n * Returns a new instance of the {@link DefaultAzureCredential}.\n */\nfunction getDefaultAzureCredential() {\n    return new _credentials_defaultAzureCredential__WEBPACK_IMPORTED_MODULE_5__.DefaultAzureCredential();\n}\n\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2lkZW50aXR5L2Rpc3QtZXNtL3NyYy9pbmRleC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUFBO0FBQ0E7QUFDbUM7QUFDMkM7QUFDb0o7QUFDcEk7QUFDaEI7QUFDQTtBQUNBO0FBQ0Y7QUFDYTtBQUNMO0FBQ2Q7QUFDa0I7QUFDRTtBQUNMO0FBQ1g7QUFDb0M7QUFDdEI7QUFDSjtBQUNFO0FBQ0E7QUFDWjtBQUNZO0FBQzlDO0FBQ1U7QUFDbEQ7QUFDQSxrQ0FBa0MsNkJBQTZCO0FBQy9EO0FBQ087QUFDUCxlQUFlLHVGQUFzQjtBQUNyQztBQUN5RDtBQUN6RCIsInNvdXJjZXMiOlsid2VicGFjazovL2RhbmllbDMtdnAyLy4vbm9kZV9tb2R1bGVzL0BhenVyZS9pZGVudGl0eS9kaXN0LWVzbS9zcmMvaW5kZXguanM/Mzc5YSJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi5cbi8vIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZS5cbmV4cG9ydCAqIGZyb20gXCIuL3BsdWdpbnMvY29uc3VtZXJcIjtcbmltcG9ydCB7IERlZmF1bHRBenVyZUNyZWRlbnRpYWwgfSBmcm9tIFwiLi9jcmVkZW50aWFscy9kZWZhdWx0QXp1cmVDcmVkZW50aWFsXCI7XG5leHBvcnQgeyBBdXRoZW50aWNhdGlvbkVycm9yLCBBZ2dyZWdhdGVBdXRoZW50aWNhdGlvbkVycm9yLCBBdXRoZW50aWNhdGlvbkVycm9yTmFtZSwgQWdncmVnYXRlQXV0aGVudGljYXRpb25FcnJvck5hbWUsIENyZWRlbnRpYWxVbmF2YWlsYWJsZUVycm9yLCBDcmVkZW50aWFsVW5hdmFpbGFibGVFcnJvck5hbWUsIEF1dGhlbnRpY2F0aW9uUmVxdWlyZWRFcnJvciwgfSBmcm9tIFwiLi9lcnJvcnNcIjtcbmV4cG9ydCB7IHNlcmlhbGl6ZUF1dGhlbnRpY2F0aW9uUmVjb3JkLCBkZXNlcmlhbGl6ZUF1dGhlbnRpY2F0aW9uUmVjb3JkIH0gZnJvbSBcIi4vbXNhbC91dGlsc1wiO1xuZXhwb3J0IHsgQ2hhaW5lZFRva2VuQ3JlZGVudGlhbCB9IGZyb20gXCIuL2NyZWRlbnRpYWxzL2NoYWluZWRUb2tlbkNyZWRlbnRpYWxcIjtcbmV4cG9ydCB7IENsaWVudFNlY3JldENyZWRlbnRpYWwgfSBmcm9tIFwiLi9jcmVkZW50aWFscy9jbGllbnRTZWNyZXRDcmVkZW50aWFsXCI7XG5leHBvcnQgeyBEZWZhdWx0QXp1cmVDcmVkZW50aWFsIH0gZnJvbSBcIi4vY3JlZGVudGlhbHMvZGVmYXVsdEF6dXJlQ3JlZGVudGlhbFwiO1xuZXhwb3J0IHsgRW52aXJvbm1lbnRDcmVkZW50aWFsIH0gZnJvbSBcIi4vY3JlZGVudGlhbHMvZW52aXJvbm1lbnRDcmVkZW50aWFsXCI7XG5leHBvcnQgeyBDbGllbnRDZXJ0aWZpY2F0ZUNyZWRlbnRpYWwsIH0gZnJvbSBcIi4vY3JlZGVudGlhbHMvY2xpZW50Q2VydGlmaWNhdGVDcmVkZW50aWFsXCI7XG5leHBvcnQgeyBDbGllbnRBc3NlcnRpb25DcmVkZW50aWFsIH0gZnJvbSBcIi4vY3JlZGVudGlhbHMvY2xpZW50QXNzZXJ0aW9uQ3JlZGVudGlhbFwiO1xuZXhwb3J0IHsgQXp1cmVDbGlDcmVkZW50aWFsIH0gZnJvbSBcIi4vY3JlZGVudGlhbHMvYXp1cmVDbGlDcmVkZW50aWFsXCI7XG5leHBvcnQgeyBBenVyZURldmVsb3BlckNsaUNyZWRlbnRpYWwgfSBmcm9tIFwiLi9jcmVkZW50aWFscy9henVyZURldmVsb3BlckNsaUNyZWRlbnRpYWxcIjtcbmV4cG9ydCB7IEludGVyYWN0aXZlQnJvd3NlckNyZWRlbnRpYWwgfSBmcm9tIFwiLi9jcmVkZW50aWFscy9pbnRlcmFjdGl2ZUJyb3dzZXJDcmVkZW50aWFsXCI7XG5leHBvcnQgeyBNYW5hZ2VkSWRlbnRpdHlDcmVkZW50aWFsLCB9IGZyb20gXCIuL2NyZWRlbnRpYWxzL21hbmFnZWRJZGVudGl0eUNyZWRlbnRpYWxcIjtcbmV4cG9ydCB7IERldmljZUNvZGVDcmVkZW50aWFsIH0gZnJvbSBcIi4vY3JlZGVudGlhbHMvZGV2aWNlQ29kZUNyZWRlbnRpYWxcIjtcbmV4cG9ydCB7IEF6dXJlUGlwZWxpbmVzQ3JlZGVudGlhbCBhcyBBenVyZVBpcGVsaW5lc0NyZWRlbnRpYWwgfSBmcm9tIFwiLi9jcmVkZW50aWFscy9henVyZVBpcGVsaW5lc0NyZWRlbnRpYWxcIjtcbmV4cG9ydCB7IEF1dGhvcml6YXRpb25Db2RlQ3JlZGVudGlhbCB9IGZyb20gXCIuL2NyZWRlbnRpYWxzL2F1dGhvcml6YXRpb25Db2RlQ3JlZGVudGlhbFwiO1xuZXhwb3J0IHsgQXp1cmVQb3dlclNoZWxsQ3JlZGVudGlhbCB9IGZyb20gXCIuL2NyZWRlbnRpYWxzL2F6dXJlUG93ZXJTaGVsbENyZWRlbnRpYWxcIjtcbmV4cG9ydCB7IFVzZXJuYW1lUGFzc3dvcmRDcmVkZW50aWFsIH0gZnJvbSBcIi4vY3JlZGVudGlhbHMvdXNlcm5hbWVQYXNzd29yZENyZWRlbnRpYWxcIjtcbmV4cG9ydCB7IFZpc3VhbFN0dWRpb0NvZGVDcmVkZW50aWFsIH0gZnJvbSBcIi4vY3JlZGVudGlhbHMvdmlzdWFsU3R1ZGlvQ29kZUNyZWRlbnRpYWxcIjtcbmV4cG9ydCB7IE9uQmVoYWxmT2ZDcmVkZW50aWFsIH0gZnJvbSBcIi4vY3JlZGVudGlhbHMvb25CZWhhbGZPZkNyZWRlbnRpYWxcIjtcbmV4cG9ydCB7IFdvcmtsb2FkSWRlbnRpdHlDcmVkZW50aWFsIH0gZnJvbSBcIi4vY3JlZGVudGlhbHMvd29ya2xvYWRJZGVudGl0eUNyZWRlbnRpYWxcIjtcbmV4cG9ydCB7IGxvZ2dlciB9IGZyb20gXCIuL3V0aWwvbG9nZ2luZ1wiO1xuZXhwb3J0IHsgQXp1cmVBdXRob3JpdHlIb3N0cyB9IGZyb20gXCIuL2NvbnN0YW50c1wiO1xuLyoqXG4gKiBSZXR1cm5zIGEgbmV3IGluc3RhbmNlIG9mIHRoZSB7QGxpbmsgRGVmYXVsdEF6dXJlQ3JlZGVudGlhbH0uXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBnZXREZWZhdWx0QXp1cmVDcmVkZW50aWFsKCkge1xuICAgIHJldHVybiBuZXcgRGVmYXVsdEF6dXJlQ3JlZGVudGlhbCgpO1xufVxuZXhwb3J0IHsgZ2V0QmVhcmVyVG9rZW5Qcm92aWRlciB9IGZyb20gXCIuL3Rva2VuUHJvdmlkZXJcIjtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWluZGV4LmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/identity/dist-esm/src/index.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/identity/dist-esm/src/msal/nodeFlows/msalClient.js":
/*!********************************************************************************!*\
  !*** ./node_modules/@azure/identity/dist-esm/src/msal/nodeFlows/msalClient.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createMsalClient: () => (/* binding */ createMsalClient),\n/* harmony export */   generateMsalConfiguration: () => (/* binding */ generateMsalConfiguration)\n/* harmony export */ });\n/* harmony import */ var _azure_msal_node__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @azure/msal-node */ \"(rsc)/./node_modules/@azure/msal-node/dist/index.mjs\");\n/* harmony import */ var _util_logging__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../util/logging */ \"(rsc)/./node_modules/@azure/identity/dist-esm/src/util/logging.js\");\n/* harmony import */ var _msalPlugins__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./msalPlugins */ \"(rsc)/./node_modules/@azure/identity/dist-esm/src/msal/nodeFlows/msalPlugins.js\");\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../utils */ \"(rsc)/./node_modules/@azure/identity/dist-esm/src/msal/utils.js\");\n/* harmony import */ var _errors__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../errors */ \"(rsc)/./node_modules/@azure/identity/dist-esm/src/errors.js\");\n/* harmony import */ var _client_identityClient__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../client/identityClient */ \"(rsc)/./node_modules/@azure/identity/dist-esm/src/client/identityClient.js\");\n/* harmony import */ var _regionalAuthority__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../regionalAuthority */ \"(rsc)/./node_modules/@azure/identity/dist-esm/src/regionalAuthority.js\");\n/* harmony import */ var _azure_logger__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @azure/logger */ \"(rsc)/./node_modules/@azure/logger/dist/esm/index.js\");\n/* harmony import */ var _util_tenantIdUtils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../util/tenantIdUtils */ \"(rsc)/./node_modules/@azure/identity/dist-esm/src/util/tenantIdUtils.js\");\n/* harmony import */ var _msalOpenBrowser__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./msalOpenBrowser */ \"(rsc)/./node_modules/@azure/identity/dist-esm/src/msal/nodeFlows/msalOpenBrowser.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\n\n\n\n\n\n\n\n\n\n/**\n * The default logger used if no logger was passed in by the credential.\n */\nconst msalLogger = (0,_util_logging__WEBPACK_IMPORTED_MODULE_2__.credentialLogger)(\"MsalClient\");\n/**\n * Generates the configuration for MSAL (Microsoft Authentication Library).\n *\n * @param clientId - The client ID of the application.\n * @param  tenantId - The tenant ID of the Azure Active Directory.\n * @param  msalClientOptions - Optional. Additional options for creating the MSAL client.\n * @returns  The MSAL configuration object.\n */\nfunction generateMsalConfiguration(clientId, tenantId, msalClientOptions = {}) {\n    var _a, _b, _c, _d;\n    const resolvedTenant = (0,_util_tenantIdUtils__WEBPACK_IMPORTED_MODULE_3__.resolveTenantId)((_a = msalClientOptions.logger) !== null && _a !== void 0 ? _a : msalLogger, tenantId, clientId);\n    // TODO: move and reuse getIdentityClientAuthorityHost\n    const authority = (0,_utils__WEBPACK_IMPORTED_MODULE_4__.getAuthority)(resolvedTenant, (_b = msalClientOptions.authorityHost) !== null && _b !== void 0 ? _b : process.env.AZURE_AUTHORITY_HOST);\n    const httpClient = new _client_identityClient__WEBPACK_IMPORTED_MODULE_5__.IdentityClient(Object.assign(Object.assign({}, msalClientOptions.tokenCredentialOptions), { authorityHost: authority, loggingOptions: msalClientOptions.loggingOptions }));\n    const msalConfig = {\n        auth: {\n            clientId,\n            authority,\n            knownAuthorities: (0,_utils__WEBPACK_IMPORTED_MODULE_4__.getKnownAuthorities)(resolvedTenant, authority, msalClientOptions.disableInstanceDiscovery),\n        },\n        system: {\n            networkClient: httpClient,\n            loggerOptions: {\n                loggerCallback: (0,_utils__WEBPACK_IMPORTED_MODULE_4__.defaultLoggerCallback)((_c = msalClientOptions.logger) !== null && _c !== void 0 ? _c : msalLogger),\n                logLevel: (0,_utils__WEBPACK_IMPORTED_MODULE_4__.getMSALLogLevel)((0,_azure_logger__WEBPACK_IMPORTED_MODULE_1__.getLogLevel)()),\n                piiLoggingEnabled: (_d = msalClientOptions.loggingOptions) === null || _d === void 0 ? void 0 : _d.enableUnsafeSupportLogging,\n            },\n        },\n    };\n    return msalConfig;\n}\n/**\n * Creates an instance of the MSAL (Microsoft Authentication Library) client.\n *\n * @param clientId - The client ID of the application.\n * @param tenantId - The tenant ID of the Azure Active Directory.\n * @param createMsalClientOptions - Optional. Additional options for creating the MSAL client.\n * @returns An instance of the MSAL client.\n *\n * @public\n */\nfunction createMsalClient(clientId, tenantId, createMsalClientOptions = {}) {\n    var _a;\n    const state = {\n        msalConfig: generateMsalConfiguration(clientId, tenantId, createMsalClientOptions),\n        cachedAccount: createMsalClientOptions.authenticationRecord\n            ? (0,_utils__WEBPACK_IMPORTED_MODULE_4__.publicToMsal)(createMsalClientOptions.authenticationRecord)\n            : null,\n        pluginConfiguration: _msalPlugins__WEBPACK_IMPORTED_MODULE_6__.msalPlugins.generatePluginConfiguration(createMsalClientOptions),\n        logger: (_a = createMsalClientOptions.logger) !== null && _a !== void 0 ? _a : msalLogger,\n    };\n    const publicApps = new Map();\n    async function getPublicApp(options = {}) {\n        const appKey = options.enableCae ? \"CAE\" : \"default\";\n        let publicClientApp = publicApps.get(appKey);\n        if (publicClientApp) {\n            state.logger.getToken.info(\"Existing PublicClientApplication found in cache, returning it.\");\n            return publicClientApp;\n        }\n        // Initialize a new app and cache it\n        state.logger.getToken.info(`Creating new PublicClientApplication with CAE ${options.enableCae ? \"enabled\" : \"disabled\"}.`);\n        const cachePlugin = options.enableCae\n            ? state.pluginConfiguration.cache.cachePluginCae\n            : state.pluginConfiguration.cache.cachePlugin;\n        state.msalConfig.auth.clientCapabilities = options.enableCae ? [\"cp1\"] : undefined;\n        publicClientApp = new _azure_msal_node__WEBPACK_IMPORTED_MODULE_0__.PublicClientApplication(Object.assign(Object.assign({}, state.msalConfig), { broker: { nativeBrokerPlugin: state.pluginConfiguration.broker.nativeBrokerPlugin }, cache: { cachePlugin: await cachePlugin } }));\n        publicApps.set(appKey, publicClientApp);\n        return publicClientApp;\n    }\n    const confidentialApps = new Map();\n    async function getConfidentialApp(options = {}) {\n        const appKey = options.enableCae ? \"CAE\" : \"default\";\n        let confidentialClientApp = confidentialApps.get(appKey);\n        if (confidentialClientApp) {\n            state.logger.getToken.info(\"Existing ConfidentialClientApplication found in cache, returning it.\");\n            return confidentialClientApp;\n        }\n        // Initialize a new app and cache it\n        state.logger.getToken.info(`Creating new ConfidentialClientApplication with CAE ${options.enableCae ? \"enabled\" : \"disabled\"}.`);\n        const cachePlugin = options.enableCae\n            ? state.pluginConfiguration.cache.cachePluginCae\n            : state.pluginConfiguration.cache.cachePlugin;\n        state.msalConfig.auth.clientCapabilities = options.enableCae ? [\"cp1\"] : undefined;\n        confidentialClientApp = new _azure_msal_node__WEBPACK_IMPORTED_MODULE_0__.ConfidentialClientApplication(Object.assign(Object.assign({}, state.msalConfig), { broker: { nativeBrokerPlugin: state.pluginConfiguration.broker.nativeBrokerPlugin }, cache: { cachePlugin: await cachePlugin } }));\n        confidentialApps.set(appKey, confidentialClientApp);\n        return confidentialClientApp;\n    }\n    async function getTokenSilent(app, scopes, options = {}) {\n        if (state.cachedAccount === null) {\n            state.logger.getToken.info(\"No cached account found in local state, attempting to load it from MSAL cache.\");\n            const cache = app.getTokenCache();\n            const accounts = await cache.getAllAccounts();\n            if (accounts === undefined || accounts.length === 0) {\n                throw new _errors__WEBPACK_IMPORTED_MODULE_7__.AuthenticationRequiredError({ scopes });\n            }\n            if (accounts.length > 1) {\n                state.logger\n                    .info(`More than one account was found authenticated for this Client ID and Tenant ID.\nHowever, no \"authenticationRecord\" has been provided for this credential,\ntherefore we're unable to pick between these accounts.\nA new login attempt will be requested, to ensure the correct account is picked.\nTo work with multiple accounts for the same Client ID and Tenant ID, please provide an \"authenticationRecord\" when initializing a credential to prevent this from happening.`);\n                throw new _errors__WEBPACK_IMPORTED_MODULE_7__.AuthenticationRequiredError({ scopes });\n            }\n            state.cachedAccount = accounts[0];\n        }\n        // Keep track and reuse the claims we received across challenges\n        if (options.claims) {\n            state.cachedClaims = options.claims;\n        }\n        const silentRequest = {\n            account: state.cachedAccount,\n            scopes,\n            claims: state.cachedClaims,\n        };\n        if (state.pluginConfiguration.broker.isEnabled) {\n            silentRequest.tokenQueryParameters || (silentRequest.tokenQueryParameters = {});\n            if (state.pluginConfiguration.broker.enableMsaPassthrough) {\n                silentRequest.tokenQueryParameters[\"msal_request_type\"] = \"consumer_passthrough\";\n            }\n        }\n        state.logger.getToken.info(\"Attempting to acquire token silently\");\n        return app.acquireTokenSilent(silentRequest);\n    }\n    /**\n     * Builds an authority URL for the given request. The authority may be different than the one used when creating the MSAL client\n     * if the user is creating cross-tenant requests\n     */\n    function calculateRequestAuthority(options) {\n        if (options === null || options === void 0 ? void 0 : options.tenantId) {\n            return (0,_utils__WEBPACK_IMPORTED_MODULE_4__.getAuthority)(options.tenantId, createMsalClientOptions.authorityHost);\n        }\n        return state.msalConfig.auth.authority;\n    }\n    /**\n     * Performs silent authentication using MSAL to acquire an access token.\n     * If silent authentication fails, falls back to interactive authentication.\n     *\n     * @param msalApp - The MSAL application instance.\n     * @param scopes - The scopes for which to acquire the access token.\n     * @param options - The options for acquiring the access token.\n     * @param onAuthenticationRequired - A callback function to handle interactive authentication when silent authentication fails.\n     * @returns A promise that resolves to an AccessToken object containing the access token and its expiration timestamp.\n     */\n    async function withSilentAuthentication(msalApp, scopes, options, onAuthenticationRequired) {\n        var _a;\n        let response = null;\n        try {\n            response = await getTokenSilent(msalApp, scopes, options);\n        }\n        catch (e) {\n            if (e.name !== \"AuthenticationRequiredError\") {\n                throw e;\n            }\n            if (options.disableAutomaticAuthentication) {\n                throw new _errors__WEBPACK_IMPORTED_MODULE_7__.AuthenticationRequiredError({\n                    scopes,\n                    getTokenOptions: options,\n                    message: \"Automatic authentication has been disabled. You may call the authentication() method.\",\n                });\n            }\n        }\n        // Silent authentication failed\n        if (response === null) {\n            try {\n                response = await onAuthenticationRequired();\n            }\n            catch (err) {\n                throw (0,_utils__WEBPACK_IMPORTED_MODULE_4__.handleMsalError)(scopes, err, options);\n            }\n        }\n        // At this point we should have a token, process it\n        (0,_utils__WEBPACK_IMPORTED_MODULE_4__.ensureValidMsalToken)(scopes, response, options);\n        state.cachedAccount = (_a = response === null || response === void 0 ? void 0 : response.account) !== null && _a !== void 0 ? _a : null;\n        state.logger.getToken.info((0,_util_logging__WEBPACK_IMPORTED_MODULE_2__.formatSuccess)(scopes));\n        return {\n            token: response.accessToken,\n            expiresOnTimestamp: response.expiresOn.getTime(),\n        };\n    }\n    async function getTokenByClientSecret(scopes, clientSecret, options = {}) {\n        state.logger.getToken.info(`Attempting to acquire token using client secret`);\n        state.msalConfig.auth.clientSecret = clientSecret;\n        const msalApp = await getConfidentialApp(options);\n        try {\n            const response = await msalApp.acquireTokenByClientCredential({\n                scopes,\n                authority: calculateRequestAuthority(options),\n                azureRegion: (0,_regionalAuthority__WEBPACK_IMPORTED_MODULE_8__.calculateRegionalAuthority)(),\n                claims: options === null || options === void 0 ? void 0 : options.claims,\n            });\n            (0,_utils__WEBPACK_IMPORTED_MODULE_4__.ensureValidMsalToken)(scopes, response, options);\n            state.logger.getToken.info((0,_util_logging__WEBPACK_IMPORTED_MODULE_2__.formatSuccess)(scopes));\n            return {\n                token: response.accessToken,\n                expiresOnTimestamp: response.expiresOn.getTime(),\n            };\n        }\n        catch (err) {\n            throw (0,_utils__WEBPACK_IMPORTED_MODULE_4__.handleMsalError)(scopes, err, options);\n        }\n    }\n    async function getTokenByClientAssertion(scopes, clientAssertion, options = {}) {\n        state.logger.getToken.info(`Attempting to acquire token using client assertion`);\n        state.msalConfig.auth.clientAssertion = clientAssertion;\n        const msalApp = await getConfidentialApp(options);\n        try {\n            const response = await msalApp.acquireTokenByClientCredential({\n                scopes,\n                authority: calculateRequestAuthority(options),\n                azureRegion: (0,_regionalAuthority__WEBPACK_IMPORTED_MODULE_8__.calculateRegionalAuthority)(),\n                claims: options === null || options === void 0 ? void 0 : options.claims,\n                clientAssertion,\n            });\n            (0,_utils__WEBPACK_IMPORTED_MODULE_4__.ensureValidMsalToken)(scopes, response, options);\n            state.logger.getToken.info((0,_util_logging__WEBPACK_IMPORTED_MODULE_2__.formatSuccess)(scopes));\n            return {\n                token: response.accessToken,\n                expiresOnTimestamp: response.expiresOn.getTime(),\n            };\n        }\n        catch (err) {\n            throw (0,_utils__WEBPACK_IMPORTED_MODULE_4__.handleMsalError)(scopes, err, options);\n        }\n    }\n    async function getTokenByClientCertificate(scopes, certificate, options = {}) {\n        state.logger.getToken.info(`Attempting to acquire token using client certificate`);\n        state.msalConfig.auth.clientCertificate = certificate;\n        const msalApp = await getConfidentialApp(options);\n        try {\n            const response = await msalApp.acquireTokenByClientCredential({\n                scopes,\n                authority: calculateRequestAuthority(options),\n                azureRegion: (0,_regionalAuthority__WEBPACK_IMPORTED_MODULE_8__.calculateRegionalAuthority)(),\n                claims: options === null || options === void 0 ? void 0 : options.claims,\n            });\n            (0,_utils__WEBPACK_IMPORTED_MODULE_4__.ensureValidMsalToken)(scopes, response, options);\n            state.logger.getToken.info((0,_util_logging__WEBPACK_IMPORTED_MODULE_2__.formatSuccess)(scopes));\n            return {\n                token: response.accessToken,\n                expiresOnTimestamp: response.expiresOn.getTime(),\n            };\n        }\n        catch (err) {\n            throw (0,_utils__WEBPACK_IMPORTED_MODULE_4__.handleMsalError)(scopes, err, options);\n        }\n    }\n    async function getTokenByDeviceCode(scopes, deviceCodeCallback, options = {}) {\n        state.logger.getToken.info(`Attempting to acquire token using device code`);\n        const msalApp = await getPublicApp(options);\n        return withSilentAuthentication(msalApp, scopes, options, () => {\n            var _a, _b;\n            const requestOptions = {\n                scopes,\n                cancel: (_b = (_a = options === null || options === void 0 ? void 0 : options.abortSignal) === null || _a === void 0 ? void 0 : _a.aborted) !== null && _b !== void 0 ? _b : false,\n                deviceCodeCallback,\n                authority: calculateRequestAuthority(options),\n                claims: options === null || options === void 0 ? void 0 : options.claims,\n            };\n            const deviceCodeRequest = msalApp.acquireTokenByDeviceCode(requestOptions);\n            if (options.abortSignal) {\n                options.abortSignal.addEventListener(\"abort\", () => {\n                    requestOptions.cancel = true;\n                });\n            }\n            return deviceCodeRequest;\n        });\n    }\n    async function getTokenByUsernamePassword(scopes, username, password, options = {}) {\n        state.logger.getToken.info(`Attempting to acquire token using username and password`);\n        const msalApp = await getPublicApp(options);\n        return withSilentAuthentication(msalApp, scopes, options, () => {\n            const requestOptions = {\n                scopes,\n                username,\n                password,\n                authority: calculateRequestAuthority(options),\n                claims: options === null || options === void 0 ? void 0 : options.claims,\n            };\n            return msalApp.acquireTokenByUsernamePassword(requestOptions);\n        });\n    }\n    function getActiveAccount() {\n        if (!state.cachedAccount) {\n            return undefined;\n        }\n        return (0,_utils__WEBPACK_IMPORTED_MODULE_4__.msalToPublic)(clientId, state.cachedAccount);\n    }\n    async function getTokenByAuthorizationCode(scopes, redirectUri, authorizationCode, clientSecret, options = {}) {\n        state.logger.getToken.info(`Attempting to acquire token using authorization code`);\n        let msalApp;\n        if (clientSecret) {\n            // If a client secret is provided, we need to use a confidential client application\n            // See https://learn.microsoft.com/entra/identity-platform/v2-oauth2-auth-code-flow#request-an-access-token-with-a-client_secret\n            state.msalConfig.auth.clientSecret = clientSecret;\n            msalApp = await getConfidentialApp(options);\n        }\n        else {\n            msalApp = await getPublicApp(options);\n        }\n        return withSilentAuthentication(msalApp, scopes, options, () => {\n            return msalApp.acquireTokenByCode({\n                scopes,\n                redirectUri,\n                code: authorizationCode,\n                authority: calculateRequestAuthority(options),\n                claims: options === null || options === void 0 ? void 0 : options.claims,\n            });\n        });\n    }\n    async function getTokenOnBehalfOf(scopes, userAssertionToken, clientCredentials, options = {}) {\n        msalLogger.getToken.info(`Attempting to acquire token on behalf of another user`);\n        if (typeof clientCredentials === \"string\") {\n            // Client secret\n            msalLogger.getToken.info(`Using client secret for on behalf of flow`);\n            state.msalConfig.auth.clientSecret = clientCredentials;\n        }\n        else if (typeof clientCredentials === \"function\") {\n            // Client Assertion\n            msalLogger.getToken.info(`Using client assertion callback for on behalf of flow`);\n            state.msalConfig.auth.clientAssertion = clientCredentials;\n        }\n        else {\n            // Client certificate\n            msalLogger.getToken.info(`Using client certificate for on behalf of flow`);\n            state.msalConfig.auth.clientCertificate = clientCredentials;\n        }\n        const msalApp = await getConfidentialApp(options);\n        try {\n            const response = await msalApp.acquireTokenOnBehalfOf({\n                scopes,\n                authority: calculateRequestAuthority(options),\n                claims: options.claims,\n                oboAssertion: userAssertionToken,\n            });\n            (0,_utils__WEBPACK_IMPORTED_MODULE_4__.ensureValidMsalToken)(scopes, response, options);\n            msalLogger.getToken.info((0,_util_logging__WEBPACK_IMPORTED_MODULE_2__.formatSuccess)(scopes));\n            return {\n                token: response.accessToken,\n                expiresOnTimestamp: response.expiresOn.getTime(),\n            };\n        }\n        catch (err) {\n            throw (0,_utils__WEBPACK_IMPORTED_MODULE_4__.handleMsalError)(scopes, err, options);\n        }\n    }\n    async function getTokenByInteractiveRequest(scopes, options = {}) {\n        msalLogger.getToken.info(`Attempting to acquire token interactively`);\n        const app = await getPublicApp(options);\n        /**\n         * A helper function that supports brokered authentication through the MSAL's public application.\n         *\n         * When options.useDefaultBrokerAccount is true, the method will attempt to authenticate using the default broker account.\n         * If the default broker account is not available, the method will fall back to interactive authentication.\n         */\n        async function getBrokeredToken(useDefaultBrokerAccount) {\n            var _a;\n            msalLogger.verbose(\"Authentication will resume through the broker\");\n            const interactiveRequest = createBaseInteractiveRequest();\n            if (state.pluginConfiguration.broker.parentWindowHandle) {\n                interactiveRequest.windowHandle = Buffer.from(state.pluginConfiguration.broker.parentWindowHandle);\n            }\n            else {\n                // this is a bug, as the pluginConfiguration handler should validate this case.\n                msalLogger.warning(\"Parent window handle is not specified for the broker. This may cause unexpected behavior. Please provide the parentWindowHandle.\");\n            }\n            if (state.pluginConfiguration.broker.enableMsaPassthrough) {\n                ((_a = interactiveRequest.tokenQueryParameters) !== null && _a !== void 0 ? _a : (interactiveRequest.tokenQueryParameters = {}))[\"msal_request_type\"] =\n                    \"consumer_passthrough\";\n            }\n            if (useDefaultBrokerAccount) {\n                interactiveRequest.prompt = \"none\";\n                msalLogger.verbose(\"Attempting broker authentication using the default broker account\");\n            }\n            else {\n                msalLogger.verbose(\"Attempting broker authentication without the default broker account\");\n            }\n            try {\n                return await app.acquireTokenInteractive(interactiveRequest);\n            }\n            catch (e) {\n                msalLogger.verbose(`Failed to authenticate through the broker: ${e.message}`);\n                // If we tried to use the default broker account and failed, fall back to interactive authentication\n                if (useDefaultBrokerAccount) {\n                    return getBrokeredToken(/* useDefaultBrokerAccount: */ false);\n                }\n                else {\n                    throw e;\n                }\n            }\n        }\n        function createBaseInteractiveRequest() {\n            var _a, _b;\n            return {\n                openBrowser: async (url) => {\n                    await _msalOpenBrowser__WEBPACK_IMPORTED_MODULE_9__.interactiveBrowserMockable.open(url, { wait: true, newInstance: true });\n                },\n                scopes,\n                authority: calculateRequestAuthority(options),\n                claims: options === null || options === void 0 ? void 0 : options.claims,\n                loginHint: options === null || options === void 0 ? void 0 : options.loginHint,\n                errorTemplate: (_a = options === null || options === void 0 ? void 0 : options.browserCustomizationOptions) === null || _a === void 0 ? void 0 : _a.errorMessage,\n                successTemplate: (_b = options === null || options === void 0 ? void 0 : options.browserCustomizationOptions) === null || _b === void 0 ? void 0 : _b.successMessage,\n            };\n        }\n        return withSilentAuthentication(app, scopes, options, async () => {\n            var _a;\n            const interactiveRequest = createBaseInteractiveRequest();\n            if (state.pluginConfiguration.broker.isEnabled) {\n                return getBrokeredToken((_a = state.pluginConfiguration.broker.useDefaultBrokerAccount) !== null && _a !== void 0 ? _a : false);\n            }\n            return app.acquireTokenInteractive(interactiveRequest);\n        });\n    }\n    return {\n        getActiveAccount,\n        getTokenByClientSecret,\n        getTokenByClientAssertion,\n        getTokenByClientCertificate,\n        getTokenByDeviceCode,\n        getTokenByUsernamePassword,\n        getTokenByAuthorizationCode,\n        getTokenOnBehalfOf,\n        getTokenByInteractiveRequest,\n    };\n}\n//# sourceMappingURL=msalClient.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/identity/dist-esm/src/msal/nodeFlows/msalClient.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/identity/dist-esm/src/msal/nodeFlows/msalNodeCommon.js":
/*!************************************************************************************!*\
  !*** ./node_modules/@azure/identity/dist-esm/src/msal/nodeFlows/msalNodeCommon.js ***!
  \************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   MsalNode: () => (/* binding */ MsalNode)\n/* harmony export */ });\n/* harmony import */ var _azure_msal_node__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @azure/msal-node */ \"(rsc)/./node_modules/@azure/msal-node/dist/index.mjs\");\n/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../constants */ \"(rsc)/./node_modules/@azure/identity/dist-esm/src/constants.js\");\n/* harmony import */ var _util_logging__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../util/logging */ \"(rsc)/./node_modules/@azure/identity/dist-esm/src/util/logging.js\");\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../utils */ \"(rsc)/./node_modules/@azure/identity/dist-esm/src/msal/utils.js\");\n/* harmony import */ var _msalPlugins__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./msalPlugins */ \"(rsc)/./node_modules/@azure/identity/dist-esm/src/msal/nodeFlows/msalPlugins.js\");\n/* harmony import */ var _util_tenantIdUtils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../util/tenantIdUtils */ \"(rsc)/./node_modules/@azure/identity/dist-esm/src/util/tenantIdUtils.js\");\n/* harmony import */ var _util_tenantIdUtils__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../util/tenantIdUtils */ \"(rsc)/./node_modules/@azure/identity/dist-esm/src/util/processMultiTenantRequest.js\");\n/* harmony import */ var _errors__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../errors */ \"(rsc)/./node_modules/@azure/identity/dist-esm/src/errors.js\");\n/* harmony import */ var _client_identityClient__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../client/identityClient */ \"(rsc)/./node_modules/@azure/identity/dist-esm/src/client/identityClient.js\");\n/* harmony import */ var _regionalAuthority__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../regionalAuthority */ \"(rsc)/./node_modules/@azure/identity/dist-esm/src/regionalAuthority.js\");\n/* harmony import */ var _azure_logger__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @azure/logger */ \"(rsc)/./node_modules/@azure/logger/dist/esm/index.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\n\n\n\n\n\n\n\n\n\n/**\n * MSAL partial base client for Node.js.\n *\n * It completes the input configuration with some default values.\n * It also provides with utility protected methods that can be used from any of the clients,\n * which includes handlers for successful responses and errors.\n *\n * @internal\n */\nclass MsalNode {\n    constructor(options) {\n        var _a, _b, _c, _d, _e, _f;\n        this.app = {};\n        this.caeApp = {};\n        this.requiresConfidential = false;\n        this.logger = options.logger;\n        this.msalConfig = this.defaultNodeMsalConfig(options);\n        this.tenantId = (0,_util_tenantIdUtils__WEBPACK_IMPORTED_MODULE_2__.resolveTenantId)(options.logger, options.tenantId, options.clientId);\n        this.additionallyAllowedTenantIds = (0,_util_tenantIdUtils__WEBPACK_IMPORTED_MODULE_2__.resolveAdditionallyAllowedTenantIds)((_a = options === null || options === void 0 ? void 0 : options.tokenCredentialOptions) === null || _a === void 0 ? void 0 : _a.additionallyAllowedTenants);\n        this.clientId = this.msalConfig.auth.clientId;\n        if (options === null || options === void 0 ? void 0 : options.getAssertion) {\n            this.getAssertion = options.getAssertion;\n        }\n        this.enableBroker = (_b = options === null || options === void 0 ? void 0 : options.brokerOptions) === null || _b === void 0 ? void 0 : _b.enabled;\n        this.enableMsaPassthrough = (_c = options === null || options === void 0 ? void 0 : options.brokerOptions) === null || _c === void 0 ? void 0 : _c.legacyEnableMsaPassthrough;\n        this.parentWindowHandle = (_d = options.brokerOptions) === null || _d === void 0 ? void 0 : _d.parentWindowHandle;\n        // If persistence has been configured\n        if (_msalPlugins__WEBPACK_IMPORTED_MODULE_3__.persistenceProvider !== undefined && ((_e = options.tokenCachePersistenceOptions) === null || _e === void 0 ? void 0 : _e.enabled)) {\n            const cacheBaseName = options.tokenCachePersistenceOptions.name || _constants__WEBPACK_IMPORTED_MODULE_4__.DEFAULT_TOKEN_CACHE_NAME;\n            const nonCaeOptions = Object.assign({ name: `${cacheBaseName}.${_constants__WEBPACK_IMPORTED_MODULE_4__.CACHE_NON_CAE_SUFFIX}` }, options.tokenCachePersistenceOptions);\n            const caeOptions = Object.assign({ name: `${cacheBaseName}.${_constants__WEBPACK_IMPORTED_MODULE_4__.CACHE_CAE_SUFFIX}` }, options.tokenCachePersistenceOptions);\n            this.createCachePlugin = () => (0,_msalPlugins__WEBPACK_IMPORTED_MODULE_3__.persistenceProvider)(nonCaeOptions);\n            this.createCachePluginCae = () => (0,_msalPlugins__WEBPACK_IMPORTED_MODULE_3__.persistenceProvider)(caeOptions);\n        }\n        else if ((_f = options.tokenCachePersistenceOptions) === null || _f === void 0 ? void 0 : _f.enabled) {\n            throw new Error([\n                \"Persistent token caching was requested, but no persistence provider was configured.\",\n                \"You must install the identity-cache-persistence plugin package (`npm install --save @azure/identity-cache-persistence`)\",\n                \"and enable it by importing `useIdentityPlugin` from `@azure/identity` and calling\",\n                \"`useIdentityPlugin(cachePersistencePlugin)` before using `tokenCachePersistenceOptions`.\",\n            ].join(\" \"));\n        }\n        // If broker has not been configured\n        if (!(0,_msalPlugins__WEBPACK_IMPORTED_MODULE_3__.hasNativeBroker)() && this.enableBroker) {\n            throw new Error([\n                \"Broker for WAM was requested to be enabled, but no native broker was configured.\",\n                \"You must install the identity-broker plugin package (`npm install --save @azure/identity-broker`)\",\n                \"and enable it by importing `useIdentityPlugin` from `@azure/identity` and calling\",\n                \"`useIdentityPlugin(createNativeBrokerPlugin())` before using `enableBroker`.\",\n            ].join(\" \"));\n        }\n        this.azureRegion = (0,_regionalAuthority__WEBPACK_IMPORTED_MODULE_5__.calculateRegionalAuthority)(options.regionalAuthority);\n    }\n    /**\n     * Generates a MSAL configuration that generally works for Node.js\n     */\n    defaultNodeMsalConfig(options) {\n        var _a;\n        const clientId = options.clientId || _constants__WEBPACK_IMPORTED_MODULE_4__.DeveloperSignOnClientId;\n        const tenantId = (0,_util_tenantIdUtils__WEBPACK_IMPORTED_MODULE_2__.resolveTenantId)(options.logger, options.tenantId, options.clientId);\n        this.authorityHost = options.authorityHost || process.env.AZURE_AUTHORITY_HOST;\n        const authority = (0,_utils__WEBPACK_IMPORTED_MODULE_6__.getAuthority)(tenantId, this.authorityHost);\n        this.identityClient = new _client_identityClient__WEBPACK_IMPORTED_MODULE_7__.IdentityClient(Object.assign(Object.assign({}, options.tokenCredentialOptions), { authorityHost: authority, loggingOptions: options.loggingOptions }));\n        const clientCapabilities = [];\n        return {\n            auth: {\n                clientId,\n                authority,\n                knownAuthorities: (0,_utils__WEBPACK_IMPORTED_MODULE_6__.getKnownAuthorities)(tenantId, authority, options.disableInstanceDiscovery),\n                clientCapabilities,\n            },\n            // Cache is defined in this.prepare();\n            system: {\n                networkClient: this.identityClient,\n                loggerOptions: {\n                    loggerCallback: (0,_utils__WEBPACK_IMPORTED_MODULE_6__.defaultLoggerCallback)(options.logger),\n                    logLevel: (0,_utils__WEBPACK_IMPORTED_MODULE_6__.getMSALLogLevel)((0,_azure_logger__WEBPACK_IMPORTED_MODULE_1__.getLogLevel)()),\n                    piiLoggingEnabled: (_a = options.loggingOptions) === null || _a === void 0 ? void 0 : _a.enableUnsafeSupportLogging,\n                },\n            },\n        };\n    }\n    getApp(appType, enableCae) {\n        const app = enableCae ? this.caeApp : this.app;\n        if (appType === \"publicFirst\") {\n            return (app.public || app.confidential);\n        }\n        else if (appType === \"confidentialFirst\") {\n            return (app.confidential || app.public);\n        }\n        else if (appType === \"confidential\") {\n            return app.confidential;\n        }\n        else {\n            return app.public;\n        }\n    }\n    /**\n     * Prepares the MSAL applications.\n     */\n    async init(options) {\n        if (options === null || options === void 0 ? void 0 : options.abortSignal) {\n            options.abortSignal.addEventListener(\"abort\", () => {\n                // This will abort any pending request in the IdentityClient,\n                // based on the received or generated correlationId\n                this.identityClient.abortRequests(options.correlationId);\n            });\n        }\n        const app = (options === null || options === void 0 ? void 0 : options.enableCae) ? this.caeApp : this.app;\n        if (options === null || options === void 0 ? void 0 : options.enableCae) {\n            this.msalConfig.auth.clientCapabilities = [\"cp1\"];\n        }\n        if (app.public || app.confidential) {\n            return;\n        }\n        if ((options === null || options === void 0 ? void 0 : options.enableCae) && this.createCachePluginCae !== undefined) {\n            this.msalConfig.cache = {\n                cachePlugin: await this.createCachePluginCae(),\n            };\n        }\n        if (this.createCachePlugin !== undefined) {\n            this.msalConfig.cache = {\n                cachePlugin: await this.createCachePlugin(),\n            };\n        }\n        if ((0,_msalPlugins__WEBPACK_IMPORTED_MODULE_3__.hasNativeBroker)() && this.enableBroker) {\n            this.msalConfig.broker = {\n                nativeBrokerPlugin: _msalPlugins__WEBPACK_IMPORTED_MODULE_3__.nativeBrokerInfo.broker,\n            };\n            if (!this.parentWindowHandle) {\n                // error should have been thrown from within the constructor of InteractiveBrowserCredential\n                this.logger.warning(\"Parent window handle is not specified for the broker. This may cause unexpected behavior. Please provide the parentWindowHandle.\");\n            }\n        }\n        if (options === null || options === void 0 ? void 0 : options.enableCae) {\n            this.caeApp.public = new _azure_msal_node__WEBPACK_IMPORTED_MODULE_0__.PublicClientApplication(this.msalConfig);\n        }\n        else {\n            this.app.public = new _azure_msal_node__WEBPACK_IMPORTED_MODULE_0__.PublicClientApplication(this.msalConfig);\n        }\n        // write a test so that user callback is invoked just once and the second time the token is cached and user callback not called\n        //\n        if (this.getAssertion !== undefined) {\n            this.msalConfig.auth.clientAssertion = this.getAssertion;\n        }\n        // The confidential client requires either a secret, assertion or certificate.\n        if (this.msalConfig.auth.clientSecret ||\n            this.msalConfig.auth.clientAssertion ||\n            this.msalConfig.auth.clientCertificate) {\n            if (options === null || options === void 0 ? void 0 : options.enableCae) {\n                this.caeApp.confidential = new _azure_msal_node__WEBPACK_IMPORTED_MODULE_0__.ConfidentialClientApplication(this.msalConfig);\n            }\n            else {\n                this.app.confidential = new _azure_msal_node__WEBPACK_IMPORTED_MODULE_0__.ConfidentialClientApplication(this.msalConfig);\n            }\n        }\n        else {\n            if (this.requiresConfidential) {\n                throw new Error(\"Unable to generate the MSAL confidential client. Missing either the client's secret, certificate or assertion.\");\n            }\n        }\n    }\n    /**\n     * Allows the cancellation of a MSAL request.\n     */\n    withCancellation(promise, abortSignal, onCancel) {\n        return new Promise((resolve, reject) => {\n            promise\n                .then((msalToken) => {\n                return resolve(msalToken);\n            })\n                .catch(reject);\n            if (abortSignal) {\n                abortSignal.addEventListener(\"abort\", () => {\n                    onCancel === null || onCancel === void 0 ? void 0 : onCancel();\n                });\n            }\n        });\n    }\n    /**\n     * Returns the existing account, attempts to load the account from MSAL.\n     */\n    async getActiveAccount(enableCae = false) {\n        if (this.account) {\n            return this.account;\n        }\n        const cache = this.getApp(\"confidentialFirst\", enableCae).getTokenCache();\n        const accountsByTenant = await (cache === null || cache === void 0 ? void 0 : cache.getAllAccounts());\n        if (!accountsByTenant) {\n            return;\n        }\n        if (accountsByTenant.length === 1) {\n            this.account = (0,_utils__WEBPACK_IMPORTED_MODULE_6__.msalToPublic)(this.clientId, accountsByTenant[0]);\n        }\n        else {\n            this.logger\n                .info(`More than one account was found authenticated for this Client ID and Tenant ID.\nHowever, no \"authenticationRecord\" has been provided for this credential,\ntherefore we're unable to pick between these accounts.\nA new login attempt will be requested, to ensure the correct account is picked.\nTo work with multiple accounts for the same Client ID and Tenant ID, please provide an \"authenticationRecord\" when initializing a credential to prevent this from happening.`);\n            return;\n        }\n        return this.account;\n    }\n    /**\n     * Attempts to retrieve a token from cache.\n     */\n    async getTokenSilent(scopes, options) {\n        var _a, _b, _c;\n        await this.getActiveAccount(options === null || options === void 0 ? void 0 : options.enableCae);\n        if (!this.account) {\n            throw new _errors__WEBPACK_IMPORTED_MODULE_8__.AuthenticationRequiredError({\n                scopes,\n                getTokenOptions: options,\n                message: \"Silent authentication failed. We couldn't retrieve an active account from the cache.\",\n            });\n        }\n        const silentRequest = {\n            // To be able to re-use the account, the Token Cache must also have been provided.\n            account: (0,_utils__WEBPACK_IMPORTED_MODULE_6__.publicToMsal)(this.account),\n            correlationId: options === null || options === void 0 ? void 0 : options.correlationId,\n            scopes,\n            authority: options === null || options === void 0 ? void 0 : options.authority,\n            claims: options === null || options === void 0 ? void 0 : options.claims,\n        };\n        if ((0,_msalPlugins__WEBPACK_IMPORTED_MODULE_3__.hasNativeBroker)() && this.enableBroker) {\n            if (!silentRequest.tokenQueryParameters) {\n                silentRequest.tokenQueryParameters = {};\n            }\n            if (!this.parentWindowHandle) {\n                // error should have been thrown from within the constructor of InteractiveBrowserCredential\n                this.logger.warning(\"Parent window handle is not specified for the broker. This may cause unexpected behavior. Please provide the parentWindowHandle.\");\n            }\n            if (this.enableMsaPassthrough) {\n                silentRequest.tokenQueryParameters[\"msal_request_type\"] = \"consumer_passthrough\";\n            }\n        }\n        try {\n            this.logger.info(\"Attempting to acquire token silently\");\n            /**\n             * The following code to retrieve all accounts is done as a workaround in an attempt to force the\n             * refresh of the token cache with the token and the account passed in through the\n             * `authenticationRecord` parameter. See issue - https://github.com/Azure/azure-sdk-for-js/issues/24349#issuecomment-1496715651\n             * This workaround serves as a workaround for silent authentication not happening when authenticationRecord is passed.\n             */\n            await ((_a = this.getApp(\"publicFirst\", options === null || options === void 0 ? void 0 : options.enableCae)) === null || _a === void 0 ? void 0 : _a.getTokenCache().getAllAccounts());\n            const response = (_c = (await ((_b = this.getApp(\"confidential\", options === null || options === void 0 ? void 0 : options.enableCae)) === null || _b === void 0 ? void 0 : _b.acquireTokenSilent(silentRequest)))) !== null && _c !== void 0 ? _c : (await this.getApp(\"public\", options === null || options === void 0 ? void 0 : options.enableCae).acquireTokenSilent(silentRequest));\n            return this.handleResult(scopes, response || undefined);\n        }\n        catch (err) {\n            throw (0,_utils__WEBPACK_IMPORTED_MODULE_6__.handleMsalError)(scopes, err, options);\n        }\n    }\n    /**\n     * Wrapper around each MSAL flow get token operation: doGetToken.\n     * If disableAutomaticAuthentication is sent through the constructor, it will prevent MSAL from requesting the user input.\n     */\n    async getToken(scopes, options = {}) {\n        const tenantId = (0,_util_tenantIdUtils__WEBPACK_IMPORTED_MODULE_9__.processMultiTenantRequest)(this.tenantId, options, this.additionallyAllowedTenantIds) ||\n            this.tenantId;\n        options.authority = (0,_utils__WEBPACK_IMPORTED_MODULE_6__.getAuthority)(tenantId, this.authorityHost);\n        options.correlationId = (options === null || options === void 0 ? void 0 : options.correlationId) || (0,_utils__WEBPACK_IMPORTED_MODULE_6__.randomUUID)();\n        await this.init(options);\n        try {\n            // MSAL now caches tokens based on their claims,\n            // so now one has to keep track fo claims in order to retrieve the newer tokens from acquireTokenSilent\n            // This update happened on PR: https://github.com/AzureAD/microsoft-authentication-library-for-js/pull/4533\n            const optionsClaims = options.claims;\n            if (optionsClaims) {\n                this.cachedClaims = optionsClaims;\n            }\n            if (this.cachedClaims && !optionsClaims) {\n                options.claims = this.cachedClaims;\n            }\n            // We don't return the promise since we want to catch errors right here.\n            return await this.getTokenSilent(scopes, options);\n        }\n        catch (err) {\n            if (err.name !== \"AuthenticationRequiredError\") {\n                throw err;\n            }\n            if (options === null || options === void 0 ? void 0 : options.disableAutomaticAuthentication) {\n                throw new _errors__WEBPACK_IMPORTED_MODULE_8__.AuthenticationRequiredError({\n                    scopes,\n                    getTokenOptions: options,\n                    message: \"Automatic authentication has been disabled. You may call the authentication() method.\",\n                });\n            }\n            this.logger.info(`Silent authentication failed, falling back to interactive method.`);\n            return this.doGetToken(scopes, options);\n        }\n    }\n    /**\n     * Handles the MSAL authentication result.\n     * If the result has an account, we update the local account reference.\n     * If the token received is invalid, an error will be thrown depending on what's missing.\n     */\n    handleResult(scopes, result, getTokenOptions) {\n        if (result === null || result === void 0 ? void 0 : result.account) {\n            this.account = (0,_utils__WEBPACK_IMPORTED_MODULE_6__.msalToPublic)(this.clientId, result.account);\n        }\n        (0,_utils__WEBPACK_IMPORTED_MODULE_6__.ensureValidMsalToken)(scopes, result, getTokenOptions);\n        this.logger.getToken.info((0,_util_logging__WEBPACK_IMPORTED_MODULE_10__.formatSuccess)(scopes));\n        return {\n            token: result.accessToken,\n            expiresOnTimestamp: result.expiresOn.getTime(),\n        };\n    }\n}\n//# sourceMappingURL=msalNodeCommon.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/identity/dist-esm/src/msal/nodeFlows/msalNodeCommon.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/identity/dist-esm/src/msal/nodeFlows/msalOpenBrowser.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/@azure/identity/dist-esm/src/msal/nodeFlows/msalOpenBrowser.js ***!
  \*************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   MsalOpenBrowser: () => (/* binding */ MsalOpenBrowser),\n/* harmony export */   interactiveBrowserMockable: () => (/* binding */ interactiveBrowserMockable)\n/* harmony export */ });\n/* harmony import */ var _msalNodeCommon__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./msalNodeCommon */ \"(rsc)/./node_modules/@azure/identity/dist-esm/src/msal/nodeFlows/msalNodeCommon.js\");\n/* harmony import */ var _util_logging__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../util/logging */ \"(rsc)/./node_modules/@azure/identity/dist-esm/src/util/logging.js\");\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../utils */ \"(rsc)/./node_modules/@azure/identity/dist-esm/src/msal/utils.js\");\n/* harmony import */ var _msalPlugins__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./msalPlugins */ \"(rsc)/./node_modules/@azure/identity/dist-esm/src/msal/nodeFlows/msalPlugins.js\");\n/* harmony import */ var open__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! open */ \"(rsc)/./node_modules/open/index.js\");\n/* harmony import */ var open__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(open__WEBPACK_IMPORTED_MODULE_0__);\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\n\n\n\n\n/**\n * A call to open(), but mockable\n * @internal\n */\nconst interactiveBrowserMockable = {\n    open: (open__WEBPACK_IMPORTED_MODULE_0___default()),\n};\n/**\n * This MSAL client sets up a web server to listen for redirect callbacks, then calls to the MSAL's public application's `acquireTokenByDeviceCode` during `doGetToken`\n * to trigger the authentication flow, and then respond based on the values obtained from the redirect callback\n * @internal\n */\nclass MsalOpenBrowser extends _msalNodeCommon__WEBPACK_IMPORTED_MODULE_1__.MsalNode {\n    constructor(options) {\n        var _a, _b, _c, _d;\n        super(options);\n        this.loginHint = options.loginHint;\n        this.errorTemplate = (_a = options.browserCustomizationOptions) === null || _a === void 0 ? void 0 : _a.errorMessage;\n        this.successTemplate = (_b = options.browserCustomizationOptions) === null || _b === void 0 ? void 0 : _b.successMessage;\n        this.logger = (0,_util_logging__WEBPACK_IMPORTED_MODULE_2__.credentialLogger)(\"Node.js MSAL Open Browser\");\n        this.useDefaultBrokerAccount =\n            ((_c = options.brokerOptions) === null || _c === void 0 ? void 0 : _c.enabled) && ((_d = options.brokerOptions) === null || _d === void 0 ? void 0 : _d.useDefaultBrokerAccount);\n    }\n    async doGetToken(scopes, options = {}) {\n        try {\n            const interactiveRequest = {\n                openBrowser: async (url) => {\n                    await interactiveBrowserMockable.open(url, { wait: true, newInstance: true });\n                },\n                scopes,\n                authority: options === null || options === void 0 ? void 0 : options.authority,\n                claims: options === null || options === void 0 ? void 0 : options.claims,\n                correlationId: options === null || options === void 0 ? void 0 : options.correlationId,\n                loginHint: this.loginHint,\n                errorTemplate: this.errorTemplate,\n                successTemplate: this.successTemplate,\n            };\n            if ((0,_msalPlugins__WEBPACK_IMPORTED_MODULE_3__.hasNativeBroker)() && this.enableBroker) {\n                return this.doGetBrokeredToken(scopes, interactiveRequest, {\n                    enableCae: options.enableCae,\n                    useDefaultBrokerAccount: this.useDefaultBrokerAccount,\n                });\n            }\n            // If the broker is not enabled, we will fall back to interactive authentication\n            if ((0,_msalPlugins__WEBPACK_IMPORTED_MODULE_3__.hasNativeBroker)() && !this.enableBroker) {\n                this.logger.verbose(\"Authentication will resume normally without the broker, since it's not enabled\");\n            }\n            const result = await this.getApp(\"public\", options === null || options === void 0 ? void 0 : options.enableCae).acquireTokenInteractive(interactiveRequest);\n            return this.handleResult(scopes, result || undefined);\n        }\n        catch (err) {\n            throw (0,_utils__WEBPACK_IMPORTED_MODULE_4__.handleMsalError)(scopes, err, options);\n        }\n    }\n    /**\n     * A helper function that supports brokered authentication through the MSAL's public application.\n     *\n     * When options.useDefaultBrokerAccount is true, the method will attempt to authenticate using the default broker account.\n     * If the default broker account is not available, the method will fall back to interactive authentication.\n     */\n    async doGetBrokeredToken(scopes, interactiveRequest, options) {\n        var _a;\n        this.logger.verbose(\"Authentication will resume through the broker\");\n        if (this.parentWindowHandle) {\n            interactiveRequest.windowHandle = Buffer.from(this.parentWindowHandle);\n        }\n        else {\n            // error should have been thrown from within the constructor of InteractiveBrowserCredential\n            this.logger.warning(\"Parent window handle is not specified for the broker. This may cause unexpected behavior. Please provide the parentWindowHandle.\");\n        }\n        if (this.enableMsaPassthrough) {\n            ((_a = interactiveRequest.tokenQueryParameters) !== null && _a !== void 0 ? _a : (interactiveRequest.tokenQueryParameters = {}))[\"msal_request_type\"] =\n                \"consumer_passthrough\";\n        }\n        if (options.useDefaultBrokerAccount) {\n            interactiveRequest.prompt = \"none\";\n            this.logger.verbose(\"Attempting broker authentication using the default broker account\");\n        }\n        else {\n            interactiveRequest.prompt = undefined;\n            this.logger.verbose(\"Attempting broker authentication without the default broker account\");\n        }\n        try {\n            const result = await this.getApp(\"public\", options === null || options === void 0 ? void 0 : options.enableCae).acquireTokenInteractive(interactiveRequest);\n            if (result.fromNativeBroker) {\n                this.logger.verbose(`This result is returned from native broker`);\n            }\n            return this.handleResult(scopes, result || undefined);\n        }\n        catch (e) {\n            this.logger.verbose(`Failed to authenticate through the broker: ${e.message}`);\n            // If we tried to use the default broker account and failed, fall back to interactive authentication\n            if (options.useDefaultBrokerAccount) {\n                return this.doGetBrokeredToken(scopes, interactiveRequest, {\n                    enableCae: options.enableCae,\n                    useDefaultBrokerAccount: false,\n                });\n            }\n            else {\n                // If we're not using the default broker account, throw the error\n                throw (0,_utils__WEBPACK_IMPORTED_MODULE_4__.handleMsalError)(scopes, e);\n            }\n        }\n    }\n}\n//# sourceMappingURL=msalOpenBrowser.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/identity/dist-esm/src/msal/nodeFlows/msalOpenBrowser.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/identity/dist-esm/src/msal/nodeFlows/msalPlugins.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/@azure/identity/dist-esm/src/msal/nodeFlows/msalPlugins.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   hasNativeBroker: () => (/* binding */ hasNativeBroker),\n/* harmony export */   msalNodeFlowCacheControl: () => (/* binding */ msalNodeFlowCacheControl),\n/* harmony export */   msalNodeFlowNativeBrokerControl: () => (/* binding */ msalNodeFlowNativeBrokerControl),\n/* harmony export */   msalPlugins: () => (/* binding */ msalPlugins),\n/* harmony export */   nativeBrokerInfo: () => (/* binding */ nativeBrokerInfo),\n/* harmony export */   persistenceProvider: () => (/* binding */ persistenceProvider)\n/* harmony export */ });\n/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../constants */ \"(rsc)/./node_modules/@azure/identity/dist-esm/src/constants.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\n/**\n * The current persistence provider, undefined by default.\n * @internal\n */\nlet persistenceProvider = undefined;\n/**\n * An object that allows setting the persistence provider.\n * @internal\n */\nconst msalNodeFlowCacheControl = {\n    setPersistence(pluginProvider) {\n        persistenceProvider = pluginProvider;\n    },\n};\n/**\n * The current native broker provider, undefined by default.\n * @internal\n */\nlet nativeBrokerInfo = undefined;\nfunction hasNativeBroker() {\n    return nativeBrokerInfo !== undefined;\n}\n/**\n * An object that allows setting the native broker provider.\n * @internal\n */\nconst msalNodeFlowNativeBrokerControl = {\n    setNativeBroker(broker) {\n        nativeBrokerInfo = {\n            broker,\n        };\n    },\n};\n/**\n * Configures plugins, validating that required plugins are available and enabled.\n *\n * Does not create the plugins themselves, but rather returns the configuration that will be used to create them.\n *\n * @param options - options for creating the MSAL client\n * @returns plugin configuration\n */\nfunction generatePluginConfiguration(options) {\n    var _a, _b, _c, _d, _e, _f, _g;\n    const config = {\n        cache: {},\n        broker: {\n            isEnabled: (_b = (_a = options.brokerOptions) === null || _a === void 0 ? void 0 : _a.enabled) !== null && _b !== void 0 ? _b : false,\n            enableMsaPassthrough: (_d = (_c = options.brokerOptions) === null || _c === void 0 ? void 0 : _c.legacyEnableMsaPassthrough) !== null && _d !== void 0 ? _d : false,\n            parentWindowHandle: (_e = options.brokerOptions) === null || _e === void 0 ? void 0 : _e.parentWindowHandle,\n        },\n    };\n    if ((_f = options.tokenCachePersistenceOptions) === null || _f === void 0 ? void 0 : _f.enabled) {\n        if (persistenceProvider === undefined) {\n            throw new Error([\n                \"Persistent token caching was requested, but no persistence provider was configured.\",\n                \"You must install the identity-cache-persistence plugin package (`npm install --save @azure/identity-cache-persistence`)\",\n                \"and enable it by importing `useIdentityPlugin` from `@azure/identity` and calling\",\n                \"`useIdentityPlugin(cachePersistencePlugin)` before using `tokenCachePersistenceOptions`.\",\n            ].join(\" \"));\n        }\n        const cacheBaseName = options.tokenCachePersistenceOptions.name || _constants__WEBPACK_IMPORTED_MODULE_0__.DEFAULT_TOKEN_CACHE_NAME;\n        config.cache.cachePlugin = persistenceProvider(Object.assign({ name: `${cacheBaseName}.${_constants__WEBPACK_IMPORTED_MODULE_0__.CACHE_NON_CAE_SUFFIX}` }, options.tokenCachePersistenceOptions));\n        config.cache.cachePluginCae = persistenceProvider(Object.assign({ name: `${cacheBaseName}.${_constants__WEBPACK_IMPORTED_MODULE_0__.CACHE_CAE_SUFFIX}` }, options.tokenCachePersistenceOptions));\n    }\n    if ((_g = options.brokerOptions) === null || _g === void 0 ? void 0 : _g.enabled) {\n        if (nativeBrokerInfo === undefined) {\n            throw new Error([\n                \"Broker for WAM was requested to be enabled, but no native broker was configured.\",\n                \"You must install the identity-broker plugin package (`npm install --save @azure/identity-broker`)\",\n                \"and enable it by importing `useIdentityPlugin` from `@azure/identity` and calling\",\n                \"`useIdentityPlugin(createNativeBrokerPlugin())` before using `enableBroker`.\",\n            ].join(\" \"));\n        }\n        config.broker.nativeBrokerPlugin = nativeBrokerInfo.broker;\n    }\n    return config;\n}\n/**\n * Wraps generatePluginConfiguration as a writeable property for test stubbing purposes.\n */\nconst msalPlugins = {\n    generatePluginConfiguration,\n};\n//# sourceMappingURL=msalPlugins.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2lkZW50aXR5L2Rpc3QtZXNtL3NyYy9tc2FsL25vZGVGbG93cy9tc2FsUGx1Z2lucy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7O0FBQUE7QUFDQTtBQUNtRztBQUNuRztBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ0E7QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQjtBQUNqQjtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDJFQUEyRSxnRUFBd0I7QUFDbkcsdUVBQXVFLFNBQVMsY0FBYyxHQUFHLDREQUFvQixDQUFDLEdBQUc7QUFDekgsMEVBQTBFLFNBQVMsY0FBYyxHQUFHLHdEQUFnQixDQUFDLEdBQUc7QUFDeEg7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZGFuaWVsMy12cDIvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2lkZW50aXR5L2Rpc3QtZXNtL3NyYy9tc2FsL25vZGVGbG93cy9tc2FsUGx1Z2lucy5qcz8zYzNjIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLlxuLy8gTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlLlxuaW1wb3J0IHsgQ0FDSEVfQ0FFX1NVRkZJWCwgQ0FDSEVfTk9OX0NBRV9TVUZGSVgsIERFRkFVTFRfVE9LRU5fQ0FDSEVfTkFNRSB9IGZyb20gXCIuLi8uLi9jb25zdGFudHNcIjtcbi8qKlxuICogVGhlIGN1cnJlbnQgcGVyc2lzdGVuY2UgcHJvdmlkZXIsIHVuZGVmaW5lZCBieSBkZWZhdWx0LlxuICogQGludGVybmFsXG4gKi9cbmV4cG9ydCBsZXQgcGVyc2lzdGVuY2VQcm92aWRlciA9IHVuZGVmaW5lZDtcbi8qKlxuICogQW4gb2JqZWN0IHRoYXQgYWxsb3dzIHNldHRpbmcgdGhlIHBlcnNpc3RlbmNlIHByb3ZpZGVyLlxuICogQGludGVybmFsXG4gKi9cbmV4cG9ydCBjb25zdCBtc2FsTm9kZUZsb3dDYWNoZUNvbnRyb2wgPSB7XG4gICAgc2V0UGVyc2lzdGVuY2UocGx1Z2luUHJvdmlkZXIpIHtcbiAgICAgICAgcGVyc2lzdGVuY2VQcm92aWRlciA9IHBsdWdpblByb3ZpZGVyO1xuICAgIH0sXG59O1xuLyoqXG4gKiBUaGUgY3VycmVudCBuYXRpdmUgYnJva2VyIHByb3ZpZGVyLCB1bmRlZmluZWQgYnkgZGVmYXVsdC5cbiAqIEBpbnRlcm5hbFxuICovXG5leHBvcnQgbGV0IG5hdGl2ZUJyb2tlckluZm8gPSB1bmRlZmluZWQ7XG5leHBvcnQgZnVuY3Rpb24gaGFzTmF0aXZlQnJva2VyKCkge1xuICAgIHJldHVybiBuYXRpdmVCcm9rZXJJbmZvICE9PSB1bmRlZmluZWQ7XG59XG4vKipcbiAqIEFuIG9iamVjdCB0aGF0IGFsbG93cyBzZXR0aW5nIHRoZSBuYXRpdmUgYnJva2VyIHByb3ZpZGVyLlxuICogQGludGVybmFsXG4gKi9cbmV4cG9ydCBjb25zdCBtc2FsTm9kZUZsb3dOYXRpdmVCcm9rZXJDb250cm9sID0ge1xuICAgIHNldE5hdGl2ZUJyb2tlcihicm9rZXIpIHtcbiAgICAgICAgbmF0aXZlQnJva2VySW5mbyA9IHtcbiAgICAgICAgICAgIGJyb2tlcixcbiAgICAgICAgfTtcbiAgICB9LFxufTtcbi8qKlxuICogQ29uZmlndXJlcyBwbHVnaW5zLCB2YWxpZGF0aW5nIHRoYXQgcmVxdWlyZWQgcGx1Z2lucyBhcmUgYXZhaWxhYmxlIGFuZCBlbmFibGVkLlxuICpcbiAqIERvZXMgbm90IGNyZWF0ZSB0aGUgcGx1Z2lucyB0aGVtc2VsdmVzLCBidXQgcmF0aGVyIHJldHVybnMgdGhlIGNvbmZpZ3VyYXRpb24gdGhhdCB3aWxsIGJlIHVzZWQgdG8gY3JlYXRlIHRoZW0uXG4gKlxuICogQHBhcmFtIG9wdGlvbnMgLSBvcHRpb25zIGZvciBjcmVhdGluZyB0aGUgTVNBTCBjbGllbnRcbiAqIEByZXR1cm5zIHBsdWdpbiBjb25maWd1cmF0aW9uXG4gKi9cbmZ1bmN0aW9uIGdlbmVyYXRlUGx1Z2luQ29uZmlndXJhdGlvbihvcHRpb25zKSB7XG4gICAgdmFyIF9hLCBfYiwgX2MsIF9kLCBfZSwgX2YsIF9nO1xuICAgIGNvbnN0IGNvbmZpZyA9IHtcbiAgICAgICAgY2FjaGU6IHt9LFxuICAgICAgICBicm9rZXI6IHtcbiAgICAgICAgICAgIGlzRW5hYmxlZDogKF9iID0gKF9hID0gb3B0aW9ucy5icm9rZXJPcHRpb25zKSA9PT0gbnVsbCB8fCBfYSA9PT0gdm9pZCAwID8gdm9pZCAwIDogX2EuZW5hYmxlZCkgIT09IG51bGwgJiYgX2IgIT09IHZvaWQgMCA/IF9iIDogZmFsc2UsXG4gICAgICAgICAgICBlbmFibGVNc2FQYXNzdGhyb3VnaDogKF9kID0gKF9jID0gb3B0aW9ucy5icm9rZXJPcHRpb25zKSA9PT0gbnVsbCB8fCBfYyA9PT0gdm9pZCAwID8gdm9pZCAwIDogX2MubGVnYWN5RW5hYmxlTXNhUGFzc3Rocm91Z2gpICE9PSBudWxsICYmIF9kICE9PSB2b2lkIDAgPyBfZCA6IGZhbHNlLFxuICAgICAgICAgICAgcGFyZW50V2luZG93SGFuZGxlOiAoX2UgPSBvcHRpb25zLmJyb2tlck9wdGlvbnMpID09PSBudWxsIHx8IF9lID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfZS5wYXJlbnRXaW5kb3dIYW5kbGUsXG4gICAgICAgIH0sXG4gICAgfTtcbiAgICBpZiAoKF9mID0gb3B0aW9ucy50b2tlbkNhY2hlUGVyc2lzdGVuY2VPcHRpb25zKSA9PT0gbnVsbCB8fCBfZiA9PT0gdm9pZCAwID8gdm9pZCAwIDogX2YuZW5hYmxlZCkge1xuICAgICAgICBpZiAocGVyc2lzdGVuY2VQcm92aWRlciA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoW1xuICAgICAgICAgICAgICAgIFwiUGVyc2lzdGVudCB0b2tlbiBjYWNoaW5nIHdhcyByZXF1ZXN0ZWQsIGJ1dCBubyBwZXJzaXN0ZW5jZSBwcm92aWRlciB3YXMgY29uZmlndXJlZC5cIixcbiAgICAgICAgICAgICAgICBcIllvdSBtdXN0IGluc3RhbGwgdGhlIGlkZW50aXR5LWNhY2hlLXBlcnNpc3RlbmNlIHBsdWdpbiBwYWNrYWdlIChgbnBtIGluc3RhbGwgLS1zYXZlIEBhenVyZS9pZGVudGl0eS1jYWNoZS1wZXJzaXN0ZW5jZWApXCIsXG4gICAgICAgICAgICAgICAgXCJhbmQgZW5hYmxlIGl0IGJ5IGltcG9ydGluZyBgdXNlSWRlbnRpdHlQbHVnaW5gIGZyb20gYEBhenVyZS9pZGVudGl0eWAgYW5kIGNhbGxpbmdcIixcbiAgICAgICAgICAgICAgICBcImB1c2VJZGVudGl0eVBsdWdpbihjYWNoZVBlcnNpc3RlbmNlUGx1Z2luKWAgYmVmb3JlIHVzaW5nIGB0b2tlbkNhY2hlUGVyc2lzdGVuY2VPcHRpb25zYC5cIixcbiAgICAgICAgICAgIF0uam9pbihcIiBcIikpO1xuICAgICAgICB9XG4gICAgICAgIGNvbnN0IGNhY2hlQmFzZU5hbWUgPSBvcHRpb25zLnRva2VuQ2FjaGVQZXJzaXN0ZW5jZU9wdGlvbnMubmFtZSB8fCBERUZBVUxUX1RPS0VOX0NBQ0hFX05BTUU7XG4gICAgICAgIGNvbmZpZy5jYWNoZS5jYWNoZVBsdWdpbiA9IHBlcnNpc3RlbmNlUHJvdmlkZXIoT2JqZWN0LmFzc2lnbih7IG5hbWU6IGAke2NhY2hlQmFzZU5hbWV9LiR7Q0FDSEVfTk9OX0NBRV9TVUZGSVh9YCB9LCBvcHRpb25zLnRva2VuQ2FjaGVQZXJzaXN0ZW5jZU9wdGlvbnMpKTtcbiAgICAgICAgY29uZmlnLmNhY2hlLmNhY2hlUGx1Z2luQ2FlID0gcGVyc2lzdGVuY2VQcm92aWRlcihPYmplY3QuYXNzaWduKHsgbmFtZTogYCR7Y2FjaGVCYXNlTmFtZX0uJHtDQUNIRV9DQUVfU1VGRklYfWAgfSwgb3B0aW9ucy50b2tlbkNhY2hlUGVyc2lzdGVuY2VPcHRpb25zKSk7XG4gICAgfVxuICAgIGlmICgoX2cgPSBvcHRpb25zLmJyb2tlck9wdGlvbnMpID09PSBudWxsIHx8IF9nID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfZy5lbmFibGVkKSB7XG4gICAgICAgIGlmIChuYXRpdmVCcm9rZXJJbmZvID09PSB1bmRlZmluZWQpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihbXG4gICAgICAgICAgICAgICAgXCJCcm9rZXIgZm9yIFdBTSB3YXMgcmVxdWVzdGVkIHRvIGJlIGVuYWJsZWQsIGJ1dCBubyBuYXRpdmUgYnJva2VyIHdhcyBjb25maWd1cmVkLlwiLFxuICAgICAgICAgICAgICAgIFwiWW91IG11c3QgaW5zdGFsbCB0aGUgaWRlbnRpdHktYnJva2VyIHBsdWdpbiBwYWNrYWdlIChgbnBtIGluc3RhbGwgLS1zYXZlIEBhenVyZS9pZGVudGl0eS1icm9rZXJgKVwiLFxuICAgICAgICAgICAgICAgIFwiYW5kIGVuYWJsZSBpdCBieSBpbXBvcnRpbmcgYHVzZUlkZW50aXR5UGx1Z2luYCBmcm9tIGBAYXp1cmUvaWRlbnRpdHlgIGFuZCBjYWxsaW5nXCIsXG4gICAgICAgICAgICAgICAgXCJgdXNlSWRlbnRpdHlQbHVnaW4oY3JlYXRlTmF0aXZlQnJva2VyUGx1Z2luKCkpYCBiZWZvcmUgdXNpbmcgYGVuYWJsZUJyb2tlcmAuXCIsXG4gICAgICAgICAgICBdLmpvaW4oXCIgXCIpKTtcbiAgICAgICAgfVxuICAgICAgICBjb25maWcuYnJva2VyLm5hdGl2ZUJyb2tlclBsdWdpbiA9IG5hdGl2ZUJyb2tlckluZm8uYnJva2VyO1xuICAgIH1cbiAgICByZXR1cm4gY29uZmlnO1xufVxuLyoqXG4gKiBXcmFwcyBnZW5lcmF0ZVBsdWdpbkNvbmZpZ3VyYXRpb24gYXMgYSB3cml0ZWFibGUgcHJvcGVydHkgZm9yIHRlc3Qgc3R1YmJpbmcgcHVycG9zZXMuXG4gKi9cbmV4cG9ydCBjb25zdCBtc2FsUGx1Z2lucyA9IHtcbiAgICBnZW5lcmF0ZVBsdWdpbkNvbmZpZ3VyYXRpb24sXG59O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9bXNhbFBsdWdpbnMuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/identity/dist-esm/src/msal/nodeFlows/msalPlugins.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/identity/dist-esm/src/msal/utils.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@azure/identity/dist-esm/src/msal/utils.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   defaultLoggerCallback: () => (/* binding */ defaultLoggerCallback),\n/* harmony export */   deserializeAuthenticationRecord: () => (/* binding */ deserializeAuthenticationRecord),\n/* harmony export */   ensureValidMsalToken: () => (/* binding */ ensureValidMsalToken),\n/* harmony export */   getAuthority: () => (/* binding */ getAuthority),\n/* harmony export */   getKnownAuthorities: () => (/* binding */ getKnownAuthorities),\n/* harmony export */   getMSALLogLevel: () => (/* binding */ getMSALLogLevel),\n/* harmony export */   handleMsalError: () => (/* binding */ handleMsalError),\n/* harmony export */   msalToPublic: () => (/* binding */ msalToPublic),\n/* harmony export */   publicToMsal: () => (/* binding */ publicToMsal),\n/* harmony export */   randomUUID: () => (/* binding */ randomUUID),\n/* harmony export */   serializeAuthenticationRecord: () => (/* binding */ serializeAuthenticationRecord)\n/* harmony export */ });\n/* harmony import */ var _errors__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../errors */ \"(rsc)/./node_modules/@azure/identity/dist-esm/src/errors.js\");\n/* harmony import */ var _util_logging__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../util/logging */ \"(rsc)/./node_modules/@azure/identity/dist-esm/src/util/logging.js\");\n/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../constants */ \"(rsc)/./node_modules/@azure/identity/dist-esm/src/constants.js\");\n/* harmony import */ var _azure_core_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @azure/core-util */ \"(rsc)/./node_modules/@azure/core-util/dist/esm/index.js\");\n/* harmony import */ var _azure_abort_controller__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @azure/abort-controller */ \"(rsc)/./node_modules/@azure/identity/node_modules/@azure/abort-controller/dist-esm/src/AbortController.js\");\n/* harmony import */ var _msal__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./msal */ \"(rsc)/./node_modules/@azure/msal-node/dist/index.mjs\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\n\n\n\n\n\n/**\n * @internal\n */\nconst logger = (0,_util_logging__WEBPACK_IMPORTED_MODULE_1__.credentialLogger)(\"IdentityUtils\");\n/**\n * Latest AuthenticationRecord version\n * @internal\n */\nconst LatestAuthenticationRecordVersion = \"1.0\";\n/**\n * Ensures the validity of the MSAL token\n * @internal\n */\nfunction ensureValidMsalToken(scopes, msalToken, getTokenOptions) {\n    const error = (message) => {\n        logger.getToken.info(message);\n        return new _errors__WEBPACK_IMPORTED_MODULE_2__.AuthenticationRequiredError({\n            scopes: Array.isArray(scopes) ? scopes : [scopes],\n            getTokenOptions,\n            message,\n        });\n    };\n    if (!msalToken) {\n        throw error(\"No response\");\n    }\n    if (!msalToken.expiresOn) {\n        throw error(`Response had no \"expiresOn\" property.`);\n    }\n    if (!msalToken.accessToken) {\n        throw error(`Response had no \"accessToken\" property.`);\n    }\n}\n/**\n * Generates a valid authority by combining a host with a tenantId.\n * @internal\n */\nfunction getAuthority(tenantId, host) {\n    if (!host) {\n        host = _constants__WEBPACK_IMPORTED_MODULE_3__.DefaultAuthorityHost;\n    }\n    if (new RegExp(`${tenantId}/?$`).test(host)) {\n        return host;\n    }\n    if (host.endsWith(\"/\")) {\n        return host + tenantId;\n    }\n    else {\n        return `${host}/${tenantId}`;\n    }\n}\n/**\n * Generates the known authorities.\n * If the Tenant Id is `adfs`, the authority can't be validated since the format won't match the expected one.\n * For that reason, we have to force MSAL to disable validating the authority\n * by sending it within the known authorities in the MSAL configuration.\n * @internal\n */\nfunction getKnownAuthorities(tenantId, authorityHost, disableInstanceDiscovery) {\n    if ((tenantId === \"adfs\" && authorityHost) || disableInstanceDiscovery) {\n        return [authorityHost];\n    }\n    return [];\n}\n/**\n * Generates a logger that can be passed to the MSAL clients.\n * @param credLogger - The logger of the credential.\n * @internal\n */\nconst defaultLoggerCallback = (credLogger, platform = _azure_core_util__WEBPACK_IMPORTED_MODULE_0__.isNode ? \"Node\" : \"Browser\") => (level, message, containsPii) => {\n    if (containsPii) {\n        return;\n    }\n    switch (level) {\n        case _msal__WEBPACK_IMPORTED_MODULE_4__.LogLevel.Error:\n            credLogger.info(`MSAL ${platform} V2 error: ${message}`);\n            return;\n        case _msal__WEBPACK_IMPORTED_MODULE_4__.LogLevel.Info:\n            credLogger.info(`MSAL ${platform} V2 info message: ${message}`);\n            return;\n        case _msal__WEBPACK_IMPORTED_MODULE_4__.LogLevel.Verbose:\n            credLogger.info(`MSAL ${platform} V2 verbose message: ${message}`);\n            return;\n        case _msal__WEBPACK_IMPORTED_MODULE_4__.LogLevel.Warning:\n            credLogger.info(`MSAL ${platform} V2 warning: ${message}`);\n            return;\n    }\n};\n/**\n * @internal\n */\nfunction getMSALLogLevel(logLevel) {\n    switch (logLevel) {\n        case \"error\":\n            return _msal__WEBPACK_IMPORTED_MODULE_4__.LogLevel.Error;\n        case \"info\":\n            return _msal__WEBPACK_IMPORTED_MODULE_4__.LogLevel.Info;\n        case \"verbose\":\n            return _msal__WEBPACK_IMPORTED_MODULE_4__.LogLevel.Verbose;\n        case \"warning\":\n            return _msal__WEBPACK_IMPORTED_MODULE_4__.LogLevel.Warning;\n        default:\n            // default msal logging level should be Info\n            return _msal__WEBPACK_IMPORTED_MODULE_4__.LogLevel.Info;\n    }\n}\n/**\n * Wraps core-util's randomUUID in order to allow for mocking in tests.\n * This prepares the library for the upcoming core-util update to ESM.\n *\n * @internal\n * @returns A string containing a random UUID\n */\nfunction randomUUID() {\n    return (0,_azure_core_util__WEBPACK_IMPORTED_MODULE_0__.randomUUID)();\n}\n/**\n * Handles MSAL errors.\n */\nfunction handleMsalError(scopes, error, getTokenOptions) {\n    if (error.name === \"AuthError\" ||\n        error.name === \"ClientAuthError\" ||\n        error.name === \"BrowserAuthError\") {\n        const msalError = error;\n        switch (msalError.errorCode) {\n            case \"endpoints_resolution_error\":\n                logger.info((0,_util_logging__WEBPACK_IMPORTED_MODULE_1__.formatError)(scopes, error.message));\n                return new _errors__WEBPACK_IMPORTED_MODULE_2__.CredentialUnavailableError(error.message);\n            case \"device_code_polling_cancelled\":\n                return new _azure_abort_controller__WEBPACK_IMPORTED_MODULE_5__.AbortError(\"The authentication has been aborted by the caller.\");\n            case \"consent_required\":\n            case \"interaction_required\":\n            case \"login_required\":\n                logger.info((0,_util_logging__WEBPACK_IMPORTED_MODULE_1__.formatError)(scopes, `Authentication returned errorCode ${msalError.errorCode}`));\n                break;\n            default:\n                logger.info((0,_util_logging__WEBPACK_IMPORTED_MODULE_1__.formatError)(scopes, `Failed to acquire token: ${error.message}`));\n                break;\n        }\n    }\n    if (error.name === \"ClientConfigurationError\" ||\n        error.name === \"BrowserConfigurationAuthError\" ||\n        error.name === \"AbortError\") {\n        return error;\n    }\n    if (error.name === \"NativeAuthError\") {\n        logger.info((0,_util_logging__WEBPACK_IMPORTED_MODULE_1__.formatError)(scopes, `Error from the native broker: ${error.message} with status code: ${error.statusCode}`));\n        return error;\n    }\n    return new _errors__WEBPACK_IMPORTED_MODULE_2__.AuthenticationRequiredError({ scopes, getTokenOptions, message: error.message });\n}\n// transformations.ts\nfunction publicToMsal(account) {\n    const [environment] = account.authority.match(/([a-z]*\\.[a-z]*\\.[a-z]*)/) || [\"\"];\n    return Object.assign(Object.assign({}, account), { localAccountId: account.homeAccountId, environment });\n}\nfunction msalToPublic(clientId, account) {\n    const record = {\n        authority: getAuthority(account.tenantId, account.environment),\n        homeAccountId: account.homeAccountId,\n        tenantId: account.tenantId || _constants__WEBPACK_IMPORTED_MODULE_3__.DefaultTenantId,\n        username: account.username,\n        clientId,\n        version: LatestAuthenticationRecordVersion,\n    };\n    return record;\n}\n/**\n * Serializes an `AuthenticationRecord` into a string.\n *\n * The output of a serialized authentication record will contain the following properties:\n *\n * - \"authority\"\n * - \"homeAccountId\"\n * - \"clientId\"\n * - \"tenantId\"\n * - \"username\"\n * - \"version\"\n *\n * To later convert this string to a serialized `AuthenticationRecord`, please use the exported function `deserializeAuthenticationRecord()`.\n */\nfunction serializeAuthenticationRecord(record) {\n    return JSON.stringify(record);\n}\n/**\n * Deserializes a previously serialized authentication record from a string into an object.\n *\n * The input string must contain the following properties:\n *\n * - \"authority\"\n * - \"homeAccountId\"\n * - \"clientId\"\n * - \"tenantId\"\n * - \"username\"\n * - \"version\"\n *\n * If the version we receive is unsupported, an error will be thrown.\n *\n * At the moment, the only available version is: \"1.0\", which is always set when the authentication record is serialized.\n *\n * @param serializedRecord - Authentication record previously serialized into string.\n * @returns AuthenticationRecord.\n */\nfunction deserializeAuthenticationRecord(serializedRecord) {\n    const parsed = JSON.parse(serializedRecord);\n    if (parsed.version && parsed.version !== LatestAuthenticationRecordVersion) {\n        throw Error(\"Unsupported AuthenticationRecord version\");\n    }\n    return parsed;\n}\n//# sourceMappingURL=utils.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/identity/dist-esm/src/msal/utils.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/identity/dist-esm/src/plugins/consumer.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@azure/identity/dist-esm/src/plugins/consumer.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   useIdentityPlugin: () => (/* binding */ useIdentityPlugin)\n/* harmony export */ });\n/* harmony import */ var _msal_nodeFlows_msalPlugins__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../msal/nodeFlows/msalPlugins */ \"(rsc)/./node_modules/@azure/identity/dist-esm/src/msal/nodeFlows/msalPlugins.js\");\n/* harmony import */ var _credentials_visualStudioCodeCredential__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../credentials/visualStudioCodeCredential */ \"(rsc)/./node_modules/@azure/identity/dist-esm/src/credentials/visualStudioCodeCredential.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\n\n/**\n * The context passed to an Identity plugin. This contains objects that\n * plugins can use to set backend implementations.\n * @internal\n */\nconst pluginContext = {\n    cachePluginControl: _msal_nodeFlows_msalPlugins__WEBPACK_IMPORTED_MODULE_0__.msalNodeFlowCacheControl,\n    nativeBrokerPluginControl: _msal_nodeFlows_msalPlugins__WEBPACK_IMPORTED_MODULE_0__.msalNodeFlowNativeBrokerControl,\n    vsCodeCredentialControl: _credentials_visualStudioCodeCredential__WEBPACK_IMPORTED_MODULE_1__.vsCodeCredentialControl,\n};\n/**\n * Extend Azure Identity with additional functionality. Pass a plugin from\n * a plugin package, such as:\n *\n * - `@azure/identity-cache-persistence`: provides persistent token caching\n * - `@azure/identity-vscode`: provides the dependencies of\n *   `VisualStudioCodeCredential` and enables it\n *\n * Example:\n *\n * ```javascript\n * import { cachePersistencePlugin } from \"@azure/identity-cache-persistence\";\n *\n * import { useIdentityPlugin, DefaultAzureCredential } from \"@azure/identity\";\n * useIdentityPlugin(cachePersistencePlugin);\n *\n * // The plugin has the capability to extend `DefaultAzureCredential` and to\n * // add middleware to the underlying credentials, such as persistence.\n * const credential = new DefaultAzureCredential({\n *   tokenCachePersistenceOptions: {\n *     enabled: true\n *   }\n * });\n * ```\n *\n * @param plugin - the plugin to register\n */\nfunction useIdentityPlugin(plugin) {\n    plugin(pluginContext);\n}\n//# sourceMappingURL=consumer.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2lkZW50aXR5L2Rpc3QtZXNtL3NyYy9wbHVnaW5zL2NvbnN1bWVyLmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFBO0FBQ0E7QUFDMkc7QUFDdkI7QUFDcEY7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esd0JBQXdCLGlGQUF3QjtBQUNoRCwrQkFBK0Isd0ZBQStCO0FBQzlELDZCQUE2Qiw0RkFBdUI7QUFDcEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsWUFBWSx5QkFBeUI7QUFDckM7QUFDQSxZQUFZLDRDQUE0QztBQUN4RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsSUFBSTtBQUNKO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9kYW5pZWwzLXZwMi8uL25vZGVfbW9kdWxlcy9AYXp1cmUvaWRlbnRpdHkvZGlzdC1lc20vc3JjL3BsdWdpbnMvY29uc3VtZXIuanM/MGIzNyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi5cbi8vIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZS5cbmltcG9ydCB7IG1zYWxOb2RlRmxvd0NhY2hlQ29udHJvbCwgbXNhbE5vZGVGbG93TmF0aXZlQnJva2VyQ29udHJvbCwgfSBmcm9tIFwiLi4vbXNhbC9ub2RlRmxvd3MvbXNhbFBsdWdpbnNcIjtcbmltcG9ydCB7IHZzQ29kZUNyZWRlbnRpYWxDb250cm9sIH0gZnJvbSBcIi4uL2NyZWRlbnRpYWxzL3Zpc3VhbFN0dWRpb0NvZGVDcmVkZW50aWFsXCI7XG4vKipcbiAqIFRoZSBjb250ZXh0IHBhc3NlZCB0byBhbiBJZGVudGl0eSBwbHVnaW4uIFRoaXMgY29udGFpbnMgb2JqZWN0cyB0aGF0XG4gKiBwbHVnaW5zIGNhbiB1c2UgdG8gc2V0IGJhY2tlbmQgaW1wbGVtZW50YXRpb25zLlxuICogQGludGVybmFsXG4gKi9cbmNvbnN0IHBsdWdpbkNvbnRleHQgPSB7XG4gICAgY2FjaGVQbHVnaW5Db250cm9sOiBtc2FsTm9kZUZsb3dDYWNoZUNvbnRyb2wsXG4gICAgbmF0aXZlQnJva2VyUGx1Z2luQ29udHJvbDogbXNhbE5vZGVGbG93TmF0aXZlQnJva2VyQ29udHJvbCxcbiAgICB2c0NvZGVDcmVkZW50aWFsQ29udHJvbDogdnNDb2RlQ3JlZGVudGlhbENvbnRyb2wsXG59O1xuLyoqXG4gKiBFeHRlbmQgQXp1cmUgSWRlbnRpdHkgd2l0aCBhZGRpdGlvbmFsIGZ1bmN0aW9uYWxpdHkuIFBhc3MgYSBwbHVnaW4gZnJvbVxuICogYSBwbHVnaW4gcGFja2FnZSwgc3VjaCBhczpcbiAqXG4gKiAtIGBAYXp1cmUvaWRlbnRpdHktY2FjaGUtcGVyc2lzdGVuY2VgOiBwcm92aWRlcyBwZXJzaXN0ZW50IHRva2VuIGNhY2hpbmdcbiAqIC0gYEBhenVyZS9pZGVudGl0eS12c2NvZGVgOiBwcm92aWRlcyB0aGUgZGVwZW5kZW5jaWVzIG9mXG4gKiAgIGBWaXN1YWxTdHVkaW9Db2RlQ3JlZGVudGlhbGAgYW5kIGVuYWJsZXMgaXRcbiAqXG4gKiBFeGFtcGxlOlxuICpcbiAqIGBgYGphdmFzY3JpcHRcbiAqIGltcG9ydCB7IGNhY2hlUGVyc2lzdGVuY2VQbHVnaW4gfSBmcm9tIFwiQGF6dXJlL2lkZW50aXR5LWNhY2hlLXBlcnNpc3RlbmNlXCI7XG4gKlxuICogaW1wb3J0IHsgdXNlSWRlbnRpdHlQbHVnaW4sIERlZmF1bHRBenVyZUNyZWRlbnRpYWwgfSBmcm9tIFwiQGF6dXJlL2lkZW50aXR5XCI7XG4gKiB1c2VJZGVudGl0eVBsdWdpbihjYWNoZVBlcnNpc3RlbmNlUGx1Z2luKTtcbiAqXG4gKiAvLyBUaGUgcGx1Z2luIGhhcyB0aGUgY2FwYWJpbGl0eSB0byBleHRlbmQgYERlZmF1bHRBenVyZUNyZWRlbnRpYWxgIGFuZCB0b1xuICogLy8gYWRkIG1pZGRsZXdhcmUgdG8gdGhlIHVuZGVybHlpbmcgY3JlZGVudGlhbHMsIHN1Y2ggYXMgcGVyc2lzdGVuY2UuXG4gKiBjb25zdCBjcmVkZW50aWFsID0gbmV3IERlZmF1bHRBenVyZUNyZWRlbnRpYWwoe1xuICogICB0b2tlbkNhY2hlUGVyc2lzdGVuY2VPcHRpb25zOiB7XG4gKiAgICAgZW5hYmxlZDogdHJ1ZVxuICogICB9XG4gKiB9KTtcbiAqIGBgYFxuICpcbiAqIEBwYXJhbSBwbHVnaW4gLSB0aGUgcGx1Z2luIHRvIHJlZ2lzdGVyXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiB1c2VJZGVudGl0eVBsdWdpbihwbHVnaW4pIHtcbiAgICBwbHVnaW4ocGx1Z2luQ29udGV4dCk7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1jb25zdW1lci5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/identity/dist-esm/src/plugins/consumer.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/identity/dist-esm/src/regionalAuthority.js":
/*!************************************************************************!*\
  !*** ./node_modules/@azure/identity/dist-esm/src/regionalAuthority.js ***!
  \************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   RegionalAuthority: () => (/* binding */ RegionalAuthority),\n/* harmony export */   calculateRegionalAuthority: () => (/* binding */ calculateRegionalAuthority)\n/* harmony export */ });\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n/**\n * Helps specify a regional authority, or \"AutoDiscoverRegion\" to auto-detect the region.\n */\nvar RegionalAuthority;\n(function (RegionalAuthority) {\n    /** Instructs MSAL to attempt to discover the region */\n    RegionalAuthority[\"AutoDiscoverRegion\"] = \"AutoDiscoverRegion\";\n    /** Uses the {@link RegionalAuthority} for the Azure 'westus' region. */\n    RegionalAuthority[\"USWest\"] = \"westus\";\n    /** Uses the {@link RegionalAuthority} for the Azure 'westus2' region. */\n    RegionalAuthority[\"USWest2\"] = \"westus2\";\n    /** Uses the {@link RegionalAuthority} for the Azure 'centralus' region. */\n    RegionalAuthority[\"USCentral\"] = \"centralus\";\n    /** Uses the {@link RegionalAuthority} for the Azure 'eastus' region. */\n    RegionalAuthority[\"USEast\"] = \"eastus\";\n    /** Uses the {@link RegionalAuthority} for the Azure 'eastus2' region. */\n    RegionalAuthority[\"USEast2\"] = \"eastus2\";\n    /** Uses the {@link RegionalAuthority} for the Azure 'northcentralus' region. */\n    RegionalAuthority[\"USNorthCentral\"] = \"northcentralus\";\n    /** Uses the {@link RegionalAuthority} for the Azure 'southcentralus' region. */\n    RegionalAuthority[\"USSouthCentral\"] = \"southcentralus\";\n    /** Uses the {@link RegionalAuthority} for the Azure 'westcentralus' region. */\n    RegionalAuthority[\"USWestCentral\"] = \"westcentralus\";\n    /** Uses the {@link RegionalAuthority} for the Azure 'canadacentral' region. */\n    RegionalAuthority[\"CanadaCentral\"] = \"canadacentral\";\n    /** Uses the {@link RegionalAuthority} for the Azure 'canadaeast' region. */\n    RegionalAuthority[\"CanadaEast\"] = \"canadaeast\";\n    /** Uses the {@link RegionalAuthority} for the Azure 'brazilsouth' region. */\n    RegionalAuthority[\"BrazilSouth\"] = \"brazilsouth\";\n    /** Uses the {@link RegionalAuthority} for the Azure 'northeurope' region. */\n    RegionalAuthority[\"EuropeNorth\"] = \"northeurope\";\n    /** Uses the {@link RegionalAuthority} for the Azure 'westeurope' region. */\n    RegionalAuthority[\"EuropeWest\"] = \"westeurope\";\n    /** Uses the {@link RegionalAuthority} for the Azure 'uksouth' region. */\n    RegionalAuthority[\"UKSouth\"] = \"uksouth\";\n    /** Uses the {@link RegionalAuthority} for the Azure 'ukwest' region. */\n    RegionalAuthority[\"UKWest\"] = \"ukwest\";\n    /** Uses the {@link RegionalAuthority} for the Azure 'francecentral' region. */\n    RegionalAuthority[\"FranceCentral\"] = \"francecentral\";\n    /** Uses the {@link RegionalAuthority} for the Azure 'francesouth' region. */\n    RegionalAuthority[\"FranceSouth\"] = \"francesouth\";\n    /** Uses the {@link RegionalAuthority} for the Azure 'switzerlandnorth' region. */\n    RegionalAuthority[\"SwitzerlandNorth\"] = \"switzerlandnorth\";\n    /** Uses the {@link RegionalAuthority} for the Azure 'switzerlandwest' region. */\n    RegionalAuthority[\"SwitzerlandWest\"] = \"switzerlandwest\";\n    /** Uses the {@link RegionalAuthority} for the Azure 'germanynorth' region. */\n    RegionalAuthority[\"GermanyNorth\"] = \"germanynorth\";\n    /** Uses the {@link RegionalAuthority} for the Azure 'germanywestcentral' region. */\n    RegionalAuthority[\"GermanyWestCentral\"] = \"germanywestcentral\";\n    /** Uses the {@link RegionalAuthority} for the Azure 'norwaywest' region. */\n    RegionalAuthority[\"NorwayWest\"] = \"norwaywest\";\n    /** Uses the {@link RegionalAuthority} for the Azure 'norwayeast' region. */\n    RegionalAuthority[\"NorwayEast\"] = \"norwayeast\";\n    /** Uses the {@link RegionalAuthority} for the Azure 'eastasia' region. */\n    RegionalAuthority[\"AsiaEast\"] = \"eastasia\";\n    /** Uses the {@link RegionalAuthority} for the Azure 'southeastasia' region. */\n    RegionalAuthority[\"AsiaSouthEast\"] = \"southeastasia\";\n    /** Uses the {@link RegionalAuthority} for the Azure 'japaneast' region. */\n    RegionalAuthority[\"JapanEast\"] = \"japaneast\";\n    /** Uses the {@link RegionalAuthority} for the Azure 'japanwest' region. */\n    RegionalAuthority[\"JapanWest\"] = \"japanwest\";\n    /** Uses the {@link RegionalAuthority} for the Azure 'australiaeast' region. */\n    RegionalAuthority[\"AustraliaEast\"] = \"australiaeast\";\n    /** Uses the {@link RegionalAuthority} for the Azure 'australiasoutheast' region. */\n    RegionalAuthority[\"AustraliaSouthEast\"] = \"australiasoutheast\";\n    /** Uses the {@link RegionalAuthority} for the Azure 'australiacentral' region. */\n    RegionalAuthority[\"AustraliaCentral\"] = \"australiacentral\";\n    /** Uses the {@link RegionalAuthority} for the Azure 'australiacentral2' region. */\n    RegionalAuthority[\"AustraliaCentral2\"] = \"australiacentral2\";\n    /** Uses the {@link RegionalAuthority} for the Azure 'centralindia' region. */\n    RegionalAuthority[\"IndiaCentral\"] = \"centralindia\";\n    /** Uses the {@link RegionalAuthority} for the Azure 'southindia' region. */\n    RegionalAuthority[\"IndiaSouth\"] = \"southindia\";\n    /** Uses the {@link RegionalAuthority} for the Azure 'westindia' region. */\n    RegionalAuthority[\"IndiaWest\"] = \"westindia\";\n    /** Uses the {@link RegionalAuthority} for the Azure 'koreasouth' region. */\n    RegionalAuthority[\"KoreaSouth\"] = \"koreasouth\";\n    /** Uses the {@link RegionalAuthority} for the Azure 'koreacentral' region. */\n    RegionalAuthority[\"KoreaCentral\"] = \"koreacentral\";\n    /** Uses the {@link RegionalAuthority} for the Azure 'uaecentral' region. */\n    RegionalAuthority[\"UAECentral\"] = \"uaecentral\";\n    /** Uses the {@link RegionalAuthority} for the Azure 'uaenorth' region. */\n    RegionalAuthority[\"UAENorth\"] = \"uaenorth\";\n    /** Uses the {@link RegionalAuthority} for the Azure 'southafricanorth' region. */\n    RegionalAuthority[\"SouthAfricaNorth\"] = \"southafricanorth\";\n    /** Uses the {@link RegionalAuthority} for the Azure 'southafricawest' region. */\n    RegionalAuthority[\"SouthAfricaWest\"] = \"southafricawest\";\n    /** Uses the {@link RegionalAuthority} for the Azure 'chinanorth' region. */\n    RegionalAuthority[\"ChinaNorth\"] = \"chinanorth\";\n    /** Uses the {@link RegionalAuthority} for the Azure 'chinaeast' region. */\n    RegionalAuthority[\"ChinaEast\"] = \"chinaeast\";\n    /** Uses the {@link RegionalAuthority} for the Azure 'chinanorth2' region. */\n    RegionalAuthority[\"ChinaNorth2\"] = \"chinanorth2\";\n    /** Uses the {@link RegionalAuthority} for the Azure 'chinaeast2' region. */\n    RegionalAuthority[\"ChinaEast2\"] = \"chinaeast2\";\n    /** Uses the {@link RegionalAuthority} for the Azure 'germanycentral' region. */\n    RegionalAuthority[\"GermanyCentral\"] = \"germanycentral\";\n    /** Uses the {@link RegionalAuthority} for the Azure 'germanynortheast' region. */\n    RegionalAuthority[\"GermanyNorthEast\"] = \"germanynortheast\";\n    /** Uses the {@link RegionalAuthority} for the Azure 'usgovvirginia' region. */\n    RegionalAuthority[\"GovernmentUSVirginia\"] = \"usgovvirginia\";\n    /** Uses the {@link RegionalAuthority} for the Azure 'usgoviowa' region. */\n    RegionalAuthority[\"GovernmentUSIowa\"] = \"usgoviowa\";\n    /** Uses the {@link RegionalAuthority} for the Azure 'usgovarizona' region. */\n    RegionalAuthority[\"GovernmentUSArizona\"] = \"usgovarizona\";\n    /** Uses the {@link RegionalAuthority} for the Azure 'usgovtexas' region. */\n    RegionalAuthority[\"GovernmentUSTexas\"] = \"usgovtexas\";\n    /** Uses the {@link RegionalAuthority} for the Azure 'usdodeast' region. */\n    RegionalAuthority[\"GovernmentUSDodEast\"] = \"usdodeast\";\n    /** Uses the {@link RegionalAuthority} for the Azure 'usdodcentral' region. */\n    RegionalAuthority[\"GovernmentUSDodCentral\"] = \"usdodcentral\";\n})(RegionalAuthority || (RegionalAuthority = {}));\n/**\n * Calculates the correct regional authority based on the supplied value\n * and the AZURE_REGIONAL_AUTHORITY_NAME environment variable.\n *\n * Values will be returned verbatim, except for {@link RegionalAuthority.AutoDiscoverRegion}\n * which is mapped to a value MSAL can understand.\n *\n * @internal\n */\nfunction calculateRegionalAuthority(regionalAuthority) {\n    // Note: as of today only 3 credentials support regional authority, and the parameter\n    // is not exposed via the public API. Regional Authority is _only_ supported\n    // via the AZURE_REGIONAL_AUTHORITY_NAME env var and _only_ for: ClientSecretCredential, ClientCertificateCredential, and ClientAssertionCredential.\n    var _a, _b;\n    // Accepting the regionalAuthority parameter will allow us to support it in the future.\n    let azureRegion = regionalAuthority;\n    if (azureRegion === undefined &&\n        ((_b = (_a = globalThis.process) === null || _a === void 0 ? void 0 : _a.env) === null || _b === void 0 ? void 0 : _b.AZURE_REGIONAL_AUTHORITY_NAME) !== undefined) {\n        azureRegion = process.env.AZURE_REGIONAL_AUTHORITY_NAME;\n    }\n    if (azureRegion === RegionalAuthority.AutoDiscoverRegion) {\n        return \"AUTO_DISCOVER\";\n    }\n    return azureRegion;\n}\n//# sourceMappingURL=regionalAuthority.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/identity/dist-esm/src/regionalAuthority.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/identity/dist-esm/src/tokenProvider.js":
/*!********************************************************************!*\
  !*** ./node_modules/@azure/identity/dist-esm/src/tokenProvider.js ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getBearerTokenProvider: () => (/* binding */ getBearerTokenProvider)\n/* harmony export */ });\n/* harmony import */ var _azure_core_rest_pipeline__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @azure/core-rest-pipeline */ \"(rsc)/./node_modules/@azure/core-rest-pipeline/dist/esm/index.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\n/**\n * Returns a callback that provides a bearer token.\n * For example, the bearer token can be used to authenticate a request as follows:\n * ```js\n * import { DefaultAzureCredential } from \"@azure/identity\";\n *\n * const credential = new DefaultAzureCredential();\n * const scope = \"https://cognitiveservices.azure.com/.default\";\n * const getAccessToken = getBearerTokenProvider(credential, scope);\n * const token = await getAccessToken();\n *\n * // usage\n * const request = createPipelineRequest({ url: \"https://example.com\" });\n * request.headers.set(\"Authorization\", `Bearer ${token}`);\n * ```\n *\n * @param credential - The credential used to authenticate the request.\n * @param scopes - The scopes required for the bearer token.\n * @param options - Options to configure the token provider.\n * @returns a callback that provides a bearer token.\n */\nfunction getBearerTokenProvider(credential, scopes, options) {\n    const { abortSignal, tracingOptions } = options || {};\n    const pipeline = (0,_azure_core_rest_pipeline__WEBPACK_IMPORTED_MODULE_0__.createEmptyPipeline)();\n    pipeline.addPolicy((0,_azure_core_rest_pipeline__WEBPACK_IMPORTED_MODULE_0__.bearerTokenAuthenticationPolicy)({ credential, scopes }));\n    async function getRefreshedToken() {\n        var _a;\n        // Create a pipeline with just the bearer token policy\n        // and run a dummy request through it to get the token\n        const res = await pipeline.sendRequest({\n            sendRequest: (request) => Promise.resolve({\n                request,\n                status: 200,\n                headers: request.headers,\n            }),\n        }, (0,_azure_core_rest_pipeline__WEBPACK_IMPORTED_MODULE_0__.createPipelineRequest)({\n            url: \"https://example.com\",\n            abortSignal,\n            tracingOptions,\n        }));\n        const accessToken = (_a = res.headers.get(\"authorization\")) === null || _a === void 0 ? void 0 : _a.split(\" \")[1];\n        if (!accessToken) {\n            throw new Error(\"Failed to get access token\");\n        }\n        return accessToken;\n    }\n    return getRefreshedToken;\n}\n//# sourceMappingURL=tokenProvider.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2lkZW50aXR5L2Rpc3QtZXNtL3NyYy90b2tlblByb3ZpZGVyLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQUE7QUFDQTtBQUN5SDtBQUN6SDtBQUNBO0FBQ0E7QUFDQTtBQUNBLFlBQVkseUJBQXlCO0FBQ3JDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMkNBQTJDLDRCQUE0QjtBQUN2RSxrREFBa0QsTUFBTTtBQUN4RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1AsWUFBWSw4QkFBOEI7QUFDMUMscUJBQXFCLDhFQUFtQjtBQUN4Qyx1QkFBdUIsMEZBQStCLEdBQUcsb0JBQW9CO0FBQzdFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYixTQUFTLEVBQUUsZ0ZBQXFCO0FBQ2hDO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9kYW5pZWwzLXZwMi8uL25vZGVfbW9kdWxlcy9AYXp1cmUvaWRlbnRpdHkvZGlzdC1lc20vc3JjL3Rva2VuUHJvdmlkZXIuanM/N2Y5NSJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi5cbi8vIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZS5cbmltcG9ydCB7IGJlYXJlclRva2VuQXV0aGVudGljYXRpb25Qb2xpY3ksIGNyZWF0ZUVtcHR5UGlwZWxpbmUsIGNyZWF0ZVBpcGVsaW5lUmVxdWVzdCwgfSBmcm9tIFwiQGF6dXJlL2NvcmUtcmVzdC1waXBlbGluZVwiO1xuLyoqXG4gKiBSZXR1cm5zIGEgY2FsbGJhY2sgdGhhdCBwcm92aWRlcyBhIGJlYXJlciB0b2tlbi5cbiAqIEZvciBleGFtcGxlLCB0aGUgYmVhcmVyIHRva2VuIGNhbiBiZSB1c2VkIHRvIGF1dGhlbnRpY2F0ZSBhIHJlcXVlc3QgYXMgZm9sbG93czpcbiAqIGBgYGpzXG4gKiBpbXBvcnQgeyBEZWZhdWx0QXp1cmVDcmVkZW50aWFsIH0gZnJvbSBcIkBhenVyZS9pZGVudGl0eVwiO1xuICpcbiAqIGNvbnN0IGNyZWRlbnRpYWwgPSBuZXcgRGVmYXVsdEF6dXJlQ3JlZGVudGlhbCgpO1xuICogY29uc3Qgc2NvcGUgPSBcImh0dHBzOi8vY29nbml0aXZlc2VydmljZXMuYXp1cmUuY29tLy5kZWZhdWx0XCI7XG4gKiBjb25zdCBnZXRBY2Nlc3NUb2tlbiA9IGdldEJlYXJlclRva2VuUHJvdmlkZXIoY3JlZGVudGlhbCwgc2NvcGUpO1xuICogY29uc3QgdG9rZW4gPSBhd2FpdCBnZXRBY2Nlc3NUb2tlbigpO1xuICpcbiAqIC8vIHVzYWdlXG4gKiBjb25zdCByZXF1ZXN0ID0gY3JlYXRlUGlwZWxpbmVSZXF1ZXN0KHsgdXJsOiBcImh0dHBzOi8vZXhhbXBsZS5jb21cIiB9KTtcbiAqIHJlcXVlc3QuaGVhZGVycy5zZXQoXCJBdXRob3JpemF0aW9uXCIsIGBCZWFyZXIgJHt0b2tlbn1gKTtcbiAqIGBgYFxuICpcbiAqIEBwYXJhbSBjcmVkZW50aWFsIC0gVGhlIGNyZWRlbnRpYWwgdXNlZCB0byBhdXRoZW50aWNhdGUgdGhlIHJlcXVlc3QuXG4gKiBAcGFyYW0gc2NvcGVzIC0gVGhlIHNjb3BlcyByZXF1aXJlZCBmb3IgdGhlIGJlYXJlciB0b2tlbi5cbiAqIEBwYXJhbSBvcHRpb25zIC0gT3B0aW9ucyB0byBjb25maWd1cmUgdGhlIHRva2VuIHByb3ZpZGVyLlxuICogQHJldHVybnMgYSBjYWxsYmFjayB0aGF0IHByb3ZpZGVzIGEgYmVhcmVyIHRva2VuLlxuICovXG5leHBvcnQgZnVuY3Rpb24gZ2V0QmVhcmVyVG9rZW5Qcm92aWRlcihjcmVkZW50aWFsLCBzY29wZXMsIG9wdGlvbnMpIHtcbiAgICBjb25zdCB7IGFib3J0U2lnbmFsLCB0cmFjaW5nT3B0aW9ucyB9ID0gb3B0aW9ucyB8fCB7fTtcbiAgICBjb25zdCBwaXBlbGluZSA9IGNyZWF0ZUVtcHR5UGlwZWxpbmUoKTtcbiAgICBwaXBlbGluZS5hZGRQb2xpY3koYmVhcmVyVG9rZW5BdXRoZW50aWNhdGlvblBvbGljeSh7IGNyZWRlbnRpYWwsIHNjb3BlcyB9KSk7XG4gICAgYXN5bmMgZnVuY3Rpb24gZ2V0UmVmcmVzaGVkVG9rZW4oKSB7XG4gICAgICAgIHZhciBfYTtcbiAgICAgICAgLy8gQ3JlYXRlIGEgcGlwZWxpbmUgd2l0aCBqdXN0IHRoZSBiZWFyZXIgdG9rZW4gcG9saWN5XG4gICAgICAgIC8vIGFuZCBydW4gYSBkdW1teSByZXF1ZXN0IHRocm91Z2ggaXQgdG8gZ2V0IHRoZSB0b2tlblxuICAgICAgICBjb25zdCByZXMgPSBhd2FpdCBwaXBlbGluZS5zZW5kUmVxdWVzdCh7XG4gICAgICAgICAgICBzZW5kUmVxdWVzdDogKHJlcXVlc3QpID0+IFByb21pc2UucmVzb2x2ZSh7XG4gICAgICAgICAgICAgICAgcmVxdWVzdCxcbiAgICAgICAgICAgICAgICBzdGF0dXM6IDIwMCxcbiAgICAgICAgICAgICAgICBoZWFkZXJzOiByZXF1ZXN0LmhlYWRlcnMsXG4gICAgICAgICAgICB9KSxcbiAgICAgICAgfSwgY3JlYXRlUGlwZWxpbmVSZXF1ZXN0KHtcbiAgICAgICAgICAgIHVybDogXCJodHRwczovL2V4YW1wbGUuY29tXCIsXG4gICAgICAgICAgICBhYm9ydFNpZ25hbCxcbiAgICAgICAgICAgIHRyYWNpbmdPcHRpb25zLFxuICAgICAgICB9KSk7XG4gICAgICAgIGNvbnN0IGFjY2Vzc1Rva2VuID0gKF9hID0gcmVzLmhlYWRlcnMuZ2V0KFwiYXV0aG9yaXphdGlvblwiKSkgPT09IG51bGwgfHwgX2EgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9hLnNwbGl0KFwiIFwiKVsxXTtcbiAgICAgICAgaWYgKCFhY2Nlc3NUb2tlbikge1xuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiRmFpbGVkIHRvIGdldCBhY2Nlc3MgdG9rZW5cIik7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIGFjY2Vzc1Rva2VuO1xuICAgIH1cbiAgICByZXR1cm4gZ2V0UmVmcmVzaGVkVG9rZW47XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD10b2tlblByb3ZpZGVyLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/identity/dist-esm/src/tokenProvider.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/identity/dist-esm/src/util/identityTokenEndpoint.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/@azure/identity/dist-esm/src/util/identityTokenEndpoint.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getIdentityTokenEndpointSuffix: () => (/* binding */ getIdentityTokenEndpointSuffix)\n/* harmony export */ });\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\nfunction getIdentityTokenEndpointSuffix(tenantId) {\n    if (tenantId === \"adfs\") {\n        return \"oauth2/token\";\n    }\n    else {\n        return \"oauth2/v2.0/token\";\n    }\n}\n//# sourceMappingURL=identityTokenEndpoint.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2lkZW50aXR5L2Rpc3QtZXNtL3NyYy91dGlsL2lkZW50aXR5VG9rZW5FbmRwb2ludC5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUE7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2RhbmllbDMtdnAyLy4vbm9kZV9tb2R1bGVzL0BhenVyZS9pZGVudGl0eS9kaXN0LWVzbS9zcmMvdXRpbC9pZGVudGl0eVRva2VuRW5kcG9pbnQuanM/NDVhZCJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi5cbi8vIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZS5cbmV4cG9ydCBmdW5jdGlvbiBnZXRJZGVudGl0eVRva2VuRW5kcG9pbnRTdWZmaXgodGVuYW50SWQpIHtcbiAgICBpZiAodGVuYW50SWQgPT09IFwiYWRmc1wiKSB7XG4gICAgICAgIHJldHVybiBcIm9hdXRoMi90b2tlblwiO1xuICAgIH1cbiAgICBlbHNlIHtcbiAgICAgICAgcmV0dXJuIFwib2F1dGgyL3YyLjAvdG9rZW5cIjtcbiAgICB9XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pZGVudGl0eVRva2VuRW5kcG9pbnQuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/identity/dist-esm/src/util/identityTokenEndpoint.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/identity/dist-esm/src/util/logging.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@azure/identity/dist-esm/src/util/logging.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   credentialLogger: () => (/* binding */ credentialLogger),\n/* harmony export */   credentialLoggerInstance: () => (/* binding */ credentialLoggerInstance),\n/* harmony export */   formatError: () => (/* binding */ formatError),\n/* harmony export */   formatSuccess: () => (/* binding */ formatSuccess),\n/* harmony export */   logEnvVars: () => (/* binding */ logEnvVars),\n/* harmony export */   logger: () => (/* binding */ logger),\n/* harmony export */   processEnvVars: () => (/* binding */ processEnvVars)\n/* harmony export */ });\n/* harmony import */ var _azure_logger__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @azure/logger */ \"(rsc)/./node_modules/@azure/logger/dist/esm/index.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\n/**\n * The AzureLogger used for all clients within the identity package\n */\nconst logger = (0,_azure_logger__WEBPACK_IMPORTED_MODULE_0__.createClientLogger)(\"identity\");\n/**\n * Separates a list of environment variable names into a plain object with two arrays: an array of missing environment variables and another array with assigned environment variables.\n * @param supportedEnvVars - List of environment variable names\n */\nfunction processEnvVars(supportedEnvVars) {\n    return supportedEnvVars.reduce((acc, envVariable) => {\n        if (process.env[envVariable]) {\n            acc.assigned.push(envVariable);\n        }\n        else {\n            acc.missing.push(envVariable);\n        }\n        return acc;\n    }, { missing: [], assigned: [] });\n}\n/**\n * Based on a given list of environment variable names,\n * logs the environment variables currently assigned during the usage of a credential that goes by the given name.\n * @param credentialName - Name of the credential in use\n * @param supportedEnvVars - List of environment variables supported by that credential\n */\nfunction logEnvVars(credentialName, supportedEnvVars) {\n    const { assigned } = processEnvVars(supportedEnvVars);\n    logger.info(`${credentialName} => Found the following environment variables: ${assigned.join(\", \")}`);\n}\n/**\n * Formatting the success event on the credentials\n */\nfunction formatSuccess(scope) {\n    return `SUCCESS. Scopes: ${Array.isArray(scope) ? scope.join(\", \") : scope}.`;\n}\n/**\n * Formatting the success event on the credentials\n */\nfunction formatError(scope, error) {\n    let message = \"ERROR.\";\n    if (scope === null || scope === void 0 ? void 0 : scope.length) {\n        message += ` Scopes: ${Array.isArray(scope) ? scope.join(\", \") : scope}.`;\n    }\n    return `${message} Error message: ${typeof error === \"string\" ? error : error.message}.`;\n}\n/**\n * Generates a CredentialLoggerInstance.\n *\n * It logs with the format:\n *\n *   `[title] => [message]`\n *\n */\nfunction credentialLoggerInstance(title, parent, log = logger) {\n    const fullTitle = parent ? `${parent.fullTitle} ${title}` : title;\n    function info(message) {\n        log.info(`${fullTitle} =>`, message);\n    }\n    function warning(message) {\n        log.warning(`${fullTitle} =>`, message);\n    }\n    function verbose(message) {\n        log.verbose(`${fullTitle} =>`, message);\n    }\n    function error(message) {\n        log.error(`${fullTitle} =>`, message);\n    }\n    return {\n        title,\n        fullTitle,\n        info,\n        warning,\n        verbose,\n        error,\n    };\n}\n/**\n * Generates a CredentialLogger, which is a logger declared at the credential's constructor, and used at any point in the credential.\n * It has all the properties of a CredentialLoggerInstance, plus other logger instances, one per method.\n *\n * It logs with the format:\n *\n *   `[title] => [message]`\n *   `[title] => getToken() => [message]`\n *\n */\nfunction credentialLogger(title, log = logger) {\n    const credLogger = credentialLoggerInstance(title, undefined, log);\n    return Object.assign(Object.assign({}, credLogger), { parent: log, getToken: credentialLoggerInstance(\"=> getToken()\", credLogger, log) });\n}\n//# sourceMappingURL=logging.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2lkZW50aXR5L2Rpc3QtZXNtL3NyYy91dGlsL2xvZ2dpbmcuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7QUFBQTtBQUNBO0FBQ21EO0FBQ25EO0FBQ0E7QUFDQTtBQUNPLGVBQWUsaUVBQWtCO0FBQ3hDO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSyxJQUFJLDJCQUEyQjtBQUNwQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1AsWUFBWSxXQUFXO0FBQ3ZCLG1CQUFtQixnQkFBZ0IsZ0RBQWdELG9CQUFvQjtBQUN2RztBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1AsK0JBQStCLGdEQUFnRDtBQUMvRTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBLCtCQUErQixnREFBZ0Q7QUFDL0U7QUFDQSxjQUFjLFNBQVMsaUJBQWlCLGtEQUFrRDtBQUMxRjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQLGtDQUFrQyxrQkFBa0IsRUFBRSxNQUFNO0FBQzVEO0FBQ0Esb0JBQW9CLFdBQVc7QUFDL0I7QUFDQTtBQUNBLHVCQUF1QixXQUFXO0FBQ2xDO0FBQ0E7QUFDQSx1QkFBdUIsV0FBVztBQUNsQztBQUNBO0FBQ0EscUJBQXFCLFdBQVc7QUFDaEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQSx5Q0FBeUMsaUJBQWlCLG1GQUFtRjtBQUM3STtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZGFuaWVsMy12cDIvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2lkZW50aXR5L2Rpc3QtZXNtL3NyYy91dGlsL2xvZ2dpbmcuanM/ODE0NCJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi5cbi8vIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZS5cbmltcG9ydCB7IGNyZWF0ZUNsaWVudExvZ2dlciB9IGZyb20gXCJAYXp1cmUvbG9nZ2VyXCI7XG4vKipcbiAqIFRoZSBBenVyZUxvZ2dlciB1c2VkIGZvciBhbGwgY2xpZW50cyB3aXRoaW4gdGhlIGlkZW50aXR5IHBhY2thZ2VcbiAqL1xuZXhwb3J0IGNvbnN0IGxvZ2dlciA9IGNyZWF0ZUNsaWVudExvZ2dlcihcImlkZW50aXR5XCIpO1xuLyoqXG4gKiBTZXBhcmF0ZXMgYSBsaXN0IG9mIGVudmlyb25tZW50IHZhcmlhYmxlIG5hbWVzIGludG8gYSBwbGFpbiBvYmplY3Qgd2l0aCB0d28gYXJyYXlzOiBhbiBhcnJheSBvZiBtaXNzaW5nIGVudmlyb25tZW50IHZhcmlhYmxlcyBhbmQgYW5vdGhlciBhcnJheSB3aXRoIGFzc2lnbmVkIGVudmlyb25tZW50IHZhcmlhYmxlcy5cbiAqIEBwYXJhbSBzdXBwb3J0ZWRFbnZWYXJzIC0gTGlzdCBvZiBlbnZpcm9ubWVudCB2YXJpYWJsZSBuYW1lc1xuICovXG5leHBvcnQgZnVuY3Rpb24gcHJvY2Vzc0VudlZhcnMoc3VwcG9ydGVkRW52VmFycykge1xuICAgIHJldHVybiBzdXBwb3J0ZWRFbnZWYXJzLnJlZHVjZSgoYWNjLCBlbnZWYXJpYWJsZSkgPT4ge1xuICAgICAgICBpZiAocHJvY2Vzcy5lbnZbZW52VmFyaWFibGVdKSB7XG4gICAgICAgICAgICBhY2MuYXNzaWduZWQucHVzaChlbnZWYXJpYWJsZSk7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICBhY2MubWlzc2luZy5wdXNoKGVudlZhcmlhYmxlKTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gYWNjO1xuICAgIH0sIHsgbWlzc2luZzogW10sIGFzc2lnbmVkOiBbXSB9KTtcbn1cbi8qKlxuICogQmFzZWQgb24gYSBnaXZlbiBsaXN0IG9mIGVudmlyb25tZW50IHZhcmlhYmxlIG5hbWVzLFxuICogbG9ncyB0aGUgZW52aXJvbm1lbnQgdmFyaWFibGVzIGN1cnJlbnRseSBhc3NpZ25lZCBkdXJpbmcgdGhlIHVzYWdlIG9mIGEgY3JlZGVudGlhbCB0aGF0IGdvZXMgYnkgdGhlIGdpdmVuIG5hbWUuXG4gKiBAcGFyYW0gY3JlZGVudGlhbE5hbWUgLSBOYW1lIG9mIHRoZSBjcmVkZW50aWFsIGluIHVzZVxuICogQHBhcmFtIHN1cHBvcnRlZEVudlZhcnMgLSBMaXN0IG9mIGVudmlyb25tZW50IHZhcmlhYmxlcyBzdXBwb3J0ZWQgYnkgdGhhdCBjcmVkZW50aWFsXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBsb2dFbnZWYXJzKGNyZWRlbnRpYWxOYW1lLCBzdXBwb3J0ZWRFbnZWYXJzKSB7XG4gICAgY29uc3QgeyBhc3NpZ25lZCB9ID0gcHJvY2Vzc0VudlZhcnMoc3VwcG9ydGVkRW52VmFycyk7XG4gICAgbG9nZ2VyLmluZm8oYCR7Y3JlZGVudGlhbE5hbWV9ID0+IEZvdW5kIHRoZSBmb2xsb3dpbmcgZW52aXJvbm1lbnQgdmFyaWFibGVzOiAke2Fzc2lnbmVkLmpvaW4oXCIsIFwiKX1gKTtcbn1cbi8qKlxuICogRm9ybWF0dGluZyB0aGUgc3VjY2VzcyBldmVudCBvbiB0aGUgY3JlZGVudGlhbHNcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGZvcm1hdFN1Y2Nlc3Moc2NvcGUpIHtcbiAgICByZXR1cm4gYFNVQ0NFU1MuIFNjb3BlczogJHtBcnJheS5pc0FycmF5KHNjb3BlKSA/IHNjb3BlLmpvaW4oXCIsIFwiKSA6IHNjb3BlfS5gO1xufVxuLyoqXG4gKiBGb3JtYXR0aW5nIHRoZSBzdWNjZXNzIGV2ZW50IG9uIHRoZSBjcmVkZW50aWFsc1xuICovXG5leHBvcnQgZnVuY3Rpb24gZm9ybWF0RXJyb3Ioc2NvcGUsIGVycm9yKSB7XG4gICAgbGV0IG1lc3NhZ2UgPSBcIkVSUk9SLlwiO1xuICAgIGlmIChzY29wZSA9PT0gbnVsbCB8fCBzY29wZSA9PT0gdm9pZCAwID8gdm9pZCAwIDogc2NvcGUubGVuZ3RoKSB7XG4gICAgICAgIG1lc3NhZ2UgKz0gYCBTY29wZXM6ICR7QXJyYXkuaXNBcnJheShzY29wZSkgPyBzY29wZS5qb2luKFwiLCBcIikgOiBzY29wZX0uYDtcbiAgICB9XG4gICAgcmV0dXJuIGAke21lc3NhZ2V9IEVycm9yIG1lc3NhZ2U6ICR7dHlwZW9mIGVycm9yID09PSBcInN0cmluZ1wiID8gZXJyb3IgOiBlcnJvci5tZXNzYWdlfS5gO1xufVxuLyoqXG4gKiBHZW5lcmF0ZXMgYSBDcmVkZW50aWFsTG9nZ2VySW5zdGFuY2UuXG4gKlxuICogSXQgbG9ncyB3aXRoIHRoZSBmb3JtYXQ6XG4gKlxuICogICBgW3RpdGxlXSA9PiBbbWVzc2FnZV1gXG4gKlxuICovXG5leHBvcnQgZnVuY3Rpb24gY3JlZGVudGlhbExvZ2dlckluc3RhbmNlKHRpdGxlLCBwYXJlbnQsIGxvZyA9IGxvZ2dlcikge1xuICAgIGNvbnN0IGZ1bGxUaXRsZSA9IHBhcmVudCA/IGAke3BhcmVudC5mdWxsVGl0bGV9ICR7dGl0bGV9YCA6IHRpdGxlO1xuICAgIGZ1bmN0aW9uIGluZm8obWVzc2FnZSkge1xuICAgICAgICBsb2cuaW5mbyhgJHtmdWxsVGl0bGV9ID0+YCwgbWVzc2FnZSk7XG4gICAgfVxuICAgIGZ1bmN0aW9uIHdhcm5pbmcobWVzc2FnZSkge1xuICAgICAgICBsb2cud2FybmluZyhgJHtmdWxsVGl0bGV9ID0+YCwgbWVzc2FnZSk7XG4gICAgfVxuICAgIGZ1bmN0aW9uIHZlcmJvc2UobWVzc2FnZSkge1xuICAgICAgICBsb2cudmVyYm9zZShgJHtmdWxsVGl0bGV9ID0+YCwgbWVzc2FnZSk7XG4gICAgfVxuICAgIGZ1bmN0aW9uIGVycm9yKG1lc3NhZ2UpIHtcbiAgICAgICAgbG9nLmVycm9yKGAke2Z1bGxUaXRsZX0gPT5gLCBtZXNzYWdlKTtcbiAgICB9XG4gICAgcmV0dXJuIHtcbiAgICAgICAgdGl0bGUsXG4gICAgICAgIGZ1bGxUaXRsZSxcbiAgICAgICAgaW5mbyxcbiAgICAgICAgd2FybmluZyxcbiAgICAgICAgdmVyYm9zZSxcbiAgICAgICAgZXJyb3IsXG4gICAgfTtcbn1cbi8qKlxuICogR2VuZXJhdGVzIGEgQ3JlZGVudGlhbExvZ2dlciwgd2hpY2ggaXMgYSBsb2dnZXIgZGVjbGFyZWQgYXQgdGhlIGNyZWRlbnRpYWwncyBjb25zdHJ1Y3RvciwgYW5kIHVzZWQgYXQgYW55IHBvaW50IGluIHRoZSBjcmVkZW50aWFsLlxuICogSXQgaGFzIGFsbCB0aGUgcHJvcGVydGllcyBvZiBhIENyZWRlbnRpYWxMb2dnZXJJbnN0YW5jZSwgcGx1cyBvdGhlciBsb2dnZXIgaW5zdGFuY2VzLCBvbmUgcGVyIG1ldGhvZC5cbiAqXG4gKiBJdCBsb2dzIHdpdGggdGhlIGZvcm1hdDpcbiAqXG4gKiAgIGBbdGl0bGVdID0+IFttZXNzYWdlXWBcbiAqICAgYFt0aXRsZV0gPT4gZ2V0VG9rZW4oKSA9PiBbbWVzc2FnZV1gXG4gKlxuICovXG5leHBvcnQgZnVuY3Rpb24gY3JlZGVudGlhbExvZ2dlcih0aXRsZSwgbG9nID0gbG9nZ2VyKSB7XG4gICAgY29uc3QgY3JlZExvZ2dlciA9IGNyZWRlbnRpYWxMb2dnZXJJbnN0YW5jZSh0aXRsZSwgdW5kZWZpbmVkLCBsb2cpO1xuICAgIHJldHVybiBPYmplY3QuYXNzaWduKE9iamVjdC5hc3NpZ24oe30sIGNyZWRMb2dnZXIpLCB7IHBhcmVudDogbG9nLCBnZXRUb2tlbjogY3JlZGVudGlhbExvZ2dlckluc3RhbmNlKFwiPT4gZ2V0VG9rZW4oKVwiLCBjcmVkTG9nZ2VyLCBsb2cpIH0pO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9bG9nZ2luZy5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/identity/dist-esm/src/util/logging.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/identity/dist-esm/src/util/processMultiTenantRequest.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/@azure/identity/dist-esm/src/util/processMultiTenantRequest.js ***!
  \*************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   processMultiTenantRequest: () => (/* binding */ processMultiTenantRequest)\n/* harmony export */ });\n/* harmony import */ var _errors__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../errors */ \"(rsc)/./node_modules/@azure/identity/dist-esm/src/errors.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nfunction createConfigurationErrorMessage(tenantId) {\n    return `The current credential is not configured to acquire tokens for tenant ${tenantId}. To enable acquiring tokens for this tenant add it to the AdditionallyAllowedTenants on the credential options, or add \"*\" to AdditionallyAllowedTenants to allow acquiring tokens for any tenant.`;\n}\n/**\n * Of getToken contains a tenantId, this functions allows picking this tenantId as the appropriate for authentication,\n * unless multitenant authentication has been disabled through the AZURE_IDENTITY_DISABLE_MULTITENANTAUTH (on Node.js),\n * or unless the original tenant Id is `adfs`.\n * @internal\n */\nfunction processMultiTenantRequest(tenantId, getTokenOptions, additionallyAllowedTenantIds = [], logger) {\n    var _a;\n    let resolvedTenantId;\n    if (process.env.AZURE_IDENTITY_DISABLE_MULTITENANTAUTH) {\n        resolvedTenantId = tenantId;\n    }\n    else if (tenantId === \"adfs\") {\n        resolvedTenantId = tenantId;\n    }\n    else {\n        resolvedTenantId = (_a = getTokenOptions === null || getTokenOptions === void 0 ? void 0 : getTokenOptions.tenantId) !== null && _a !== void 0 ? _a : tenantId;\n    }\n    if (tenantId &&\n        resolvedTenantId !== tenantId &&\n        !additionallyAllowedTenantIds.includes(\"*\") &&\n        !additionallyAllowedTenantIds.some((t) => t.localeCompare(resolvedTenantId) === 0)) {\n        const message = createConfigurationErrorMessage(tenantId);\n        logger === null || logger === void 0 ? void 0 : logger.info(message);\n        throw new _errors__WEBPACK_IMPORTED_MODULE_0__.CredentialUnavailableError(message);\n    }\n    return resolvedTenantId;\n}\n//# sourceMappingURL=processMultiTenantRequest.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2lkZW50aXR5L2Rpc3QtZXNtL3NyYy91dGlsL3Byb2Nlc3NNdWx0aVRlbmFudFJlcXVlc3QuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQTtBQUNBO0FBQ3VEO0FBQ3ZEO0FBQ0Esb0ZBQW9GLFNBQVM7QUFDN0Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrQkFBa0IsK0RBQTBCO0FBQzVDO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZGFuaWVsMy12cDIvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2lkZW50aXR5L2Rpc3QtZXNtL3NyYy91dGlsL3Byb2Nlc3NNdWx0aVRlbmFudFJlcXVlc3QuanM/YmFmNiJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi5cbi8vIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZS5cbmltcG9ydCB7IENyZWRlbnRpYWxVbmF2YWlsYWJsZUVycm9yIH0gZnJvbSBcIi4uL2Vycm9yc1wiO1xuZnVuY3Rpb24gY3JlYXRlQ29uZmlndXJhdGlvbkVycm9yTWVzc2FnZSh0ZW5hbnRJZCkge1xuICAgIHJldHVybiBgVGhlIGN1cnJlbnQgY3JlZGVudGlhbCBpcyBub3QgY29uZmlndXJlZCB0byBhY3F1aXJlIHRva2VucyBmb3IgdGVuYW50ICR7dGVuYW50SWR9LiBUbyBlbmFibGUgYWNxdWlyaW5nIHRva2VucyBmb3IgdGhpcyB0ZW5hbnQgYWRkIGl0IHRvIHRoZSBBZGRpdGlvbmFsbHlBbGxvd2VkVGVuYW50cyBvbiB0aGUgY3JlZGVudGlhbCBvcHRpb25zLCBvciBhZGQgXCIqXCIgdG8gQWRkaXRpb25hbGx5QWxsb3dlZFRlbmFudHMgdG8gYWxsb3cgYWNxdWlyaW5nIHRva2VucyBmb3IgYW55IHRlbmFudC5gO1xufVxuLyoqXG4gKiBPZiBnZXRUb2tlbiBjb250YWlucyBhIHRlbmFudElkLCB0aGlzIGZ1bmN0aW9ucyBhbGxvd3MgcGlja2luZyB0aGlzIHRlbmFudElkIGFzIHRoZSBhcHByb3ByaWF0ZSBmb3IgYXV0aGVudGljYXRpb24sXG4gKiB1bmxlc3MgbXVsdGl0ZW5hbnQgYXV0aGVudGljYXRpb24gaGFzIGJlZW4gZGlzYWJsZWQgdGhyb3VnaCB0aGUgQVpVUkVfSURFTlRJVFlfRElTQUJMRV9NVUxUSVRFTkFOVEFVVEggKG9uIE5vZGUuanMpLFxuICogb3IgdW5sZXNzIHRoZSBvcmlnaW5hbCB0ZW5hbnQgSWQgaXMgYGFkZnNgLlxuICogQGludGVybmFsXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBwcm9jZXNzTXVsdGlUZW5hbnRSZXF1ZXN0KHRlbmFudElkLCBnZXRUb2tlbk9wdGlvbnMsIGFkZGl0aW9uYWxseUFsbG93ZWRUZW5hbnRJZHMgPSBbXSwgbG9nZ2VyKSB7XG4gICAgdmFyIF9hO1xuICAgIGxldCByZXNvbHZlZFRlbmFudElkO1xuICAgIGlmIChwcm9jZXNzLmVudi5BWlVSRV9JREVOVElUWV9ESVNBQkxFX01VTFRJVEVOQU5UQVVUSCkge1xuICAgICAgICByZXNvbHZlZFRlbmFudElkID0gdGVuYW50SWQ7XG4gICAgfVxuICAgIGVsc2UgaWYgKHRlbmFudElkID09PSBcImFkZnNcIikge1xuICAgICAgICByZXNvbHZlZFRlbmFudElkID0gdGVuYW50SWQ7XG4gICAgfVxuICAgIGVsc2Uge1xuICAgICAgICByZXNvbHZlZFRlbmFudElkID0gKF9hID0gZ2V0VG9rZW5PcHRpb25zID09PSBudWxsIHx8IGdldFRva2VuT3B0aW9ucyA9PT0gdm9pZCAwID8gdm9pZCAwIDogZ2V0VG9rZW5PcHRpb25zLnRlbmFudElkKSAhPT0gbnVsbCAmJiBfYSAhPT0gdm9pZCAwID8gX2EgOiB0ZW5hbnRJZDtcbiAgICB9XG4gICAgaWYgKHRlbmFudElkICYmXG4gICAgICAgIHJlc29sdmVkVGVuYW50SWQgIT09IHRlbmFudElkICYmXG4gICAgICAgICFhZGRpdGlvbmFsbHlBbGxvd2VkVGVuYW50SWRzLmluY2x1ZGVzKFwiKlwiKSAmJlxuICAgICAgICAhYWRkaXRpb25hbGx5QWxsb3dlZFRlbmFudElkcy5zb21lKCh0KSA9PiB0LmxvY2FsZUNvbXBhcmUocmVzb2x2ZWRUZW5hbnRJZCkgPT09IDApKSB7XG4gICAgICAgIGNvbnN0IG1lc3NhZ2UgPSBjcmVhdGVDb25maWd1cmF0aW9uRXJyb3JNZXNzYWdlKHRlbmFudElkKTtcbiAgICAgICAgbG9nZ2VyID09PSBudWxsIHx8IGxvZ2dlciA9PT0gdm9pZCAwID8gdm9pZCAwIDogbG9nZ2VyLmluZm8obWVzc2FnZSk7XG4gICAgICAgIHRocm93IG5ldyBDcmVkZW50aWFsVW5hdmFpbGFibGVFcnJvcihtZXNzYWdlKTtcbiAgICB9XG4gICAgcmV0dXJuIHJlc29sdmVkVGVuYW50SWQ7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1wcm9jZXNzTXVsdGlUZW5hbnRSZXF1ZXN0LmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/identity/dist-esm/src/util/processMultiTenantRequest.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/identity/dist-esm/src/util/processUtils.js":
/*!************************************************************************!*\
  !*** ./node_modules/@azure/identity/dist-esm/src/util/processUtils.js ***!
  \************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   processUtils: () => (/* binding */ processUtils)\n/* harmony export */ });\n/* harmony import */ var child_process__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! child_process */ \"child_process\");\n/* harmony import */ var child_process__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(child_process__WEBPACK_IMPORTED_MODULE_0__);\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\n/**\n * Easy to mock childProcess utils.\n * @internal\n */\nconst processUtils = {\n    /**\n     * Promisifying childProcess.execFile\n     * @internal\n     */\n    execFile(file, params, options) {\n        return new Promise((resolve, reject) => {\n            child_process__WEBPACK_IMPORTED_MODULE_0__.execFile(file, params, options, (error, stdout, stderr) => {\n                if (Buffer.isBuffer(stdout)) {\n                    stdout = stdout.toString(\"utf8\");\n                }\n                if (Buffer.isBuffer(stderr)) {\n                    stderr = stderr.toString(\"utf8\");\n                }\n                if (stderr || error) {\n                    reject(stderr ? new Error(stderr) : error);\n                }\n                else {\n                    resolve(stdout);\n                }\n            });\n        });\n    },\n};\n//# sourceMappingURL=processUtils.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2lkZW50aXR5L2Rpc3QtZXNtL3NyYy91dGlsL3Byb2Nlc3NVdGlscy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBQTtBQUNBO0FBQzhDO0FBQzlDO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxZQUFZLG1EQUFxQjtBQUNqQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2IsU0FBUztBQUNULEtBQUs7QUFDTDtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZGFuaWVsMy12cDIvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2lkZW50aXR5L2Rpc3QtZXNtL3NyYy91dGlsL3Byb2Nlc3NVdGlscy5qcz84YTc4Il0sInNvdXJjZXNDb250ZW50IjpbIi8vIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLlxuLy8gTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlLlxuaW1wb3J0ICogYXMgY2hpbGRQcm9jZXNzIGZyb20gXCJjaGlsZF9wcm9jZXNzXCI7XG4vKipcbiAqIEVhc3kgdG8gbW9jayBjaGlsZFByb2Nlc3MgdXRpbHMuXG4gKiBAaW50ZXJuYWxcbiAqL1xuZXhwb3J0IGNvbnN0IHByb2Nlc3NVdGlscyA9IHtcbiAgICAvKipcbiAgICAgKiBQcm9taXNpZnlpbmcgY2hpbGRQcm9jZXNzLmV4ZWNGaWxlXG4gICAgICogQGludGVybmFsXG4gICAgICovXG4gICAgZXhlY0ZpbGUoZmlsZSwgcGFyYW1zLCBvcHRpb25zKSB7XG4gICAgICAgIHJldHVybiBuZXcgUHJvbWlzZSgocmVzb2x2ZSwgcmVqZWN0KSA9PiB7XG4gICAgICAgICAgICBjaGlsZFByb2Nlc3MuZXhlY0ZpbGUoZmlsZSwgcGFyYW1zLCBvcHRpb25zLCAoZXJyb3IsIHN0ZG91dCwgc3RkZXJyKSA9PiB7XG4gICAgICAgICAgICAgICAgaWYgKEJ1ZmZlci5pc0J1ZmZlcihzdGRvdXQpKSB7XG4gICAgICAgICAgICAgICAgICAgIHN0ZG91dCA9IHN0ZG91dC50b1N0cmluZyhcInV0ZjhcIik7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGlmIChCdWZmZXIuaXNCdWZmZXIoc3RkZXJyKSkge1xuICAgICAgICAgICAgICAgICAgICBzdGRlcnIgPSBzdGRlcnIudG9TdHJpbmcoXCJ1dGY4XCIpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBpZiAoc3RkZXJyIHx8IGVycm9yKSB7XG4gICAgICAgICAgICAgICAgICAgIHJlamVjdChzdGRlcnIgPyBuZXcgRXJyb3Ioc3RkZXJyKSA6IGVycm9yKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgIHJlc29sdmUoc3Rkb3V0KTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfSk7XG4gICAgfSxcbn07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1wcm9jZXNzVXRpbHMuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/identity/dist-esm/src/util/processUtils.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/identity/dist-esm/src/util/scopeUtils.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@azure/identity/dist-esm/src/util/scopeUtils.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ensureScopes: () => (/* binding */ ensureScopes),\n/* harmony export */   ensureValidScopeForDevTimeCreds: () => (/* binding */ ensureValidScopeForDevTimeCreds),\n/* harmony export */   getScopeResource: () => (/* binding */ getScopeResource)\n/* harmony export */ });\n/* harmony import */ var _logging__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./logging */ \"(rsc)/./node_modules/@azure/identity/dist-esm/src/util/logging.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\n/**\n * Ensures the scopes value is an array.\n * @internal\n */\nfunction ensureScopes(scopes) {\n    return Array.isArray(scopes) ? scopes : [scopes];\n}\n/**\n * Throws if the received scope is not valid.\n * @internal\n */\nfunction ensureValidScopeForDevTimeCreds(scope, logger) {\n    if (!scope.match(/^[0-9a-zA-Z-_.:/]+$/)) {\n        const error = new Error(\"Invalid scope was specified by the user or calling client\");\n        logger.getToken.info((0,_logging__WEBPACK_IMPORTED_MODULE_0__.formatError)(scope, error));\n        throw error;\n    }\n}\n/**\n * Returns the resource out of a scope.\n * @internal\n */\nfunction getScopeResource(scope) {\n    return scope.replace(/\\/.default$/, \"\");\n}\n//# sourceMappingURL=scopeUtils.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2lkZW50aXR5L2Rpc3QtZXNtL3NyYy91dGlsL3Njb3BlVXRpbHMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBO0FBQ0E7QUFDd0M7QUFDeEM7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBLDZCQUE2QixxREFBVztBQUN4QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZGFuaWVsMy12cDIvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2lkZW50aXR5L2Rpc3QtZXNtL3NyYy91dGlsL3Njb3BlVXRpbHMuanM/MTdmZCJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi5cbi8vIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZS5cbmltcG9ydCB7IGZvcm1hdEVycm9yIH0gZnJvbSBcIi4vbG9nZ2luZ1wiO1xuLyoqXG4gKiBFbnN1cmVzIHRoZSBzY29wZXMgdmFsdWUgaXMgYW4gYXJyYXkuXG4gKiBAaW50ZXJuYWxcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGVuc3VyZVNjb3BlcyhzY29wZXMpIHtcbiAgICByZXR1cm4gQXJyYXkuaXNBcnJheShzY29wZXMpID8gc2NvcGVzIDogW3Njb3Blc107XG59XG4vKipcbiAqIFRocm93cyBpZiB0aGUgcmVjZWl2ZWQgc2NvcGUgaXMgbm90IHZhbGlkLlxuICogQGludGVybmFsXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBlbnN1cmVWYWxpZFNjb3BlRm9yRGV2VGltZUNyZWRzKHNjb3BlLCBsb2dnZXIpIHtcbiAgICBpZiAoIXNjb3BlLm1hdGNoKC9eWzAtOWEtekEtWi1fLjovXSskLykpIHtcbiAgICAgICAgY29uc3QgZXJyb3IgPSBuZXcgRXJyb3IoXCJJbnZhbGlkIHNjb3BlIHdhcyBzcGVjaWZpZWQgYnkgdGhlIHVzZXIgb3IgY2FsbGluZyBjbGllbnRcIik7XG4gICAgICAgIGxvZ2dlci5nZXRUb2tlbi5pbmZvKGZvcm1hdEVycm9yKHNjb3BlLCBlcnJvcikpO1xuICAgICAgICB0aHJvdyBlcnJvcjtcbiAgICB9XG59XG4vKipcbiAqIFJldHVybnMgdGhlIHJlc291cmNlIG91dCBvZiBhIHNjb3BlLlxuICogQGludGVybmFsXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBnZXRTY29wZVJlc291cmNlKHNjb3BlKSB7XG4gICAgcmV0dXJuIHNjb3BlLnJlcGxhY2UoL1xcLy5kZWZhdWx0JC8sIFwiXCIpO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9c2NvcGVVdGlscy5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/identity/dist-esm/src/util/scopeUtils.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/identity/dist-esm/src/util/tenantIdUtils.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@azure/identity/dist-esm/src/util/tenantIdUtils.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   checkTenantId: () => (/* binding */ checkTenantId),\n/* harmony export */   processMultiTenantRequest: () => (/* reexport safe */ _processMultiTenantRequest__WEBPACK_IMPORTED_MODULE_0__.processMultiTenantRequest),\n/* harmony export */   resolveAdditionallyAllowedTenantIds: () => (/* binding */ resolveAdditionallyAllowedTenantIds),\n/* harmony export */   resolveTenantId: () => (/* binding */ resolveTenantId)\n/* harmony export */ });\n/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../constants */ \"(rsc)/./node_modules/@azure/identity/dist-esm/src/constants.js\");\n/* harmony import */ var _logging__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./logging */ \"(rsc)/./node_modules/@azure/identity/dist-esm/src/util/logging.js\");\n/* harmony import */ var _processMultiTenantRequest__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./processMultiTenantRequest */ \"(rsc)/./node_modules/@azure/identity/dist-esm/src/util/processMultiTenantRequest.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\n\n\n/**\n * @internal\n */\nfunction checkTenantId(logger, tenantId) {\n    if (!tenantId.match(/^[0-9a-zA-Z-.]+$/)) {\n        const error = new Error(\"Invalid tenant id provided. You can locate your tenant id by following the instructions listed here: https://learn.microsoft.com/partner-center/find-ids-and-domain-names.\");\n        logger.info((0,_logging__WEBPACK_IMPORTED_MODULE_1__.formatError)(\"\", error));\n        throw error;\n    }\n}\n/**\n * @internal\n */\nfunction resolveTenantId(logger, tenantId, clientId) {\n    if (tenantId) {\n        checkTenantId(logger, tenantId);\n        return tenantId;\n    }\n    if (!clientId) {\n        clientId = _constants__WEBPACK_IMPORTED_MODULE_2__.DeveloperSignOnClientId;\n    }\n    if (clientId !== _constants__WEBPACK_IMPORTED_MODULE_2__.DeveloperSignOnClientId) {\n        return \"common\";\n    }\n    return \"organizations\";\n}\n/**\n * @internal\n */\nfunction resolveAdditionallyAllowedTenantIds(additionallyAllowedTenants) {\n    if (!additionallyAllowedTenants || additionallyAllowedTenants.length === 0) {\n        return [];\n    }\n    if (additionallyAllowedTenants.includes(\"*\")) {\n        return _constants__WEBPACK_IMPORTED_MODULE_2__.ALL_TENANTS;\n    }\n    return additionallyAllowedTenants;\n}\n//# sourceMappingURL=tenantIdUtils.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2lkZW50aXR5L2Rpc3QtZXNtL3NyYy91dGlsL3RlbmFudElkVXRpbHMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7OztBQUFBO0FBQ0E7QUFDb0U7QUFDNUI7QUFDZ0M7QUFDeEU7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0Esb0JBQW9CLHFEQUFXO0FBQy9CO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG1CQUFtQiwrREFBdUI7QUFDMUM7QUFDQSxxQkFBcUIsK0RBQXVCO0FBQzVDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWUsbURBQVc7QUFDMUI7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9kYW5pZWwzLXZwMi8uL25vZGVfbW9kdWxlcy9AYXp1cmUvaWRlbnRpdHkvZGlzdC1lc20vc3JjL3V0aWwvdGVuYW50SWRVdGlscy5qcz85ODdhIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLlxuLy8gTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlLlxuaW1wb3J0IHsgQUxMX1RFTkFOVFMsIERldmVsb3BlclNpZ25PbkNsaWVudElkIH0gZnJvbSBcIi4uL2NvbnN0YW50c1wiO1xuaW1wb3J0IHsgZm9ybWF0RXJyb3IgfSBmcm9tIFwiLi9sb2dnaW5nXCI7XG5leHBvcnQgeyBwcm9jZXNzTXVsdGlUZW5hbnRSZXF1ZXN0IH0gZnJvbSBcIi4vcHJvY2Vzc011bHRpVGVuYW50UmVxdWVzdFwiO1xuLyoqXG4gKiBAaW50ZXJuYWxcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGNoZWNrVGVuYW50SWQobG9nZ2VyLCB0ZW5hbnRJZCkge1xuICAgIGlmICghdGVuYW50SWQubWF0Y2goL15bMC05YS16QS1aLS5dKyQvKSkge1xuICAgICAgICBjb25zdCBlcnJvciA9IG5ldyBFcnJvcihcIkludmFsaWQgdGVuYW50IGlkIHByb3ZpZGVkLiBZb3UgY2FuIGxvY2F0ZSB5b3VyIHRlbmFudCBpZCBieSBmb2xsb3dpbmcgdGhlIGluc3RydWN0aW9ucyBsaXN0ZWQgaGVyZTogaHR0cHM6Ly9sZWFybi5taWNyb3NvZnQuY29tL3BhcnRuZXItY2VudGVyL2ZpbmQtaWRzLWFuZC1kb21haW4tbmFtZXMuXCIpO1xuICAgICAgICBsb2dnZXIuaW5mbyhmb3JtYXRFcnJvcihcIlwiLCBlcnJvcikpO1xuICAgICAgICB0aHJvdyBlcnJvcjtcbiAgICB9XG59XG4vKipcbiAqIEBpbnRlcm5hbFxuICovXG5leHBvcnQgZnVuY3Rpb24gcmVzb2x2ZVRlbmFudElkKGxvZ2dlciwgdGVuYW50SWQsIGNsaWVudElkKSB7XG4gICAgaWYgKHRlbmFudElkKSB7XG4gICAgICAgIGNoZWNrVGVuYW50SWQobG9nZ2VyLCB0ZW5hbnRJZCk7XG4gICAgICAgIHJldHVybiB0ZW5hbnRJZDtcbiAgICB9XG4gICAgaWYgKCFjbGllbnRJZCkge1xuICAgICAgICBjbGllbnRJZCA9IERldmVsb3BlclNpZ25PbkNsaWVudElkO1xuICAgIH1cbiAgICBpZiAoY2xpZW50SWQgIT09IERldmVsb3BlclNpZ25PbkNsaWVudElkKSB7XG4gICAgICAgIHJldHVybiBcImNvbW1vblwiO1xuICAgIH1cbiAgICByZXR1cm4gXCJvcmdhbml6YXRpb25zXCI7XG59XG4vKipcbiAqIEBpbnRlcm5hbFxuICovXG5leHBvcnQgZnVuY3Rpb24gcmVzb2x2ZUFkZGl0aW9uYWxseUFsbG93ZWRUZW5hbnRJZHMoYWRkaXRpb25hbGx5QWxsb3dlZFRlbmFudHMpIHtcbiAgICBpZiAoIWFkZGl0aW9uYWxseUFsbG93ZWRUZW5hbnRzIHx8IGFkZGl0aW9uYWxseUFsbG93ZWRUZW5hbnRzLmxlbmd0aCA9PT0gMCkge1xuICAgICAgICByZXR1cm4gW107XG4gICAgfVxuICAgIGlmIChhZGRpdGlvbmFsbHlBbGxvd2VkVGVuYW50cy5pbmNsdWRlcyhcIipcIikpIHtcbiAgICAgICAgcmV0dXJuIEFMTF9URU5BTlRTO1xuICAgIH1cbiAgICByZXR1cm4gYWRkaXRpb25hbGx5QWxsb3dlZFRlbmFudHM7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD10ZW5hbnRJZFV0aWxzLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/identity/dist-esm/src/util/tenantIdUtils.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/identity/dist-esm/src/util/tracing.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@azure/identity/dist-esm/src/util/tracing.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   tracingClient: () => (/* binding */ tracingClient)\n/* harmony export */ });\n/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../constants */ \"(rsc)/./node_modules/@azure/identity/dist-esm/src/constants.js\");\n/* harmony import */ var _azure_core_tracing__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @azure/core-tracing */ \"(rsc)/./node_modules/@azure/core-tracing/dist/esm/index.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\n\n/**\n * Creates a span using the global tracer.\n * @internal\n */\nconst tracingClient = (0,_azure_core_tracing__WEBPACK_IMPORTED_MODULE_0__.createTracingClient)({\n    namespace: \"Microsoft.AAD\",\n    packageName: \"@azure/identity\",\n    packageVersion: _constants__WEBPACK_IMPORTED_MODULE_1__.SDK_VERSION,\n});\n//# sourceMappingURL=tracing.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2lkZW50aXR5L2Rpc3QtZXNtL3NyYy91dGlsL3RyYWNpbmcuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUE7QUFDQTtBQUMyQztBQUNlO0FBQzFEO0FBQ0E7QUFDQTtBQUNBO0FBQ08sc0JBQXNCLHdFQUFtQjtBQUNoRDtBQUNBO0FBQ0Esb0JBQW9CLG1EQUFXO0FBQy9CLENBQUM7QUFDRCIsInNvdXJjZXMiOlsid2VicGFjazovL2RhbmllbDMtdnAyLy4vbm9kZV9tb2R1bGVzL0BhenVyZS9pZGVudGl0eS9kaXN0LWVzbS9zcmMvdXRpbC90cmFjaW5nLmpzPzc0NDUiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uXG4vLyBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UuXG5pbXBvcnQgeyBTREtfVkVSU0lPTiB9IGZyb20gXCIuLi9jb25zdGFudHNcIjtcbmltcG9ydCB7IGNyZWF0ZVRyYWNpbmdDbGllbnQgfSBmcm9tIFwiQGF6dXJlL2NvcmUtdHJhY2luZ1wiO1xuLyoqXG4gKiBDcmVhdGVzIGEgc3BhbiB1c2luZyB0aGUgZ2xvYmFsIHRyYWNlci5cbiAqIEBpbnRlcm5hbFxuICovXG5leHBvcnQgY29uc3QgdHJhY2luZ0NsaWVudCA9IGNyZWF0ZVRyYWNpbmdDbGllbnQoe1xuICAgIG5hbWVzcGFjZTogXCJNaWNyb3NvZnQuQUFEXCIsXG4gICAgcGFja2FnZU5hbWU6IFwiQGF6dXJlL2lkZW50aXR5XCIsXG4gICAgcGFja2FnZVZlcnNpb246IFNES19WRVJTSU9OLFxufSk7XG4vLyMgc291cmNlTWFwcGluZ1VSTD10cmFjaW5nLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/identity/dist-esm/src/util/tracing.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/identity/node_modules/@azure/abort-controller/dist-esm/src/AbortController.js":
/*!***********************************************************************************************************!*\
  !*** ./node_modules/@azure/identity/node_modules/@azure/abort-controller/dist-esm/src/AbortController.js ***!
  \***********************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AbortController: () => (/* binding */ AbortController),\n/* harmony export */   AbortError: () => (/* binding */ AbortError)\n/* harmony export */ });\n/* harmony import */ var _AbortSignal__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./AbortSignal */ \"(rsc)/./node_modules/@azure/identity/node_modules/@azure/abort-controller/dist-esm/src/AbortSignal.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\n/**\n * This error is thrown when an asynchronous operation has been aborted.\n * Check for this error by testing the `name` that the name property of the\n * error matches `\"AbortError\"`.\n *\n * @example\n * ```ts\n * const controller = new AbortController();\n * controller.abort();\n * try {\n *   doAsyncWork(controller.signal)\n * } catch (e) {\n *   if (e.name === 'AbortError') {\n *     // handle abort error here.\n *   }\n * }\n * ```\n */\nclass AbortError extends Error {\n    constructor(message) {\n        super(message);\n        this.name = \"AbortError\";\n    }\n}\n/**\n * An AbortController provides an AbortSignal and the associated controls to signal\n * that an asynchronous operation should be aborted.\n *\n * @example\n * Abort an operation when another event fires\n * ```ts\n * const controller = new AbortController();\n * const signal = controller.signal;\n * doAsyncWork(signal);\n * button.addEventListener('click', () => controller.abort());\n * ```\n *\n * @example\n * Share aborter cross multiple operations in 30s\n * ```ts\n * // Upload the same data to 2 different data centers at the same time,\n * // abort another when any of them is finished\n * const controller = AbortController.withTimeout(30 * 1000);\n * doAsyncWork(controller.signal).then(controller.abort);\n * doAsyncWork(controller.signal).then(controller.abort);\n *```\n *\n * @example\n * Cascaded aborting\n * ```ts\n * // All operations can't take more than 30 seconds\n * const aborter = Aborter.timeout(30 * 1000);\n *\n * // Following 2 operations can't take more than 25 seconds\n * await doAsyncWork(aborter.withTimeout(25 * 1000));\n * await doAsyncWork(aborter.withTimeout(25 * 1000));\n * ```\n */\nclass AbortController {\n    // eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\n    constructor(parentSignals) {\n        this._signal = new _AbortSignal__WEBPACK_IMPORTED_MODULE_0__.AbortSignal();\n        if (!parentSignals) {\n            return;\n        }\n        // coerce parentSignals into an array\n        if (!Array.isArray(parentSignals)) {\n            // eslint-disable-next-line prefer-rest-params\n            parentSignals = arguments;\n        }\n        for (const parentSignal of parentSignals) {\n            // if the parent signal has already had abort() called,\n            // then call abort on this signal as well.\n            if (parentSignal.aborted) {\n                this.abort();\n            }\n            else {\n                // when the parent signal aborts, this signal should as well.\n                parentSignal.addEventListener(\"abort\", () => {\n                    this.abort();\n                });\n            }\n        }\n    }\n    /**\n     * The AbortSignal associated with this controller that will signal aborted\n     * when the abort method is called on this controller.\n     *\n     * @readonly\n     */\n    get signal() {\n        return this._signal;\n    }\n    /**\n     * Signal that any operations passed this controller's associated abort signal\n     * to cancel any remaining work and throw an `AbortError`.\n     */\n    abort() {\n        (0,_AbortSignal__WEBPACK_IMPORTED_MODULE_0__.abortSignal)(this._signal);\n    }\n    /**\n     * Creates a new AbortSignal instance that will abort after the provided ms.\n     * @param ms - Elapsed time in milliseconds to trigger an abort.\n     */\n    static timeout(ms) {\n        const signal = new _AbortSignal__WEBPACK_IMPORTED_MODULE_0__.AbortSignal();\n        const timer = setTimeout(_AbortSignal__WEBPACK_IMPORTED_MODULE_0__.abortSignal, ms, signal);\n        // Prevent the active Timer from keeping the Node.js event loop active.\n        if (typeof timer.unref === \"function\") {\n            timer.unref();\n        }\n        return signal;\n    }\n}\n//# sourceMappingURL=AbortController.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2lkZW50aXR5L25vZGVfbW9kdWxlcy9AYXp1cmUvYWJvcnQtY29udHJvbGxlci9kaXN0LWVzbS9zcmMvQWJvcnRDb250cm9sbGVyLmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFBO0FBQ0E7QUFDeUQ7QUFDekQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBLDJCQUEyQixxREFBVztBQUN0QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUI7QUFDakI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFFBQVEseURBQVc7QUFDbkI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMkJBQTJCLHFEQUFXO0FBQ3RDLGlDQUFpQyxxREFBVztBQUM1QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZGFuaWVsMy12cDIvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2lkZW50aXR5L25vZGVfbW9kdWxlcy9AYXp1cmUvYWJvcnQtY29udHJvbGxlci9kaXN0LWVzbS9zcmMvQWJvcnRDb250cm9sbGVyLmpzPzk2YTgiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uXG4vLyBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UuXG5pbXBvcnQgeyBBYm9ydFNpZ25hbCwgYWJvcnRTaWduYWwgfSBmcm9tIFwiLi9BYm9ydFNpZ25hbFwiO1xuLyoqXG4gKiBUaGlzIGVycm9yIGlzIHRocm93biB3aGVuIGFuIGFzeW5jaHJvbm91cyBvcGVyYXRpb24gaGFzIGJlZW4gYWJvcnRlZC5cbiAqIENoZWNrIGZvciB0aGlzIGVycm9yIGJ5IHRlc3RpbmcgdGhlIGBuYW1lYCB0aGF0IHRoZSBuYW1lIHByb3BlcnR5IG9mIHRoZVxuICogZXJyb3IgbWF0Y2hlcyBgXCJBYm9ydEVycm9yXCJgLlxuICpcbiAqIEBleGFtcGxlXG4gKiBgYGB0c1xuICogY29uc3QgY29udHJvbGxlciA9IG5ldyBBYm9ydENvbnRyb2xsZXIoKTtcbiAqIGNvbnRyb2xsZXIuYWJvcnQoKTtcbiAqIHRyeSB7XG4gKiAgIGRvQXN5bmNXb3JrKGNvbnRyb2xsZXIuc2lnbmFsKVxuICogfSBjYXRjaCAoZSkge1xuICogICBpZiAoZS5uYW1lID09PSAnQWJvcnRFcnJvcicpIHtcbiAqICAgICAvLyBoYW5kbGUgYWJvcnQgZXJyb3IgaGVyZS5cbiAqICAgfVxuICogfVxuICogYGBgXG4gKi9cbmV4cG9ydCBjbGFzcyBBYm9ydEVycm9yIGV4dGVuZHMgRXJyb3Ige1xuICAgIGNvbnN0cnVjdG9yKG1lc3NhZ2UpIHtcbiAgICAgICAgc3VwZXIobWVzc2FnZSk7XG4gICAgICAgIHRoaXMubmFtZSA9IFwiQWJvcnRFcnJvclwiO1xuICAgIH1cbn1cbi8qKlxuICogQW4gQWJvcnRDb250cm9sbGVyIHByb3ZpZGVzIGFuIEFib3J0U2lnbmFsIGFuZCB0aGUgYXNzb2NpYXRlZCBjb250cm9scyB0byBzaWduYWxcbiAqIHRoYXQgYW4gYXN5bmNocm9ub3VzIG9wZXJhdGlvbiBzaG91bGQgYmUgYWJvcnRlZC5cbiAqXG4gKiBAZXhhbXBsZVxuICogQWJvcnQgYW4gb3BlcmF0aW9uIHdoZW4gYW5vdGhlciBldmVudCBmaXJlc1xuICogYGBgdHNcbiAqIGNvbnN0IGNvbnRyb2xsZXIgPSBuZXcgQWJvcnRDb250cm9sbGVyKCk7XG4gKiBjb25zdCBzaWduYWwgPSBjb250cm9sbGVyLnNpZ25hbDtcbiAqIGRvQXN5bmNXb3JrKHNpZ25hbCk7XG4gKiBidXR0b24uYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAoKSA9PiBjb250cm9sbGVyLmFib3J0KCkpO1xuICogYGBgXG4gKlxuICogQGV4YW1wbGVcbiAqIFNoYXJlIGFib3J0ZXIgY3Jvc3MgbXVsdGlwbGUgb3BlcmF0aW9ucyBpbiAzMHNcbiAqIGBgYHRzXG4gKiAvLyBVcGxvYWQgdGhlIHNhbWUgZGF0YSB0byAyIGRpZmZlcmVudCBkYXRhIGNlbnRlcnMgYXQgdGhlIHNhbWUgdGltZSxcbiAqIC8vIGFib3J0IGFub3RoZXIgd2hlbiBhbnkgb2YgdGhlbSBpcyBmaW5pc2hlZFxuICogY29uc3QgY29udHJvbGxlciA9IEFib3J0Q29udHJvbGxlci53aXRoVGltZW91dCgzMCAqIDEwMDApO1xuICogZG9Bc3luY1dvcmsoY29udHJvbGxlci5zaWduYWwpLnRoZW4oY29udHJvbGxlci5hYm9ydCk7XG4gKiBkb0FzeW5jV29yayhjb250cm9sbGVyLnNpZ25hbCkudGhlbihjb250cm9sbGVyLmFib3J0KTtcbiAqYGBgXG4gKlxuICogQGV4YW1wbGVcbiAqIENhc2NhZGVkIGFib3J0aW5nXG4gKiBgYGB0c1xuICogLy8gQWxsIG9wZXJhdGlvbnMgY2FuJ3QgdGFrZSBtb3JlIHRoYW4gMzAgc2Vjb25kc1xuICogY29uc3QgYWJvcnRlciA9IEFib3J0ZXIudGltZW91dCgzMCAqIDEwMDApO1xuICpcbiAqIC8vIEZvbGxvd2luZyAyIG9wZXJhdGlvbnMgY2FuJ3QgdGFrZSBtb3JlIHRoYW4gMjUgc2Vjb25kc1xuICogYXdhaXQgZG9Bc3luY1dvcmsoYWJvcnRlci53aXRoVGltZW91dCgyNSAqIDEwMDApKTtcbiAqIGF3YWl0IGRvQXN5bmNXb3JrKGFib3J0ZXIud2l0aFRpbWVvdXQoMjUgKiAxMDAwKSk7XG4gKiBgYGBcbiAqL1xuZXhwb3J0IGNsYXNzIEFib3J0Q29udHJvbGxlciB7XG4gICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIEB0eXBlc2NyaXB0LWVzbGludC9leHBsaWNpdC1tb2R1bGUtYm91bmRhcnktdHlwZXNcbiAgICBjb25zdHJ1Y3RvcihwYXJlbnRTaWduYWxzKSB7XG4gICAgICAgIHRoaXMuX3NpZ25hbCA9IG5ldyBBYm9ydFNpZ25hbCgpO1xuICAgICAgICBpZiAoIXBhcmVudFNpZ25hbHMpIHtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuICAgICAgICAvLyBjb2VyY2UgcGFyZW50U2lnbmFscyBpbnRvIGFuIGFycmF5XG4gICAgICAgIGlmICghQXJyYXkuaXNBcnJheShwYXJlbnRTaWduYWxzKSkge1xuICAgICAgICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIHByZWZlci1yZXN0LXBhcmFtc1xuICAgICAgICAgICAgcGFyZW50U2lnbmFscyA9IGFyZ3VtZW50cztcbiAgICAgICAgfVxuICAgICAgICBmb3IgKGNvbnN0IHBhcmVudFNpZ25hbCBvZiBwYXJlbnRTaWduYWxzKSB7XG4gICAgICAgICAgICAvLyBpZiB0aGUgcGFyZW50IHNpZ25hbCBoYXMgYWxyZWFkeSBoYWQgYWJvcnQoKSBjYWxsZWQsXG4gICAgICAgICAgICAvLyB0aGVuIGNhbGwgYWJvcnQgb24gdGhpcyBzaWduYWwgYXMgd2VsbC5cbiAgICAgICAgICAgIGlmIChwYXJlbnRTaWduYWwuYWJvcnRlZCkge1xuICAgICAgICAgICAgICAgIHRoaXMuYWJvcnQoKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgIC8vIHdoZW4gdGhlIHBhcmVudCBzaWduYWwgYWJvcnRzLCB0aGlzIHNpZ25hbCBzaG91bGQgYXMgd2VsbC5cbiAgICAgICAgICAgICAgICBwYXJlbnRTaWduYWwuYWRkRXZlbnRMaXN0ZW5lcihcImFib3J0XCIsICgpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5hYm9ydCgpO1xuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuICAgIC8qKlxuICAgICAqIFRoZSBBYm9ydFNpZ25hbCBhc3NvY2lhdGVkIHdpdGggdGhpcyBjb250cm9sbGVyIHRoYXQgd2lsbCBzaWduYWwgYWJvcnRlZFxuICAgICAqIHdoZW4gdGhlIGFib3J0IG1ldGhvZCBpcyBjYWxsZWQgb24gdGhpcyBjb250cm9sbGVyLlxuICAgICAqXG4gICAgICogQHJlYWRvbmx5XG4gICAgICovXG4gICAgZ2V0IHNpZ25hbCgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuX3NpZ25hbDtcbiAgICB9XG4gICAgLyoqXG4gICAgICogU2lnbmFsIHRoYXQgYW55IG9wZXJhdGlvbnMgcGFzc2VkIHRoaXMgY29udHJvbGxlcidzIGFzc29jaWF0ZWQgYWJvcnQgc2lnbmFsXG4gICAgICogdG8gY2FuY2VsIGFueSByZW1haW5pbmcgd29yayBhbmQgdGhyb3cgYW4gYEFib3J0RXJyb3JgLlxuICAgICAqL1xuICAgIGFib3J0KCkge1xuICAgICAgICBhYm9ydFNpZ25hbCh0aGlzLl9zaWduYWwpO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBDcmVhdGVzIGEgbmV3IEFib3J0U2lnbmFsIGluc3RhbmNlIHRoYXQgd2lsbCBhYm9ydCBhZnRlciB0aGUgcHJvdmlkZWQgbXMuXG4gICAgICogQHBhcmFtIG1zIC0gRWxhcHNlZCB0aW1lIGluIG1pbGxpc2Vjb25kcyB0byB0cmlnZ2VyIGFuIGFib3J0LlxuICAgICAqL1xuICAgIHN0YXRpYyB0aW1lb3V0KG1zKSB7XG4gICAgICAgIGNvbnN0IHNpZ25hbCA9IG5ldyBBYm9ydFNpZ25hbCgpO1xuICAgICAgICBjb25zdCB0aW1lciA9IHNldFRpbWVvdXQoYWJvcnRTaWduYWwsIG1zLCBzaWduYWwpO1xuICAgICAgICAvLyBQcmV2ZW50IHRoZSBhY3RpdmUgVGltZXIgZnJvbSBrZWVwaW5nIHRoZSBOb2RlLmpzIGV2ZW50IGxvb3AgYWN0aXZlLlxuICAgICAgICBpZiAodHlwZW9mIHRpbWVyLnVucmVmID09PSBcImZ1bmN0aW9uXCIpIHtcbiAgICAgICAgICAgIHRpbWVyLnVucmVmKCk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHNpZ25hbDtcbiAgICB9XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1BYm9ydENvbnRyb2xsZXIuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/identity/node_modules/@azure/abort-controller/dist-esm/src/AbortController.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/identity/node_modules/@azure/abort-controller/dist-esm/src/AbortSignal.js":
/*!*******************************************************************************************************!*\
  !*** ./node_modules/@azure/identity/node_modules/@azure/abort-controller/dist-esm/src/AbortSignal.js ***!
  \*******************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AbortSignal: () => (/* binding */ AbortSignal),\n/* harmony export */   abortSignal: () => (/* binding */ abortSignal)\n/* harmony export */ });\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n/// <reference path=\"../shims-public.d.ts\" />\nconst listenersMap = new WeakMap();\nconst abortedMap = new WeakMap();\n/**\n * An aborter instance implements AbortSignal interface, can abort HTTP requests.\n *\n * - Call AbortSignal.none to create a new AbortSignal instance that cannot be cancelled.\n * Use `AbortSignal.none` when you are required to pass a cancellation token but the operation\n * cannot or will not ever be cancelled.\n *\n * @example\n * Abort without timeout\n * ```ts\n * await doAsyncWork(AbortSignal.none);\n * ```\n */\nclass AbortSignal {\n    constructor() {\n        /**\n         * onabort event listener.\n         */\n        this.onabort = null;\n        listenersMap.set(this, []);\n        abortedMap.set(this, false);\n    }\n    /**\n     * Status of whether aborted or not.\n     *\n     * @readonly\n     */\n    get aborted() {\n        if (!abortedMap.has(this)) {\n            throw new TypeError(\"Expected `this` to be an instance of AbortSignal.\");\n        }\n        return abortedMap.get(this);\n    }\n    /**\n     * Creates a new AbortSignal instance that will never be aborted.\n     *\n     * @readonly\n     */\n    static get none() {\n        return new AbortSignal();\n    }\n    /**\n     * Added new \"abort\" event listener, only support \"abort\" event.\n     *\n     * @param _type - Only support \"abort\" event\n     * @param listener - The listener to be added\n     */\n    addEventListener(\n    // tslint:disable-next-line:variable-name\n    _type, listener) {\n        if (!listenersMap.has(this)) {\n            throw new TypeError(\"Expected `this` to be an instance of AbortSignal.\");\n        }\n        const listeners = listenersMap.get(this);\n        listeners.push(listener);\n    }\n    /**\n     * Remove \"abort\" event listener, only support \"abort\" event.\n     *\n     * @param _type - Only support \"abort\" event\n     * @param listener - The listener to be removed\n     */\n    removeEventListener(\n    // tslint:disable-next-line:variable-name\n    _type, listener) {\n        if (!listenersMap.has(this)) {\n            throw new TypeError(\"Expected `this` to be an instance of AbortSignal.\");\n        }\n        const listeners = listenersMap.get(this);\n        const index = listeners.indexOf(listener);\n        if (index > -1) {\n            listeners.splice(index, 1);\n        }\n    }\n    /**\n     * Dispatches a synthetic event to the AbortSignal.\n     */\n    dispatchEvent(_event) {\n        throw new Error(\"This is a stub dispatchEvent implementation that should not be used.  It only exists for type-checking purposes.\");\n    }\n}\n/**\n * Helper to trigger an abort event immediately, the onabort and all abort event listeners will be triggered.\n * Will try to trigger abort event for all linked AbortSignal nodes.\n *\n * - If there is a timeout, the timer will be cancelled.\n * - If aborted is true, nothing will happen.\n *\n * @internal\n */\n// eslint-disable-next-line @azure/azure-sdk/ts-use-interface-parameters\nfunction abortSignal(signal) {\n    if (signal.aborted) {\n        return;\n    }\n    if (signal.onabort) {\n        signal.onabort.call(signal);\n    }\n    const listeners = listenersMap.get(signal);\n    if (listeners) {\n        // Create a copy of listeners so mutations to the array\n        // (e.g. via removeListener calls) don't affect the listeners\n        // we invoke.\n        listeners.slice().forEach((listener) => {\n            listener.call(signal, { type: \"abort\" });\n        });\n    }\n    abortedMap.set(signal, true);\n}\n//# sourceMappingURL=AbortSignal.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2lkZW50aXR5L25vZGVfbW9kdWxlcy9AYXp1cmUvYWJvcnQtY29udHJvbGxlci9kaXN0LWVzbS9zcmMvQWJvcnRTaWduYWwuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG9DQUFvQyxlQUFlO0FBQ25ELFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2RhbmllbDMtdnAyLy4vbm9kZV9tb2R1bGVzL0BhenVyZS9pZGVudGl0eS9ub2RlX21vZHVsZXMvQGF6dXJlL2Fib3J0LWNvbnRyb2xsZXIvZGlzdC1lc20vc3JjL0Fib3J0U2lnbmFsLmpzP2VhNWEiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uXG4vLyBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UuXG4vLy8gPHJlZmVyZW5jZSBwYXRoPVwiLi4vc2hpbXMtcHVibGljLmQudHNcIiAvPlxuY29uc3QgbGlzdGVuZXJzTWFwID0gbmV3IFdlYWtNYXAoKTtcbmNvbnN0IGFib3J0ZWRNYXAgPSBuZXcgV2Vha01hcCgpO1xuLyoqXG4gKiBBbiBhYm9ydGVyIGluc3RhbmNlIGltcGxlbWVudHMgQWJvcnRTaWduYWwgaW50ZXJmYWNlLCBjYW4gYWJvcnQgSFRUUCByZXF1ZXN0cy5cbiAqXG4gKiAtIENhbGwgQWJvcnRTaWduYWwubm9uZSB0byBjcmVhdGUgYSBuZXcgQWJvcnRTaWduYWwgaW5zdGFuY2UgdGhhdCBjYW5ub3QgYmUgY2FuY2VsbGVkLlxuICogVXNlIGBBYm9ydFNpZ25hbC5ub25lYCB3aGVuIHlvdSBhcmUgcmVxdWlyZWQgdG8gcGFzcyBhIGNhbmNlbGxhdGlvbiB0b2tlbiBidXQgdGhlIG9wZXJhdGlvblxuICogY2Fubm90IG9yIHdpbGwgbm90IGV2ZXIgYmUgY2FuY2VsbGVkLlxuICpcbiAqIEBleGFtcGxlXG4gKiBBYm9ydCB3aXRob3V0IHRpbWVvdXRcbiAqIGBgYHRzXG4gKiBhd2FpdCBkb0FzeW5jV29yayhBYm9ydFNpZ25hbC5ub25lKTtcbiAqIGBgYFxuICovXG5leHBvcnQgY2xhc3MgQWJvcnRTaWduYWwge1xuICAgIGNvbnN0cnVjdG9yKCkge1xuICAgICAgICAvKipcbiAgICAgICAgICogb25hYm9ydCBldmVudCBsaXN0ZW5lci5cbiAgICAgICAgICovXG4gICAgICAgIHRoaXMub25hYm9ydCA9IG51bGw7XG4gICAgICAgIGxpc3RlbmVyc01hcC5zZXQodGhpcywgW10pO1xuICAgICAgICBhYm9ydGVkTWFwLnNldCh0aGlzLCBmYWxzZSk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIFN0YXR1cyBvZiB3aGV0aGVyIGFib3J0ZWQgb3Igbm90LlxuICAgICAqXG4gICAgICogQHJlYWRvbmx5XG4gICAgICovXG4gICAgZ2V0IGFib3J0ZWQoKSB7XG4gICAgICAgIGlmICghYWJvcnRlZE1hcC5oYXModGhpcykpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBUeXBlRXJyb3IoXCJFeHBlY3RlZCBgdGhpc2AgdG8gYmUgYW4gaW5zdGFuY2Ugb2YgQWJvcnRTaWduYWwuXCIpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBhYm9ydGVkTWFwLmdldCh0aGlzKTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogQ3JlYXRlcyBhIG5ldyBBYm9ydFNpZ25hbCBpbnN0YW5jZSB0aGF0IHdpbGwgbmV2ZXIgYmUgYWJvcnRlZC5cbiAgICAgKlxuICAgICAqIEByZWFkb25seVxuICAgICAqL1xuICAgIHN0YXRpYyBnZXQgbm9uZSgpIHtcbiAgICAgICAgcmV0dXJuIG5ldyBBYm9ydFNpZ25hbCgpO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBBZGRlZCBuZXcgXCJhYm9ydFwiIGV2ZW50IGxpc3RlbmVyLCBvbmx5IHN1cHBvcnQgXCJhYm9ydFwiIGV2ZW50LlxuICAgICAqXG4gICAgICogQHBhcmFtIF90eXBlIC0gT25seSBzdXBwb3J0IFwiYWJvcnRcIiBldmVudFxuICAgICAqIEBwYXJhbSBsaXN0ZW5lciAtIFRoZSBsaXN0ZW5lciB0byBiZSBhZGRlZFxuICAgICAqL1xuICAgIGFkZEV2ZW50TGlzdGVuZXIoXG4gICAgLy8gdHNsaW50OmRpc2FibGUtbmV4dC1saW5lOnZhcmlhYmxlLW5hbWVcbiAgICBfdHlwZSwgbGlzdGVuZXIpIHtcbiAgICAgICAgaWYgKCFsaXN0ZW5lcnNNYXAuaGFzKHRoaXMpKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgVHlwZUVycm9yKFwiRXhwZWN0ZWQgYHRoaXNgIHRvIGJlIGFuIGluc3RhbmNlIG9mIEFib3J0U2lnbmFsLlwiKTtcbiAgICAgICAgfVxuICAgICAgICBjb25zdCBsaXN0ZW5lcnMgPSBsaXN0ZW5lcnNNYXAuZ2V0KHRoaXMpO1xuICAgICAgICBsaXN0ZW5lcnMucHVzaChsaXN0ZW5lcik7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIFJlbW92ZSBcImFib3J0XCIgZXZlbnQgbGlzdGVuZXIsIG9ubHkgc3VwcG9ydCBcImFib3J0XCIgZXZlbnQuXG4gICAgICpcbiAgICAgKiBAcGFyYW0gX3R5cGUgLSBPbmx5IHN1cHBvcnQgXCJhYm9ydFwiIGV2ZW50XG4gICAgICogQHBhcmFtIGxpc3RlbmVyIC0gVGhlIGxpc3RlbmVyIHRvIGJlIHJlbW92ZWRcbiAgICAgKi9cbiAgICByZW1vdmVFdmVudExpc3RlbmVyKFxuICAgIC8vIHRzbGludDpkaXNhYmxlLW5leHQtbGluZTp2YXJpYWJsZS1uYW1lXG4gICAgX3R5cGUsIGxpc3RlbmVyKSB7XG4gICAgICAgIGlmICghbGlzdGVuZXJzTWFwLmhhcyh0aGlzKSkge1xuICAgICAgICAgICAgdGhyb3cgbmV3IFR5cGVFcnJvcihcIkV4cGVjdGVkIGB0aGlzYCB0byBiZSBhbiBpbnN0YW5jZSBvZiBBYm9ydFNpZ25hbC5cIik7XG4gICAgICAgIH1cbiAgICAgICAgY29uc3QgbGlzdGVuZXJzID0gbGlzdGVuZXJzTWFwLmdldCh0aGlzKTtcbiAgICAgICAgY29uc3QgaW5kZXggPSBsaXN0ZW5lcnMuaW5kZXhPZihsaXN0ZW5lcik7XG4gICAgICAgIGlmIChpbmRleCA+IC0xKSB7XG4gICAgICAgICAgICBsaXN0ZW5lcnMuc3BsaWNlKGluZGV4LCAxKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICAvKipcbiAgICAgKiBEaXNwYXRjaGVzIGEgc3ludGhldGljIGV2ZW50IHRvIHRoZSBBYm9ydFNpZ25hbC5cbiAgICAgKi9cbiAgICBkaXNwYXRjaEV2ZW50KF9ldmVudCkge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJUaGlzIGlzIGEgc3R1YiBkaXNwYXRjaEV2ZW50IGltcGxlbWVudGF0aW9uIHRoYXQgc2hvdWxkIG5vdCBiZSB1c2VkLiAgSXQgb25seSBleGlzdHMgZm9yIHR5cGUtY2hlY2tpbmcgcHVycG9zZXMuXCIpO1xuICAgIH1cbn1cbi8qKlxuICogSGVscGVyIHRvIHRyaWdnZXIgYW4gYWJvcnQgZXZlbnQgaW1tZWRpYXRlbHksIHRoZSBvbmFib3J0IGFuZCBhbGwgYWJvcnQgZXZlbnQgbGlzdGVuZXJzIHdpbGwgYmUgdHJpZ2dlcmVkLlxuICogV2lsbCB0cnkgdG8gdHJpZ2dlciBhYm9ydCBldmVudCBmb3IgYWxsIGxpbmtlZCBBYm9ydFNpZ25hbCBub2Rlcy5cbiAqXG4gKiAtIElmIHRoZXJlIGlzIGEgdGltZW91dCwgdGhlIHRpbWVyIHdpbGwgYmUgY2FuY2VsbGVkLlxuICogLSBJZiBhYm9ydGVkIGlzIHRydWUsIG5vdGhpbmcgd2lsbCBoYXBwZW4uXG4gKlxuICogQGludGVybmFsXG4gKi9cbi8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBAYXp1cmUvYXp1cmUtc2RrL3RzLXVzZS1pbnRlcmZhY2UtcGFyYW1ldGVyc1xuZXhwb3J0IGZ1bmN0aW9uIGFib3J0U2lnbmFsKHNpZ25hbCkge1xuICAgIGlmIChzaWduYWwuYWJvcnRlZCkge1xuICAgICAgICByZXR1cm47XG4gICAgfVxuICAgIGlmIChzaWduYWwub25hYm9ydCkge1xuICAgICAgICBzaWduYWwub25hYm9ydC5jYWxsKHNpZ25hbCk7XG4gICAgfVxuICAgIGNvbnN0IGxpc3RlbmVycyA9IGxpc3RlbmVyc01hcC5nZXQoc2lnbmFsKTtcbiAgICBpZiAobGlzdGVuZXJzKSB7XG4gICAgICAgIC8vIENyZWF0ZSBhIGNvcHkgb2YgbGlzdGVuZXJzIHNvIG11dGF0aW9ucyB0byB0aGUgYXJyYXlcbiAgICAgICAgLy8gKGUuZy4gdmlhIHJlbW92ZUxpc3RlbmVyIGNhbGxzKSBkb24ndCBhZmZlY3QgdGhlIGxpc3RlbmVyc1xuICAgICAgICAvLyB3ZSBpbnZva2UuXG4gICAgICAgIGxpc3RlbmVycy5zbGljZSgpLmZvckVhY2goKGxpc3RlbmVyKSA9PiB7XG4gICAgICAgICAgICBsaXN0ZW5lci5jYWxsKHNpZ25hbCwgeyB0eXBlOiBcImFib3J0XCIgfSk7XG4gICAgICAgIH0pO1xuICAgIH1cbiAgICBhYm9ydGVkTWFwLnNldChzaWduYWwsIHRydWUpO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9QWJvcnRTaWduYWwuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/identity/node_modules/@azure/abort-controller/dist-esm/src/AbortSignal.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/abort-controller/dist/commonjs/AbortError.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@azure/abort-controller/dist/commonjs/AbortError.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.AbortError = void 0;\n/**\n * This error is thrown when an asynchronous operation has been aborted.\n * Check for this error by testing the `name` that the name property of the\n * error matches `\"AbortError\"`.\n *\n * @example\n * ```ts\n * const controller = new AbortController();\n * controller.abort();\n * try {\n *   doAsyncWork(controller.signal)\n * } catch (e) {\n *   if (e.name === 'AbortError') {\n *     // handle abort error here.\n *   }\n * }\n * ```\n */\nclass AbortError extends Error {\n    constructor(message) {\n        super(message);\n        this.name = \"AbortError\";\n    }\n}\nexports.AbortError = AbortError;\n//# sourceMappingURL=AbortError.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2Fib3J0LWNvbnRyb2xsZXIvZGlzdC9jb21tb25qcy9BYm9ydEVycm9yLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQTtBQUNBLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxrQkFBa0I7QUFDbEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrQkFBa0I7QUFDbEIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9kYW5pZWwzLXZwMi8uL25vZGVfbW9kdWxlcy9AYXp1cmUvYWJvcnQtY29udHJvbGxlci9kaXN0L2NvbW1vbmpzL0Fib3J0RXJyb3IuanM/YjczNiJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbi8vIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLlxuLy8gTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlLlxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5BYm9ydEVycm9yID0gdm9pZCAwO1xuLyoqXG4gKiBUaGlzIGVycm9yIGlzIHRocm93biB3aGVuIGFuIGFzeW5jaHJvbm91cyBvcGVyYXRpb24gaGFzIGJlZW4gYWJvcnRlZC5cbiAqIENoZWNrIGZvciB0aGlzIGVycm9yIGJ5IHRlc3RpbmcgdGhlIGBuYW1lYCB0aGF0IHRoZSBuYW1lIHByb3BlcnR5IG9mIHRoZVxuICogZXJyb3IgbWF0Y2hlcyBgXCJBYm9ydEVycm9yXCJgLlxuICpcbiAqIEBleGFtcGxlXG4gKiBgYGB0c1xuICogY29uc3QgY29udHJvbGxlciA9IG5ldyBBYm9ydENvbnRyb2xsZXIoKTtcbiAqIGNvbnRyb2xsZXIuYWJvcnQoKTtcbiAqIHRyeSB7XG4gKiAgIGRvQXN5bmNXb3JrKGNvbnRyb2xsZXIuc2lnbmFsKVxuICogfSBjYXRjaCAoZSkge1xuICogICBpZiAoZS5uYW1lID09PSAnQWJvcnRFcnJvcicpIHtcbiAqICAgICAvLyBoYW5kbGUgYWJvcnQgZXJyb3IgaGVyZS5cbiAqICAgfVxuICogfVxuICogYGBgXG4gKi9cbmNsYXNzIEFib3J0RXJyb3IgZXh0ZW5kcyBFcnJvciB7XG4gICAgY29uc3RydWN0b3IobWVzc2FnZSkge1xuICAgICAgICBzdXBlcihtZXNzYWdlKTtcbiAgICAgICAgdGhpcy5uYW1lID0gXCJBYm9ydEVycm9yXCI7XG4gICAgfVxufVxuZXhwb3J0cy5BYm9ydEVycm9yID0gQWJvcnRFcnJvcjtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPUFib3J0RXJyb3IuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/abort-controller/dist/commonjs/AbortError.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/abort-controller/dist/commonjs/index.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@azure/abort-controller/dist/commonjs/index.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.AbortError = void 0;\nvar AbortError_js_1 = __webpack_require__(/*! ./AbortError.js */ \"(rsc)/./node_modules/@azure/abort-controller/dist/commonjs/AbortError.js\");\nObject.defineProperty(exports, \"AbortError\", ({ enumerable: true, get: function () { return AbortError_js_1.AbortError; } }));\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2Fib3J0LWNvbnRyb2xsZXIvZGlzdC9jb21tb25qcy9pbmRleC5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0E7QUFDQSw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0Qsa0JBQWtCO0FBQ2xCLHNCQUFzQixtQkFBTyxDQUFDLGlHQUFpQjtBQUMvQyw4Q0FBNkMsRUFBRSxxQ0FBcUMsc0NBQXNDLEVBQUM7QUFDM0giLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9kYW5pZWwzLXZwMi8uL25vZGVfbW9kdWxlcy9AYXp1cmUvYWJvcnQtY29udHJvbGxlci9kaXN0L2NvbW1vbmpzL2luZGV4LmpzPzg4NGMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG4vLyBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi5cbi8vIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZS5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuQWJvcnRFcnJvciA9IHZvaWQgMDtcbnZhciBBYm9ydEVycm9yX2pzXzEgPSByZXF1aXJlKFwiLi9BYm9ydEVycm9yLmpzXCIpO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiQWJvcnRFcnJvclwiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gQWJvcnRFcnJvcl9qc18xLkFib3J0RXJyb3I7IH0gfSk7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbmRleC5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/abort-controller/dist/commonjs/index.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/core-auth/dist/commonjs/azureKeyCredential.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@azure/core-auth/dist/commonjs/azureKeyCredential.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.AzureKeyCredential = void 0;\n/**\n * A static-key-based credential that supports updating\n * the underlying key value.\n */\nclass AzureKeyCredential {\n    /**\n     * The value of the key to be used in authentication\n     */\n    get key() {\n        return this._key;\n    }\n    /**\n     * Create an instance of an AzureKeyCredential for use\n     * with a service client.\n     *\n     * @param key - The initial value of the key to use in authentication\n     */\n    constructor(key) {\n        if (!key) {\n            throw new Error(\"key must be a non-empty string\");\n        }\n        this._key = key;\n    }\n    /**\n     * Change the value of the key.\n     *\n     * Updates will take effect upon the next request after\n     * updating the key value.\n     *\n     * @param newKey - The new key value to be used\n     */\n    update(newKey) {\n        this._key = newKey;\n    }\n}\nexports.AzureKeyCredential = AzureKeyCredential;\n//# sourceMappingURL=azureKeyCredential.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2NvcmUtYXV0aC9kaXN0L2NvbW1vbmpzL2F6dXJlS2V5Q3JlZGVudGlhbC5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0E7QUFDQSw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsMEJBQTBCO0FBQzFCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwwQkFBMEI7QUFDMUIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9kYW5pZWwzLXZwMi8uL25vZGVfbW9kdWxlcy9AYXp1cmUvY29yZS1hdXRoL2Rpc3QvY29tbW9uanMvYXp1cmVLZXlDcmVkZW50aWFsLmpzPzNkYzIiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG4vLyBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi5cbi8vIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZS5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuQXp1cmVLZXlDcmVkZW50aWFsID0gdm9pZCAwO1xuLyoqXG4gKiBBIHN0YXRpYy1rZXktYmFzZWQgY3JlZGVudGlhbCB0aGF0IHN1cHBvcnRzIHVwZGF0aW5nXG4gKiB0aGUgdW5kZXJseWluZyBrZXkgdmFsdWUuXG4gKi9cbmNsYXNzIEF6dXJlS2V5Q3JlZGVudGlhbCB7XG4gICAgLyoqXG4gICAgICogVGhlIHZhbHVlIG9mIHRoZSBrZXkgdG8gYmUgdXNlZCBpbiBhdXRoZW50aWNhdGlvblxuICAgICAqL1xuICAgIGdldCBrZXkoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLl9rZXk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIENyZWF0ZSBhbiBpbnN0YW5jZSBvZiBhbiBBenVyZUtleUNyZWRlbnRpYWwgZm9yIHVzZVxuICAgICAqIHdpdGggYSBzZXJ2aWNlIGNsaWVudC5cbiAgICAgKlxuICAgICAqIEBwYXJhbSBrZXkgLSBUaGUgaW5pdGlhbCB2YWx1ZSBvZiB0aGUga2V5IHRvIHVzZSBpbiBhdXRoZW50aWNhdGlvblxuICAgICAqL1xuICAgIGNvbnN0cnVjdG9yKGtleSkge1xuICAgICAgICBpZiAoIWtleSkge1xuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwia2V5IG11c3QgYmUgYSBub24tZW1wdHkgc3RyaW5nXCIpO1xuICAgICAgICB9XG4gICAgICAgIHRoaXMuX2tleSA9IGtleTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogQ2hhbmdlIHRoZSB2YWx1ZSBvZiB0aGUga2V5LlxuICAgICAqXG4gICAgICogVXBkYXRlcyB3aWxsIHRha2UgZWZmZWN0IHVwb24gdGhlIG5leHQgcmVxdWVzdCBhZnRlclxuICAgICAqIHVwZGF0aW5nIHRoZSBrZXkgdmFsdWUuXG4gICAgICpcbiAgICAgKiBAcGFyYW0gbmV3S2V5IC0gVGhlIG5ldyBrZXkgdmFsdWUgdG8gYmUgdXNlZFxuICAgICAqL1xuICAgIHVwZGF0ZShuZXdLZXkpIHtcbiAgICAgICAgdGhpcy5fa2V5ID0gbmV3S2V5O1xuICAgIH1cbn1cbmV4cG9ydHMuQXp1cmVLZXlDcmVkZW50aWFsID0gQXp1cmVLZXlDcmVkZW50aWFsO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9YXp1cmVLZXlDcmVkZW50aWFsLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/core-auth/dist/commonjs/azureKeyCredential.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/core-auth/dist/commonjs/azureNamedKeyCredential.js":
/*!********************************************************************************!*\
  !*** ./node_modules/@azure/core-auth/dist/commonjs/azureNamedKeyCredential.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.isNamedKeyCredential = exports.AzureNamedKeyCredential = void 0;\nconst core_util_1 = __webpack_require__(/*! @azure/core-util */ \"(rsc)/./node_modules/@azure/core-util/dist/commonjs/index.js\");\n/**\n * A static name/key-based credential that supports updating\n * the underlying name and key values.\n */\nclass AzureNamedKeyCredential {\n    /**\n     * The value of the key to be used in authentication.\n     */\n    get key() {\n        return this._key;\n    }\n    /**\n     * The value of the name to be used in authentication.\n     */\n    get name() {\n        return this._name;\n    }\n    /**\n     * Create an instance of an AzureNamedKeyCredential for use\n     * with a service client.\n     *\n     * @param name - The initial value of the name to use in authentication.\n     * @param key - The initial value of the key to use in authentication.\n     */\n    constructor(name, key) {\n        if (!name || !key) {\n            throw new TypeError(\"name and key must be non-empty strings\");\n        }\n        this._name = name;\n        this._key = key;\n    }\n    /**\n     * Change the value of the key.\n     *\n     * Updates will take effect upon the next request after\n     * updating the key value.\n     *\n     * @param newName - The new name value to be used.\n     * @param newKey - The new key value to be used.\n     */\n    update(newName, newKey) {\n        if (!newName || !newKey) {\n            throw new TypeError(\"newName and newKey must be non-empty strings\");\n        }\n        this._name = newName;\n        this._key = newKey;\n    }\n}\nexports.AzureNamedKeyCredential = AzureNamedKeyCredential;\n/**\n * Tests an object to determine whether it implements NamedKeyCredential.\n *\n * @param credential - The assumed NamedKeyCredential to be tested.\n */\nfunction isNamedKeyCredential(credential) {\n    return ((0, core_util_1.isObjectWithProperties)(credential, [\"name\", \"key\"]) &&\n        typeof credential.key === \"string\" &&\n        typeof credential.name === \"string\");\n}\nexports.isNamedKeyCredential = isNamedKeyCredential;\n//# sourceMappingURL=azureNamedKeyCredential.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2NvcmUtYXV0aC9kaXN0L2NvbW1vbmpzL2F6dXJlTmFtZWRLZXlDcmVkZW50aWFsLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQTtBQUNBLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCw0QkFBNEIsR0FBRywrQkFBK0I7QUFDOUQsb0JBQW9CLG1CQUFPLENBQUMsc0ZBQWtCO0FBQzlDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLCtCQUErQjtBQUMvQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDRCQUE0QjtBQUM1QiIsInNvdXJjZXMiOlsid2VicGFjazovL2RhbmllbDMtdnAyLy4vbm9kZV9tb2R1bGVzL0BhenVyZS9jb3JlLWF1dGgvZGlzdC9jb21tb25qcy9henVyZU5hbWVkS2V5Q3JlZGVudGlhbC5qcz9jYTY4Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuLy8gQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uXG4vLyBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLmlzTmFtZWRLZXlDcmVkZW50aWFsID0gZXhwb3J0cy5BenVyZU5hbWVkS2V5Q3JlZGVudGlhbCA9IHZvaWQgMDtcbmNvbnN0IGNvcmVfdXRpbF8xID0gcmVxdWlyZShcIkBhenVyZS9jb3JlLXV0aWxcIik7XG4vKipcbiAqIEEgc3RhdGljIG5hbWUva2V5LWJhc2VkIGNyZWRlbnRpYWwgdGhhdCBzdXBwb3J0cyB1cGRhdGluZ1xuICogdGhlIHVuZGVybHlpbmcgbmFtZSBhbmQga2V5IHZhbHVlcy5cbiAqL1xuY2xhc3MgQXp1cmVOYW1lZEtleUNyZWRlbnRpYWwge1xuICAgIC8qKlxuICAgICAqIFRoZSB2YWx1ZSBvZiB0aGUga2V5IHRvIGJlIHVzZWQgaW4gYXV0aGVudGljYXRpb24uXG4gICAgICovXG4gICAgZ2V0IGtleSgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuX2tleTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogVGhlIHZhbHVlIG9mIHRoZSBuYW1lIHRvIGJlIHVzZWQgaW4gYXV0aGVudGljYXRpb24uXG4gICAgICovXG4gICAgZ2V0IG5hbWUoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLl9uYW1lO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBDcmVhdGUgYW4gaW5zdGFuY2Ugb2YgYW4gQXp1cmVOYW1lZEtleUNyZWRlbnRpYWwgZm9yIHVzZVxuICAgICAqIHdpdGggYSBzZXJ2aWNlIGNsaWVudC5cbiAgICAgKlxuICAgICAqIEBwYXJhbSBuYW1lIC0gVGhlIGluaXRpYWwgdmFsdWUgb2YgdGhlIG5hbWUgdG8gdXNlIGluIGF1dGhlbnRpY2F0aW9uLlxuICAgICAqIEBwYXJhbSBrZXkgLSBUaGUgaW5pdGlhbCB2YWx1ZSBvZiB0aGUga2V5IHRvIHVzZSBpbiBhdXRoZW50aWNhdGlvbi5cbiAgICAgKi9cbiAgICBjb25zdHJ1Y3RvcihuYW1lLCBrZXkpIHtcbiAgICAgICAgaWYgKCFuYW1lIHx8ICFrZXkpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBUeXBlRXJyb3IoXCJuYW1lIGFuZCBrZXkgbXVzdCBiZSBub24tZW1wdHkgc3RyaW5nc1wiKTtcbiAgICAgICAgfVxuICAgICAgICB0aGlzLl9uYW1lID0gbmFtZTtcbiAgICAgICAgdGhpcy5fa2V5ID0ga2V5O1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBDaGFuZ2UgdGhlIHZhbHVlIG9mIHRoZSBrZXkuXG4gICAgICpcbiAgICAgKiBVcGRhdGVzIHdpbGwgdGFrZSBlZmZlY3QgdXBvbiB0aGUgbmV4dCByZXF1ZXN0IGFmdGVyXG4gICAgICogdXBkYXRpbmcgdGhlIGtleSB2YWx1ZS5cbiAgICAgKlxuICAgICAqIEBwYXJhbSBuZXdOYW1lIC0gVGhlIG5ldyBuYW1lIHZhbHVlIHRvIGJlIHVzZWQuXG4gICAgICogQHBhcmFtIG5ld0tleSAtIFRoZSBuZXcga2V5IHZhbHVlIHRvIGJlIHVzZWQuXG4gICAgICovXG4gICAgdXBkYXRlKG5ld05hbWUsIG5ld0tleSkge1xuICAgICAgICBpZiAoIW5ld05hbWUgfHwgIW5ld0tleSkge1xuICAgICAgICAgICAgdGhyb3cgbmV3IFR5cGVFcnJvcihcIm5ld05hbWUgYW5kIG5ld0tleSBtdXN0IGJlIG5vbi1lbXB0eSBzdHJpbmdzXCIpO1xuICAgICAgICB9XG4gICAgICAgIHRoaXMuX25hbWUgPSBuZXdOYW1lO1xuICAgICAgICB0aGlzLl9rZXkgPSBuZXdLZXk7XG4gICAgfVxufVxuZXhwb3J0cy5BenVyZU5hbWVkS2V5Q3JlZGVudGlhbCA9IEF6dXJlTmFtZWRLZXlDcmVkZW50aWFsO1xuLyoqXG4gKiBUZXN0cyBhbiBvYmplY3QgdG8gZGV0ZXJtaW5lIHdoZXRoZXIgaXQgaW1wbGVtZW50cyBOYW1lZEtleUNyZWRlbnRpYWwuXG4gKlxuICogQHBhcmFtIGNyZWRlbnRpYWwgLSBUaGUgYXNzdW1lZCBOYW1lZEtleUNyZWRlbnRpYWwgdG8gYmUgdGVzdGVkLlxuICovXG5mdW5jdGlvbiBpc05hbWVkS2V5Q3JlZGVudGlhbChjcmVkZW50aWFsKSB7XG4gICAgcmV0dXJuICgoMCwgY29yZV91dGlsXzEuaXNPYmplY3RXaXRoUHJvcGVydGllcykoY3JlZGVudGlhbCwgW1wibmFtZVwiLCBcImtleVwiXSkgJiZcbiAgICAgICAgdHlwZW9mIGNyZWRlbnRpYWwua2V5ID09PSBcInN0cmluZ1wiICYmXG4gICAgICAgIHR5cGVvZiBjcmVkZW50aWFsLm5hbWUgPT09IFwic3RyaW5nXCIpO1xufVxuZXhwb3J0cy5pc05hbWVkS2V5Q3JlZGVudGlhbCA9IGlzTmFtZWRLZXlDcmVkZW50aWFsO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9YXp1cmVOYW1lZEtleUNyZWRlbnRpYWwuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/core-auth/dist/commonjs/azureNamedKeyCredential.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/core-auth/dist/commonjs/azureSASCredential.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@azure/core-auth/dist/commonjs/azureSASCredential.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.isSASCredential = exports.AzureSASCredential = void 0;\nconst core_util_1 = __webpack_require__(/*! @azure/core-util */ \"(rsc)/./node_modules/@azure/core-util/dist/commonjs/index.js\");\n/**\n * A static-signature-based credential that supports updating\n * the underlying signature value.\n */\nclass AzureSASCredential {\n    /**\n     * The value of the shared access signature to be used in authentication\n     */\n    get signature() {\n        return this._signature;\n    }\n    /**\n     * Create an instance of an AzureSASCredential for use\n     * with a service client.\n     *\n     * @param signature - The initial value of the shared access signature to use in authentication\n     */\n    constructor(signature) {\n        if (!signature) {\n            throw new Error(\"shared access signature must be a non-empty string\");\n        }\n        this._signature = signature;\n    }\n    /**\n     * Change the value of the signature.\n     *\n     * Updates will take effect upon the next request after\n     * updating the signature value.\n     *\n     * @param newSignature - The new shared access signature value to be used\n     */\n    update(newSignature) {\n        if (!newSignature) {\n            throw new Error(\"shared access signature must be a non-empty string\");\n        }\n        this._signature = newSignature;\n    }\n}\nexports.AzureSASCredential = AzureSASCredential;\n/**\n * Tests an object to determine whether it implements SASCredential.\n *\n * @param credential - The assumed SASCredential to be tested.\n */\nfunction isSASCredential(credential) {\n    return ((0, core_util_1.isObjectWithProperties)(credential, [\"signature\"]) && typeof credential.signature === \"string\");\n}\nexports.isSASCredential = isSASCredential;\n//# sourceMappingURL=azureSASCredential.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2NvcmUtYXV0aC9kaXN0L2NvbW1vbmpzL2F6dXJlU0FTQ3JlZGVudGlhbC5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0E7QUFDQSw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsdUJBQXVCLEdBQUcsMEJBQTBCO0FBQ3BELG9CQUFvQixtQkFBTyxDQUFDLHNGQUFrQjtBQUM5QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMEJBQTBCO0FBQzFCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx1QkFBdUI7QUFDdkIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9kYW5pZWwzLXZwMi8uL25vZGVfbW9kdWxlcy9AYXp1cmUvY29yZS1hdXRoL2Rpc3QvY29tbW9uanMvYXp1cmVTQVNDcmVkZW50aWFsLmpzPzBlMGUiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG4vLyBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi5cbi8vIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZS5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuaXNTQVNDcmVkZW50aWFsID0gZXhwb3J0cy5BenVyZVNBU0NyZWRlbnRpYWwgPSB2b2lkIDA7XG5jb25zdCBjb3JlX3V0aWxfMSA9IHJlcXVpcmUoXCJAYXp1cmUvY29yZS11dGlsXCIpO1xuLyoqXG4gKiBBIHN0YXRpYy1zaWduYXR1cmUtYmFzZWQgY3JlZGVudGlhbCB0aGF0IHN1cHBvcnRzIHVwZGF0aW5nXG4gKiB0aGUgdW5kZXJseWluZyBzaWduYXR1cmUgdmFsdWUuXG4gKi9cbmNsYXNzIEF6dXJlU0FTQ3JlZGVudGlhbCB7XG4gICAgLyoqXG4gICAgICogVGhlIHZhbHVlIG9mIHRoZSBzaGFyZWQgYWNjZXNzIHNpZ25hdHVyZSB0byBiZSB1c2VkIGluIGF1dGhlbnRpY2F0aW9uXG4gICAgICovXG4gICAgZ2V0IHNpZ25hdHVyZSgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuX3NpZ25hdHVyZTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogQ3JlYXRlIGFuIGluc3RhbmNlIG9mIGFuIEF6dXJlU0FTQ3JlZGVudGlhbCBmb3IgdXNlXG4gICAgICogd2l0aCBhIHNlcnZpY2UgY2xpZW50LlxuICAgICAqXG4gICAgICogQHBhcmFtIHNpZ25hdHVyZSAtIFRoZSBpbml0aWFsIHZhbHVlIG9mIHRoZSBzaGFyZWQgYWNjZXNzIHNpZ25hdHVyZSB0byB1c2UgaW4gYXV0aGVudGljYXRpb25cbiAgICAgKi9cbiAgICBjb25zdHJ1Y3RvcihzaWduYXR1cmUpIHtcbiAgICAgICAgaWYgKCFzaWduYXR1cmUpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihcInNoYXJlZCBhY2Nlc3Mgc2lnbmF0dXJlIG11c3QgYmUgYSBub24tZW1wdHkgc3RyaW5nXCIpO1xuICAgICAgICB9XG4gICAgICAgIHRoaXMuX3NpZ25hdHVyZSA9IHNpZ25hdHVyZTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogQ2hhbmdlIHRoZSB2YWx1ZSBvZiB0aGUgc2lnbmF0dXJlLlxuICAgICAqXG4gICAgICogVXBkYXRlcyB3aWxsIHRha2UgZWZmZWN0IHVwb24gdGhlIG5leHQgcmVxdWVzdCBhZnRlclxuICAgICAqIHVwZGF0aW5nIHRoZSBzaWduYXR1cmUgdmFsdWUuXG4gICAgICpcbiAgICAgKiBAcGFyYW0gbmV3U2lnbmF0dXJlIC0gVGhlIG5ldyBzaGFyZWQgYWNjZXNzIHNpZ25hdHVyZSB2YWx1ZSB0byBiZSB1c2VkXG4gICAgICovXG4gICAgdXBkYXRlKG5ld1NpZ25hdHVyZSkge1xuICAgICAgICBpZiAoIW5ld1NpZ25hdHVyZSkge1xuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwic2hhcmVkIGFjY2VzcyBzaWduYXR1cmUgbXVzdCBiZSBhIG5vbi1lbXB0eSBzdHJpbmdcIik7XG4gICAgICAgIH1cbiAgICAgICAgdGhpcy5fc2lnbmF0dXJlID0gbmV3U2lnbmF0dXJlO1xuICAgIH1cbn1cbmV4cG9ydHMuQXp1cmVTQVNDcmVkZW50aWFsID0gQXp1cmVTQVNDcmVkZW50aWFsO1xuLyoqXG4gKiBUZXN0cyBhbiBvYmplY3QgdG8gZGV0ZXJtaW5lIHdoZXRoZXIgaXQgaW1wbGVtZW50cyBTQVNDcmVkZW50aWFsLlxuICpcbiAqIEBwYXJhbSBjcmVkZW50aWFsIC0gVGhlIGFzc3VtZWQgU0FTQ3JlZGVudGlhbCB0byBiZSB0ZXN0ZWQuXG4gKi9cbmZ1bmN0aW9uIGlzU0FTQ3JlZGVudGlhbChjcmVkZW50aWFsKSB7XG4gICAgcmV0dXJuICgoMCwgY29yZV91dGlsXzEuaXNPYmplY3RXaXRoUHJvcGVydGllcykoY3JlZGVudGlhbCwgW1wic2lnbmF0dXJlXCJdKSAmJiB0eXBlb2YgY3JlZGVudGlhbC5zaWduYXR1cmUgPT09IFwic3RyaW5nXCIpO1xufVxuZXhwb3J0cy5pc1NBU0NyZWRlbnRpYWwgPSBpc1NBU0NyZWRlbnRpYWw7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1henVyZVNBU0NyZWRlbnRpYWwuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/core-auth/dist/commonjs/azureSASCredential.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/core-auth/dist/commonjs/index.js":
/*!**************************************************************!*\
  !*** ./node_modules/@azure/core-auth/dist/commonjs/index.js ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.isTokenCredential = exports.isSASCredential = exports.AzureSASCredential = exports.isNamedKeyCredential = exports.AzureNamedKeyCredential = exports.isKeyCredential = exports.AzureKeyCredential = void 0;\nvar azureKeyCredential_js_1 = __webpack_require__(/*! ./azureKeyCredential.js */ \"(rsc)/./node_modules/@azure/core-auth/dist/commonjs/azureKeyCredential.js\");\nObject.defineProperty(exports, \"AzureKeyCredential\", ({ enumerable: true, get: function () { return azureKeyCredential_js_1.AzureKeyCredential; } }));\nvar keyCredential_js_1 = __webpack_require__(/*! ./keyCredential.js */ \"(rsc)/./node_modules/@azure/core-auth/dist/commonjs/keyCredential.js\");\nObject.defineProperty(exports, \"isKeyCredential\", ({ enumerable: true, get: function () { return keyCredential_js_1.isKeyCredential; } }));\nvar azureNamedKeyCredential_js_1 = __webpack_require__(/*! ./azureNamedKeyCredential.js */ \"(rsc)/./node_modules/@azure/core-auth/dist/commonjs/azureNamedKeyCredential.js\");\nObject.defineProperty(exports, \"AzureNamedKeyCredential\", ({ enumerable: true, get: function () { return azureNamedKeyCredential_js_1.AzureNamedKeyCredential; } }));\nObject.defineProperty(exports, \"isNamedKeyCredential\", ({ enumerable: true, get: function () { return azureNamedKeyCredential_js_1.isNamedKeyCredential; } }));\nvar azureSASCredential_js_1 = __webpack_require__(/*! ./azureSASCredential.js */ \"(rsc)/./node_modules/@azure/core-auth/dist/commonjs/azureSASCredential.js\");\nObject.defineProperty(exports, \"AzureSASCredential\", ({ enumerable: true, get: function () { return azureSASCredential_js_1.AzureSASCredential; } }));\nObject.defineProperty(exports, \"isSASCredential\", ({ enumerable: true, get: function () { return azureSASCredential_js_1.isSASCredential; } }));\nvar tokenCredential_js_1 = __webpack_require__(/*! ./tokenCredential.js */ \"(rsc)/./node_modules/@azure/core-auth/dist/commonjs/tokenCredential.js\");\nObject.defineProperty(exports, \"isTokenCredential\", ({ enumerable: true, get: function () { return tokenCredential_js_1.isTokenCredential; } }));\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2NvcmUtYXV0aC9kaXN0L2NvbW1vbmpzL2luZGV4LmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQTtBQUNBLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCx5QkFBeUIsR0FBRyx1QkFBdUIsR0FBRywwQkFBMEIsR0FBRyw0QkFBNEIsR0FBRywrQkFBK0IsR0FBRyx1QkFBdUIsR0FBRywwQkFBMEI7QUFDeE0sOEJBQThCLG1CQUFPLENBQUMsMEdBQXlCO0FBQy9ELHNEQUFxRCxFQUFFLHFDQUFxQyxzREFBc0QsRUFBQztBQUNuSix5QkFBeUIsbUJBQU8sQ0FBQyxnR0FBb0I7QUFDckQsbURBQWtELEVBQUUscUNBQXFDLDhDQUE4QyxFQUFDO0FBQ3hJLG1DQUFtQyxtQkFBTyxDQUFDLG9IQUE4QjtBQUN6RSwyREFBMEQsRUFBRSxxQ0FBcUMsZ0VBQWdFLEVBQUM7QUFDbEssd0RBQXVELEVBQUUscUNBQXFDLDZEQUE2RCxFQUFDO0FBQzVKLDhCQUE4QixtQkFBTyxDQUFDLDBHQUF5QjtBQUMvRCxzREFBcUQsRUFBRSxxQ0FBcUMsc0RBQXNELEVBQUM7QUFDbkosbURBQWtELEVBQUUscUNBQXFDLG1EQUFtRCxFQUFDO0FBQzdJLDJCQUEyQixtQkFBTyxDQUFDLG9HQUFzQjtBQUN6RCxxREFBb0QsRUFBRSxxQ0FBcUMsa0RBQWtELEVBQUM7QUFDOUkiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9kYW5pZWwzLXZwMi8uL25vZGVfbW9kdWxlcy9AYXp1cmUvY29yZS1hdXRoL2Rpc3QvY29tbW9uanMvaW5kZXguanM/MmZiOCJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbi8vIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLlxuLy8gTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlLlxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5pc1Rva2VuQ3JlZGVudGlhbCA9IGV4cG9ydHMuaXNTQVNDcmVkZW50aWFsID0gZXhwb3J0cy5BenVyZVNBU0NyZWRlbnRpYWwgPSBleHBvcnRzLmlzTmFtZWRLZXlDcmVkZW50aWFsID0gZXhwb3J0cy5BenVyZU5hbWVkS2V5Q3JlZGVudGlhbCA9IGV4cG9ydHMuaXNLZXlDcmVkZW50aWFsID0gZXhwb3J0cy5BenVyZUtleUNyZWRlbnRpYWwgPSB2b2lkIDA7XG52YXIgYXp1cmVLZXlDcmVkZW50aWFsX2pzXzEgPSByZXF1aXJlKFwiLi9henVyZUtleUNyZWRlbnRpYWwuanNcIik7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJBenVyZUtleUNyZWRlbnRpYWxcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIGF6dXJlS2V5Q3JlZGVudGlhbF9qc18xLkF6dXJlS2V5Q3JlZGVudGlhbDsgfSB9KTtcbnZhciBrZXlDcmVkZW50aWFsX2pzXzEgPSByZXF1aXJlKFwiLi9rZXlDcmVkZW50aWFsLmpzXCIpO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiaXNLZXlDcmVkZW50aWFsXCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBrZXlDcmVkZW50aWFsX2pzXzEuaXNLZXlDcmVkZW50aWFsOyB9IH0pO1xudmFyIGF6dXJlTmFtZWRLZXlDcmVkZW50aWFsX2pzXzEgPSByZXF1aXJlKFwiLi9henVyZU5hbWVkS2V5Q3JlZGVudGlhbC5qc1wiKTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIkF6dXJlTmFtZWRLZXlDcmVkZW50aWFsXCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBhenVyZU5hbWVkS2V5Q3JlZGVudGlhbF9qc18xLkF6dXJlTmFtZWRLZXlDcmVkZW50aWFsOyB9IH0pO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiaXNOYW1lZEtleUNyZWRlbnRpYWxcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIGF6dXJlTmFtZWRLZXlDcmVkZW50aWFsX2pzXzEuaXNOYW1lZEtleUNyZWRlbnRpYWw7IH0gfSk7XG52YXIgYXp1cmVTQVNDcmVkZW50aWFsX2pzXzEgPSByZXF1aXJlKFwiLi9henVyZVNBU0NyZWRlbnRpYWwuanNcIik7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJBenVyZVNBU0NyZWRlbnRpYWxcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIGF6dXJlU0FTQ3JlZGVudGlhbF9qc18xLkF6dXJlU0FTQ3JlZGVudGlhbDsgfSB9KTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcImlzU0FTQ3JlZGVudGlhbFwiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gYXp1cmVTQVNDcmVkZW50aWFsX2pzXzEuaXNTQVNDcmVkZW50aWFsOyB9IH0pO1xudmFyIHRva2VuQ3JlZGVudGlhbF9qc18xID0gcmVxdWlyZShcIi4vdG9rZW5DcmVkZW50aWFsLmpzXCIpO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiaXNUb2tlbkNyZWRlbnRpYWxcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIHRva2VuQ3JlZGVudGlhbF9qc18xLmlzVG9rZW5DcmVkZW50aWFsOyB9IH0pO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW5kZXguanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/core-auth/dist/commonjs/index.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/core-auth/dist/commonjs/keyCredential.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@azure/core-auth/dist/commonjs/keyCredential.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.isKeyCredential = void 0;\nconst core_util_1 = __webpack_require__(/*! @azure/core-util */ \"(rsc)/./node_modules/@azure/core-util/dist/commonjs/index.js\");\n/**\n * Tests an object to determine whether it implements KeyCredential.\n *\n * @param credential - The assumed KeyCredential to be tested.\n */\nfunction isKeyCredential(credential) {\n    return (0, core_util_1.isObjectWithProperties)(credential, [\"key\"]) && typeof credential.key === \"string\";\n}\nexports.isKeyCredential = isKeyCredential;\n//# sourceMappingURL=keyCredential.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2NvcmUtYXV0aC9kaXN0L2NvbW1vbmpzL2tleUNyZWRlbnRpYWwuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBO0FBQ0EsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELHVCQUF1QjtBQUN2QixvQkFBb0IsbUJBQU8sQ0FBQyxzRkFBa0I7QUFDOUM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHVCQUF1QjtBQUN2QiIsInNvdXJjZXMiOlsid2VicGFjazovL2RhbmllbDMtdnAyLy4vbm9kZV9tb2R1bGVzL0BhenVyZS9jb3JlLWF1dGgvZGlzdC9jb21tb25qcy9rZXlDcmVkZW50aWFsLmpzP2ZiMjYiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG4vLyBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi5cbi8vIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZS5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuaXNLZXlDcmVkZW50aWFsID0gdm9pZCAwO1xuY29uc3QgY29yZV91dGlsXzEgPSByZXF1aXJlKFwiQGF6dXJlL2NvcmUtdXRpbFwiKTtcbi8qKlxuICogVGVzdHMgYW4gb2JqZWN0IHRvIGRldGVybWluZSB3aGV0aGVyIGl0IGltcGxlbWVudHMgS2V5Q3JlZGVudGlhbC5cbiAqXG4gKiBAcGFyYW0gY3JlZGVudGlhbCAtIFRoZSBhc3N1bWVkIEtleUNyZWRlbnRpYWwgdG8gYmUgdGVzdGVkLlxuICovXG5mdW5jdGlvbiBpc0tleUNyZWRlbnRpYWwoY3JlZGVudGlhbCkge1xuICAgIHJldHVybiAoMCwgY29yZV91dGlsXzEuaXNPYmplY3RXaXRoUHJvcGVydGllcykoY3JlZGVudGlhbCwgW1wia2V5XCJdKSAmJiB0eXBlb2YgY3JlZGVudGlhbC5rZXkgPT09IFwic3RyaW5nXCI7XG59XG5leHBvcnRzLmlzS2V5Q3JlZGVudGlhbCA9IGlzS2V5Q3JlZGVudGlhbDtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWtleUNyZWRlbnRpYWwuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/core-auth/dist/commonjs/keyCredential.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/core-auth/dist/commonjs/tokenCredential.js":
/*!************************************************************************!*\
  !*** ./node_modules/@azure/core-auth/dist/commonjs/tokenCredential.js ***!
  \************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.isTokenCredential = void 0;\n/**\n * Tests an object to determine whether it implements TokenCredential.\n *\n * @param credential - The assumed TokenCredential to be tested.\n */\nfunction isTokenCredential(credential) {\n    // Check for an object with a 'getToken' function and possibly with\n    // a 'signRequest' function.  We do this check to make sure that\n    // a ServiceClientCredentials implementor (like TokenClientCredentials\n    // in ms-rest-nodeauth) doesn't get mistaken for a TokenCredential if\n    // it doesn't actually implement TokenCredential also.\n    const castCredential = credential;\n    return (castCredential &&\n        typeof castCredential.getToken === \"function\" &&\n        (castCredential.signRequest === undefined || castCredential.getToken.length > 0));\n}\nexports.isTokenCredential = isTokenCredential;\n//# sourceMappingURL=tokenCredential.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2NvcmUtYXV0aC9kaXN0L2NvbW1vbmpzL3Rva2VuQ3JlZGVudGlhbC5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0E7QUFDQSw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QseUJBQXlCO0FBQ3pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EseUJBQXlCO0FBQ3pCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZGFuaWVsMy12cDIvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2NvcmUtYXV0aC9kaXN0L2NvbW1vbmpzL3Rva2VuQ3JlZGVudGlhbC5qcz9jNWVhIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuLy8gQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uXG4vLyBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLmlzVG9rZW5DcmVkZW50aWFsID0gdm9pZCAwO1xuLyoqXG4gKiBUZXN0cyBhbiBvYmplY3QgdG8gZGV0ZXJtaW5lIHdoZXRoZXIgaXQgaW1wbGVtZW50cyBUb2tlbkNyZWRlbnRpYWwuXG4gKlxuICogQHBhcmFtIGNyZWRlbnRpYWwgLSBUaGUgYXNzdW1lZCBUb2tlbkNyZWRlbnRpYWwgdG8gYmUgdGVzdGVkLlxuICovXG5mdW5jdGlvbiBpc1Rva2VuQ3JlZGVudGlhbChjcmVkZW50aWFsKSB7XG4gICAgLy8gQ2hlY2sgZm9yIGFuIG9iamVjdCB3aXRoIGEgJ2dldFRva2VuJyBmdW5jdGlvbiBhbmQgcG9zc2libHkgd2l0aFxuICAgIC8vIGEgJ3NpZ25SZXF1ZXN0JyBmdW5jdGlvbi4gIFdlIGRvIHRoaXMgY2hlY2sgdG8gbWFrZSBzdXJlIHRoYXRcbiAgICAvLyBhIFNlcnZpY2VDbGllbnRDcmVkZW50aWFscyBpbXBsZW1lbnRvciAobGlrZSBUb2tlbkNsaWVudENyZWRlbnRpYWxzXG4gICAgLy8gaW4gbXMtcmVzdC1ub2RlYXV0aCkgZG9lc24ndCBnZXQgbWlzdGFrZW4gZm9yIGEgVG9rZW5DcmVkZW50aWFsIGlmXG4gICAgLy8gaXQgZG9lc24ndCBhY3R1YWxseSBpbXBsZW1lbnQgVG9rZW5DcmVkZW50aWFsIGFsc28uXG4gICAgY29uc3QgY2FzdENyZWRlbnRpYWwgPSBjcmVkZW50aWFsO1xuICAgIHJldHVybiAoY2FzdENyZWRlbnRpYWwgJiZcbiAgICAgICAgdHlwZW9mIGNhc3RDcmVkZW50aWFsLmdldFRva2VuID09PSBcImZ1bmN0aW9uXCIgJiZcbiAgICAgICAgKGNhc3RDcmVkZW50aWFsLnNpZ25SZXF1ZXN0ID09PSB1bmRlZmluZWQgfHwgY2FzdENyZWRlbnRpYWwuZ2V0VG9rZW4ubGVuZ3RoID4gMCkpO1xufVxuZXhwb3J0cy5pc1Rva2VuQ3JlZGVudGlhbCA9IGlzVG9rZW5DcmVkZW50aWFsO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9dG9rZW5DcmVkZW50aWFsLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/core-auth/dist/commonjs/tokenCredential.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/core-client/dist/commonjs/state.js":
/*!****************************************************************!*\
  !*** ./node_modules/@azure/core-client/dist/commonjs/state.js ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.state = void 0;\n/**\n * Holds the singleton operationRequestMap, to be shared across CJS and ESM imports.\n */\nexports.state = {\n    operationRequestMap: new WeakMap(),\n};\n//# sourceMappingURL=state-cjs.cjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2NvcmUtY2xpZW50L2Rpc3QvY29tbW9uanMvc3RhdGUuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBO0FBQ0EsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZGFuaWVsMy12cDIvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2NvcmUtY2xpZW50L2Rpc3QvY29tbW9uanMvc3RhdGUuanM/NTNkYSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbi8vIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLlxuLy8gTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlLlxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5zdGF0ZSA9IHZvaWQgMDtcbi8qKlxuICogSG9sZHMgdGhlIHNpbmdsZXRvbiBvcGVyYXRpb25SZXF1ZXN0TWFwLCB0byBiZSBzaGFyZWQgYWNyb3NzIENKUyBhbmQgRVNNIGltcG9ydHMuXG4gKi9cbmV4cG9ydHMuc3RhdGUgPSB7XG4gICAgb3BlcmF0aW9uUmVxdWVzdE1hcDogbmV3IFdlYWtNYXAoKSxcbn07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1zdGF0ZS1janMuY2pzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/core-client/dist/commonjs/state.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/core-tracing/dist/commonjs/state.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@azure/core-tracing/dist/commonjs/state.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.state = void 0;\n/**\n * @internal\n *\n * Holds the singleton instrumenter, to be shared across CJS and ESM imports.\n */\nexports.state = {\n    instrumenterImplementation: undefined,\n};\n//# sourceMappingURL=state-cjs.cjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2NvcmUtdHJhY2luZy9kaXN0L2NvbW1vbmpzL3N0YXRlLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQTtBQUNBLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9kYW5pZWwzLXZwMi8uL25vZGVfbW9kdWxlcy9AYXp1cmUvY29yZS10cmFjaW5nL2Rpc3QvY29tbW9uanMvc3RhdGUuanM/OTBmOCJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbi8vIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLlxuLy8gTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlLlxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5zdGF0ZSA9IHZvaWQgMDtcbi8qKlxuICogQGludGVybmFsXG4gKlxuICogSG9sZHMgdGhlIHNpbmdsZXRvbiBpbnN0cnVtZW50ZXIsIHRvIGJlIHNoYXJlZCBhY3Jvc3MgQ0pTIGFuZCBFU00gaW1wb3J0cy5cbiAqL1xuZXhwb3J0cy5zdGF0ZSA9IHtcbiAgICBpbnN0cnVtZW50ZXJJbXBsZW1lbnRhdGlvbjogdW5kZWZpbmVkLFxufTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXN0YXRlLWNqcy5janMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/core-tracing/dist/commonjs/state.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/core-util/dist/commonjs/aborterUtils.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@azure/core-util/dist/commonjs/aborterUtils.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.cancelablePromiseRace = cancelablePromiseRace;\n/**\n * promise.race() wrapper that aborts rest of promises as soon as the first promise settles.\n */\nasync function cancelablePromiseRace(abortablePromiseBuilders, options) {\n    var _a, _b;\n    const aborter = new AbortController();\n    function abortHandler() {\n        aborter.abort();\n    }\n    (_a = options === null || options === void 0 ? void 0 : options.abortSignal) === null || _a === void 0 ? void 0 : _a.addEventListener(\"abort\", abortHandler);\n    try {\n        return await Promise.race(abortablePromiseBuilders.map((p) => p({ abortSignal: aborter.signal })));\n    }\n    finally {\n        aborter.abort();\n        (_b = options === null || options === void 0 ? void 0 : options.abortSignal) === null || _b === void 0 ? void 0 : _b.removeEventListener(\"abort\", abortHandler);\n    }\n}\n//# sourceMappingURL=aborterUtils.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2NvcmUtdXRpbC9kaXN0L2NvbW1vbmpzL2Fib3J0ZXJVdGlscy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0E7QUFDQSw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsNkJBQTZCO0FBQzdCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwwRUFBMEUsNkJBQTZCO0FBQ3ZHO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZGFuaWVsMy12cDIvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2NvcmUtdXRpbC9kaXN0L2NvbW1vbmpzL2Fib3J0ZXJVdGlscy5qcz8wY2MxIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuLy8gQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uXG4vLyBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLmNhbmNlbGFibGVQcm9taXNlUmFjZSA9IGNhbmNlbGFibGVQcm9taXNlUmFjZTtcbi8qKlxuICogcHJvbWlzZS5yYWNlKCkgd3JhcHBlciB0aGF0IGFib3J0cyByZXN0IG9mIHByb21pc2VzIGFzIHNvb24gYXMgdGhlIGZpcnN0IHByb21pc2Ugc2V0dGxlcy5cbiAqL1xuYXN5bmMgZnVuY3Rpb24gY2FuY2VsYWJsZVByb21pc2VSYWNlKGFib3J0YWJsZVByb21pc2VCdWlsZGVycywgb3B0aW9ucykge1xuICAgIHZhciBfYSwgX2I7XG4gICAgY29uc3QgYWJvcnRlciA9IG5ldyBBYm9ydENvbnRyb2xsZXIoKTtcbiAgICBmdW5jdGlvbiBhYm9ydEhhbmRsZXIoKSB7XG4gICAgICAgIGFib3J0ZXIuYWJvcnQoKTtcbiAgICB9XG4gICAgKF9hID0gb3B0aW9ucyA9PT0gbnVsbCB8fCBvcHRpb25zID09PSB2b2lkIDAgPyB2b2lkIDAgOiBvcHRpb25zLmFib3J0U2lnbmFsKSA9PT0gbnVsbCB8fCBfYSA9PT0gdm9pZCAwID8gdm9pZCAwIDogX2EuYWRkRXZlbnRMaXN0ZW5lcihcImFib3J0XCIsIGFib3J0SGFuZGxlcik7XG4gICAgdHJ5IHtcbiAgICAgICAgcmV0dXJuIGF3YWl0IFByb21pc2UucmFjZShhYm9ydGFibGVQcm9taXNlQnVpbGRlcnMubWFwKChwKSA9PiBwKHsgYWJvcnRTaWduYWw6IGFib3J0ZXIuc2lnbmFsIH0pKSk7XG4gICAgfVxuICAgIGZpbmFsbHkge1xuICAgICAgICBhYm9ydGVyLmFib3J0KCk7XG4gICAgICAgIChfYiA9IG9wdGlvbnMgPT09IG51bGwgfHwgb3B0aW9ucyA9PT0gdm9pZCAwID8gdm9pZCAwIDogb3B0aW9ucy5hYm9ydFNpZ25hbCkgPT09IG51bGwgfHwgX2IgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9iLnJlbW92ZUV2ZW50TGlzdGVuZXIoXCJhYm9ydFwiLCBhYm9ydEhhbmRsZXIpO1xuICAgIH1cbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWFib3J0ZXJVdGlscy5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/core-util/dist/commonjs/aborterUtils.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/core-util/dist/commonjs/bytesEncoding.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@azure/core-util/dist/commonjs/bytesEncoding.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.uint8ArrayToString = uint8ArrayToString;\nexports.stringToUint8Array = stringToUint8Array;\n/**\n * The helper that transforms bytes with specific character encoding into string\n * @param bytes - the uint8array bytes\n * @param format - the format we use to encode the byte\n * @returns a string of the encoded string\n */\nfunction uint8ArrayToString(bytes, format) {\n    return Buffer.from(bytes).toString(format);\n}\n/**\n * The helper that transforms string to specific character encoded bytes array.\n * @param value - the string to be converted\n * @param format - the format we use to decode the value\n * @returns a uint8array\n */\nfunction stringToUint8Array(value, format) {\n    return Buffer.from(value, format);\n}\n//# sourceMappingURL=bytesEncoding.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2NvcmUtdXRpbC9kaXN0L2NvbW1vbmpzL2J5dGVzRW5jb2RpbmcuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBO0FBQ0EsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELDBCQUEwQjtBQUMxQiwwQkFBMEI7QUFDMUI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9kYW5pZWwzLXZwMi8uL25vZGVfbW9kdWxlcy9AYXp1cmUvY29yZS11dGlsL2Rpc3QvY29tbW9uanMvYnl0ZXNFbmNvZGluZy5qcz81MDIxIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuLy8gQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uXG4vLyBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLnVpbnQ4QXJyYXlUb1N0cmluZyA9IHVpbnQ4QXJyYXlUb1N0cmluZztcbmV4cG9ydHMuc3RyaW5nVG9VaW50OEFycmF5ID0gc3RyaW5nVG9VaW50OEFycmF5O1xuLyoqXG4gKiBUaGUgaGVscGVyIHRoYXQgdHJhbnNmb3JtcyBieXRlcyB3aXRoIHNwZWNpZmljIGNoYXJhY3RlciBlbmNvZGluZyBpbnRvIHN0cmluZ1xuICogQHBhcmFtIGJ5dGVzIC0gdGhlIHVpbnQ4YXJyYXkgYnl0ZXNcbiAqIEBwYXJhbSBmb3JtYXQgLSB0aGUgZm9ybWF0IHdlIHVzZSB0byBlbmNvZGUgdGhlIGJ5dGVcbiAqIEByZXR1cm5zIGEgc3RyaW5nIG9mIHRoZSBlbmNvZGVkIHN0cmluZ1xuICovXG5mdW5jdGlvbiB1aW50OEFycmF5VG9TdHJpbmcoYnl0ZXMsIGZvcm1hdCkge1xuICAgIHJldHVybiBCdWZmZXIuZnJvbShieXRlcykudG9TdHJpbmcoZm9ybWF0KTtcbn1cbi8qKlxuICogVGhlIGhlbHBlciB0aGF0IHRyYW5zZm9ybXMgc3RyaW5nIHRvIHNwZWNpZmljIGNoYXJhY3RlciBlbmNvZGVkIGJ5dGVzIGFycmF5LlxuICogQHBhcmFtIHZhbHVlIC0gdGhlIHN0cmluZyB0byBiZSBjb252ZXJ0ZWRcbiAqIEBwYXJhbSBmb3JtYXQgLSB0aGUgZm9ybWF0IHdlIHVzZSB0byBkZWNvZGUgdGhlIHZhbHVlXG4gKiBAcmV0dXJucyBhIHVpbnQ4YXJyYXlcbiAqL1xuZnVuY3Rpb24gc3RyaW5nVG9VaW50OEFycmF5KHZhbHVlLCBmb3JtYXQpIHtcbiAgICByZXR1cm4gQnVmZmVyLmZyb20odmFsdWUsIGZvcm1hdCk7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1ieXRlc0VuY29kaW5nLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/core-util/dist/commonjs/bytesEncoding.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/core-util/dist/commonjs/checkEnvironment.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@azure/core-util/dist/commonjs/checkEnvironment.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\nvar _a, _b, _c, _d;\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.isReactNative = exports.isNodeRuntime = exports.isNode = exports.isNodeLike = exports.isBun = exports.isDeno = exports.isWebWorker = exports.isBrowser = void 0;\n/**\n * A constant that indicates whether the environment the code is running is a Web Browser.\n */\n// eslint-disable-next-line @azure/azure-sdk/ts-no-window\nexports.isBrowser = typeof window !== \"undefined\" && typeof window.document !== \"undefined\";\n/**\n * A constant that indicates whether the environment the code is running is a Web Worker.\n */\nexports.isWebWorker = typeof self === \"object\" &&\n    typeof (self === null || self === void 0 ? void 0 : self.importScripts) === \"function\" &&\n    (((_a = self.constructor) === null || _a === void 0 ? void 0 : _a.name) === \"DedicatedWorkerGlobalScope\" ||\n        ((_b = self.constructor) === null || _b === void 0 ? void 0 : _b.name) === \"ServiceWorkerGlobalScope\" ||\n        ((_c = self.constructor) === null || _c === void 0 ? void 0 : _c.name) === \"SharedWorkerGlobalScope\");\n/**\n * A constant that indicates whether the environment the code is running is Deno.\n */\nexports.isDeno = typeof Deno !== \"undefined\" &&\n    typeof Deno.version !== \"undefined\" &&\n    typeof Deno.version.deno !== \"undefined\";\n/**\n * A constant that indicates whether the environment the code is running is Bun.sh.\n */\nexports.isBun = typeof Bun !== \"undefined\" && typeof Bun.version !== \"undefined\";\n/**\n * A constant that indicates whether the environment the code is running is a Node.js compatible environment.\n */\nexports.isNodeLike = typeof globalThis.process !== \"undefined\" &&\n    Boolean(globalThis.process.version) &&\n    Boolean((_d = globalThis.process.versions) === null || _d === void 0 ? void 0 : _d.node);\n/**\n * A constant that indicates whether the environment the code is running is a Node.js compatible environment.\n * @deprecated Use `isNodeLike` instead.\n */\nexports.isNode = exports.isNodeLike;\n/**\n * A constant that indicates whether the environment the code is running is Node.JS.\n */\nexports.isNodeRuntime = exports.isNodeLike && !exports.isBun && !exports.isDeno;\n/**\n * A constant that indicates whether the environment the code is running is in React-Native.\n */\n// https://github.com/facebook/react-native/blob/main/packages/react-native/Libraries/Core/setUpNavigator.js\nexports.isReactNative = typeof navigator !== \"undefined\" && (navigator === null || navigator === void 0 ? void 0 : navigator.product) === \"ReactNative\";\n//# sourceMappingURL=checkEnvironment.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2NvcmUtdXRpbC9kaXN0L2NvbW1vbmpzL2NoZWNrRW52aXJvbm1lbnQuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQSw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QscUJBQXFCLEdBQUcscUJBQXFCLEdBQUcsY0FBYyxHQUFHLGtCQUFrQixHQUFHLGFBQWEsR0FBRyxjQUFjLEdBQUcsbUJBQW1CLEdBQUcsaUJBQWlCO0FBQzlKO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCO0FBQ2pCO0FBQ0E7QUFDQTtBQUNBLG1CQUFtQjtBQUNuQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGNBQWM7QUFDZDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBLGtCQUFrQjtBQUNsQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxjQUFjO0FBQ2Q7QUFDQTtBQUNBO0FBQ0EscUJBQXFCO0FBQ3JCO0FBQ0E7QUFDQTtBQUNBO0FBQ0EscUJBQXFCO0FBQ3JCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZGFuaWVsMy12cDIvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2NvcmUtdXRpbC9kaXN0L2NvbW1vbmpzL2NoZWNrRW52aXJvbm1lbnQuanM/NWQ4ZiJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbi8vIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLlxuLy8gTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlLlxudmFyIF9hLCBfYiwgX2MsIF9kO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5pc1JlYWN0TmF0aXZlID0gZXhwb3J0cy5pc05vZGVSdW50aW1lID0gZXhwb3J0cy5pc05vZGUgPSBleHBvcnRzLmlzTm9kZUxpa2UgPSBleHBvcnRzLmlzQnVuID0gZXhwb3J0cy5pc0Rlbm8gPSBleHBvcnRzLmlzV2ViV29ya2VyID0gZXhwb3J0cy5pc0Jyb3dzZXIgPSB2b2lkIDA7XG4vKipcbiAqIEEgY29uc3RhbnQgdGhhdCBpbmRpY2F0ZXMgd2hldGhlciB0aGUgZW52aXJvbm1lbnQgdGhlIGNvZGUgaXMgcnVubmluZyBpcyBhIFdlYiBCcm93c2VyLlxuICovXG4vLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgQGF6dXJlL2F6dXJlLXNkay90cy1uby13aW5kb3dcbmV4cG9ydHMuaXNCcm93c2VyID0gdHlwZW9mIHdpbmRvdyAhPT0gXCJ1bmRlZmluZWRcIiAmJiB0eXBlb2Ygd2luZG93LmRvY3VtZW50ICE9PSBcInVuZGVmaW5lZFwiO1xuLyoqXG4gKiBBIGNvbnN0YW50IHRoYXQgaW5kaWNhdGVzIHdoZXRoZXIgdGhlIGVudmlyb25tZW50IHRoZSBjb2RlIGlzIHJ1bm5pbmcgaXMgYSBXZWIgV29ya2VyLlxuICovXG5leHBvcnRzLmlzV2ViV29ya2VyID0gdHlwZW9mIHNlbGYgPT09IFwib2JqZWN0XCIgJiZcbiAgICB0eXBlb2YgKHNlbGYgPT09IG51bGwgfHwgc2VsZiA9PT0gdm9pZCAwID8gdm9pZCAwIDogc2VsZi5pbXBvcnRTY3JpcHRzKSA9PT0gXCJmdW5jdGlvblwiICYmXG4gICAgKCgoX2EgPSBzZWxmLmNvbnN0cnVjdG9yKSA9PT0gbnVsbCB8fCBfYSA9PT0gdm9pZCAwID8gdm9pZCAwIDogX2EubmFtZSkgPT09IFwiRGVkaWNhdGVkV29ya2VyR2xvYmFsU2NvcGVcIiB8fFxuICAgICAgICAoKF9iID0gc2VsZi5jb25zdHJ1Y3RvcikgPT09IG51bGwgfHwgX2IgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9iLm5hbWUpID09PSBcIlNlcnZpY2VXb3JrZXJHbG9iYWxTY29wZVwiIHx8XG4gICAgICAgICgoX2MgPSBzZWxmLmNvbnN0cnVjdG9yKSA9PT0gbnVsbCB8fCBfYyA9PT0gdm9pZCAwID8gdm9pZCAwIDogX2MubmFtZSkgPT09IFwiU2hhcmVkV29ya2VyR2xvYmFsU2NvcGVcIik7XG4vKipcbiAqIEEgY29uc3RhbnQgdGhhdCBpbmRpY2F0ZXMgd2hldGhlciB0aGUgZW52aXJvbm1lbnQgdGhlIGNvZGUgaXMgcnVubmluZyBpcyBEZW5vLlxuICovXG5leHBvcnRzLmlzRGVubyA9IHR5cGVvZiBEZW5vICE9PSBcInVuZGVmaW5lZFwiICYmXG4gICAgdHlwZW9mIERlbm8udmVyc2lvbiAhPT0gXCJ1bmRlZmluZWRcIiAmJlxuICAgIHR5cGVvZiBEZW5vLnZlcnNpb24uZGVubyAhPT0gXCJ1bmRlZmluZWRcIjtcbi8qKlxuICogQSBjb25zdGFudCB0aGF0IGluZGljYXRlcyB3aGV0aGVyIHRoZSBlbnZpcm9ubWVudCB0aGUgY29kZSBpcyBydW5uaW5nIGlzIEJ1bi5zaC5cbiAqL1xuZXhwb3J0cy5pc0J1biA9IHR5cGVvZiBCdW4gIT09IFwidW5kZWZpbmVkXCIgJiYgdHlwZW9mIEJ1bi52ZXJzaW9uICE9PSBcInVuZGVmaW5lZFwiO1xuLyoqXG4gKiBBIGNvbnN0YW50IHRoYXQgaW5kaWNhdGVzIHdoZXRoZXIgdGhlIGVudmlyb25tZW50IHRoZSBjb2RlIGlzIHJ1bm5pbmcgaXMgYSBOb2RlLmpzIGNvbXBhdGlibGUgZW52aXJvbm1lbnQuXG4gKi9cbmV4cG9ydHMuaXNOb2RlTGlrZSA9IHR5cGVvZiBnbG9iYWxUaGlzLnByb2Nlc3MgIT09IFwidW5kZWZpbmVkXCIgJiZcbiAgICBCb29sZWFuKGdsb2JhbFRoaXMucHJvY2Vzcy52ZXJzaW9uKSAmJlxuICAgIEJvb2xlYW4oKF9kID0gZ2xvYmFsVGhpcy5wcm9jZXNzLnZlcnNpb25zKSA9PT0gbnVsbCB8fCBfZCA9PT0gdm9pZCAwID8gdm9pZCAwIDogX2Qubm9kZSk7XG4vKipcbiAqIEEgY29uc3RhbnQgdGhhdCBpbmRpY2F0ZXMgd2hldGhlciB0aGUgZW52aXJvbm1lbnQgdGhlIGNvZGUgaXMgcnVubmluZyBpcyBhIE5vZGUuanMgY29tcGF0aWJsZSBlbnZpcm9ubWVudC5cbiAqIEBkZXByZWNhdGVkIFVzZSBgaXNOb2RlTGlrZWAgaW5zdGVhZC5cbiAqL1xuZXhwb3J0cy5pc05vZGUgPSBleHBvcnRzLmlzTm9kZUxpa2U7XG4vKipcbiAqIEEgY29uc3RhbnQgdGhhdCBpbmRpY2F0ZXMgd2hldGhlciB0aGUgZW52aXJvbm1lbnQgdGhlIGNvZGUgaXMgcnVubmluZyBpcyBOb2RlLkpTLlxuICovXG5leHBvcnRzLmlzTm9kZVJ1bnRpbWUgPSBleHBvcnRzLmlzTm9kZUxpa2UgJiYgIWV4cG9ydHMuaXNCdW4gJiYgIWV4cG9ydHMuaXNEZW5vO1xuLyoqXG4gKiBBIGNvbnN0YW50IHRoYXQgaW5kaWNhdGVzIHdoZXRoZXIgdGhlIGVudmlyb25tZW50IHRoZSBjb2RlIGlzIHJ1bm5pbmcgaXMgaW4gUmVhY3QtTmF0aXZlLlxuICovXG4vLyBodHRwczovL2dpdGh1Yi5jb20vZmFjZWJvb2svcmVhY3QtbmF0aXZlL2Jsb2IvbWFpbi9wYWNrYWdlcy9yZWFjdC1uYXRpdmUvTGlicmFyaWVzL0NvcmUvc2V0VXBOYXZpZ2F0b3IuanNcbmV4cG9ydHMuaXNSZWFjdE5hdGl2ZSA9IHR5cGVvZiBuYXZpZ2F0b3IgIT09IFwidW5kZWZpbmVkXCIgJiYgKG5hdmlnYXRvciA9PT0gbnVsbCB8fCBuYXZpZ2F0b3IgPT09IHZvaWQgMCA/IHZvaWQgMCA6IG5hdmlnYXRvci5wcm9kdWN0KSA9PT0gXCJSZWFjdE5hdGl2ZVwiO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Y2hlY2tFbnZpcm9ubWVudC5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/core-util/dist/commonjs/checkEnvironment.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/core-util/dist/commonjs/createAbortablePromise.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/@azure/core-util/dist/commonjs/createAbortablePromise.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.createAbortablePromise = createAbortablePromise;\nconst abort_controller_1 = __webpack_require__(/*! @azure/abort-controller */ \"(rsc)/./node_modules/@azure/abort-controller/dist/commonjs/index.js\");\n/**\n * Creates an abortable promise.\n * @param buildPromise - A function that takes the resolve and reject functions as parameters.\n * @param options - The options for the abortable promise.\n * @returns A promise that can be aborted.\n */\nfunction createAbortablePromise(buildPromise, options) {\n    const { cleanupBeforeAbort, abortSignal, abortErrorMsg } = options !== null && options !== void 0 ? options : {};\n    return new Promise((resolve, reject) => {\n        function rejectOnAbort() {\n            reject(new abort_controller_1.AbortError(abortErrorMsg !== null && abortErrorMsg !== void 0 ? abortErrorMsg : \"The operation was aborted.\"));\n        }\n        function removeListeners() {\n            abortSignal === null || abortSignal === void 0 ? void 0 : abortSignal.removeEventListener(\"abort\", onAbort);\n        }\n        function onAbort() {\n            cleanupBeforeAbort === null || cleanupBeforeAbort === void 0 ? void 0 : cleanupBeforeAbort();\n            removeListeners();\n            rejectOnAbort();\n        }\n        if (abortSignal === null || abortSignal === void 0 ? void 0 : abortSignal.aborted) {\n            return rejectOnAbort();\n        }\n        try {\n            buildPromise((x) => {\n                removeListeners();\n                resolve(x);\n            }, (x) => {\n                removeListeners();\n                reject(x);\n            });\n        }\n        catch (err) {\n            reject(err);\n        }\n        abortSignal === null || abortSignal === void 0 ? void 0 : abortSignal.addEventListener(\"abort\", onAbort);\n    });\n}\n//# sourceMappingURL=createAbortablePromise.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2NvcmUtdXRpbC9kaXN0L2NvbW1vbmpzL2NyZWF0ZUFib3J0YWJsZVByb21pc2UuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBO0FBQ0EsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELDhCQUE4QjtBQUM5QiwyQkFBMkIsbUJBQU8sQ0FBQyxvR0FBeUI7QUFDNUQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxZQUFZLGlEQUFpRDtBQUM3RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2RhbmllbDMtdnAyLy4vbm9kZV9tb2R1bGVzL0BhenVyZS9jb3JlLXV0aWwvZGlzdC9jb21tb25qcy9jcmVhdGVBYm9ydGFibGVQcm9taXNlLmpzPzVmMTQiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG4vLyBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi5cbi8vIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZS5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuY3JlYXRlQWJvcnRhYmxlUHJvbWlzZSA9IGNyZWF0ZUFib3J0YWJsZVByb21pc2U7XG5jb25zdCBhYm9ydF9jb250cm9sbGVyXzEgPSByZXF1aXJlKFwiQGF6dXJlL2Fib3J0LWNvbnRyb2xsZXJcIik7XG4vKipcbiAqIENyZWF0ZXMgYW4gYWJvcnRhYmxlIHByb21pc2UuXG4gKiBAcGFyYW0gYnVpbGRQcm9taXNlIC0gQSBmdW5jdGlvbiB0aGF0IHRha2VzIHRoZSByZXNvbHZlIGFuZCByZWplY3QgZnVuY3Rpb25zIGFzIHBhcmFtZXRlcnMuXG4gKiBAcGFyYW0gb3B0aW9ucyAtIFRoZSBvcHRpb25zIGZvciB0aGUgYWJvcnRhYmxlIHByb21pc2UuXG4gKiBAcmV0dXJucyBBIHByb21pc2UgdGhhdCBjYW4gYmUgYWJvcnRlZC5cbiAqL1xuZnVuY3Rpb24gY3JlYXRlQWJvcnRhYmxlUHJvbWlzZShidWlsZFByb21pc2UsIG9wdGlvbnMpIHtcbiAgICBjb25zdCB7IGNsZWFudXBCZWZvcmVBYm9ydCwgYWJvcnRTaWduYWwsIGFib3J0RXJyb3JNc2cgfSA9IG9wdGlvbnMgIT09IG51bGwgJiYgb3B0aW9ucyAhPT0gdm9pZCAwID8gb3B0aW9ucyA6IHt9O1xuICAgIHJldHVybiBuZXcgUHJvbWlzZSgocmVzb2x2ZSwgcmVqZWN0KSA9PiB7XG4gICAgICAgIGZ1bmN0aW9uIHJlamVjdE9uQWJvcnQoKSB7XG4gICAgICAgICAgICByZWplY3QobmV3IGFib3J0X2NvbnRyb2xsZXJfMS5BYm9ydEVycm9yKGFib3J0RXJyb3JNc2cgIT09IG51bGwgJiYgYWJvcnRFcnJvck1zZyAhPT0gdm9pZCAwID8gYWJvcnRFcnJvck1zZyA6IFwiVGhlIG9wZXJhdGlvbiB3YXMgYWJvcnRlZC5cIikpO1xuICAgICAgICB9XG4gICAgICAgIGZ1bmN0aW9uIHJlbW92ZUxpc3RlbmVycygpIHtcbiAgICAgICAgICAgIGFib3J0U2lnbmFsID09PSBudWxsIHx8IGFib3J0U2lnbmFsID09PSB2b2lkIDAgPyB2b2lkIDAgOiBhYm9ydFNpZ25hbC5yZW1vdmVFdmVudExpc3RlbmVyKFwiYWJvcnRcIiwgb25BYm9ydCk7XG4gICAgICAgIH1cbiAgICAgICAgZnVuY3Rpb24gb25BYm9ydCgpIHtcbiAgICAgICAgICAgIGNsZWFudXBCZWZvcmVBYm9ydCA9PT0gbnVsbCB8fCBjbGVhbnVwQmVmb3JlQWJvcnQgPT09IHZvaWQgMCA/IHZvaWQgMCA6IGNsZWFudXBCZWZvcmVBYm9ydCgpO1xuICAgICAgICAgICAgcmVtb3ZlTGlzdGVuZXJzKCk7XG4gICAgICAgICAgICByZWplY3RPbkFib3J0KCk7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKGFib3J0U2lnbmFsID09PSBudWxsIHx8IGFib3J0U2lnbmFsID09PSB2b2lkIDAgPyB2b2lkIDAgOiBhYm9ydFNpZ25hbC5hYm9ydGVkKSB7XG4gICAgICAgICAgICByZXR1cm4gcmVqZWN0T25BYm9ydCgpO1xuICAgICAgICB9XG4gICAgICAgIHRyeSB7XG4gICAgICAgICAgICBidWlsZFByb21pc2UoKHgpID0+IHtcbiAgICAgICAgICAgICAgICByZW1vdmVMaXN0ZW5lcnMoKTtcbiAgICAgICAgICAgICAgICByZXNvbHZlKHgpO1xuICAgICAgICAgICAgfSwgKHgpID0+IHtcbiAgICAgICAgICAgICAgICByZW1vdmVMaXN0ZW5lcnMoKTtcbiAgICAgICAgICAgICAgICByZWplY3QoeCk7XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfVxuICAgICAgICBjYXRjaCAoZXJyKSB7XG4gICAgICAgICAgICByZWplY3QoZXJyKTtcbiAgICAgICAgfVxuICAgICAgICBhYm9ydFNpZ25hbCA9PT0gbnVsbCB8fCBhYm9ydFNpZ25hbCA9PT0gdm9pZCAwID8gdm9pZCAwIDogYWJvcnRTaWduYWwuYWRkRXZlbnRMaXN0ZW5lcihcImFib3J0XCIsIG9uQWJvcnQpO1xuICAgIH0pO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Y3JlYXRlQWJvcnRhYmxlUHJvbWlzZS5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/core-util/dist/commonjs/createAbortablePromise.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/core-util/dist/commonjs/delay.js":
/*!**************************************************************!*\
  !*** ./node_modules/@azure/core-util/dist/commonjs/delay.js ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.delay = delay;\nconst createAbortablePromise_js_1 = __webpack_require__(/*! ./createAbortablePromise.js */ \"(rsc)/./node_modules/@azure/core-util/dist/commonjs/createAbortablePromise.js\");\nconst StandardAbortMessage = \"The delay was aborted.\";\n/**\n * A wrapper for setTimeout that resolves a promise after timeInMs milliseconds.\n * @param timeInMs - The number of milliseconds to be delayed.\n * @param options - The options for delay - currently abort options\n * @returns Promise that is resolved after timeInMs\n */\nfunction delay(timeInMs, options) {\n    let token;\n    const { abortSignal, abortErrorMsg } = options !== null && options !== void 0 ? options : {};\n    return (0, createAbortablePromise_js_1.createAbortablePromise)((resolve) => {\n        token = setTimeout(resolve, timeInMs);\n    }, {\n        cleanupBeforeAbort: () => clearTimeout(token),\n        abortSignal,\n        abortErrorMsg: abortErrorMsg !== null && abortErrorMsg !== void 0 ? abortErrorMsg : StandardAbortMessage,\n    });\n}\n//# sourceMappingURL=delay.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2NvcmUtdXRpbC9kaXN0L2NvbW1vbmpzL2RlbGF5LmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQTtBQUNBLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxhQUFhO0FBQ2Isb0NBQW9DLG1CQUFPLENBQUMsa0hBQTZCO0FBQ3pFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFlBQVksNkJBQTZCO0FBQ3pDO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9kYW5pZWwzLXZwMi8uL25vZGVfbW9kdWxlcy9AYXp1cmUvY29yZS11dGlsL2Rpc3QvY29tbW9uanMvZGVsYXkuanM/ZDJhMyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbi8vIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLlxuLy8gTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlLlxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5kZWxheSA9IGRlbGF5O1xuY29uc3QgY3JlYXRlQWJvcnRhYmxlUHJvbWlzZV9qc18xID0gcmVxdWlyZShcIi4vY3JlYXRlQWJvcnRhYmxlUHJvbWlzZS5qc1wiKTtcbmNvbnN0IFN0YW5kYXJkQWJvcnRNZXNzYWdlID0gXCJUaGUgZGVsYXkgd2FzIGFib3J0ZWQuXCI7XG4vKipcbiAqIEEgd3JhcHBlciBmb3Igc2V0VGltZW91dCB0aGF0IHJlc29sdmVzIGEgcHJvbWlzZSBhZnRlciB0aW1lSW5NcyBtaWxsaXNlY29uZHMuXG4gKiBAcGFyYW0gdGltZUluTXMgLSBUaGUgbnVtYmVyIG9mIG1pbGxpc2Vjb25kcyB0byBiZSBkZWxheWVkLlxuICogQHBhcmFtIG9wdGlvbnMgLSBUaGUgb3B0aW9ucyBmb3IgZGVsYXkgLSBjdXJyZW50bHkgYWJvcnQgb3B0aW9uc1xuICogQHJldHVybnMgUHJvbWlzZSB0aGF0IGlzIHJlc29sdmVkIGFmdGVyIHRpbWVJbk1zXG4gKi9cbmZ1bmN0aW9uIGRlbGF5KHRpbWVJbk1zLCBvcHRpb25zKSB7XG4gICAgbGV0IHRva2VuO1xuICAgIGNvbnN0IHsgYWJvcnRTaWduYWwsIGFib3J0RXJyb3JNc2cgfSA9IG9wdGlvbnMgIT09IG51bGwgJiYgb3B0aW9ucyAhPT0gdm9pZCAwID8gb3B0aW9ucyA6IHt9O1xuICAgIHJldHVybiAoMCwgY3JlYXRlQWJvcnRhYmxlUHJvbWlzZV9qc18xLmNyZWF0ZUFib3J0YWJsZVByb21pc2UpKChyZXNvbHZlKSA9PiB7XG4gICAgICAgIHRva2VuID0gc2V0VGltZW91dChyZXNvbHZlLCB0aW1lSW5Ncyk7XG4gICAgfSwge1xuICAgICAgICBjbGVhbnVwQmVmb3JlQWJvcnQ6ICgpID0+IGNsZWFyVGltZW91dCh0b2tlbiksXG4gICAgICAgIGFib3J0U2lnbmFsLFxuICAgICAgICBhYm9ydEVycm9yTXNnOiBhYm9ydEVycm9yTXNnICE9PSBudWxsICYmIGFib3J0RXJyb3JNc2cgIT09IHZvaWQgMCA/IGFib3J0RXJyb3JNc2cgOiBTdGFuZGFyZEFib3J0TWVzc2FnZSxcbiAgICB9KTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWRlbGF5LmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/core-util/dist/commonjs/delay.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/core-util/dist/commonjs/error.js":
/*!**************************************************************!*\
  !*** ./node_modules/@azure/core-util/dist/commonjs/error.js ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.isError = isError;\nexports.getErrorMessage = getErrorMessage;\nconst object_js_1 = __webpack_require__(/*! ./object.js */ \"(rsc)/./node_modules/@azure/core-util/dist/commonjs/object.js\");\n/**\n * Typeguard for an error object shape (has name and message)\n * @param e - Something caught by a catch clause.\n */\nfunction isError(e) {\n    if ((0, object_js_1.isObject)(e)) {\n        const hasName = typeof e.name === \"string\";\n        const hasMessage = typeof e.message === \"string\";\n        return hasName && hasMessage;\n    }\n    return false;\n}\n/**\n * Given what is thought to be an error object, return the message if possible.\n * If the message is missing, returns a stringified version of the input.\n * @param e - Something thrown from a try block\n * @returns The error message or a string of the input\n */\nfunction getErrorMessage(e) {\n    if (isError(e)) {\n        return e.message;\n    }\n    else {\n        let stringified;\n        try {\n            if (typeof e === \"object\" && e) {\n                stringified = JSON.stringify(e);\n            }\n            else {\n                stringified = String(e);\n            }\n        }\n        catch (err) {\n            stringified = \"[unable to stringify input]\";\n        }\n        return `Unknown error ${stringified}`;\n    }\n}\n//# sourceMappingURL=error.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2NvcmUtdXRpbC9kaXN0L2NvbW1vbmpzL2Vycm9yLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQTtBQUNBLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxlQUFlO0FBQ2YsdUJBQXVCO0FBQ3ZCLG9CQUFvQixtQkFBTyxDQUFDLGtGQUFhO0FBQ3pDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnQ0FBZ0MsWUFBWTtBQUM1QztBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9kYW5pZWwzLXZwMi8uL25vZGVfbW9kdWxlcy9AYXp1cmUvY29yZS11dGlsL2Rpc3QvY29tbW9uanMvZXJyb3IuanM/NjJhZiJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbi8vIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLlxuLy8gTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlLlxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5pc0Vycm9yID0gaXNFcnJvcjtcbmV4cG9ydHMuZ2V0RXJyb3JNZXNzYWdlID0gZ2V0RXJyb3JNZXNzYWdlO1xuY29uc3Qgb2JqZWN0X2pzXzEgPSByZXF1aXJlKFwiLi9vYmplY3QuanNcIik7XG4vKipcbiAqIFR5cGVndWFyZCBmb3IgYW4gZXJyb3Igb2JqZWN0IHNoYXBlIChoYXMgbmFtZSBhbmQgbWVzc2FnZSlcbiAqIEBwYXJhbSBlIC0gU29tZXRoaW5nIGNhdWdodCBieSBhIGNhdGNoIGNsYXVzZS5cbiAqL1xuZnVuY3Rpb24gaXNFcnJvcihlKSB7XG4gICAgaWYgKCgwLCBvYmplY3RfanNfMS5pc09iamVjdCkoZSkpIHtcbiAgICAgICAgY29uc3QgaGFzTmFtZSA9IHR5cGVvZiBlLm5hbWUgPT09IFwic3RyaW5nXCI7XG4gICAgICAgIGNvbnN0IGhhc01lc3NhZ2UgPSB0eXBlb2YgZS5tZXNzYWdlID09PSBcInN0cmluZ1wiO1xuICAgICAgICByZXR1cm4gaGFzTmFtZSAmJiBoYXNNZXNzYWdlO1xuICAgIH1cbiAgICByZXR1cm4gZmFsc2U7XG59XG4vKipcbiAqIEdpdmVuIHdoYXQgaXMgdGhvdWdodCB0byBiZSBhbiBlcnJvciBvYmplY3QsIHJldHVybiB0aGUgbWVzc2FnZSBpZiBwb3NzaWJsZS5cbiAqIElmIHRoZSBtZXNzYWdlIGlzIG1pc3NpbmcsIHJldHVybnMgYSBzdHJpbmdpZmllZCB2ZXJzaW9uIG9mIHRoZSBpbnB1dC5cbiAqIEBwYXJhbSBlIC0gU29tZXRoaW5nIHRocm93biBmcm9tIGEgdHJ5IGJsb2NrXG4gKiBAcmV0dXJucyBUaGUgZXJyb3IgbWVzc2FnZSBvciBhIHN0cmluZyBvZiB0aGUgaW5wdXRcbiAqL1xuZnVuY3Rpb24gZ2V0RXJyb3JNZXNzYWdlKGUpIHtcbiAgICBpZiAoaXNFcnJvcihlKSkge1xuICAgICAgICByZXR1cm4gZS5tZXNzYWdlO1xuICAgIH1cbiAgICBlbHNlIHtcbiAgICAgICAgbGV0IHN0cmluZ2lmaWVkO1xuICAgICAgICB0cnkge1xuICAgICAgICAgICAgaWYgKHR5cGVvZiBlID09PSBcIm9iamVjdFwiICYmIGUpIHtcbiAgICAgICAgICAgICAgICBzdHJpbmdpZmllZCA9IEpTT04uc3RyaW5naWZ5KGUpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgc3RyaW5naWZpZWQgPSBTdHJpbmcoZSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgY2F0Y2ggKGVycikge1xuICAgICAgICAgICAgc3RyaW5naWZpZWQgPSBcIlt1bmFibGUgdG8gc3RyaW5naWZ5IGlucHV0XVwiO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBgVW5rbm93biBlcnJvciAke3N0cmluZ2lmaWVkfWA7XG4gICAgfVxufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZXJyb3IuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/core-util/dist/commonjs/error.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/core-util/dist/commonjs/index.js":
/*!**************************************************************!*\
  !*** ./node_modules/@azure/core-util/dist/commonjs/index.js ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.stringToUint8Array = exports.uint8ArrayToString = exports.isWebWorker = exports.isReactNative = exports.isDeno = exports.isNodeRuntime = exports.isNodeLike = exports.isNode = exports.isBun = exports.isBrowser = exports.randomUUID = exports.objectHasProperty = exports.isObjectWithProperties = exports.isDefined = exports.computeSha256Hmac = exports.computeSha256Hash = exports.getErrorMessage = exports.isError = exports.isObject = exports.getRandomIntegerInclusive = exports.createAbortablePromise = exports.cancelablePromiseRace = exports.delay = void 0;\nvar delay_js_1 = __webpack_require__(/*! ./delay.js */ \"(rsc)/./node_modules/@azure/core-util/dist/commonjs/delay.js\");\nObject.defineProperty(exports, \"delay\", ({ enumerable: true, get: function () { return delay_js_1.delay; } }));\nvar aborterUtils_js_1 = __webpack_require__(/*! ./aborterUtils.js */ \"(rsc)/./node_modules/@azure/core-util/dist/commonjs/aborterUtils.js\");\nObject.defineProperty(exports, \"cancelablePromiseRace\", ({ enumerable: true, get: function () { return aborterUtils_js_1.cancelablePromiseRace; } }));\nvar createAbortablePromise_js_1 = __webpack_require__(/*! ./createAbortablePromise.js */ \"(rsc)/./node_modules/@azure/core-util/dist/commonjs/createAbortablePromise.js\");\nObject.defineProperty(exports, \"createAbortablePromise\", ({ enumerable: true, get: function () { return createAbortablePromise_js_1.createAbortablePromise; } }));\nvar random_js_1 = __webpack_require__(/*! ./random.js */ \"(rsc)/./node_modules/@azure/core-util/dist/commonjs/random.js\");\nObject.defineProperty(exports, \"getRandomIntegerInclusive\", ({ enumerable: true, get: function () { return random_js_1.getRandomIntegerInclusive; } }));\nvar object_js_1 = __webpack_require__(/*! ./object.js */ \"(rsc)/./node_modules/@azure/core-util/dist/commonjs/object.js\");\nObject.defineProperty(exports, \"isObject\", ({ enumerable: true, get: function () { return object_js_1.isObject; } }));\nvar error_js_1 = __webpack_require__(/*! ./error.js */ \"(rsc)/./node_modules/@azure/core-util/dist/commonjs/error.js\");\nObject.defineProperty(exports, \"isError\", ({ enumerable: true, get: function () { return error_js_1.isError; } }));\nObject.defineProperty(exports, \"getErrorMessage\", ({ enumerable: true, get: function () { return error_js_1.getErrorMessage; } }));\nvar sha256_js_1 = __webpack_require__(/*! ./sha256.js */ \"(rsc)/./node_modules/@azure/core-util/dist/commonjs/sha256.js\");\nObject.defineProperty(exports, \"computeSha256Hash\", ({ enumerable: true, get: function () { return sha256_js_1.computeSha256Hash; } }));\nObject.defineProperty(exports, \"computeSha256Hmac\", ({ enumerable: true, get: function () { return sha256_js_1.computeSha256Hmac; } }));\nvar typeGuards_js_1 = __webpack_require__(/*! ./typeGuards.js */ \"(rsc)/./node_modules/@azure/core-util/dist/commonjs/typeGuards.js\");\nObject.defineProperty(exports, \"isDefined\", ({ enumerable: true, get: function () { return typeGuards_js_1.isDefined; } }));\nObject.defineProperty(exports, \"isObjectWithProperties\", ({ enumerable: true, get: function () { return typeGuards_js_1.isObjectWithProperties; } }));\nObject.defineProperty(exports, \"objectHasProperty\", ({ enumerable: true, get: function () { return typeGuards_js_1.objectHasProperty; } }));\nvar uuidUtils_js_1 = __webpack_require__(/*! ./uuidUtils.js */ \"(rsc)/./node_modules/@azure/core-util/dist/commonjs/uuidUtils.js\");\nObject.defineProperty(exports, \"randomUUID\", ({ enumerable: true, get: function () { return uuidUtils_js_1.randomUUID; } }));\nvar checkEnvironment_js_1 = __webpack_require__(/*! ./checkEnvironment.js */ \"(rsc)/./node_modules/@azure/core-util/dist/commonjs/checkEnvironment.js\");\nObject.defineProperty(exports, \"isBrowser\", ({ enumerable: true, get: function () { return checkEnvironment_js_1.isBrowser; } }));\nObject.defineProperty(exports, \"isBun\", ({ enumerable: true, get: function () { return checkEnvironment_js_1.isBun; } }));\nObject.defineProperty(exports, \"isNode\", ({ enumerable: true, get: function () { return checkEnvironment_js_1.isNode; } }));\nObject.defineProperty(exports, \"isNodeLike\", ({ enumerable: true, get: function () { return checkEnvironment_js_1.isNodeLike; } }));\nObject.defineProperty(exports, \"isNodeRuntime\", ({ enumerable: true, get: function () { return checkEnvironment_js_1.isNodeRuntime; } }));\nObject.defineProperty(exports, \"isDeno\", ({ enumerable: true, get: function () { return checkEnvironment_js_1.isDeno; } }));\nObject.defineProperty(exports, \"isReactNative\", ({ enumerable: true, get: function () { return checkEnvironment_js_1.isReactNative; } }));\nObject.defineProperty(exports, \"isWebWorker\", ({ enumerable: true, get: function () { return checkEnvironment_js_1.isWebWorker; } }));\nvar bytesEncoding_js_1 = __webpack_require__(/*! ./bytesEncoding.js */ \"(rsc)/./node_modules/@azure/core-util/dist/commonjs/bytesEncoding.js\");\nObject.defineProperty(exports, \"uint8ArrayToString\", ({ enumerable: true, get: function () { return bytesEncoding_js_1.uint8ArrayToString; } }));\nObject.defineProperty(exports, \"stringToUint8Array\", ({ enumerable: true, get: function () { return bytesEncoding_js_1.stringToUint8Array; } }));\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/core-util/dist/commonjs/index.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/core-util/dist/commonjs/object.js":
/*!***************************************************************!*\
  !*** ./node_modules/@azure/core-util/dist/commonjs/object.js ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.isObject = isObject;\n/**\n * Helper to determine when an input is a generic JS object.\n * @returns true when input is an object type that is not null, Array, RegExp, or Date.\n */\nfunction isObject(input) {\n    return (typeof input === \"object\" &&\n        input !== null &&\n        !Array.isArray(input) &&\n        !(input instanceof RegExp) &&\n        !(input instanceof Date));\n}\n//# sourceMappingURL=object.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2NvcmUtdXRpbC9kaXN0L2NvbW1vbmpzL29iamVjdC5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0E7QUFDQSw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsZ0JBQWdCO0FBQ2hCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2RhbmllbDMtdnAyLy4vbm9kZV9tb2R1bGVzL0BhenVyZS9jb3JlLXV0aWwvZGlzdC9jb21tb25qcy9vYmplY3QuanM/ZmZhYyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbi8vIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLlxuLy8gTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlLlxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5pc09iamVjdCA9IGlzT2JqZWN0O1xuLyoqXG4gKiBIZWxwZXIgdG8gZGV0ZXJtaW5lIHdoZW4gYW4gaW5wdXQgaXMgYSBnZW5lcmljIEpTIG9iamVjdC5cbiAqIEByZXR1cm5zIHRydWUgd2hlbiBpbnB1dCBpcyBhbiBvYmplY3QgdHlwZSB0aGF0IGlzIG5vdCBudWxsLCBBcnJheSwgUmVnRXhwLCBvciBEYXRlLlxuICovXG5mdW5jdGlvbiBpc09iamVjdChpbnB1dCkge1xuICAgIHJldHVybiAodHlwZW9mIGlucHV0ID09PSBcIm9iamVjdFwiICYmXG4gICAgICAgIGlucHV0ICE9PSBudWxsICYmXG4gICAgICAgICFBcnJheS5pc0FycmF5KGlucHV0KSAmJlxuICAgICAgICAhKGlucHV0IGluc3RhbmNlb2YgUmVnRXhwKSAmJlxuICAgICAgICAhKGlucHV0IGluc3RhbmNlb2YgRGF0ZSkpO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9b2JqZWN0LmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/core-util/dist/commonjs/object.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/core-util/dist/commonjs/random.js":
/*!***************************************************************!*\
  !*** ./node_modules/@azure/core-util/dist/commonjs/random.js ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.getRandomIntegerInclusive = getRandomIntegerInclusive;\n/**\n * Returns a random integer value between a lower and upper bound,\n * inclusive of both bounds.\n * Note that this uses Math.random and isn't secure. If you need to use\n * this for any kind of security purpose, find a better source of random.\n * @param min - The smallest integer value allowed.\n * @param max - The largest integer value allowed.\n */\nfunction getRandomIntegerInclusive(min, max) {\n    // Make sure inputs are integers.\n    min = Math.ceil(min);\n    max = Math.floor(max);\n    // Pick a random offset from zero to the size of the range.\n    // Since Math.random() can never return 1, we have to make the range one larger\n    // in order to be inclusive of the maximum value after we take the floor.\n    const offset = Math.floor(Math.random() * (max - min + 1));\n    return offset + min;\n}\n//# sourceMappingURL=random.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2NvcmUtdXRpbC9kaXN0L2NvbW1vbmpzL3JhbmRvbS5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0E7QUFDQSw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsaUNBQWlDO0FBQ2pDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZGFuaWVsMy12cDIvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2NvcmUtdXRpbC9kaXN0L2NvbW1vbmpzL3JhbmRvbS5qcz80MzAyIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuLy8gQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uXG4vLyBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLmdldFJhbmRvbUludGVnZXJJbmNsdXNpdmUgPSBnZXRSYW5kb21JbnRlZ2VySW5jbHVzaXZlO1xuLyoqXG4gKiBSZXR1cm5zIGEgcmFuZG9tIGludGVnZXIgdmFsdWUgYmV0d2VlbiBhIGxvd2VyIGFuZCB1cHBlciBib3VuZCxcbiAqIGluY2x1c2l2ZSBvZiBib3RoIGJvdW5kcy5cbiAqIE5vdGUgdGhhdCB0aGlzIHVzZXMgTWF0aC5yYW5kb20gYW5kIGlzbid0IHNlY3VyZS4gSWYgeW91IG5lZWQgdG8gdXNlXG4gKiB0aGlzIGZvciBhbnkga2luZCBvZiBzZWN1cml0eSBwdXJwb3NlLCBmaW5kIGEgYmV0dGVyIHNvdXJjZSBvZiByYW5kb20uXG4gKiBAcGFyYW0gbWluIC0gVGhlIHNtYWxsZXN0IGludGVnZXIgdmFsdWUgYWxsb3dlZC5cbiAqIEBwYXJhbSBtYXggLSBUaGUgbGFyZ2VzdCBpbnRlZ2VyIHZhbHVlIGFsbG93ZWQuXG4gKi9cbmZ1bmN0aW9uIGdldFJhbmRvbUludGVnZXJJbmNsdXNpdmUobWluLCBtYXgpIHtcbiAgICAvLyBNYWtlIHN1cmUgaW5wdXRzIGFyZSBpbnRlZ2Vycy5cbiAgICBtaW4gPSBNYXRoLmNlaWwobWluKTtcbiAgICBtYXggPSBNYXRoLmZsb29yKG1heCk7XG4gICAgLy8gUGljayBhIHJhbmRvbSBvZmZzZXQgZnJvbSB6ZXJvIHRvIHRoZSBzaXplIG9mIHRoZSByYW5nZS5cbiAgICAvLyBTaW5jZSBNYXRoLnJhbmRvbSgpIGNhbiBuZXZlciByZXR1cm4gMSwgd2UgaGF2ZSB0byBtYWtlIHRoZSByYW5nZSBvbmUgbGFyZ2VyXG4gICAgLy8gaW4gb3JkZXIgdG8gYmUgaW5jbHVzaXZlIG9mIHRoZSBtYXhpbXVtIHZhbHVlIGFmdGVyIHdlIHRha2UgdGhlIGZsb29yLlxuICAgIGNvbnN0IG9mZnNldCA9IE1hdGguZmxvb3IoTWF0aC5yYW5kb20oKSAqIChtYXggLSBtaW4gKyAxKSk7XG4gICAgcmV0dXJuIG9mZnNldCArIG1pbjtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXJhbmRvbS5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/core-util/dist/commonjs/random.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/core-util/dist/commonjs/sha256.js":
/*!***************************************************************!*\
  !*** ./node_modules/@azure/core-util/dist/commonjs/sha256.js ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.computeSha256Hmac = computeSha256Hmac;\nexports.computeSha256Hash = computeSha256Hash;\nconst crypto_1 = __webpack_require__(/*! crypto */ \"crypto\");\n/**\n * Generates a SHA-256 HMAC signature.\n * @param key - The HMAC key represented as a base64 string, used to generate the cryptographic HMAC hash.\n * @param stringToSign - The data to be signed.\n * @param encoding - The textual encoding to use for the returned HMAC digest.\n */\nasync function computeSha256Hmac(key, stringToSign, encoding) {\n    const decodedKey = Buffer.from(key, \"base64\");\n    return (0, crypto_1.createHmac)(\"sha256\", decodedKey).update(stringToSign).digest(encoding);\n}\n/**\n * Generates a SHA-256 hash.\n * @param content - The data to be included in the hash.\n * @param encoding - The textual encoding to use for the returned hash.\n */\nasync function computeSha256Hash(content, encoding) {\n    return (0, crypto_1.createHash)(\"sha256\").update(content).digest(encoding);\n}\n//# sourceMappingURL=sha256.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2NvcmUtdXRpbC9kaXN0L2NvbW1vbmpzL3NoYTI1Ni5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0E7QUFDQSw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QseUJBQXlCO0FBQ3pCLHlCQUF5QjtBQUN6QixpQkFBaUIsbUJBQU8sQ0FBQyxzQkFBUTtBQUNqQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2RhbmllbDMtdnAyLy4vbm9kZV9tb2R1bGVzL0BhenVyZS9jb3JlLXV0aWwvZGlzdC9jb21tb25qcy9zaGEyNTYuanM/MGM3MCJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbi8vIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLlxuLy8gTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlLlxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5jb21wdXRlU2hhMjU2SG1hYyA9IGNvbXB1dGVTaGEyNTZIbWFjO1xuZXhwb3J0cy5jb21wdXRlU2hhMjU2SGFzaCA9IGNvbXB1dGVTaGEyNTZIYXNoO1xuY29uc3QgY3J5cHRvXzEgPSByZXF1aXJlKFwiY3J5cHRvXCIpO1xuLyoqXG4gKiBHZW5lcmF0ZXMgYSBTSEEtMjU2IEhNQUMgc2lnbmF0dXJlLlxuICogQHBhcmFtIGtleSAtIFRoZSBITUFDIGtleSByZXByZXNlbnRlZCBhcyBhIGJhc2U2NCBzdHJpbmcsIHVzZWQgdG8gZ2VuZXJhdGUgdGhlIGNyeXB0b2dyYXBoaWMgSE1BQyBoYXNoLlxuICogQHBhcmFtIHN0cmluZ1RvU2lnbiAtIFRoZSBkYXRhIHRvIGJlIHNpZ25lZC5cbiAqIEBwYXJhbSBlbmNvZGluZyAtIFRoZSB0ZXh0dWFsIGVuY29kaW5nIHRvIHVzZSBmb3IgdGhlIHJldHVybmVkIEhNQUMgZGlnZXN0LlxuICovXG5hc3luYyBmdW5jdGlvbiBjb21wdXRlU2hhMjU2SG1hYyhrZXksIHN0cmluZ1RvU2lnbiwgZW5jb2RpbmcpIHtcbiAgICBjb25zdCBkZWNvZGVkS2V5ID0gQnVmZmVyLmZyb20oa2V5LCBcImJhc2U2NFwiKTtcbiAgICByZXR1cm4gKDAsIGNyeXB0b18xLmNyZWF0ZUhtYWMpKFwic2hhMjU2XCIsIGRlY29kZWRLZXkpLnVwZGF0ZShzdHJpbmdUb1NpZ24pLmRpZ2VzdChlbmNvZGluZyk7XG59XG4vKipcbiAqIEdlbmVyYXRlcyBhIFNIQS0yNTYgaGFzaC5cbiAqIEBwYXJhbSBjb250ZW50IC0gVGhlIGRhdGEgdG8gYmUgaW5jbHVkZWQgaW4gdGhlIGhhc2guXG4gKiBAcGFyYW0gZW5jb2RpbmcgLSBUaGUgdGV4dHVhbCBlbmNvZGluZyB0byB1c2UgZm9yIHRoZSByZXR1cm5lZCBoYXNoLlxuICovXG5hc3luYyBmdW5jdGlvbiBjb21wdXRlU2hhMjU2SGFzaChjb250ZW50LCBlbmNvZGluZykge1xuICAgIHJldHVybiAoMCwgY3J5cHRvXzEuY3JlYXRlSGFzaCkoXCJzaGEyNTZcIikudXBkYXRlKGNvbnRlbnQpLmRpZ2VzdChlbmNvZGluZyk7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1zaGEyNTYuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/core-util/dist/commonjs/sha256.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/core-util/dist/commonjs/typeGuards.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@azure/core-util/dist/commonjs/typeGuards.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.isDefined = isDefined;\nexports.isObjectWithProperties = isObjectWithProperties;\nexports.objectHasProperty = objectHasProperty;\n/**\n * Helper TypeGuard that checks if something is defined or not.\n * @param thing - Anything\n */\nfunction isDefined(thing) {\n    return typeof thing !== \"undefined\" && thing !== null;\n}\n/**\n * Helper TypeGuard that checks if the input is an object with the specified properties.\n * @param thing - Anything.\n * @param properties - The name of the properties that should appear in the object.\n */\nfunction isObjectWithProperties(thing, properties) {\n    if (!isDefined(thing) || typeof thing !== \"object\") {\n        return false;\n    }\n    for (const property of properties) {\n        if (!objectHasProperty(thing, property)) {\n            return false;\n        }\n    }\n    return true;\n}\n/**\n * Helper TypeGuard that checks if the input is an object with the specified property.\n * @param thing - Any object.\n * @param property - The name of the property that should appear in the object.\n */\nfunction objectHasProperty(thing, property) {\n    return (isDefined(thing) && typeof thing === \"object\" && property in thing);\n}\n//# sourceMappingURL=typeGuards.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2NvcmUtdXRpbC9kaXN0L2NvbW1vbmpzL3R5cGVHdWFyZHMuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBO0FBQ0EsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELGlCQUFpQjtBQUNqQiw4QkFBOEI7QUFDOUIseUJBQXlCO0FBQ3pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9kYW5pZWwzLXZwMi8uL25vZGVfbW9kdWxlcy9AYXp1cmUvY29yZS11dGlsL2Rpc3QvY29tbW9uanMvdHlwZUd1YXJkcy5qcz9hYzE3Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuLy8gQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uXG4vLyBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLmlzRGVmaW5lZCA9IGlzRGVmaW5lZDtcbmV4cG9ydHMuaXNPYmplY3RXaXRoUHJvcGVydGllcyA9IGlzT2JqZWN0V2l0aFByb3BlcnRpZXM7XG5leHBvcnRzLm9iamVjdEhhc1Byb3BlcnR5ID0gb2JqZWN0SGFzUHJvcGVydHk7XG4vKipcbiAqIEhlbHBlciBUeXBlR3VhcmQgdGhhdCBjaGVja3MgaWYgc29tZXRoaW5nIGlzIGRlZmluZWQgb3Igbm90LlxuICogQHBhcmFtIHRoaW5nIC0gQW55dGhpbmdcbiAqL1xuZnVuY3Rpb24gaXNEZWZpbmVkKHRoaW5nKSB7XG4gICAgcmV0dXJuIHR5cGVvZiB0aGluZyAhPT0gXCJ1bmRlZmluZWRcIiAmJiB0aGluZyAhPT0gbnVsbDtcbn1cbi8qKlxuICogSGVscGVyIFR5cGVHdWFyZCB0aGF0IGNoZWNrcyBpZiB0aGUgaW5wdXQgaXMgYW4gb2JqZWN0IHdpdGggdGhlIHNwZWNpZmllZCBwcm9wZXJ0aWVzLlxuICogQHBhcmFtIHRoaW5nIC0gQW55dGhpbmcuXG4gKiBAcGFyYW0gcHJvcGVydGllcyAtIFRoZSBuYW1lIG9mIHRoZSBwcm9wZXJ0aWVzIHRoYXQgc2hvdWxkIGFwcGVhciBpbiB0aGUgb2JqZWN0LlxuICovXG5mdW5jdGlvbiBpc09iamVjdFdpdGhQcm9wZXJ0aWVzKHRoaW5nLCBwcm9wZXJ0aWVzKSB7XG4gICAgaWYgKCFpc0RlZmluZWQodGhpbmcpIHx8IHR5cGVvZiB0aGluZyAhPT0gXCJvYmplY3RcIikge1xuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxuICAgIGZvciAoY29uc3QgcHJvcGVydHkgb2YgcHJvcGVydGllcykge1xuICAgICAgICBpZiAoIW9iamVjdEhhc1Byb3BlcnR5KHRoaW5nLCBwcm9wZXJ0eSkpIHtcbiAgICAgICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gdHJ1ZTtcbn1cbi8qKlxuICogSGVscGVyIFR5cGVHdWFyZCB0aGF0IGNoZWNrcyBpZiB0aGUgaW5wdXQgaXMgYW4gb2JqZWN0IHdpdGggdGhlIHNwZWNpZmllZCBwcm9wZXJ0eS5cbiAqIEBwYXJhbSB0aGluZyAtIEFueSBvYmplY3QuXG4gKiBAcGFyYW0gcHJvcGVydHkgLSBUaGUgbmFtZSBvZiB0aGUgcHJvcGVydHkgdGhhdCBzaG91bGQgYXBwZWFyIGluIHRoZSBvYmplY3QuXG4gKi9cbmZ1bmN0aW9uIG9iamVjdEhhc1Byb3BlcnR5KHRoaW5nLCBwcm9wZXJ0eSkge1xuICAgIHJldHVybiAoaXNEZWZpbmVkKHRoaW5nKSAmJiB0eXBlb2YgdGhpbmcgPT09IFwib2JqZWN0XCIgJiYgcHJvcGVydHkgaW4gdGhpbmcpO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9dHlwZUd1YXJkcy5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/core-util/dist/commonjs/typeGuards.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/core-util/dist/commonjs/uuidUtils.js":
/*!******************************************************************!*\
  !*** ./node_modules/@azure/core-util/dist/commonjs/uuidUtils.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\nvar _a;\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.randomUUID = randomUUID;\nconst crypto_1 = __webpack_require__(/*! crypto */ \"crypto\");\n// NOTE: This is a workaround until we can use `globalThis.crypto.randomUUID` in Node.js 19+.\nconst uuidFunction = typeof ((_a = globalThis === null || globalThis === void 0 ? void 0 : globalThis.crypto) === null || _a === void 0 ? void 0 : _a.randomUUID) === \"function\"\n    ? globalThis.crypto.randomUUID.bind(globalThis.crypto)\n    : crypto_1.randomUUID;\n/**\n * Generated Universally Unique Identifier\n *\n * @returns RFC4122 v4 UUID.\n */\nfunction randomUUID() {\n    return uuidFunction();\n}\n//# sourceMappingURL=uuidUtils.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2NvcmUtdXRpbC9kaXN0L2NvbW1vbmpzL3V1aWRVdGlscy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxrQkFBa0I7QUFDbEIsaUJBQWlCLG1CQUFPLENBQUMsc0JBQVE7QUFDakM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9kYW5pZWwzLXZwMi8uL25vZGVfbW9kdWxlcy9AYXp1cmUvY29yZS11dGlsL2Rpc3QvY29tbW9uanMvdXVpZFV0aWxzLmpzPzkwMGIiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG4vLyBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi5cbi8vIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZS5cbnZhciBfYTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMucmFuZG9tVVVJRCA9IHJhbmRvbVVVSUQ7XG5jb25zdCBjcnlwdG9fMSA9IHJlcXVpcmUoXCJjcnlwdG9cIik7XG4vLyBOT1RFOiBUaGlzIGlzIGEgd29ya2Fyb3VuZCB1bnRpbCB3ZSBjYW4gdXNlIGBnbG9iYWxUaGlzLmNyeXB0by5yYW5kb21VVUlEYCBpbiBOb2RlLmpzIDE5Ky5cbmNvbnN0IHV1aWRGdW5jdGlvbiA9IHR5cGVvZiAoKF9hID0gZ2xvYmFsVGhpcyA9PT0gbnVsbCB8fCBnbG9iYWxUaGlzID09PSB2b2lkIDAgPyB2b2lkIDAgOiBnbG9iYWxUaGlzLmNyeXB0bykgPT09IG51bGwgfHwgX2EgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9hLnJhbmRvbVVVSUQpID09PSBcImZ1bmN0aW9uXCJcbiAgICA/IGdsb2JhbFRoaXMuY3J5cHRvLnJhbmRvbVVVSUQuYmluZChnbG9iYWxUaGlzLmNyeXB0bylcbiAgICA6IGNyeXB0b18xLnJhbmRvbVVVSUQ7XG4vKipcbiAqIEdlbmVyYXRlZCBVbml2ZXJzYWxseSBVbmlxdWUgSWRlbnRpZmllclxuICpcbiAqIEByZXR1cm5zIFJGQzQxMjIgdjQgVVVJRC5cbiAqL1xuZnVuY3Rpb24gcmFuZG9tVVVJRCgpIHtcbiAgICByZXR1cm4gdXVpZEZ1bmN0aW9uKCk7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD11dWlkVXRpbHMuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/core-util/dist/commonjs/uuidUtils.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/abort-controller/dist/esm/AbortError.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@azure/abort-controller/dist/esm/AbortError.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AbortError: () => (/* binding */ AbortError)\n/* harmony export */ });\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n/**\n * This error is thrown when an asynchronous operation has been aborted.\n * Check for this error by testing the `name` that the name property of the\n * error matches `\"AbortError\"`.\n *\n * @example\n * ```ts\n * const controller = new AbortController();\n * controller.abort();\n * try {\n *   doAsyncWork(controller.signal)\n * } catch (e) {\n *   if (e.name === 'AbortError') {\n *     // handle abort error here.\n *   }\n * }\n * ```\n */\nclass AbortError extends Error {\n    constructor(message) {\n        super(message);\n        this.name = \"AbortError\";\n    }\n}\n//# sourceMappingURL=AbortError.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2Fib3J0LWNvbnRyb2xsZXIvZGlzdC9lc20vQWJvcnRFcnJvci5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9kYW5pZWwzLXZwMi8uL25vZGVfbW9kdWxlcy9AYXp1cmUvYWJvcnQtY29udHJvbGxlci9kaXN0L2VzbS9BYm9ydEVycm9yLmpzPzY2NTUiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uXG4vLyBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UuXG4vKipcbiAqIFRoaXMgZXJyb3IgaXMgdGhyb3duIHdoZW4gYW4gYXN5bmNocm9ub3VzIG9wZXJhdGlvbiBoYXMgYmVlbiBhYm9ydGVkLlxuICogQ2hlY2sgZm9yIHRoaXMgZXJyb3IgYnkgdGVzdGluZyB0aGUgYG5hbWVgIHRoYXQgdGhlIG5hbWUgcHJvcGVydHkgb2YgdGhlXG4gKiBlcnJvciBtYXRjaGVzIGBcIkFib3J0RXJyb3JcImAuXG4gKlxuICogQGV4YW1wbGVcbiAqIGBgYHRzXG4gKiBjb25zdCBjb250cm9sbGVyID0gbmV3IEFib3J0Q29udHJvbGxlcigpO1xuICogY29udHJvbGxlci5hYm9ydCgpO1xuICogdHJ5IHtcbiAqICAgZG9Bc3luY1dvcmsoY29udHJvbGxlci5zaWduYWwpXG4gKiB9IGNhdGNoIChlKSB7XG4gKiAgIGlmIChlLm5hbWUgPT09ICdBYm9ydEVycm9yJykge1xuICogICAgIC8vIGhhbmRsZSBhYm9ydCBlcnJvciBoZXJlLlxuICogICB9XG4gKiB9XG4gKiBgYGBcbiAqL1xuZXhwb3J0IGNsYXNzIEFib3J0RXJyb3IgZXh0ZW5kcyBFcnJvciB7XG4gICAgY29uc3RydWN0b3IobWVzc2FnZSkge1xuICAgICAgICBzdXBlcihtZXNzYWdlKTtcbiAgICAgICAgdGhpcy5uYW1lID0gXCJBYm9ydEVycm9yXCI7XG4gICAgfVxufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9QWJvcnRFcnJvci5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/abort-controller/dist/esm/AbortError.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/abort-controller/dist/esm/index.js":
/*!****************************************************************!*\
  !*** ./node_modules/@azure/abort-controller/dist/esm/index.js ***!
  \****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AbortError: () => (/* reexport safe */ _AbortError_js__WEBPACK_IMPORTED_MODULE_0__.AbortError)\n/* harmony export */ });\n/* harmony import */ var _AbortError_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./AbortError.js */ \"(rsc)/./node_modules/@azure/abort-controller/dist/esm/AbortError.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2Fib3J0LWNvbnRyb2xsZXIvZGlzdC9lc20vaW5kZXguanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQTtBQUNBO0FBQzZDO0FBQzdDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZGFuaWVsMy12cDIvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2Fib3J0LWNvbnRyb2xsZXIvZGlzdC9lc20vaW5kZXguanM/ZjQ4MiJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi5cbi8vIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZS5cbmV4cG9ydCB7IEFib3J0RXJyb3IgfSBmcm9tIFwiLi9BYm9ydEVycm9yLmpzXCI7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbmRleC5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/abort-controller/dist/esm/index.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/core-client/dist/esm/authorizeRequestOnClaimChallenge.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/@azure/core-client/dist/esm/authorizeRequestOnClaimChallenge.js ***!
  \**************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   authorizeRequestOnClaimChallenge: () => (/* binding */ authorizeRequestOnClaimChallenge),\n/* harmony export */   parseCAEChallenge: () => (/* binding */ parseCAEChallenge)\n/* harmony export */ });\n/* harmony import */ var _log_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./log.js */ \"(rsc)/./node_modules/@azure/core-client/dist/esm/log.js\");\n/* harmony import */ var _base64_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./base64.js */ \"(rsc)/./node_modules/@azure/core-client/dist/esm/base64.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\n\n/**\n * Converts: `Bearer a=\"b\", c=\"d\", Bearer d=\"e\", f=\"g\"`.\n * Into: `[ { a: 'b', c: 'd' }, { d: 'e', f: 'g' } ]`.\n *\n * @internal\n */\nfunction parseCAEChallenge(challenges) {\n    const bearerChallenges = `, ${challenges.trim()}`.split(\", Bearer \").filter((x) => x);\n    return bearerChallenges.map((challenge) => {\n        const challengeParts = `${challenge.trim()}, `.split('\", ').filter((x) => x);\n        const keyValuePairs = challengeParts.map((keyValue) => (([key, value]) => ({ [key]: value }))(keyValue.trim().split('=\"')));\n        // Key-value pairs to plain object:\n        return keyValuePairs.reduce((a, b) => (Object.assign(Object.assign({}, a), b)), {});\n    });\n}\n/**\n * This function can be used as a callback for the `bearerTokenAuthenticationPolicy` of `@azure/core-rest-pipeline`, to support CAE challenges:\n * [Continuous Access Evaluation](https://docs.microsoft.com/azure/active-directory/conditional-access/concept-continuous-access-evaluation).\n *\n * Call the `bearerTokenAuthenticationPolicy` with the following options:\n *\n * ```ts\n * import { bearerTokenAuthenticationPolicy } from \"@azure/core-rest-pipeline\";\n * import { authorizeRequestOnClaimChallenge } from \"@azure/core-client\";\n *\n * const bearerTokenAuthenticationPolicy = bearerTokenAuthenticationPolicy({\n *   authorizeRequestOnChallenge: authorizeRequestOnClaimChallenge\n * });\n * ```\n *\n * Once provided, the `bearerTokenAuthenticationPolicy` policy will internally handle Continuous Access Evaluation (CAE) challenges.\n * When it can't complete a challenge it will return the 401 (unauthorized) response from ARM.\n *\n * Example challenge with claims:\n *\n * ```\n * Bearer authorization_uri=\"https://login.windows-ppe.net/\", error=\"invalid_token\",\n * error_description=\"User session has been revoked\",\n * claims=\"eyJhY2Nlc3NfdG9rZW4iOnsibmJmIjp7ImVzc2VudGlhbCI6dHJ1ZSwgInZhbHVlIjoiMTYwMzc0MjgwMCJ9fX0=\"\n * ```\n */\nasync function authorizeRequestOnClaimChallenge(onChallengeOptions) {\n    const { scopes, response } = onChallengeOptions;\n    const logger = onChallengeOptions.logger || _log_js__WEBPACK_IMPORTED_MODULE_0__.logger;\n    const challenge = response.headers.get(\"WWW-Authenticate\");\n    if (!challenge) {\n        logger.info(`The WWW-Authenticate header was missing. Failed to perform the Continuous Access Evaluation authentication flow.`);\n        return false;\n    }\n    const challenges = parseCAEChallenge(challenge) || [];\n    const parsedChallenge = challenges.find((x) => x.claims);\n    if (!parsedChallenge) {\n        logger.info(`The WWW-Authenticate header was missing the necessary \"claims\" to perform the Continuous Access Evaluation authentication flow.`);\n        return false;\n    }\n    const accessToken = await onChallengeOptions.getAccessToken(parsedChallenge.scope ? [parsedChallenge.scope] : scopes, {\n        claims: (0,_base64_js__WEBPACK_IMPORTED_MODULE_1__.decodeStringToString)(parsedChallenge.claims),\n    });\n    if (!accessToken) {\n        return false;\n    }\n    onChallengeOptions.request.headers.set(\"Authorization\", `Bearer ${accessToken.token}`);\n    return true;\n}\n//# sourceMappingURL=authorizeRequestOnClaimChallenge.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2NvcmUtY2xpZW50L2Rpc3QvZXNtL2F1dGhvcml6ZVJlcXVlc3RPbkNsYWltQ2hhbGxlbmdlLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTtBQUNBO0FBQ3NEO0FBQ0g7QUFDbkQ7QUFDQTtBQUNBLGNBQWMsZ0JBQWdCLElBQUksaUJBQWlCO0FBQ25EO0FBQ0E7QUFDQTtBQUNPO0FBQ1Asa0NBQWtDLGtCQUFrQjtBQUNwRDtBQUNBLGtDQUFrQyxpQkFBaUI7QUFDbkQscUZBQXFGLGNBQWM7QUFDbkc7QUFDQSw2RUFBNkUsYUFBYTtBQUMxRixLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFlBQVksa0NBQWtDO0FBQzlDLFlBQVksbUNBQW1DO0FBQy9DO0FBQ0E7QUFDQTtBQUNBLElBQUk7QUFDSjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1AsWUFBWSxtQkFBbUI7QUFDL0IsZ0RBQWdELDJDQUFnQjtBQUNoRTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnQkFBZ0IsZ0VBQW9CO0FBQ3BDLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQSxzRUFBc0Usa0JBQWtCO0FBQ3hGO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2RhbmllbDMtdnAyLy4vbm9kZV9tb2R1bGVzL0BhenVyZS9jb3JlLWNsaWVudC9kaXN0L2VzbS9hdXRob3JpemVSZXF1ZXN0T25DbGFpbUNoYWxsZW5nZS5qcz9jZDQxIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLlxuLy8gTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlLlxuaW1wb3J0IHsgbG9nZ2VyIGFzIGNvcmVDbGllbnRMb2dnZXIgfSBmcm9tIFwiLi9sb2cuanNcIjtcbmltcG9ydCB7IGRlY29kZVN0cmluZ1RvU3RyaW5nIH0gZnJvbSBcIi4vYmFzZTY0LmpzXCI7XG4vKipcbiAqIENvbnZlcnRzOiBgQmVhcmVyIGE9XCJiXCIsIGM9XCJkXCIsIEJlYXJlciBkPVwiZVwiLCBmPVwiZ1wiYC5cbiAqIEludG86IGBbIHsgYTogJ2InLCBjOiAnZCcgfSwgeyBkOiAnZScsIGY6ICdnJyB9IF1gLlxuICpcbiAqIEBpbnRlcm5hbFxuICovXG5leHBvcnQgZnVuY3Rpb24gcGFyc2VDQUVDaGFsbGVuZ2UoY2hhbGxlbmdlcykge1xuICAgIGNvbnN0IGJlYXJlckNoYWxsZW5nZXMgPSBgLCAke2NoYWxsZW5nZXMudHJpbSgpfWAuc3BsaXQoXCIsIEJlYXJlciBcIikuZmlsdGVyKCh4KSA9PiB4KTtcbiAgICByZXR1cm4gYmVhcmVyQ2hhbGxlbmdlcy5tYXAoKGNoYWxsZW5nZSkgPT4ge1xuICAgICAgICBjb25zdCBjaGFsbGVuZ2VQYXJ0cyA9IGAke2NoYWxsZW5nZS50cmltKCl9LCBgLnNwbGl0KCdcIiwgJykuZmlsdGVyKCh4KSA9PiB4KTtcbiAgICAgICAgY29uc3Qga2V5VmFsdWVQYWlycyA9IGNoYWxsZW5nZVBhcnRzLm1hcCgoa2V5VmFsdWUpID0+ICgoW2tleSwgdmFsdWVdKSA9PiAoeyBba2V5XTogdmFsdWUgfSkpKGtleVZhbHVlLnRyaW0oKS5zcGxpdCgnPVwiJykpKTtcbiAgICAgICAgLy8gS2V5LXZhbHVlIHBhaXJzIHRvIHBsYWluIG9iamVjdDpcbiAgICAgICAgcmV0dXJuIGtleVZhbHVlUGFpcnMucmVkdWNlKChhLCBiKSA9PiAoT2JqZWN0LmFzc2lnbihPYmplY3QuYXNzaWduKHt9LCBhKSwgYikpLCB7fSk7XG4gICAgfSk7XG59XG4vKipcbiAqIFRoaXMgZnVuY3Rpb24gY2FuIGJlIHVzZWQgYXMgYSBjYWxsYmFjayBmb3IgdGhlIGBiZWFyZXJUb2tlbkF1dGhlbnRpY2F0aW9uUG9saWN5YCBvZiBgQGF6dXJlL2NvcmUtcmVzdC1waXBlbGluZWAsIHRvIHN1cHBvcnQgQ0FFIGNoYWxsZW5nZXM6XG4gKiBbQ29udGludW91cyBBY2Nlc3MgRXZhbHVhdGlvbl0oaHR0cHM6Ly9kb2NzLm1pY3Jvc29mdC5jb20vYXp1cmUvYWN0aXZlLWRpcmVjdG9yeS9jb25kaXRpb25hbC1hY2Nlc3MvY29uY2VwdC1jb250aW51b3VzLWFjY2Vzcy1ldmFsdWF0aW9uKS5cbiAqXG4gKiBDYWxsIHRoZSBgYmVhcmVyVG9rZW5BdXRoZW50aWNhdGlvblBvbGljeWAgd2l0aCB0aGUgZm9sbG93aW5nIG9wdGlvbnM6XG4gKlxuICogYGBgdHNcbiAqIGltcG9ydCB7IGJlYXJlclRva2VuQXV0aGVudGljYXRpb25Qb2xpY3kgfSBmcm9tIFwiQGF6dXJlL2NvcmUtcmVzdC1waXBlbGluZVwiO1xuICogaW1wb3J0IHsgYXV0aG9yaXplUmVxdWVzdE9uQ2xhaW1DaGFsbGVuZ2UgfSBmcm9tIFwiQGF6dXJlL2NvcmUtY2xpZW50XCI7XG4gKlxuICogY29uc3QgYmVhcmVyVG9rZW5BdXRoZW50aWNhdGlvblBvbGljeSA9IGJlYXJlclRva2VuQXV0aGVudGljYXRpb25Qb2xpY3koe1xuICogICBhdXRob3JpemVSZXF1ZXN0T25DaGFsbGVuZ2U6IGF1dGhvcml6ZVJlcXVlc3RPbkNsYWltQ2hhbGxlbmdlXG4gKiB9KTtcbiAqIGBgYFxuICpcbiAqIE9uY2UgcHJvdmlkZWQsIHRoZSBgYmVhcmVyVG9rZW5BdXRoZW50aWNhdGlvblBvbGljeWAgcG9saWN5IHdpbGwgaW50ZXJuYWxseSBoYW5kbGUgQ29udGludW91cyBBY2Nlc3MgRXZhbHVhdGlvbiAoQ0FFKSBjaGFsbGVuZ2VzLlxuICogV2hlbiBpdCBjYW4ndCBjb21wbGV0ZSBhIGNoYWxsZW5nZSBpdCB3aWxsIHJldHVybiB0aGUgNDAxICh1bmF1dGhvcml6ZWQpIHJlc3BvbnNlIGZyb20gQVJNLlxuICpcbiAqIEV4YW1wbGUgY2hhbGxlbmdlIHdpdGggY2xhaW1zOlxuICpcbiAqIGBgYFxuICogQmVhcmVyIGF1dGhvcml6YXRpb25fdXJpPVwiaHR0cHM6Ly9sb2dpbi53aW5kb3dzLXBwZS5uZXQvXCIsIGVycm9yPVwiaW52YWxpZF90b2tlblwiLFxuICogZXJyb3JfZGVzY3JpcHRpb249XCJVc2VyIHNlc3Npb24gaGFzIGJlZW4gcmV2b2tlZFwiLFxuICogY2xhaW1zPVwiZXlKaFkyTmxjM05mZEc5clpXNGlPbnNpYm1KbUlqcDdJbVZ6YzJWdWRHbGhiQ0k2ZEhKMVpTd2dJblpoYkhWbElqb2lNVFl3TXpjME1qZ3dNQ0o5ZlgwPVwiXG4gKiBgYGBcbiAqL1xuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIGF1dGhvcml6ZVJlcXVlc3RPbkNsYWltQ2hhbGxlbmdlKG9uQ2hhbGxlbmdlT3B0aW9ucykge1xuICAgIGNvbnN0IHsgc2NvcGVzLCByZXNwb25zZSB9ID0gb25DaGFsbGVuZ2VPcHRpb25zO1xuICAgIGNvbnN0IGxvZ2dlciA9IG9uQ2hhbGxlbmdlT3B0aW9ucy5sb2dnZXIgfHwgY29yZUNsaWVudExvZ2dlcjtcbiAgICBjb25zdCBjaGFsbGVuZ2UgPSByZXNwb25zZS5oZWFkZXJzLmdldChcIldXVy1BdXRoZW50aWNhdGVcIik7XG4gICAgaWYgKCFjaGFsbGVuZ2UpIHtcbiAgICAgICAgbG9nZ2VyLmluZm8oYFRoZSBXV1ctQXV0aGVudGljYXRlIGhlYWRlciB3YXMgbWlzc2luZy4gRmFpbGVkIHRvIHBlcmZvcm0gdGhlIENvbnRpbnVvdXMgQWNjZXNzIEV2YWx1YXRpb24gYXV0aGVudGljYXRpb24gZmxvdy5gKTtcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cbiAgICBjb25zdCBjaGFsbGVuZ2VzID0gcGFyc2VDQUVDaGFsbGVuZ2UoY2hhbGxlbmdlKSB8fCBbXTtcbiAgICBjb25zdCBwYXJzZWRDaGFsbGVuZ2UgPSBjaGFsbGVuZ2VzLmZpbmQoKHgpID0+IHguY2xhaW1zKTtcbiAgICBpZiAoIXBhcnNlZENoYWxsZW5nZSkge1xuICAgICAgICBsb2dnZXIuaW5mbyhgVGhlIFdXVy1BdXRoZW50aWNhdGUgaGVhZGVyIHdhcyBtaXNzaW5nIHRoZSBuZWNlc3NhcnkgXCJjbGFpbXNcIiB0byBwZXJmb3JtIHRoZSBDb250aW51b3VzIEFjY2VzcyBFdmFsdWF0aW9uIGF1dGhlbnRpY2F0aW9uIGZsb3cuYCk7XG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG4gICAgY29uc3QgYWNjZXNzVG9rZW4gPSBhd2FpdCBvbkNoYWxsZW5nZU9wdGlvbnMuZ2V0QWNjZXNzVG9rZW4ocGFyc2VkQ2hhbGxlbmdlLnNjb3BlID8gW3BhcnNlZENoYWxsZW5nZS5zY29wZV0gOiBzY29wZXMsIHtcbiAgICAgICAgY2xhaW1zOiBkZWNvZGVTdHJpbmdUb1N0cmluZyhwYXJzZWRDaGFsbGVuZ2UuY2xhaW1zKSxcbiAgICB9KTtcbiAgICBpZiAoIWFjY2Vzc1Rva2VuKSB7XG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG4gICAgb25DaGFsbGVuZ2VPcHRpb25zLnJlcXVlc3QuaGVhZGVycy5zZXQoXCJBdXRob3JpemF0aW9uXCIsIGBCZWFyZXIgJHthY2Nlc3NUb2tlbi50b2tlbn1gKTtcbiAgICByZXR1cm4gdHJ1ZTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWF1dGhvcml6ZVJlcXVlc3RPbkNsYWltQ2hhbGxlbmdlLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/core-client/dist/esm/authorizeRequestOnClaimChallenge.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/core-client/dist/esm/authorizeRequestOnTenantChallenge.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/@azure/core-client/dist/esm/authorizeRequestOnTenantChallenge.js ***!
  \***************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   authorizeRequestOnTenantChallenge: () => (/* binding */ authorizeRequestOnTenantChallenge)\n/* harmony export */ });\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n/**\n * A set of constants used internally when processing requests.\n */\nconst Constants = {\n    DefaultScope: \"/.default\",\n    /**\n     * Defines constants for use with HTTP headers.\n     */\n    HeaderConstants: {\n        /**\n         * The Authorization header.\n         */\n        AUTHORIZATION: \"authorization\",\n    },\n};\nfunction isUuid(text) {\n    return /^[0-9a-fA-F]{8}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{12}$/.test(text);\n}\n/**\n * Defines a callback to handle auth challenge for Storage APIs.\n * This implements the bearer challenge process described here: https://docs.microsoft.com/rest/api/storageservices/authorize-with-azure-active-directory#bearer-challenge\n * Handling has specific features for storage that departs to the general AAD challenge docs.\n **/\nconst authorizeRequestOnTenantChallenge = async (challengeOptions) => {\n    const requestOptions = requestToOptions(challengeOptions.request);\n    const challenge = getChallenge(challengeOptions.response);\n    if (challenge) {\n        const challengeInfo = parseChallenge(challenge);\n        const challengeScopes = buildScopes(challengeOptions, challengeInfo);\n        const tenantId = extractTenantId(challengeInfo);\n        if (!tenantId) {\n            return false;\n        }\n        const accessToken = await challengeOptions.getAccessToken(challengeScopes, Object.assign(Object.assign({}, requestOptions), { tenantId }));\n        if (!accessToken) {\n            return false;\n        }\n        challengeOptions.request.headers.set(Constants.HeaderConstants.AUTHORIZATION, `Bearer ${accessToken.token}`);\n        return true;\n    }\n    return false;\n};\n/**\n * Extracts the tenant id from the challenge information\n * The tenant id is contained in the authorization_uri as the first\n * path part.\n */\nfunction extractTenantId(challengeInfo) {\n    const parsedAuthUri = new URL(challengeInfo.authorization_uri);\n    const pathSegments = parsedAuthUri.pathname.split(\"/\");\n    const tenantId = pathSegments[1];\n    if (tenantId && isUuid(tenantId)) {\n        return tenantId;\n    }\n    return undefined;\n}\n/**\n * Builds the authentication scopes based on the information that comes in the\n * challenge information. Scopes url is present in the resource_id, if it is empty\n * we keep using the original scopes.\n */\nfunction buildScopes(challengeOptions, challengeInfo) {\n    if (!challengeInfo.resource_id) {\n        return challengeOptions.scopes;\n    }\n    const challengeScopes = new URL(challengeInfo.resource_id);\n    challengeScopes.pathname = Constants.DefaultScope;\n    let scope = challengeScopes.toString();\n    if (scope === \"https://disk.azure.com/.default\") {\n        // the extra slash is required by the service\n        scope = \"https://disk.azure.com//.default\";\n    }\n    return [scope];\n}\n/**\n * We will retrieve the challenge only if the response status code was 401,\n * and if the response contained the header \"WWW-Authenticate\" with a non-empty value.\n */\nfunction getChallenge(response) {\n    const challenge = response.headers.get(\"WWW-Authenticate\");\n    if (response.status === 401 && challenge) {\n        return challenge;\n    }\n    return;\n}\n/**\n * Converts: `Bearer a=\"b\" c=\"d\"`.\n * Into: `[ { a: 'b', c: 'd' }]`.\n *\n * @internal\n */\nfunction parseChallenge(challenge) {\n    const bearerChallenge = challenge.slice(\"Bearer \".length);\n    const challengeParts = `${bearerChallenge.trim()} `.split(\" \").filter((x) => x);\n    const keyValuePairs = challengeParts.map((keyValue) => (([key, value]) => ({ [key]: value }))(keyValue.trim().split(\"=\")));\n    // Key-value pairs to plain object:\n    return keyValuePairs.reduce((a, b) => (Object.assign(Object.assign({}, a), b)), {});\n}\n/**\n * Extracts the options form a Pipeline Request for later re-use\n */\nfunction requestToOptions(request) {\n    return {\n        abortSignal: request.abortSignal,\n        requestOptions: {\n            timeout: request.timeout,\n        },\n        tracingOptions: request.tracingOptions,\n    };\n}\n//# sourceMappingURL=authorizeRequestOnTenantChallenge.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2NvcmUtY2xpZW50L2Rpc3QvZXNtL2F1dGhvcml6ZVJlcXVlc3RPblRlbmFudENoYWxsZW5nZS5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQSx5QkFBeUIsRUFBRSxlQUFlLEVBQUUsZUFBZSxFQUFFLGVBQWUsRUFBRSxlQUFlLEdBQUc7QUFDaEc7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpSEFBaUgscUJBQXFCLFVBQVU7QUFDaEo7QUFDQTtBQUNBO0FBQ0EsZ0dBQWdHLGtCQUFrQjtBQUNsSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGNBQWMsZ0JBQWdCO0FBQzlCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw4QkFBOEIsd0JBQXdCO0FBQ3RELGlGQUFpRixjQUFjO0FBQy9GO0FBQ0EseUVBQXlFLGFBQWE7QUFDdEY7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZGFuaWVsMy12cDIvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2NvcmUtY2xpZW50L2Rpc3QvZXNtL2F1dGhvcml6ZVJlcXVlc3RPblRlbmFudENoYWxsZW5nZS5qcz9kZWU2Il0sInNvdXJjZXNDb250ZW50IjpbIi8vIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLlxuLy8gTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlLlxuLyoqXG4gKiBBIHNldCBvZiBjb25zdGFudHMgdXNlZCBpbnRlcm5hbGx5IHdoZW4gcHJvY2Vzc2luZyByZXF1ZXN0cy5cbiAqL1xuY29uc3QgQ29uc3RhbnRzID0ge1xuICAgIERlZmF1bHRTY29wZTogXCIvLmRlZmF1bHRcIixcbiAgICAvKipcbiAgICAgKiBEZWZpbmVzIGNvbnN0YW50cyBmb3IgdXNlIHdpdGggSFRUUCBoZWFkZXJzLlxuICAgICAqL1xuICAgIEhlYWRlckNvbnN0YW50czoge1xuICAgICAgICAvKipcbiAgICAgICAgICogVGhlIEF1dGhvcml6YXRpb24gaGVhZGVyLlxuICAgICAgICAgKi9cbiAgICAgICAgQVVUSE9SSVpBVElPTjogXCJhdXRob3JpemF0aW9uXCIsXG4gICAgfSxcbn07XG5mdW5jdGlvbiBpc1V1aWQodGV4dCkge1xuICAgIHJldHVybiAvXlswLTlhLWZBLUZdezh9XFxiLVswLTlhLWZBLUZdezR9XFxiLVswLTlhLWZBLUZdezR9XFxiLVswLTlhLWZBLUZdezR9XFxiLVswLTlhLWZBLUZdezEyfSQvLnRlc3QodGV4dCk7XG59XG4vKipcbiAqIERlZmluZXMgYSBjYWxsYmFjayB0byBoYW5kbGUgYXV0aCBjaGFsbGVuZ2UgZm9yIFN0b3JhZ2UgQVBJcy5cbiAqIFRoaXMgaW1wbGVtZW50cyB0aGUgYmVhcmVyIGNoYWxsZW5nZSBwcm9jZXNzIGRlc2NyaWJlZCBoZXJlOiBodHRwczovL2RvY3MubWljcm9zb2Z0LmNvbS9yZXN0L2FwaS9zdG9yYWdlc2VydmljZXMvYXV0aG9yaXplLXdpdGgtYXp1cmUtYWN0aXZlLWRpcmVjdG9yeSNiZWFyZXItY2hhbGxlbmdlXG4gKiBIYW5kbGluZyBoYXMgc3BlY2lmaWMgZmVhdHVyZXMgZm9yIHN0b3JhZ2UgdGhhdCBkZXBhcnRzIHRvIHRoZSBnZW5lcmFsIEFBRCBjaGFsbGVuZ2UgZG9jcy5cbiAqKi9cbmV4cG9ydCBjb25zdCBhdXRob3JpemVSZXF1ZXN0T25UZW5hbnRDaGFsbGVuZ2UgPSBhc3luYyAoY2hhbGxlbmdlT3B0aW9ucykgPT4ge1xuICAgIGNvbnN0IHJlcXVlc3RPcHRpb25zID0gcmVxdWVzdFRvT3B0aW9ucyhjaGFsbGVuZ2VPcHRpb25zLnJlcXVlc3QpO1xuICAgIGNvbnN0IGNoYWxsZW5nZSA9IGdldENoYWxsZW5nZShjaGFsbGVuZ2VPcHRpb25zLnJlc3BvbnNlKTtcbiAgICBpZiAoY2hhbGxlbmdlKSB7XG4gICAgICAgIGNvbnN0IGNoYWxsZW5nZUluZm8gPSBwYXJzZUNoYWxsZW5nZShjaGFsbGVuZ2UpO1xuICAgICAgICBjb25zdCBjaGFsbGVuZ2VTY29wZXMgPSBidWlsZFNjb3BlcyhjaGFsbGVuZ2VPcHRpb25zLCBjaGFsbGVuZ2VJbmZvKTtcbiAgICAgICAgY29uc3QgdGVuYW50SWQgPSBleHRyYWN0VGVuYW50SWQoY2hhbGxlbmdlSW5mbyk7XG4gICAgICAgIGlmICghdGVuYW50SWQpIHtcbiAgICAgICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgICAgfVxuICAgICAgICBjb25zdCBhY2Nlc3NUb2tlbiA9IGF3YWl0IGNoYWxsZW5nZU9wdGlvbnMuZ2V0QWNjZXNzVG9rZW4oY2hhbGxlbmdlU2NvcGVzLCBPYmplY3QuYXNzaWduKE9iamVjdC5hc3NpZ24oe30sIHJlcXVlc3RPcHRpb25zKSwgeyB0ZW5hbnRJZCB9KSk7XG4gICAgICAgIGlmICghYWNjZXNzVG9rZW4pIHtcbiAgICAgICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgICAgfVxuICAgICAgICBjaGFsbGVuZ2VPcHRpb25zLnJlcXVlc3QuaGVhZGVycy5zZXQoQ29uc3RhbnRzLkhlYWRlckNvbnN0YW50cy5BVVRIT1JJWkFUSU9OLCBgQmVhcmVyICR7YWNjZXNzVG9rZW4udG9rZW59YCk7XG4gICAgICAgIHJldHVybiB0cnVlO1xuICAgIH1cbiAgICByZXR1cm4gZmFsc2U7XG59O1xuLyoqXG4gKiBFeHRyYWN0cyB0aGUgdGVuYW50IGlkIGZyb20gdGhlIGNoYWxsZW5nZSBpbmZvcm1hdGlvblxuICogVGhlIHRlbmFudCBpZCBpcyBjb250YWluZWQgaW4gdGhlIGF1dGhvcml6YXRpb25fdXJpIGFzIHRoZSBmaXJzdFxuICogcGF0aCBwYXJ0LlxuICovXG5mdW5jdGlvbiBleHRyYWN0VGVuYW50SWQoY2hhbGxlbmdlSW5mbykge1xuICAgIGNvbnN0IHBhcnNlZEF1dGhVcmkgPSBuZXcgVVJMKGNoYWxsZW5nZUluZm8uYXV0aG9yaXphdGlvbl91cmkpO1xuICAgIGNvbnN0IHBhdGhTZWdtZW50cyA9IHBhcnNlZEF1dGhVcmkucGF0aG5hbWUuc3BsaXQoXCIvXCIpO1xuICAgIGNvbnN0IHRlbmFudElkID0gcGF0aFNlZ21lbnRzWzFdO1xuICAgIGlmICh0ZW5hbnRJZCAmJiBpc1V1aWQodGVuYW50SWQpKSB7XG4gICAgICAgIHJldHVybiB0ZW5hbnRJZDtcbiAgICB9XG4gICAgcmV0dXJuIHVuZGVmaW5lZDtcbn1cbi8qKlxuICogQnVpbGRzIHRoZSBhdXRoZW50aWNhdGlvbiBzY29wZXMgYmFzZWQgb24gdGhlIGluZm9ybWF0aW9uIHRoYXQgY29tZXMgaW4gdGhlXG4gKiBjaGFsbGVuZ2UgaW5mb3JtYXRpb24uIFNjb3BlcyB1cmwgaXMgcHJlc2VudCBpbiB0aGUgcmVzb3VyY2VfaWQsIGlmIGl0IGlzIGVtcHR5XG4gKiB3ZSBrZWVwIHVzaW5nIHRoZSBvcmlnaW5hbCBzY29wZXMuXG4gKi9cbmZ1bmN0aW9uIGJ1aWxkU2NvcGVzKGNoYWxsZW5nZU9wdGlvbnMsIGNoYWxsZW5nZUluZm8pIHtcbiAgICBpZiAoIWNoYWxsZW5nZUluZm8ucmVzb3VyY2VfaWQpIHtcbiAgICAgICAgcmV0dXJuIGNoYWxsZW5nZU9wdGlvbnMuc2NvcGVzO1xuICAgIH1cbiAgICBjb25zdCBjaGFsbGVuZ2VTY29wZXMgPSBuZXcgVVJMKGNoYWxsZW5nZUluZm8ucmVzb3VyY2VfaWQpO1xuICAgIGNoYWxsZW5nZVNjb3Blcy5wYXRobmFtZSA9IENvbnN0YW50cy5EZWZhdWx0U2NvcGU7XG4gICAgbGV0IHNjb3BlID0gY2hhbGxlbmdlU2NvcGVzLnRvU3RyaW5nKCk7XG4gICAgaWYgKHNjb3BlID09PSBcImh0dHBzOi8vZGlzay5henVyZS5jb20vLmRlZmF1bHRcIikge1xuICAgICAgICAvLyB0aGUgZXh0cmEgc2xhc2ggaXMgcmVxdWlyZWQgYnkgdGhlIHNlcnZpY2VcbiAgICAgICAgc2NvcGUgPSBcImh0dHBzOi8vZGlzay5henVyZS5jb20vLy5kZWZhdWx0XCI7XG4gICAgfVxuICAgIHJldHVybiBbc2NvcGVdO1xufVxuLyoqXG4gKiBXZSB3aWxsIHJldHJpZXZlIHRoZSBjaGFsbGVuZ2Ugb25seSBpZiB0aGUgcmVzcG9uc2Ugc3RhdHVzIGNvZGUgd2FzIDQwMSxcbiAqIGFuZCBpZiB0aGUgcmVzcG9uc2UgY29udGFpbmVkIHRoZSBoZWFkZXIgXCJXV1ctQXV0aGVudGljYXRlXCIgd2l0aCBhIG5vbi1lbXB0eSB2YWx1ZS5cbiAqL1xuZnVuY3Rpb24gZ2V0Q2hhbGxlbmdlKHJlc3BvbnNlKSB7XG4gICAgY29uc3QgY2hhbGxlbmdlID0gcmVzcG9uc2UuaGVhZGVycy5nZXQoXCJXV1ctQXV0aGVudGljYXRlXCIpO1xuICAgIGlmIChyZXNwb25zZS5zdGF0dXMgPT09IDQwMSAmJiBjaGFsbGVuZ2UpIHtcbiAgICAgICAgcmV0dXJuIGNoYWxsZW5nZTtcbiAgICB9XG4gICAgcmV0dXJuO1xufVxuLyoqXG4gKiBDb252ZXJ0czogYEJlYXJlciBhPVwiYlwiIGM9XCJkXCJgLlxuICogSW50bzogYFsgeyBhOiAnYicsIGM6ICdkJyB9XWAuXG4gKlxuICogQGludGVybmFsXG4gKi9cbmZ1bmN0aW9uIHBhcnNlQ2hhbGxlbmdlKGNoYWxsZW5nZSkge1xuICAgIGNvbnN0IGJlYXJlckNoYWxsZW5nZSA9IGNoYWxsZW5nZS5zbGljZShcIkJlYXJlciBcIi5sZW5ndGgpO1xuICAgIGNvbnN0IGNoYWxsZW5nZVBhcnRzID0gYCR7YmVhcmVyQ2hhbGxlbmdlLnRyaW0oKX0gYC5zcGxpdChcIiBcIikuZmlsdGVyKCh4KSA9PiB4KTtcbiAgICBjb25zdCBrZXlWYWx1ZVBhaXJzID0gY2hhbGxlbmdlUGFydHMubWFwKChrZXlWYWx1ZSkgPT4gKChba2V5LCB2YWx1ZV0pID0+ICh7IFtrZXldOiB2YWx1ZSB9KSkoa2V5VmFsdWUudHJpbSgpLnNwbGl0KFwiPVwiKSkpO1xuICAgIC8vIEtleS12YWx1ZSBwYWlycyB0byBwbGFpbiBvYmplY3Q6XG4gICAgcmV0dXJuIGtleVZhbHVlUGFpcnMucmVkdWNlKChhLCBiKSA9PiAoT2JqZWN0LmFzc2lnbihPYmplY3QuYXNzaWduKHt9LCBhKSwgYikpLCB7fSk7XG59XG4vKipcbiAqIEV4dHJhY3RzIHRoZSBvcHRpb25zIGZvcm0gYSBQaXBlbGluZSBSZXF1ZXN0IGZvciBsYXRlciByZS11c2VcbiAqL1xuZnVuY3Rpb24gcmVxdWVzdFRvT3B0aW9ucyhyZXF1ZXN0KSB7XG4gICAgcmV0dXJuIHtcbiAgICAgICAgYWJvcnRTaWduYWw6IHJlcXVlc3QuYWJvcnRTaWduYWwsXG4gICAgICAgIHJlcXVlc3RPcHRpb25zOiB7XG4gICAgICAgICAgICB0aW1lb3V0OiByZXF1ZXN0LnRpbWVvdXQsXG4gICAgICAgIH0sXG4gICAgICAgIHRyYWNpbmdPcHRpb25zOiByZXF1ZXN0LnRyYWNpbmdPcHRpb25zLFxuICAgIH07XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1hdXRob3JpemVSZXF1ZXN0T25UZW5hbnRDaGFsbGVuZ2UuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/core-client/dist/esm/authorizeRequestOnTenantChallenge.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/core-client/dist/esm/base64.js":
/*!************************************************************!*\
  !*** ./node_modules/@azure/core-client/dist/esm/base64.js ***!
  \************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   decodeString: () => (/* binding */ decodeString),\n/* harmony export */   decodeStringToString: () => (/* binding */ decodeStringToString),\n/* harmony export */   encodeByteArray: () => (/* binding */ encodeByteArray),\n/* harmony export */   encodeString: () => (/* binding */ encodeString)\n/* harmony export */ });\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n/**\n * Encodes a string in base64 format.\n * @param value - the string to encode\n * @internal\n */\nfunction encodeString(value) {\n    return Buffer.from(value).toString(\"base64\");\n}\n/**\n * Encodes a byte array in base64 format.\n * @param value - the Uint8Aray to encode\n * @internal\n */\nfunction encodeByteArray(value) {\n    const bufferValue = value instanceof Buffer ? value : Buffer.from(value.buffer);\n    return bufferValue.toString(\"base64\");\n}\n/**\n * Decodes a base64 string into a byte array.\n * @param value - the base64 string to decode\n * @internal\n */\nfunction decodeString(value) {\n    return Buffer.from(value, \"base64\");\n}\n/**\n * Decodes a base64 string into a string.\n * @param value - the base64 string to decode\n * @internal\n */\nfunction decodeStringToString(value) {\n    return Buffer.from(value, \"base64\").toString();\n}\n//# sourceMappingURL=base64.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2NvcmUtY2xpZW50L2Rpc3QvZXNtL2Jhc2U2NC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZGFuaWVsMy12cDIvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2NvcmUtY2xpZW50L2Rpc3QvZXNtL2Jhc2U2NC5qcz8wZmE3Il0sInNvdXJjZXNDb250ZW50IjpbIi8vIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLlxuLy8gTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlLlxuLyoqXG4gKiBFbmNvZGVzIGEgc3RyaW5nIGluIGJhc2U2NCBmb3JtYXQuXG4gKiBAcGFyYW0gdmFsdWUgLSB0aGUgc3RyaW5nIHRvIGVuY29kZVxuICogQGludGVybmFsXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBlbmNvZGVTdHJpbmcodmFsdWUpIHtcbiAgICByZXR1cm4gQnVmZmVyLmZyb20odmFsdWUpLnRvU3RyaW5nKFwiYmFzZTY0XCIpO1xufVxuLyoqXG4gKiBFbmNvZGVzIGEgYnl0ZSBhcnJheSBpbiBiYXNlNjQgZm9ybWF0LlxuICogQHBhcmFtIHZhbHVlIC0gdGhlIFVpbnQ4QXJheSB0byBlbmNvZGVcbiAqIEBpbnRlcm5hbFxuICovXG5leHBvcnQgZnVuY3Rpb24gZW5jb2RlQnl0ZUFycmF5KHZhbHVlKSB7XG4gICAgY29uc3QgYnVmZmVyVmFsdWUgPSB2YWx1ZSBpbnN0YW5jZW9mIEJ1ZmZlciA/IHZhbHVlIDogQnVmZmVyLmZyb20odmFsdWUuYnVmZmVyKTtcbiAgICByZXR1cm4gYnVmZmVyVmFsdWUudG9TdHJpbmcoXCJiYXNlNjRcIik7XG59XG4vKipcbiAqIERlY29kZXMgYSBiYXNlNjQgc3RyaW5nIGludG8gYSBieXRlIGFycmF5LlxuICogQHBhcmFtIHZhbHVlIC0gdGhlIGJhc2U2NCBzdHJpbmcgdG8gZGVjb2RlXG4gKiBAaW50ZXJuYWxcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGRlY29kZVN0cmluZyh2YWx1ZSkge1xuICAgIHJldHVybiBCdWZmZXIuZnJvbSh2YWx1ZSwgXCJiYXNlNjRcIik7XG59XG4vKipcbiAqIERlY29kZXMgYSBiYXNlNjQgc3RyaW5nIGludG8gYSBzdHJpbmcuXG4gKiBAcGFyYW0gdmFsdWUgLSB0aGUgYmFzZTY0IHN0cmluZyB0byBkZWNvZGVcbiAqIEBpbnRlcm5hbFxuICovXG5leHBvcnQgZnVuY3Rpb24gZGVjb2RlU3RyaW5nVG9TdHJpbmcodmFsdWUpIHtcbiAgICByZXR1cm4gQnVmZmVyLmZyb20odmFsdWUsIFwiYmFzZTY0XCIpLnRvU3RyaW5nKCk7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1iYXNlNjQuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/core-client/dist/esm/base64.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/core-client/dist/esm/deserializationPolicy.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@azure/core-client/dist/esm/deserializationPolicy.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   deserializationPolicy: () => (/* binding */ deserializationPolicy),\n/* harmony export */   deserializationPolicyName: () => (/* binding */ deserializationPolicyName)\n/* harmony export */ });\n/* harmony import */ var _interfaces_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./interfaces.js */ \"(rsc)/./node_modules/@azure/core-client/dist/esm/interfaces.js\");\n/* harmony import */ var _azure_core_rest_pipeline__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @azure/core-rest-pipeline */ \"(rsc)/./node_modules/@azure/core-rest-pipeline/dist/esm/index.js\");\n/* harmony import */ var _serializer_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./serializer.js */ \"(rsc)/./node_modules/@azure/core-client/dist/esm/serializer.js\");\n/* harmony import */ var _operationHelpers_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./operationHelpers.js */ \"(rsc)/./node_modules/@azure/core-client/dist/esm/operationHelpers.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\n\n\n\nconst defaultJsonContentTypes = [\"application/json\", \"text/json\"];\nconst defaultXmlContentTypes = [\"application/xml\", \"application/atom+xml\"];\n/**\n * The programmatic identifier of the deserializationPolicy.\n */\nconst deserializationPolicyName = \"deserializationPolicy\";\n/**\n * This policy handles parsing out responses according to OperationSpecs on the request.\n */\nfunction deserializationPolicy(options = {}) {\n    var _a, _b, _c, _d, _e, _f, _g;\n    const jsonContentTypes = (_b = (_a = options.expectedContentTypes) === null || _a === void 0 ? void 0 : _a.json) !== null && _b !== void 0 ? _b : defaultJsonContentTypes;\n    const xmlContentTypes = (_d = (_c = options.expectedContentTypes) === null || _c === void 0 ? void 0 : _c.xml) !== null && _d !== void 0 ? _d : defaultXmlContentTypes;\n    const parseXML = options.parseXML;\n    const serializerOptions = options.serializerOptions;\n    const updatedOptions = {\n        xml: {\n            rootName: (_e = serializerOptions === null || serializerOptions === void 0 ? void 0 : serializerOptions.xml.rootName) !== null && _e !== void 0 ? _e : \"\",\n            includeRoot: (_f = serializerOptions === null || serializerOptions === void 0 ? void 0 : serializerOptions.xml.includeRoot) !== null && _f !== void 0 ? _f : false,\n            xmlCharKey: (_g = serializerOptions === null || serializerOptions === void 0 ? void 0 : serializerOptions.xml.xmlCharKey) !== null && _g !== void 0 ? _g : _interfaces_js__WEBPACK_IMPORTED_MODULE_0__.XML_CHARKEY,\n        },\n    };\n    return {\n        name: deserializationPolicyName,\n        async sendRequest(request, next) {\n            const response = await next(request);\n            return deserializeResponseBody(jsonContentTypes, xmlContentTypes, response, updatedOptions, parseXML);\n        },\n    };\n}\nfunction getOperationResponseMap(parsedResponse) {\n    let result;\n    const request = parsedResponse.request;\n    const operationInfo = (0,_operationHelpers_js__WEBPACK_IMPORTED_MODULE_3__.getOperationRequestInfo)(request);\n    const operationSpec = operationInfo === null || operationInfo === void 0 ? void 0 : operationInfo.operationSpec;\n    if (operationSpec) {\n        if (!(operationInfo === null || operationInfo === void 0 ? void 0 : operationInfo.operationResponseGetter)) {\n            result = operationSpec.responses[parsedResponse.status];\n        }\n        else {\n            result = operationInfo === null || operationInfo === void 0 ? void 0 : operationInfo.operationResponseGetter(operationSpec, parsedResponse);\n        }\n    }\n    return result;\n}\nfunction shouldDeserializeResponse(parsedResponse) {\n    const request = parsedResponse.request;\n    const operationInfo = (0,_operationHelpers_js__WEBPACK_IMPORTED_MODULE_3__.getOperationRequestInfo)(request);\n    const shouldDeserialize = operationInfo === null || operationInfo === void 0 ? void 0 : operationInfo.shouldDeserialize;\n    let result;\n    if (shouldDeserialize === undefined) {\n        result = true;\n    }\n    else if (typeof shouldDeserialize === \"boolean\") {\n        result = shouldDeserialize;\n    }\n    else {\n        result = shouldDeserialize(parsedResponse);\n    }\n    return result;\n}\nasync function deserializeResponseBody(jsonContentTypes, xmlContentTypes, response, options, parseXML) {\n    const parsedResponse = await parse(jsonContentTypes, xmlContentTypes, response, options, parseXML);\n    if (!shouldDeserializeResponse(parsedResponse)) {\n        return parsedResponse;\n    }\n    const operationInfo = (0,_operationHelpers_js__WEBPACK_IMPORTED_MODULE_3__.getOperationRequestInfo)(parsedResponse.request);\n    const operationSpec = operationInfo === null || operationInfo === void 0 ? void 0 : operationInfo.operationSpec;\n    if (!operationSpec || !operationSpec.responses) {\n        return parsedResponse;\n    }\n    const responseSpec = getOperationResponseMap(parsedResponse);\n    const { error, shouldReturnResponse } = handleErrorResponse(parsedResponse, operationSpec, responseSpec, options);\n    if (error) {\n        throw error;\n    }\n    else if (shouldReturnResponse) {\n        return parsedResponse;\n    }\n    // An operation response spec does exist for current status code, so\n    // use it to deserialize the response.\n    if (responseSpec) {\n        if (responseSpec.bodyMapper) {\n            let valueToDeserialize = parsedResponse.parsedBody;\n            if (operationSpec.isXML && responseSpec.bodyMapper.type.name === _serializer_js__WEBPACK_IMPORTED_MODULE_2__.MapperTypeNames.Sequence) {\n                valueToDeserialize =\n                    typeof valueToDeserialize === \"object\"\n                        ? valueToDeserialize[responseSpec.bodyMapper.xmlElementName]\n                        : [];\n            }\n            try {\n                parsedResponse.parsedBody = operationSpec.serializer.deserialize(responseSpec.bodyMapper, valueToDeserialize, \"operationRes.parsedBody\", options);\n            }\n            catch (deserializeError) {\n                const restError = new _azure_core_rest_pipeline__WEBPACK_IMPORTED_MODULE_1__.RestError(`Error ${deserializeError} occurred in deserializing the responseBody - ${parsedResponse.bodyAsText}`, {\n                    statusCode: parsedResponse.status,\n                    request: parsedResponse.request,\n                    response: parsedResponse,\n                });\n                throw restError;\n            }\n        }\n        else if (operationSpec.httpMethod === \"HEAD\") {\n            // head methods never have a body, but we return a boolean to indicate presence/absence of the resource\n            parsedResponse.parsedBody = response.status >= 200 && response.status < 300;\n        }\n        if (responseSpec.headersMapper) {\n            parsedResponse.parsedHeaders = operationSpec.serializer.deserialize(responseSpec.headersMapper, parsedResponse.headers.toJSON(), \"operationRes.parsedHeaders\", { xml: {}, ignoreUnknownProperties: true });\n        }\n    }\n    return parsedResponse;\n}\nfunction isOperationSpecEmpty(operationSpec) {\n    const expectedStatusCodes = Object.keys(operationSpec.responses);\n    return (expectedStatusCodes.length === 0 ||\n        (expectedStatusCodes.length === 1 && expectedStatusCodes[0] === \"default\"));\n}\nfunction handleErrorResponse(parsedResponse, operationSpec, responseSpec, options) {\n    var _a;\n    const isSuccessByStatus = 200 <= parsedResponse.status && parsedResponse.status < 300;\n    const isExpectedStatusCode = isOperationSpecEmpty(operationSpec)\n        ? isSuccessByStatus\n        : !!responseSpec;\n    if (isExpectedStatusCode) {\n        if (responseSpec) {\n            if (!responseSpec.isError) {\n                return { error: null, shouldReturnResponse: false };\n            }\n        }\n        else {\n            return { error: null, shouldReturnResponse: false };\n        }\n    }\n    const errorResponseSpec = responseSpec !== null && responseSpec !== void 0 ? responseSpec : operationSpec.responses.default;\n    const initialErrorMessage = ((_a = parsedResponse.request.streamResponseStatusCodes) === null || _a === void 0 ? void 0 : _a.has(parsedResponse.status))\n        ? `Unexpected status code: ${parsedResponse.status}`\n        : parsedResponse.bodyAsText;\n    const error = new _azure_core_rest_pipeline__WEBPACK_IMPORTED_MODULE_1__.RestError(initialErrorMessage, {\n        statusCode: parsedResponse.status,\n        request: parsedResponse.request,\n        response: parsedResponse,\n    });\n    // If the item failed but there's no error spec or default spec to deserialize the error,\n    // we should fail so we just throw the parsed response\n    if (!errorResponseSpec) {\n        throw error;\n    }\n    const defaultBodyMapper = errorResponseSpec.bodyMapper;\n    const defaultHeadersMapper = errorResponseSpec.headersMapper;\n    try {\n        // If error response has a body, try to deserialize it using default body mapper.\n        // Then try to extract error code & message from it\n        if (parsedResponse.parsedBody) {\n            const parsedBody = parsedResponse.parsedBody;\n            let deserializedError;\n            if (defaultBodyMapper) {\n                let valueToDeserialize = parsedBody;\n                if (operationSpec.isXML && defaultBodyMapper.type.name === _serializer_js__WEBPACK_IMPORTED_MODULE_2__.MapperTypeNames.Sequence) {\n                    valueToDeserialize = [];\n                    const elementName = defaultBodyMapper.xmlElementName;\n                    if (typeof parsedBody === \"object\" && elementName) {\n                        valueToDeserialize = parsedBody[elementName];\n                    }\n                }\n                deserializedError = operationSpec.serializer.deserialize(defaultBodyMapper, valueToDeserialize, \"error.response.parsedBody\", options);\n            }\n            const internalError = parsedBody.error || deserializedError || parsedBody;\n            error.code = internalError.code;\n            if (internalError.message) {\n                error.message = internalError.message;\n            }\n            if (defaultBodyMapper) {\n                error.response.parsedBody = deserializedError;\n            }\n        }\n        // If error response has headers, try to deserialize it using default header mapper\n        if (parsedResponse.headers && defaultHeadersMapper) {\n            error.response.parsedHeaders =\n                operationSpec.serializer.deserialize(defaultHeadersMapper, parsedResponse.headers.toJSON(), \"operationRes.parsedHeaders\");\n        }\n    }\n    catch (defaultError) {\n        error.message = `Error \"${defaultError.message}\" occurred in deserializing the responseBody - \"${parsedResponse.bodyAsText}\" for the default response.`;\n    }\n    return { error, shouldReturnResponse: false };\n}\nasync function parse(jsonContentTypes, xmlContentTypes, operationResponse, opts, parseXML) {\n    var _a;\n    if (!((_a = operationResponse.request.streamResponseStatusCodes) === null || _a === void 0 ? void 0 : _a.has(operationResponse.status)) &&\n        operationResponse.bodyAsText) {\n        const text = operationResponse.bodyAsText;\n        const contentType = operationResponse.headers.get(\"Content-Type\") || \"\";\n        const contentComponents = !contentType\n            ? []\n            : contentType.split(\";\").map((component) => component.toLowerCase());\n        try {\n            if (contentComponents.length === 0 ||\n                contentComponents.some((component) => jsonContentTypes.indexOf(component) !== -1)) {\n                operationResponse.parsedBody = JSON.parse(text);\n                return operationResponse;\n            }\n            else if (contentComponents.some((component) => xmlContentTypes.indexOf(component) !== -1)) {\n                if (!parseXML) {\n                    throw new Error(\"Parsing XML not supported.\");\n                }\n                const body = await parseXML(text, opts.xml);\n                operationResponse.parsedBody = body;\n                return operationResponse;\n            }\n        }\n        catch (err) {\n            const msg = `Error \"${err}\" occurred while parsing the response body - ${operationResponse.bodyAsText}.`;\n            const errCode = err.code || _azure_core_rest_pipeline__WEBPACK_IMPORTED_MODULE_1__.RestError.PARSE_ERROR;\n            const e = new _azure_core_rest_pipeline__WEBPACK_IMPORTED_MODULE_1__.RestError(msg, {\n                code: errCode,\n                statusCode: operationResponse.status,\n                request: operationResponse.request,\n                response: operationResponse,\n            });\n            throw e;\n        }\n    }\n    return operationResponse;\n}\n//# sourceMappingURL=deserializationPolicy.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/core-client/dist/esm/deserializationPolicy.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/core-client/dist/esm/httpClientCache.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@azure/core-client/dist/esm/httpClientCache.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getCachedDefaultHttpClient: () => (/* binding */ getCachedDefaultHttpClient)\n/* harmony export */ });\n/* harmony import */ var _azure_core_rest_pipeline__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @azure/core-rest-pipeline */ \"(rsc)/./node_modules/@azure/core-rest-pipeline/dist/esm/index.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nlet cachedHttpClient;\nfunction getCachedDefaultHttpClient() {\n    if (!cachedHttpClient) {\n        cachedHttpClient = (0,_azure_core_rest_pipeline__WEBPACK_IMPORTED_MODULE_0__.createDefaultHttpClient)();\n    }\n    return cachedHttpClient;\n}\n//# sourceMappingURL=httpClientCache.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2NvcmUtY2xpZW50L2Rpc3QvZXNtL2h0dHBDbGllbnRDYWNoZS5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFBO0FBQ0E7QUFDb0U7QUFDcEU7QUFDTztBQUNQO0FBQ0EsMkJBQTJCLGtGQUF1QjtBQUNsRDtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2RhbmllbDMtdnAyLy4vbm9kZV9tb2R1bGVzL0BhenVyZS9jb3JlLWNsaWVudC9kaXN0L2VzbS9odHRwQ2xpZW50Q2FjaGUuanM/ZTY3NiJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi5cbi8vIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZS5cbmltcG9ydCB7IGNyZWF0ZURlZmF1bHRIdHRwQ2xpZW50IH0gZnJvbSBcIkBhenVyZS9jb3JlLXJlc3QtcGlwZWxpbmVcIjtcbmxldCBjYWNoZWRIdHRwQ2xpZW50O1xuZXhwb3J0IGZ1bmN0aW9uIGdldENhY2hlZERlZmF1bHRIdHRwQ2xpZW50KCkge1xuICAgIGlmICghY2FjaGVkSHR0cENsaWVudCkge1xuICAgICAgICBjYWNoZWRIdHRwQ2xpZW50ID0gY3JlYXRlRGVmYXVsdEh0dHBDbGllbnQoKTtcbiAgICB9XG4gICAgcmV0dXJuIGNhY2hlZEh0dHBDbGllbnQ7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1odHRwQ2xpZW50Q2FjaGUuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/core-client/dist/esm/httpClientCache.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/core-client/dist/esm/index.js":
/*!***********************************************************!*\
  !*** ./node_modules/@azure/core-client/dist/esm/index.js ***!
  \***********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   MapperTypeNames: () => (/* reexport safe */ _serializer_js__WEBPACK_IMPORTED_MODULE_0__.MapperTypeNames),\n/* harmony export */   ServiceClient: () => (/* reexport safe */ _serviceClient_js__WEBPACK_IMPORTED_MODULE_1__.ServiceClient),\n/* harmony export */   XML_ATTRKEY: () => (/* reexport safe */ _interfaces_js__WEBPACK_IMPORTED_MODULE_3__.XML_ATTRKEY),\n/* harmony export */   XML_CHARKEY: () => (/* reexport safe */ _interfaces_js__WEBPACK_IMPORTED_MODULE_3__.XML_CHARKEY),\n/* harmony export */   authorizeRequestOnClaimChallenge: () => (/* reexport safe */ _authorizeRequestOnClaimChallenge_js__WEBPACK_IMPORTED_MODULE_6__.authorizeRequestOnClaimChallenge),\n/* harmony export */   authorizeRequestOnTenantChallenge: () => (/* reexport safe */ _authorizeRequestOnTenantChallenge_js__WEBPACK_IMPORTED_MODULE_7__.authorizeRequestOnTenantChallenge),\n/* harmony export */   createClientPipeline: () => (/* reexport safe */ _pipeline_js__WEBPACK_IMPORTED_MODULE_2__.createClientPipeline),\n/* harmony export */   createSerializer: () => (/* reexport safe */ _serializer_js__WEBPACK_IMPORTED_MODULE_0__.createSerializer),\n/* harmony export */   deserializationPolicy: () => (/* reexport safe */ _deserializationPolicy_js__WEBPACK_IMPORTED_MODULE_4__.deserializationPolicy),\n/* harmony export */   deserializationPolicyName: () => (/* reexport safe */ _deserializationPolicy_js__WEBPACK_IMPORTED_MODULE_4__.deserializationPolicyName),\n/* harmony export */   serializationPolicy: () => (/* reexport safe */ _serializationPolicy_js__WEBPACK_IMPORTED_MODULE_5__.serializationPolicy),\n/* harmony export */   serializationPolicyName: () => (/* reexport safe */ _serializationPolicy_js__WEBPACK_IMPORTED_MODULE_5__.serializationPolicyName)\n/* harmony export */ });\n/* harmony import */ var _serializer_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./serializer.js */ \"(rsc)/./node_modules/@azure/core-client/dist/esm/serializer.js\");\n/* harmony import */ var _serviceClient_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./serviceClient.js */ \"(rsc)/./node_modules/@azure/core-client/dist/esm/serviceClient.js\");\n/* harmony import */ var _pipeline_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./pipeline.js */ \"(rsc)/./node_modules/@azure/core-client/dist/esm/pipeline.js\");\n/* harmony import */ var _interfaces_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./interfaces.js */ \"(rsc)/./node_modules/@azure/core-client/dist/esm/interfaces.js\");\n/* harmony import */ var _deserializationPolicy_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./deserializationPolicy.js */ \"(rsc)/./node_modules/@azure/core-client/dist/esm/deserializationPolicy.js\");\n/* harmony import */ var _serializationPolicy_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./serializationPolicy.js */ \"(rsc)/./node_modules/@azure/core-client/dist/esm/serializationPolicy.js\");\n/* harmony import */ var _authorizeRequestOnClaimChallenge_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./authorizeRequestOnClaimChallenge.js */ \"(rsc)/./node_modules/@azure/core-client/dist/esm/authorizeRequestOnClaimChallenge.js\");\n/* harmony import */ var _authorizeRequestOnTenantChallenge_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./authorizeRequestOnTenantChallenge.js */ \"(rsc)/./node_modules/@azure/core-client/dist/esm/authorizeRequestOnTenantChallenge.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\n\n\n\n\n\n\n\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2NvcmUtY2xpZW50L2Rpc3QvZXNtL2luZGV4LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQUE7QUFDQTtBQUNvRTtBQUNqQjtBQUNFO0FBQ087QUFDbUM7QUFDTjtBQUNBO0FBQ0U7QUFDM0YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9kYW5pZWwzLXZwMi8uL25vZGVfbW9kdWxlcy9AYXp1cmUvY29yZS1jbGllbnQvZGlzdC9lc20vaW5kZXguanM/OTM5YiJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi5cbi8vIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZS5cbmV4cG9ydCB7IGNyZWF0ZVNlcmlhbGl6ZXIsIE1hcHBlclR5cGVOYW1lcyB9IGZyb20gXCIuL3NlcmlhbGl6ZXIuanNcIjtcbmV4cG9ydCB7IFNlcnZpY2VDbGllbnQgfSBmcm9tIFwiLi9zZXJ2aWNlQ2xpZW50LmpzXCI7XG5leHBvcnQgeyBjcmVhdGVDbGllbnRQaXBlbGluZSB9IGZyb20gXCIuL3BpcGVsaW5lLmpzXCI7XG5leHBvcnQgeyBYTUxfQVRUUktFWSwgWE1MX0NIQVJLRVksIH0gZnJvbSBcIi4vaW50ZXJmYWNlcy5qc1wiO1xuZXhwb3J0IHsgZGVzZXJpYWxpemF0aW9uUG9saWN5LCBkZXNlcmlhbGl6YXRpb25Qb2xpY3lOYW1lLCB9IGZyb20gXCIuL2Rlc2VyaWFsaXphdGlvblBvbGljeS5qc1wiO1xuZXhwb3J0IHsgc2VyaWFsaXphdGlvblBvbGljeSwgc2VyaWFsaXphdGlvblBvbGljeU5hbWUsIH0gZnJvbSBcIi4vc2VyaWFsaXphdGlvblBvbGljeS5qc1wiO1xuZXhwb3J0IHsgYXV0aG9yaXplUmVxdWVzdE9uQ2xhaW1DaGFsbGVuZ2UgfSBmcm9tIFwiLi9hdXRob3JpemVSZXF1ZXN0T25DbGFpbUNoYWxsZW5nZS5qc1wiO1xuZXhwb3J0IHsgYXV0aG9yaXplUmVxdWVzdE9uVGVuYW50Q2hhbGxlbmdlIH0gZnJvbSBcIi4vYXV0aG9yaXplUmVxdWVzdE9uVGVuYW50Q2hhbGxlbmdlLmpzXCI7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbmRleC5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/core-client/dist/esm/index.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/core-client/dist/esm/interfaceHelpers.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@azure/core-client/dist/esm/interfaceHelpers.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getPathStringFromParameter: () => (/* binding */ getPathStringFromParameter),\n/* harmony export */   getStreamingResponseStatusCodes: () => (/* binding */ getStreamingResponseStatusCodes)\n/* harmony export */ });\n/* harmony import */ var _serializer_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./serializer.js */ \"(rsc)/./node_modules/@azure/core-client/dist/esm/serializer.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\n/**\n * Gets the list of status codes for streaming responses.\n * @internal\n */\nfunction getStreamingResponseStatusCodes(operationSpec) {\n    const result = new Set();\n    for (const statusCode in operationSpec.responses) {\n        const operationResponse = operationSpec.responses[statusCode];\n        if (operationResponse.bodyMapper &&\n            operationResponse.bodyMapper.type.name === _serializer_js__WEBPACK_IMPORTED_MODULE_0__.MapperTypeNames.Stream) {\n            result.add(Number(statusCode));\n        }\n    }\n    return result;\n}\n/**\n * Get the path to this parameter's value as a dotted string (a.b.c).\n * @param parameter - The parameter to get the path string for.\n * @returns The path to this parameter's value as a dotted string.\n * @internal\n */\nfunction getPathStringFromParameter(parameter) {\n    const { parameterPath, mapper } = parameter;\n    let result;\n    if (typeof parameterPath === \"string\") {\n        result = parameterPath;\n    }\n    else if (Array.isArray(parameterPath)) {\n        result = parameterPath.join(\".\");\n    }\n    else {\n        result = mapper.serializedName;\n    }\n    return result;\n}\n//# sourceMappingURL=interfaceHelpers.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2NvcmUtY2xpZW50L2Rpc3QvZXNtL2ludGVyZmFjZUhlbHBlcnMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUE7QUFDQTtBQUNrRDtBQUNsRDtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQSx1REFBdUQsMkRBQWU7QUFDdEU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1AsWUFBWSx3QkFBd0I7QUFDcEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9kYW5pZWwzLXZwMi8uL25vZGVfbW9kdWxlcy9AYXp1cmUvY29yZS1jbGllbnQvZGlzdC9lc20vaW50ZXJmYWNlSGVscGVycy5qcz8yY2MwIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLlxuLy8gTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlLlxuaW1wb3J0IHsgTWFwcGVyVHlwZU5hbWVzIH0gZnJvbSBcIi4vc2VyaWFsaXplci5qc1wiO1xuLyoqXG4gKiBHZXRzIHRoZSBsaXN0IG9mIHN0YXR1cyBjb2RlcyBmb3Igc3RyZWFtaW5nIHJlc3BvbnNlcy5cbiAqIEBpbnRlcm5hbFxuICovXG5leHBvcnQgZnVuY3Rpb24gZ2V0U3RyZWFtaW5nUmVzcG9uc2VTdGF0dXNDb2RlcyhvcGVyYXRpb25TcGVjKSB7XG4gICAgY29uc3QgcmVzdWx0ID0gbmV3IFNldCgpO1xuICAgIGZvciAoY29uc3Qgc3RhdHVzQ29kZSBpbiBvcGVyYXRpb25TcGVjLnJlc3BvbnNlcykge1xuICAgICAgICBjb25zdCBvcGVyYXRpb25SZXNwb25zZSA9IG9wZXJhdGlvblNwZWMucmVzcG9uc2VzW3N0YXR1c0NvZGVdO1xuICAgICAgICBpZiAob3BlcmF0aW9uUmVzcG9uc2UuYm9keU1hcHBlciAmJlxuICAgICAgICAgICAgb3BlcmF0aW9uUmVzcG9uc2UuYm9keU1hcHBlci50eXBlLm5hbWUgPT09IE1hcHBlclR5cGVOYW1lcy5TdHJlYW0pIHtcbiAgICAgICAgICAgIHJlc3VsdC5hZGQoTnVtYmVyKHN0YXR1c0NvZGUpKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gcmVzdWx0O1xufVxuLyoqXG4gKiBHZXQgdGhlIHBhdGggdG8gdGhpcyBwYXJhbWV0ZXIncyB2YWx1ZSBhcyBhIGRvdHRlZCBzdHJpbmcgKGEuYi5jKS5cbiAqIEBwYXJhbSBwYXJhbWV0ZXIgLSBUaGUgcGFyYW1ldGVyIHRvIGdldCB0aGUgcGF0aCBzdHJpbmcgZm9yLlxuICogQHJldHVybnMgVGhlIHBhdGggdG8gdGhpcyBwYXJhbWV0ZXIncyB2YWx1ZSBhcyBhIGRvdHRlZCBzdHJpbmcuXG4gKiBAaW50ZXJuYWxcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGdldFBhdGhTdHJpbmdGcm9tUGFyYW1ldGVyKHBhcmFtZXRlcikge1xuICAgIGNvbnN0IHsgcGFyYW1ldGVyUGF0aCwgbWFwcGVyIH0gPSBwYXJhbWV0ZXI7XG4gICAgbGV0IHJlc3VsdDtcbiAgICBpZiAodHlwZW9mIHBhcmFtZXRlclBhdGggPT09IFwic3RyaW5nXCIpIHtcbiAgICAgICAgcmVzdWx0ID0gcGFyYW1ldGVyUGF0aDtcbiAgICB9XG4gICAgZWxzZSBpZiAoQXJyYXkuaXNBcnJheShwYXJhbWV0ZXJQYXRoKSkge1xuICAgICAgICByZXN1bHQgPSBwYXJhbWV0ZXJQYXRoLmpvaW4oXCIuXCIpO1xuICAgIH1cbiAgICBlbHNlIHtcbiAgICAgICAgcmVzdWx0ID0gbWFwcGVyLnNlcmlhbGl6ZWROYW1lO1xuICAgIH1cbiAgICByZXR1cm4gcmVzdWx0O1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW50ZXJmYWNlSGVscGVycy5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/core-client/dist/esm/interfaceHelpers.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/core-client/dist/esm/interfaces.js":
/*!****************************************************************!*\
  !*** ./node_modules/@azure/core-client/dist/esm/interfaces.js ***!
  \****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   XML_ATTRKEY: () => (/* binding */ XML_ATTRKEY),\n/* harmony export */   XML_CHARKEY: () => (/* binding */ XML_CHARKEY)\n/* harmony export */ });\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n/**\n * Default key used to access the XML attributes.\n */\nconst XML_ATTRKEY = \"$\";\n/**\n * Default key used to access the XML value content.\n */\nconst XML_CHARKEY = \"_\";\n//# sourceMappingURL=interfaces.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2NvcmUtY2xpZW50L2Rpc3QvZXNtL2ludGVyZmFjZXMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDTztBQUNQIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZGFuaWVsMy12cDIvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2NvcmUtY2xpZW50L2Rpc3QvZXNtL2ludGVyZmFjZXMuanM/ODA3MyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi5cbi8vIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZS5cbi8qKlxuICogRGVmYXVsdCBrZXkgdXNlZCB0byBhY2Nlc3MgdGhlIFhNTCBhdHRyaWJ1dGVzLlxuICovXG5leHBvcnQgY29uc3QgWE1MX0FUVFJLRVkgPSBcIiRcIjtcbi8qKlxuICogRGVmYXVsdCBrZXkgdXNlZCB0byBhY2Nlc3MgdGhlIFhNTCB2YWx1ZSBjb250ZW50LlxuICovXG5leHBvcnQgY29uc3QgWE1MX0NIQVJLRVkgPSBcIl9cIjtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWludGVyZmFjZXMuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/core-client/dist/esm/interfaces.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/core-client/dist/esm/log.js":
/*!*********************************************************!*\
  !*** ./node_modules/@azure/core-client/dist/esm/log.js ***!
  \*********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   logger: () => (/* binding */ logger)\n/* harmony export */ });\n/* harmony import */ var _azure_logger__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @azure/logger */ \"(rsc)/./node_modules/@azure/logger/dist/esm/index.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nconst logger = (0,_azure_logger__WEBPACK_IMPORTED_MODULE_0__.createClientLogger)(\"core-client\");\n//# sourceMappingURL=log.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2NvcmUtY2xpZW50L2Rpc3QvZXNtL2xvZy5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFBO0FBQ0E7QUFDbUQ7QUFDNUMsZUFBZSxpRUFBa0I7QUFDeEMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9kYW5pZWwzLXZwMi8uL25vZGVfbW9kdWxlcy9AYXp1cmUvY29yZS1jbGllbnQvZGlzdC9lc20vbG9nLmpzPzBiMjciXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uXG4vLyBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UuXG5pbXBvcnQgeyBjcmVhdGVDbGllbnRMb2dnZXIgfSBmcm9tIFwiQGF6dXJlL2xvZ2dlclwiO1xuZXhwb3J0IGNvbnN0IGxvZ2dlciA9IGNyZWF0ZUNsaWVudExvZ2dlcihcImNvcmUtY2xpZW50XCIpO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9bG9nLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/core-client/dist/esm/log.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/core-client/dist/esm/operationHelpers.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@azure/core-client/dist/esm/operationHelpers.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getOperationArgumentValueFromParameter: () => (/* binding */ getOperationArgumentValueFromParameter),\n/* harmony export */   getOperationRequestInfo: () => (/* binding */ getOperationRequestInfo)\n/* harmony export */ });\n/* harmony import */ var _state_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./state.js */ \"(rsc)/./node_modules/@azure/core-client/dist/esm/state.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\n/**\n * @internal\n * Retrieves the value to use for a given operation argument\n * @param operationArguments - The arguments passed from the generated client\n * @param parameter - The parameter description\n * @param fallbackObject - If something isn't found in the arguments bag, look here.\n *  Generally used to look at the service client properties.\n */\nfunction getOperationArgumentValueFromParameter(operationArguments, parameter, fallbackObject) {\n    let parameterPath = parameter.parameterPath;\n    const parameterMapper = parameter.mapper;\n    let value;\n    if (typeof parameterPath === \"string\") {\n        parameterPath = [parameterPath];\n    }\n    if (Array.isArray(parameterPath)) {\n        if (parameterPath.length > 0) {\n            if (parameterMapper.isConstant) {\n                value = parameterMapper.defaultValue;\n            }\n            else {\n                let propertySearchResult = getPropertyFromParameterPath(operationArguments, parameterPath);\n                if (!propertySearchResult.propertyFound && fallbackObject) {\n                    propertySearchResult = getPropertyFromParameterPath(fallbackObject, parameterPath);\n                }\n                let useDefaultValue = false;\n                if (!propertySearchResult.propertyFound) {\n                    useDefaultValue =\n                        parameterMapper.required ||\n                            (parameterPath[0] === \"options\" && parameterPath.length === 2);\n                }\n                value = useDefaultValue ? parameterMapper.defaultValue : propertySearchResult.propertyValue;\n            }\n        }\n    }\n    else {\n        if (parameterMapper.required) {\n            value = {};\n        }\n        for (const propertyName in parameterPath) {\n            const propertyMapper = parameterMapper.type.modelProperties[propertyName];\n            const propertyPath = parameterPath[propertyName];\n            const propertyValue = getOperationArgumentValueFromParameter(operationArguments, {\n                parameterPath: propertyPath,\n                mapper: propertyMapper,\n            }, fallbackObject);\n            if (propertyValue !== undefined) {\n                if (!value) {\n                    value = {};\n                }\n                value[propertyName] = propertyValue;\n            }\n        }\n    }\n    return value;\n}\nfunction getPropertyFromParameterPath(parent, parameterPath) {\n    const result = { propertyFound: false };\n    let i = 0;\n    for (; i < parameterPath.length; ++i) {\n        const parameterPathPart = parameterPath[i];\n        // Make sure to check inherited properties too, so don't use hasOwnProperty().\n        if (parent && parameterPathPart in parent) {\n            parent = parent[parameterPathPart];\n        }\n        else {\n            break;\n        }\n    }\n    if (i === parameterPath.length) {\n        result.propertyValue = parent;\n        result.propertyFound = true;\n    }\n    return result;\n}\nconst originalRequestSymbol = Symbol.for(\"@azure/core-client original request\");\nfunction hasOriginalRequest(request) {\n    return originalRequestSymbol in request;\n}\nfunction getOperationRequestInfo(request) {\n    if (hasOriginalRequest(request)) {\n        return getOperationRequestInfo(request[originalRequestSymbol]);\n    }\n    let info = _state_js__WEBPACK_IMPORTED_MODULE_0__.state.operationRequestMap.get(request);\n    if (!info) {\n        info = {};\n        _state_js__WEBPACK_IMPORTED_MODULE_0__.state.operationRequestMap.set(request, info);\n    }\n    return info;\n}\n//# sourceMappingURL=operationHelpers.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2NvcmUtY2xpZW50L2Rpc3QvZXNtL29wZXJhdGlvbkhlbHBlcnMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUE7QUFDQTtBQUNtQztBQUNuQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHFCQUFxQjtBQUNyQjtBQUNBLFdBQVcsMEJBQTBCO0FBQ3JDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQSxlQUFlLDRDQUFLO0FBQ3BCO0FBQ0E7QUFDQSxRQUFRLDRDQUFLO0FBQ2I7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9kYW5pZWwzLXZwMi8uL25vZGVfbW9kdWxlcy9AYXp1cmUvY29yZS1jbGllbnQvZGlzdC9lc20vb3BlcmF0aW9uSGVscGVycy5qcz81ZWU2Il0sInNvdXJjZXNDb250ZW50IjpbIi8vIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLlxuLy8gTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlLlxuaW1wb3J0IHsgc3RhdGUgfSBmcm9tIFwiLi9zdGF0ZS5qc1wiO1xuLyoqXG4gKiBAaW50ZXJuYWxcbiAqIFJldHJpZXZlcyB0aGUgdmFsdWUgdG8gdXNlIGZvciBhIGdpdmVuIG9wZXJhdGlvbiBhcmd1bWVudFxuICogQHBhcmFtIG9wZXJhdGlvbkFyZ3VtZW50cyAtIFRoZSBhcmd1bWVudHMgcGFzc2VkIGZyb20gdGhlIGdlbmVyYXRlZCBjbGllbnRcbiAqIEBwYXJhbSBwYXJhbWV0ZXIgLSBUaGUgcGFyYW1ldGVyIGRlc2NyaXB0aW9uXG4gKiBAcGFyYW0gZmFsbGJhY2tPYmplY3QgLSBJZiBzb21ldGhpbmcgaXNuJ3QgZm91bmQgaW4gdGhlIGFyZ3VtZW50cyBiYWcsIGxvb2sgaGVyZS5cbiAqICBHZW5lcmFsbHkgdXNlZCB0byBsb29rIGF0IHRoZSBzZXJ2aWNlIGNsaWVudCBwcm9wZXJ0aWVzLlxuICovXG5leHBvcnQgZnVuY3Rpb24gZ2V0T3BlcmF0aW9uQXJndW1lbnRWYWx1ZUZyb21QYXJhbWV0ZXIob3BlcmF0aW9uQXJndW1lbnRzLCBwYXJhbWV0ZXIsIGZhbGxiYWNrT2JqZWN0KSB7XG4gICAgbGV0IHBhcmFtZXRlclBhdGggPSBwYXJhbWV0ZXIucGFyYW1ldGVyUGF0aDtcbiAgICBjb25zdCBwYXJhbWV0ZXJNYXBwZXIgPSBwYXJhbWV0ZXIubWFwcGVyO1xuICAgIGxldCB2YWx1ZTtcbiAgICBpZiAodHlwZW9mIHBhcmFtZXRlclBhdGggPT09IFwic3RyaW5nXCIpIHtcbiAgICAgICAgcGFyYW1ldGVyUGF0aCA9IFtwYXJhbWV0ZXJQYXRoXTtcbiAgICB9XG4gICAgaWYgKEFycmF5LmlzQXJyYXkocGFyYW1ldGVyUGF0aCkpIHtcbiAgICAgICAgaWYgKHBhcmFtZXRlclBhdGgubGVuZ3RoID4gMCkge1xuICAgICAgICAgICAgaWYgKHBhcmFtZXRlck1hcHBlci5pc0NvbnN0YW50KSB7XG4gICAgICAgICAgICAgICAgdmFsdWUgPSBwYXJhbWV0ZXJNYXBwZXIuZGVmYXVsdFZhbHVlO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgbGV0IHByb3BlcnR5U2VhcmNoUmVzdWx0ID0gZ2V0UHJvcGVydHlGcm9tUGFyYW1ldGVyUGF0aChvcGVyYXRpb25Bcmd1bWVudHMsIHBhcmFtZXRlclBhdGgpO1xuICAgICAgICAgICAgICAgIGlmICghcHJvcGVydHlTZWFyY2hSZXN1bHQucHJvcGVydHlGb3VuZCAmJiBmYWxsYmFja09iamVjdCkge1xuICAgICAgICAgICAgICAgICAgICBwcm9wZXJ0eVNlYXJjaFJlc3VsdCA9IGdldFByb3BlcnR5RnJvbVBhcmFtZXRlclBhdGgoZmFsbGJhY2tPYmplY3QsIHBhcmFtZXRlclBhdGgpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBsZXQgdXNlRGVmYXVsdFZhbHVlID0gZmFsc2U7XG4gICAgICAgICAgICAgICAgaWYgKCFwcm9wZXJ0eVNlYXJjaFJlc3VsdC5wcm9wZXJ0eUZvdW5kKSB7XG4gICAgICAgICAgICAgICAgICAgIHVzZURlZmF1bHRWYWx1ZSA9XG4gICAgICAgICAgICAgICAgICAgICAgICBwYXJhbWV0ZXJNYXBwZXIucmVxdWlyZWQgfHxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAocGFyYW1ldGVyUGF0aFswXSA9PT0gXCJvcHRpb25zXCIgJiYgcGFyYW1ldGVyUGF0aC5sZW5ndGggPT09IDIpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB2YWx1ZSA9IHVzZURlZmF1bHRWYWx1ZSA/IHBhcmFtZXRlck1hcHBlci5kZWZhdWx0VmFsdWUgOiBwcm9wZXJ0eVNlYXJjaFJlc3VsdC5wcm9wZXJ0eVZhbHVlO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuICAgIGVsc2Uge1xuICAgICAgICBpZiAocGFyYW1ldGVyTWFwcGVyLnJlcXVpcmVkKSB7XG4gICAgICAgICAgICB2YWx1ZSA9IHt9O1xuICAgICAgICB9XG4gICAgICAgIGZvciAoY29uc3QgcHJvcGVydHlOYW1lIGluIHBhcmFtZXRlclBhdGgpIHtcbiAgICAgICAgICAgIGNvbnN0IHByb3BlcnR5TWFwcGVyID0gcGFyYW1ldGVyTWFwcGVyLnR5cGUubW9kZWxQcm9wZXJ0aWVzW3Byb3BlcnR5TmFtZV07XG4gICAgICAgICAgICBjb25zdCBwcm9wZXJ0eVBhdGggPSBwYXJhbWV0ZXJQYXRoW3Byb3BlcnR5TmFtZV07XG4gICAgICAgICAgICBjb25zdCBwcm9wZXJ0eVZhbHVlID0gZ2V0T3BlcmF0aW9uQXJndW1lbnRWYWx1ZUZyb21QYXJhbWV0ZXIob3BlcmF0aW9uQXJndW1lbnRzLCB7XG4gICAgICAgICAgICAgICAgcGFyYW1ldGVyUGF0aDogcHJvcGVydHlQYXRoLFxuICAgICAgICAgICAgICAgIG1hcHBlcjogcHJvcGVydHlNYXBwZXIsXG4gICAgICAgICAgICB9LCBmYWxsYmFja09iamVjdCk7XG4gICAgICAgICAgICBpZiAocHJvcGVydHlWYWx1ZSAhPT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICAgICAgICAgaWYgKCF2YWx1ZSkge1xuICAgICAgICAgICAgICAgICAgICB2YWx1ZSA9IHt9O1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB2YWx1ZVtwcm9wZXJ0eU5hbWVdID0gcHJvcGVydHlWYWx1ZTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gdmFsdWU7XG59XG5mdW5jdGlvbiBnZXRQcm9wZXJ0eUZyb21QYXJhbWV0ZXJQYXRoKHBhcmVudCwgcGFyYW1ldGVyUGF0aCkge1xuICAgIGNvbnN0IHJlc3VsdCA9IHsgcHJvcGVydHlGb3VuZDogZmFsc2UgfTtcbiAgICBsZXQgaSA9IDA7XG4gICAgZm9yICg7IGkgPCBwYXJhbWV0ZXJQYXRoLmxlbmd0aDsgKytpKSB7XG4gICAgICAgIGNvbnN0IHBhcmFtZXRlclBhdGhQYXJ0ID0gcGFyYW1ldGVyUGF0aFtpXTtcbiAgICAgICAgLy8gTWFrZSBzdXJlIHRvIGNoZWNrIGluaGVyaXRlZCBwcm9wZXJ0aWVzIHRvbywgc28gZG9uJ3QgdXNlIGhhc093blByb3BlcnR5KCkuXG4gICAgICAgIGlmIChwYXJlbnQgJiYgcGFyYW1ldGVyUGF0aFBhcnQgaW4gcGFyZW50KSB7XG4gICAgICAgICAgICBwYXJlbnQgPSBwYXJlbnRbcGFyYW1ldGVyUGF0aFBhcnRdO1xuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgIH1cbiAgICB9XG4gICAgaWYgKGkgPT09IHBhcmFtZXRlclBhdGgubGVuZ3RoKSB7XG4gICAgICAgIHJlc3VsdC5wcm9wZXJ0eVZhbHVlID0gcGFyZW50O1xuICAgICAgICByZXN1bHQucHJvcGVydHlGb3VuZCA9IHRydWU7XG4gICAgfVxuICAgIHJldHVybiByZXN1bHQ7XG59XG5jb25zdCBvcmlnaW5hbFJlcXVlc3RTeW1ib2wgPSBTeW1ib2wuZm9yKFwiQGF6dXJlL2NvcmUtY2xpZW50IG9yaWdpbmFsIHJlcXVlc3RcIik7XG5mdW5jdGlvbiBoYXNPcmlnaW5hbFJlcXVlc3QocmVxdWVzdCkge1xuICAgIHJldHVybiBvcmlnaW5hbFJlcXVlc3RTeW1ib2wgaW4gcmVxdWVzdDtcbn1cbmV4cG9ydCBmdW5jdGlvbiBnZXRPcGVyYXRpb25SZXF1ZXN0SW5mbyhyZXF1ZXN0KSB7XG4gICAgaWYgKGhhc09yaWdpbmFsUmVxdWVzdChyZXF1ZXN0KSkge1xuICAgICAgICByZXR1cm4gZ2V0T3BlcmF0aW9uUmVxdWVzdEluZm8ocmVxdWVzdFtvcmlnaW5hbFJlcXVlc3RTeW1ib2xdKTtcbiAgICB9XG4gICAgbGV0IGluZm8gPSBzdGF0ZS5vcGVyYXRpb25SZXF1ZXN0TWFwLmdldChyZXF1ZXN0KTtcbiAgICBpZiAoIWluZm8pIHtcbiAgICAgICAgaW5mbyA9IHt9O1xuICAgICAgICBzdGF0ZS5vcGVyYXRpb25SZXF1ZXN0TWFwLnNldChyZXF1ZXN0LCBpbmZvKTtcbiAgICB9XG4gICAgcmV0dXJuIGluZm87XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1vcGVyYXRpb25IZWxwZXJzLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/core-client/dist/esm/operationHelpers.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/core-client/dist/esm/pipeline.js":
/*!**************************************************************!*\
  !*** ./node_modules/@azure/core-client/dist/esm/pipeline.js ***!
  \**************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createClientPipeline: () => (/* binding */ createClientPipeline)\n/* harmony export */ });\n/* harmony import */ var _deserializationPolicy_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./deserializationPolicy.js */ \"(rsc)/./node_modules/@azure/core-client/dist/esm/deserializationPolicy.js\");\n/* harmony import */ var _azure_core_rest_pipeline__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @azure/core-rest-pipeline */ \"(rsc)/./node_modules/@azure/core-rest-pipeline/dist/esm/index.js\");\n/* harmony import */ var _serializationPolicy_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./serializationPolicy.js */ \"(rsc)/./node_modules/@azure/core-client/dist/esm/serializationPolicy.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\n\n\n/**\n * Creates a new Pipeline for use with a Service Client.\n * Adds in deserializationPolicy by default.\n * Also adds in bearerTokenAuthenticationPolicy if passed a TokenCredential.\n * @param options - Options to customize the created pipeline.\n */\nfunction createClientPipeline(options = {}) {\n    const pipeline = (0,_azure_core_rest_pipeline__WEBPACK_IMPORTED_MODULE_1__.createPipelineFromOptions)(options !== null && options !== void 0 ? options : {});\n    if (options.credentialOptions) {\n        pipeline.addPolicy((0,_azure_core_rest_pipeline__WEBPACK_IMPORTED_MODULE_1__.bearerTokenAuthenticationPolicy)({\n            credential: options.credentialOptions.credential,\n            scopes: options.credentialOptions.credentialScopes,\n        }));\n    }\n    pipeline.addPolicy((0,_serializationPolicy_js__WEBPACK_IMPORTED_MODULE_2__.serializationPolicy)(options.serializationOptions), { phase: \"Serialize\" });\n    pipeline.addPolicy((0,_deserializationPolicy_js__WEBPACK_IMPORTED_MODULE_0__.deserializationPolicy)(options.deserializationOptions), {\n        phase: \"Deserialize\",\n    });\n    return pipeline;\n}\n//# sourceMappingURL=pipeline.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2NvcmUtY2xpZW50L2Rpc3QvZXNtL3BpcGVsaW5lLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTtBQUNBO0FBQ21FO0FBQ3FDO0FBQ3pDO0FBQy9EO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPLDBDQUEwQztBQUNqRCxxQkFBcUIsb0ZBQXlCLHNEQUFzRDtBQUNwRztBQUNBLDJCQUEyQiwwRkFBK0I7QUFDMUQ7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBLHVCQUF1Qiw0RUFBbUIsa0NBQWtDLG9CQUFvQjtBQUNoRyx1QkFBdUIsZ0ZBQXFCO0FBQzVDO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2RhbmllbDMtdnAyLy4vbm9kZV9tb2R1bGVzL0BhenVyZS9jb3JlLWNsaWVudC9kaXN0L2VzbS9waXBlbGluZS5qcz80NDQ0Il0sInNvdXJjZXNDb250ZW50IjpbIi8vIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLlxuLy8gTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlLlxuaW1wb3J0IHsgZGVzZXJpYWxpemF0aW9uUG9saWN5IH0gZnJvbSBcIi4vZGVzZXJpYWxpemF0aW9uUG9saWN5LmpzXCI7XG5pbXBvcnQgeyBiZWFyZXJUb2tlbkF1dGhlbnRpY2F0aW9uUG9saWN5LCBjcmVhdGVQaXBlbGluZUZyb21PcHRpb25zLCB9IGZyb20gXCJAYXp1cmUvY29yZS1yZXN0LXBpcGVsaW5lXCI7XG5pbXBvcnQgeyBzZXJpYWxpemF0aW9uUG9saWN5IH0gZnJvbSBcIi4vc2VyaWFsaXphdGlvblBvbGljeS5qc1wiO1xuLyoqXG4gKiBDcmVhdGVzIGEgbmV3IFBpcGVsaW5lIGZvciB1c2Ugd2l0aCBhIFNlcnZpY2UgQ2xpZW50LlxuICogQWRkcyBpbiBkZXNlcmlhbGl6YXRpb25Qb2xpY3kgYnkgZGVmYXVsdC5cbiAqIEFsc28gYWRkcyBpbiBiZWFyZXJUb2tlbkF1dGhlbnRpY2F0aW9uUG9saWN5IGlmIHBhc3NlZCBhIFRva2VuQ3JlZGVudGlhbC5cbiAqIEBwYXJhbSBvcHRpb25zIC0gT3B0aW9ucyB0byBjdXN0b21pemUgdGhlIGNyZWF0ZWQgcGlwZWxpbmUuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBjcmVhdGVDbGllbnRQaXBlbGluZShvcHRpb25zID0ge30pIHtcbiAgICBjb25zdCBwaXBlbGluZSA9IGNyZWF0ZVBpcGVsaW5lRnJvbU9wdGlvbnMob3B0aW9ucyAhPT0gbnVsbCAmJiBvcHRpb25zICE9PSB2b2lkIDAgPyBvcHRpb25zIDoge30pO1xuICAgIGlmIChvcHRpb25zLmNyZWRlbnRpYWxPcHRpb25zKSB7XG4gICAgICAgIHBpcGVsaW5lLmFkZFBvbGljeShiZWFyZXJUb2tlbkF1dGhlbnRpY2F0aW9uUG9saWN5KHtcbiAgICAgICAgICAgIGNyZWRlbnRpYWw6IG9wdGlvbnMuY3JlZGVudGlhbE9wdGlvbnMuY3JlZGVudGlhbCxcbiAgICAgICAgICAgIHNjb3Blczogb3B0aW9ucy5jcmVkZW50aWFsT3B0aW9ucy5jcmVkZW50aWFsU2NvcGVzLFxuICAgICAgICB9KSk7XG4gICAgfVxuICAgIHBpcGVsaW5lLmFkZFBvbGljeShzZXJpYWxpemF0aW9uUG9saWN5KG9wdGlvbnMuc2VyaWFsaXphdGlvbk9wdGlvbnMpLCB7IHBoYXNlOiBcIlNlcmlhbGl6ZVwiIH0pO1xuICAgIHBpcGVsaW5lLmFkZFBvbGljeShkZXNlcmlhbGl6YXRpb25Qb2xpY3kob3B0aW9ucy5kZXNlcmlhbGl6YXRpb25PcHRpb25zKSwge1xuICAgICAgICBwaGFzZTogXCJEZXNlcmlhbGl6ZVwiLFxuICAgIH0pO1xuICAgIHJldHVybiBwaXBlbGluZTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXBpcGVsaW5lLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/core-client/dist/esm/pipeline.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/core-client/dist/esm/serializationPolicy.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@azure/core-client/dist/esm/serializationPolicy.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   serializationPolicy: () => (/* binding */ serializationPolicy),\n/* harmony export */   serializationPolicyName: () => (/* binding */ serializationPolicyName),\n/* harmony export */   serializeHeaders: () => (/* binding */ serializeHeaders),\n/* harmony export */   serializeRequestBody: () => (/* binding */ serializeRequestBody)\n/* harmony export */ });\n/* harmony import */ var _interfaces_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./interfaces.js */ \"(rsc)/./node_modules/@azure/core-client/dist/esm/interfaces.js\");\n/* harmony import */ var _operationHelpers_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./operationHelpers.js */ \"(rsc)/./node_modules/@azure/core-client/dist/esm/operationHelpers.js\");\n/* harmony import */ var _serializer_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./serializer.js */ \"(rsc)/./node_modules/@azure/core-client/dist/esm/serializer.js\");\n/* harmony import */ var _interfaceHelpers_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./interfaceHelpers.js */ \"(rsc)/./node_modules/@azure/core-client/dist/esm/interfaceHelpers.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\n\n\n\n/**\n * The programmatic identifier of the serializationPolicy.\n */\nconst serializationPolicyName = \"serializationPolicy\";\n/**\n * This policy handles assembling the request body and headers using\n * an OperationSpec and OperationArguments on the request.\n */\nfunction serializationPolicy(options = {}) {\n    const stringifyXML = options.stringifyXML;\n    return {\n        name: serializationPolicyName,\n        async sendRequest(request, next) {\n            const operationInfo = (0,_operationHelpers_js__WEBPACK_IMPORTED_MODULE_1__.getOperationRequestInfo)(request);\n            const operationSpec = operationInfo === null || operationInfo === void 0 ? void 0 : operationInfo.operationSpec;\n            const operationArguments = operationInfo === null || operationInfo === void 0 ? void 0 : operationInfo.operationArguments;\n            if (operationSpec && operationArguments) {\n                serializeHeaders(request, operationArguments, operationSpec);\n                serializeRequestBody(request, operationArguments, operationSpec, stringifyXML);\n            }\n            return next(request);\n        },\n    };\n}\n/**\n * @internal\n */\nfunction serializeHeaders(request, operationArguments, operationSpec) {\n    var _a, _b;\n    if (operationSpec.headerParameters) {\n        for (const headerParameter of operationSpec.headerParameters) {\n            let headerValue = (0,_operationHelpers_js__WEBPACK_IMPORTED_MODULE_1__.getOperationArgumentValueFromParameter)(operationArguments, headerParameter);\n            if ((headerValue !== null && headerValue !== undefined) || headerParameter.mapper.required) {\n                headerValue = operationSpec.serializer.serialize(headerParameter.mapper, headerValue, (0,_interfaceHelpers_js__WEBPACK_IMPORTED_MODULE_3__.getPathStringFromParameter)(headerParameter));\n                const headerCollectionPrefix = headerParameter.mapper\n                    .headerCollectionPrefix;\n                if (headerCollectionPrefix) {\n                    for (const key of Object.keys(headerValue)) {\n                        request.headers.set(headerCollectionPrefix + key, headerValue[key]);\n                    }\n                }\n                else {\n                    request.headers.set(headerParameter.mapper.serializedName || (0,_interfaceHelpers_js__WEBPACK_IMPORTED_MODULE_3__.getPathStringFromParameter)(headerParameter), headerValue);\n                }\n            }\n        }\n    }\n    const customHeaders = (_b = (_a = operationArguments.options) === null || _a === void 0 ? void 0 : _a.requestOptions) === null || _b === void 0 ? void 0 : _b.customHeaders;\n    if (customHeaders) {\n        for (const customHeaderName of Object.keys(customHeaders)) {\n            request.headers.set(customHeaderName, customHeaders[customHeaderName]);\n        }\n    }\n}\n/**\n * @internal\n */\nfunction serializeRequestBody(request, operationArguments, operationSpec, stringifyXML = function () {\n    throw new Error(\"XML serialization unsupported!\");\n}) {\n    var _a, _b, _c, _d, _e;\n    const serializerOptions = (_a = operationArguments.options) === null || _a === void 0 ? void 0 : _a.serializerOptions;\n    const updatedOptions = {\n        xml: {\n            rootName: (_b = serializerOptions === null || serializerOptions === void 0 ? void 0 : serializerOptions.xml.rootName) !== null && _b !== void 0 ? _b : \"\",\n            includeRoot: (_c = serializerOptions === null || serializerOptions === void 0 ? void 0 : serializerOptions.xml.includeRoot) !== null && _c !== void 0 ? _c : false,\n            xmlCharKey: (_d = serializerOptions === null || serializerOptions === void 0 ? void 0 : serializerOptions.xml.xmlCharKey) !== null && _d !== void 0 ? _d : _interfaces_js__WEBPACK_IMPORTED_MODULE_0__.XML_CHARKEY,\n        },\n    };\n    const xmlCharKey = updatedOptions.xml.xmlCharKey;\n    if (operationSpec.requestBody && operationSpec.requestBody.mapper) {\n        request.body = (0,_operationHelpers_js__WEBPACK_IMPORTED_MODULE_1__.getOperationArgumentValueFromParameter)(operationArguments, operationSpec.requestBody);\n        const bodyMapper = operationSpec.requestBody.mapper;\n        const { required, serializedName, xmlName, xmlElementName, xmlNamespace, xmlNamespacePrefix, nullable, } = bodyMapper;\n        const typeName = bodyMapper.type.name;\n        try {\n            if ((request.body !== undefined && request.body !== null) ||\n                (nullable && request.body === null) ||\n                required) {\n                const requestBodyParameterPathString = (0,_interfaceHelpers_js__WEBPACK_IMPORTED_MODULE_3__.getPathStringFromParameter)(operationSpec.requestBody);\n                request.body = operationSpec.serializer.serialize(bodyMapper, request.body, requestBodyParameterPathString, updatedOptions);\n                const isStream = typeName === _serializer_js__WEBPACK_IMPORTED_MODULE_2__.MapperTypeNames.Stream;\n                if (operationSpec.isXML) {\n                    const xmlnsKey = xmlNamespacePrefix ? `xmlns:${xmlNamespacePrefix}` : \"xmlns\";\n                    const value = getXmlValueWithNamespace(xmlNamespace, xmlnsKey, typeName, request.body, updatedOptions);\n                    if (typeName === _serializer_js__WEBPACK_IMPORTED_MODULE_2__.MapperTypeNames.Sequence) {\n                        request.body = stringifyXML(prepareXMLRootList(value, xmlElementName || xmlName || serializedName, xmlnsKey, xmlNamespace), { rootName: xmlName || serializedName, xmlCharKey });\n                    }\n                    else if (!isStream) {\n                        request.body = stringifyXML(value, {\n                            rootName: xmlName || serializedName,\n                            xmlCharKey,\n                        });\n                    }\n                }\n                else if (typeName === _serializer_js__WEBPACK_IMPORTED_MODULE_2__.MapperTypeNames.String &&\n                    (((_e = operationSpec.contentType) === null || _e === void 0 ? void 0 : _e.match(\"text/plain\")) || operationSpec.mediaType === \"text\")) {\n                    // the String serializer has validated that request body is a string\n                    // so just send the string.\n                    return;\n                }\n                else if (!isStream) {\n                    request.body = JSON.stringify(request.body);\n                }\n            }\n        }\n        catch (error) {\n            throw new Error(`Error \"${error.message}\" occurred in serializing the payload - ${JSON.stringify(serializedName, undefined, \"  \")}.`);\n        }\n    }\n    else if (operationSpec.formDataParameters && operationSpec.formDataParameters.length > 0) {\n        request.formData = {};\n        for (const formDataParameter of operationSpec.formDataParameters) {\n            const formDataParameterValue = (0,_operationHelpers_js__WEBPACK_IMPORTED_MODULE_1__.getOperationArgumentValueFromParameter)(operationArguments, formDataParameter);\n            if (formDataParameterValue !== undefined && formDataParameterValue !== null) {\n                const formDataParameterPropertyName = formDataParameter.mapper.serializedName || (0,_interfaceHelpers_js__WEBPACK_IMPORTED_MODULE_3__.getPathStringFromParameter)(formDataParameter);\n                request.formData[formDataParameterPropertyName] = operationSpec.serializer.serialize(formDataParameter.mapper, formDataParameterValue, (0,_interfaceHelpers_js__WEBPACK_IMPORTED_MODULE_3__.getPathStringFromParameter)(formDataParameter), updatedOptions);\n            }\n        }\n    }\n}\n/**\n * Adds an xml namespace to the xml serialized object if needed, otherwise it just returns the value itself\n */\nfunction getXmlValueWithNamespace(xmlNamespace, xmlnsKey, typeName, serializedValue, options) {\n    // Composite and Sequence schemas already got their root namespace set during serialization\n    // We just need to add xmlns to the other schema types\n    if (xmlNamespace && ![\"Composite\", \"Sequence\", \"Dictionary\"].includes(typeName)) {\n        const result = {};\n        result[options.xml.xmlCharKey] = serializedValue;\n        result[_interfaces_js__WEBPACK_IMPORTED_MODULE_0__.XML_ATTRKEY] = { [xmlnsKey]: xmlNamespace };\n        return result;\n    }\n    return serializedValue;\n}\nfunction prepareXMLRootList(obj, elementName, xmlNamespaceKey, xmlNamespace) {\n    if (!Array.isArray(obj)) {\n        obj = [obj];\n    }\n    if (!xmlNamespaceKey || !xmlNamespace) {\n        return { [elementName]: obj };\n    }\n    const result = { [elementName]: obj };\n    result[_interfaces_js__WEBPACK_IMPORTED_MODULE_0__.XML_ATTRKEY] = { [xmlNamespaceKey]: xmlNamespace };\n    return result;\n}\n//# sourceMappingURL=serializationPolicy.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/core-client/dist/esm/serializationPolicy.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/core-client/dist/esm/serializer.js":
/*!****************************************************************!*\
  !*** ./node_modules/@azure/core-client/dist/esm/serializer.js ***!
  \****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   MapperTypeNames: () => (/* binding */ MapperTypeNames),\n/* harmony export */   createSerializer: () => (/* binding */ createSerializer)\n/* harmony export */ });\n/* harmony import */ var _base64_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./base64.js */ \"(rsc)/./node_modules/@azure/core-client/dist/esm/base64.js\");\n/* harmony import */ var _interfaces_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./interfaces.js */ \"(rsc)/./node_modules/@azure/core-client/dist/esm/interfaces.js\");\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./utils.js */ \"(rsc)/./node_modules/@azure/core-client/dist/esm/utils.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\n\n\nclass SerializerImpl {\n    constructor(modelMappers = {}, isXML = false) {\n        this.modelMappers = modelMappers;\n        this.isXML = isXML;\n    }\n    /**\n     * @deprecated Removing the constraints validation on client side.\n     */\n    validateConstraints(mapper, value, objectName) {\n        const failValidation = (constraintName, constraintValue) => {\n            throw new Error(`\"${objectName}\" with value \"${value}\" should satisfy the constraint \"${constraintName}\": ${constraintValue}.`);\n        };\n        if (mapper.constraints && value !== undefined && value !== null) {\n            const { ExclusiveMaximum, ExclusiveMinimum, InclusiveMaximum, InclusiveMinimum, MaxItems, MaxLength, MinItems, MinLength, MultipleOf, Pattern, UniqueItems, } = mapper.constraints;\n            if (ExclusiveMaximum !== undefined && value >= ExclusiveMaximum) {\n                failValidation(\"ExclusiveMaximum\", ExclusiveMaximum);\n            }\n            if (ExclusiveMinimum !== undefined && value <= ExclusiveMinimum) {\n                failValidation(\"ExclusiveMinimum\", ExclusiveMinimum);\n            }\n            if (InclusiveMaximum !== undefined && value > InclusiveMaximum) {\n                failValidation(\"InclusiveMaximum\", InclusiveMaximum);\n            }\n            if (InclusiveMinimum !== undefined && value < InclusiveMinimum) {\n                failValidation(\"InclusiveMinimum\", InclusiveMinimum);\n            }\n            if (MaxItems !== undefined && value.length > MaxItems) {\n                failValidation(\"MaxItems\", MaxItems);\n            }\n            if (MaxLength !== undefined && value.length > MaxLength) {\n                failValidation(\"MaxLength\", MaxLength);\n            }\n            if (MinItems !== undefined && value.length < MinItems) {\n                failValidation(\"MinItems\", MinItems);\n            }\n            if (MinLength !== undefined && value.length < MinLength) {\n                failValidation(\"MinLength\", MinLength);\n            }\n            if (MultipleOf !== undefined && value % MultipleOf !== 0) {\n                failValidation(\"MultipleOf\", MultipleOf);\n            }\n            if (Pattern) {\n                const pattern = typeof Pattern === \"string\" ? new RegExp(Pattern) : Pattern;\n                if (typeof value !== \"string\" || value.match(pattern) === null) {\n                    failValidation(\"Pattern\", Pattern);\n                }\n            }\n            if (UniqueItems &&\n                value.some((item, i, ar) => ar.indexOf(item) !== i)) {\n                failValidation(\"UniqueItems\", UniqueItems);\n            }\n        }\n    }\n    /**\n     * Serialize the given object based on its metadata defined in the mapper\n     *\n     * @param mapper - The mapper which defines the metadata of the serializable object\n     *\n     * @param object - A valid Javascript object to be serialized\n     *\n     * @param objectName - Name of the serialized object\n     *\n     * @param options - additional options to serialization\n     *\n     * @returns A valid serialized Javascript object\n     */\n    serialize(mapper, object, objectName, options = { xml: {} }) {\n        var _a, _b, _c;\n        const updatedOptions = {\n            xml: {\n                rootName: (_a = options.xml.rootName) !== null && _a !== void 0 ? _a : \"\",\n                includeRoot: (_b = options.xml.includeRoot) !== null && _b !== void 0 ? _b : false,\n                xmlCharKey: (_c = options.xml.xmlCharKey) !== null && _c !== void 0 ? _c : _interfaces_js__WEBPACK_IMPORTED_MODULE_1__.XML_CHARKEY,\n            },\n        };\n        let payload = {};\n        const mapperType = mapper.type.name;\n        if (!objectName) {\n            objectName = mapper.serializedName;\n        }\n        if (mapperType.match(/^Sequence$/i) !== null) {\n            payload = [];\n        }\n        if (mapper.isConstant) {\n            object = mapper.defaultValue;\n        }\n        // This table of allowed values should help explain\n        // the mapper.required and mapper.nullable properties.\n        // X means \"neither undefined or null are allowed\".\n        //           || required\n        //           || true      | false\n        //  nullable || ==========================\n        //      true || null      | undefined/null\n        //     false || X         | undefined\n        // undefined || X         | undefined/null\n        const { required, nullable } = mapper;\n        if (required && nullable && object === undefined) {\n            throw new Error(`${objectName} cannot be undefined.`);\n        }\n        if (required && !nullable && (object === undefined || object === null)) {\n            throw new Error(`${objectName} cannot be null or undefined.`);\n        }\n        if (!required && nullable === false && object === null) {\n            throw new Error(`${objectName} cannot be null.`);\n        }\n        if (object === undefined || object === null) {\n            payload = object;\n        }\n        else {\n            if (mapperType.match(/^any$/i) !== null) {\n                payload = object;\n            }\n            else if (mapperType.match(/^(Number|String|Boolean|Object|Stream|Uuid)$/i) !== null) {\n                payload = serializeBasicTypes(mapperType, objectName, object);\n            }\n            else if (mapperType.match(/^Enum$/i) !== null) {\n                const enumMapper = mapper;\n                payload = serializeEnumType(objectName, enumMapper.type.allowedValues, object);\n            }\n            else if (mapperType.match(/^(Date|DateTime|TimeSpan|DateTimeRfc1123|UnixTime)$/i) !== null) {\n                payload = serializeDateTypes(mapperType, object, objectName);\n            }\n            else if (mapperType.match(/^ByteArray$/i) !== null) {\n                payload = serializeByteArrayType(objectName, object);\n            }\n            else if (mapperType.match(/^Base64Url$/i) !== null) {\n                payload = serializeBase64UrlType(objectName, object);\n            }\n            else if (mapperType.match(/^Sequence$/i) !== null) {\n                payload = serializeSequenceType(this, mapper, object, objectName, Boolean(this.isXML), updatedOptions);\n            }\n            else if (mapperType.match(/^Dictionary$/i) !== null) {\n                payload = serializeDictionaryType(this, mapper, object, objectName, Boolean(this.isXML), updatedOptions);\n            }\n            else if (mapperType.match(/^Composite$/i) !== null) {\n                payload = serializeCompositeType(this, mapper, object, objectName, Boolean(this.isXML), updatedOptions);\n            }\n        }\n        return payload;\n    }\n    /**\n     * Deserialize the given object based on its metadata defined in the mapper\n     *\n     * @param mapper - The mapper which defines the metadata of the serializable object\n     *\n     * @param responseBody - A valid Javascript entity to be deserialized\n     *\n     * @param objectName - Name of the deserialized object\n     *\n     * @param options - Controls behavior of XML parser and builder.\n     *\n     * @returns A valid deserialized Javascript object\n     */\n    deserialize(mapper, responseBody, objectName, options = { xml: {} }) {\n        var _a, _b, _c, _d;\n        const updatedOptions = {\n            xml: {\n                rootName: (_a = options.xml.rootName) !== null && _a !== void 0 ? _a : \"\",\n                includeRoot: (_b = options.xml.includeRoot) !== null && _b !== void 0 ? _b : false,\n                xmlCharKey: (_c = options.xml.xmlCharKey) !== null && _c !== void 0 ? _c : _interfaces_js__WEBPACK_IMPORTED_MODULE_1__.XML_CHARKEY,\n            },\n            ignoreUnknownProperties: (_d = options.ignoreUnknownProperties) !== null && _d !== void 0 ? _d : false,\n        };\n        if (responseBody === undefined || responseBody === null) {\n            if (this.isXML && mapper.type.name === \"Sequence\" && !mapper.xmlIsWrapped) {\n                // Edge case for empty XML non-wrapped lists. xml2js can't distinguish\n                // between the list being empty versus being missing,\n                // so let's do the more user-friendly thing and return an empty list.\n                responseBody = [];\n            }\n            // specifically check for undefined as default value can be a falsey value `0, \"\", false, null`\n            if (mapper.defaultValue !== undefined) {\n                responseBody = mapper.defaultValue;\n            }\n            return responseBody;\n        }\n        let payload;\n        const mapperType = mapper.type.name;\n        if (!objectName) {\n            objectName = mapper.serializedName;\n        }\n        if (mapperType.match(/^Composite$/i) !== null) {\n            payload = deserializeCompositeType(this, mapper, responseBody, objectName, updatedOptions);\n        }\n        else {\n            if (this.isXML) {\n                const xmlCharKey = updatedOptions.xml.xmlCharKey;\n                /**\n                 * If the mapper specifies this as a non-composite type value but the responseBody contains\n                 * both header (\"$\" i.e., XML_ATTRKEY) and body (\"#\" i.e., XML_CHARKEY) properties,\n                 * then just reduce the responseBody value to the body (\"#\" i.e., XML_CHARKEY) property.\n                 */\n                if (responseBody[_interfaces_js__WEBPACK_IMPORTED_MODULE_1__.XML_ATTRKEY] !== undefined && responseBody[xmlCharKey] !== undefined) {\n                    responseBody = responseBody[xmlCharKey];\n                }\n            }\n            if (mapperType.match(/^Number$/i) !== null) {\n                payload = parseFloat(responseBody);\n                if (isNaN(payload)) {\n                    payload = responseBody;\n                }\n            }\n            else if (mapperType.match(/^Boolean$/i) !== null) {\n                if (responseBody === \"true\") {\n                    payload = true;\n                }\n                else if (responseBody === \"false\") {\n                    payload = false;\n                }\n                else {\n                    payload = responseBody;\n                }\n            }\n            else if (mapperType.match(/^(String|Enum|Object|Stream|Uuid|TimeSpan|any)$/i) !== null) {\n                payload = responseBody;\n            }\n            else if (mapperType.match(/^(Date|DateTime|DateTimeRfc1123)$/i) !== null) {\n                payload = new Date(responseBody);\n            }\n            else if (mapperType.match(/^UnixTime$/i) !== null) {\n                payload = unixTimeToDate(responseBody);\n            }\n            else if (mapperType.match(/^ByteArray$/i) !== null) {\n                payload = _base64_js__WEBPACK_IMPORTED_MODULE_0__.decodeString(responseBody);\n            }\n            else if (mapperType.match(/^Base64Url$/i) !== null) {\n                payload = base64UrlToByteArray(responseBody);\n            }\n            else if (mapperType.match(/^Sequence$/i) !== null) {\n                payload = deserializeSequenceType(this, mapper, responseBody, objectName, updatedOptions);\n            }\n            else if (mapperType.match(/^Dictionary$/i) !== null) {\n                payload = deserializeDictionaryType(this, mapper, responseBody, objectName, updatedOptions);\n            }\n        }\n        if (mapper.isConstant) {\n            payload = mapper.defaultValue;\n        }\n        return payload;\n    }\n}\n/**\n * Method that creates and returns a Serializer.\n * @param modelMappers - Known models to map\n * @param isXML - If XML should be supported\n */\nfunction createSerializer(modelMappers = {}, isXML = false) {\n    return new SerializerImpl(modelMappers, isXML);\n}\nfunction trimEnd(str, ch) {\n    let len = str.length;\n    while (len - 1 >= 0 && str[len - 1] === ch) {\n        --len;\n    }\n    return str.substr(0, len);\n}\nfunction bufferToBase64Url(buffer) {\n    if (!buffer) {\n        return undefined;\n    }\n    if (!(buffer instanceof Uint8Array)) {\n        throw new Error(`Please provide an input of type Uint8Array for converting to Base64Url.`);\n    }\n    // Uint8Array to Base64.\n    const str = _base64_js__WEBPACK_IMPORTED_MODULE_0__.encodeByteArray(buffer);\n    // Base64 to Base64Url.\n    return trimEnd(str, \"=\").replace(/\\+/g, \"-\").replace(/\\//g, \"_\");\n}\nfunction base64UrlToByteArray(str) {\n    if (!str) {\n        return undefined;\n    }\n    if (str && typeof str.valueOf() !== \"string\") {\n        throw new Error(\"Please provide an input of type string for converting to Uint8Array\");\n    }\n    // Base64Url to Base64.\n    str = str.replace(/-/g, \"+\").replace(/_/g, \"/\");\n    // Base64 to Uint8Array.\n    return _base64_js__WEBPACK_IMPORTED_MODULE_0__.decodeString(str);\n}\nfunction splitSerializeName(prop) {\n    const classes = [];\n    let partialclass = \"\";\n    if (prop) {\n        const subwords = prop.split(\".\");\n        for (const item of subwords) {\n            if (item.charAt(item.length - 1) === \"\\\\\") {\n                partialclass += item.substr(0, item.length - 1) + \".\";\n            }\n            else {\n                partialclass += item;\n                classes.push(partialclass);\n                partialclass = \"\";\n            }\n        }\n    }\n    return classes;\n}\nfunction dateToUnixTime(d) {\n    if (!d) {\n        return undefined;\n    }\n    if (typeof d.valueOf() === \"string\") {\n        d = new Date(d);\n    }\n    return Math.floor(d.getTime() / 1000);\n}\nfunction unixTimeToDate(n) {\n    if (!n) {\n        return undefined;\n    }\n    return new Date(n * 1000);\n}\nfunction serializeBasicTypes(typeName, objectName, value) {\n    if (value !== null && value !== undefined) {\n        if (typeName.match(/^Number$/i) !== null) {\n            if (typeof value !== \"number\") {\n                throw new Error(`${objectName} with value ${value} must be of type number.`);\n            }\n        }\n        else if (typeName.match(/^String$/i) !== null) {\n            if (typeof value.valueOf() !== \"string\") {\n                throw new Error(`${objectName} with value \"${value}\" must be of type string.`);\n            }\n        }\n        else if (typeName.match(/^Uuid$/i) !== null) {\n            if (!(typeof value.valueOf() === \"string\" && (0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.isValidUuid)(value))) {\n                throw new Error(`${objectName} with value \"${value}\" must be of type string and a valid uuid.`);\n            }\n        }\n        else if (typeName.match(/^Boolean$/i) !== null) {\n            if (typeof value !== \"boolean\") {\n                throw new Error(`${objectName} with value ${value} must be of type boolean.`);\n            }\n        }\n        else if (typeName.match(/^Stream$/i) !== null) {\n            const objectType = typeof value;\n            if (objectType !== \"string\" &&\n                typeof value.pipe !== \"function\" && // NodeJS.ReadableStream\n                typeof value.tee !== \"function\" && // browser ReadableStream\n                !(value instanceof ArrayBuffer) &&\n                !ArrayBuffer.isView(value) &&\n                // File objects count as a type of Blob, so we want to use instanceof explicitly\n                !((typeof Blob === \"function\" || typeof Blob === \"object\") && value instanceof Blob) &&\n                objectType !== \"function\") {\n                throw new Error(`${objectName} must be a string, Blob, ArrayBuffer, ArrayBufferView, ReadableStream, or () => ReadableStream.`);\n            }\n        }\n    }\n    return value;\n}\nfunction serializeEnumType(objectName, allowedValues, value) {\n    if (!allowedValues) {\n        throw new Error(`Please provide a set of allowedValues to validate ${objectName} as an Enum Type.`);\n    }\n    const isPresent = allowedValues.some((item) => {\n        if (typeof item.valueOf() === \"string\") {\n            return item.toLowerCase() === value.toLowerCase();\n        }\n        return item === value;\n    });\n    if (!isPresent) {\n        throw new Error(`${value} is not a valid value for ${objectName}. The valid values are: ${JSON.stringify(allowedValues)}.`);\n    }\n    return value;\n}\nfunction serializeByteArrayType(objectName, value) {\n    if (value !== undefined && value !== null) {\n        if (!(value instanceof Uint8Array)) {\n            throw new Error(`${objectName} must be of type Uint8Array.`);\n        }\n        value = _base64_js__WEBPACK_IMPORTED_MODULE_0__.encodeByteArray(value);\n    }\n    return value;\n}\nfunction serializeBase64UrlType(objectName, value) {\n    if (value !== undefined && value !== null) {\n        if (!(value instanceof Uint8Array)) {\n            throw new Error(`${objectName} must be of type Uint8Array.`);\n        }\n        value = bufferToBase64Url(value);\n    }\n    return value;\n}\nfunction serializeDateTypes(typeName, value, objectName) {\n    if (value !== undefined && value !== null) {\n        if (typeName.match(/^Date$/i) !== null) {\n            if (!(value instanceof Date ||\n                (typeof value.valueOf() === \"string\" && !isNaN(Date.parse(value))))) {\n                throw new Error(`${objectName} must be an instanceof Date or a string in ISO8601 format.`);\n            }\n            value =\n                value instanceof Date\n                    ? value.toISOString().substring(0, 10)\n                    : new Date(value).toISOString().substring(0, 10);\n        }\n        else if (typeName.match(/^DateTime$/i) !== null) {\n            if (!(value instanceof Date ||\n                (typeof value.valueOf() === \"string\" && !isNaN(Date.parse(value))))) {\n                throw new Error(`${objectName} must be an instanceof Date or a string in ISO8601 format.`);\n            }\n            value = value instanceof Date ? value.toISOString() : new Date(value).toISOString();\n        }\n        else if (typeName.match(/^DateTimeRfc1123$/i) !== null) {\n            if (!(value instanceof Date ||\n                (typeof value.valueOf() === \"string\" && !isNaN(Date.parse(value))))) {\n                throw new Error(`${objectName} must be an instanceof Date or a string in RFC-1123 format.`);\n            }\n            value = value instanceof Date ? value.toUTCString() : new Date(value).toUTCString();\n        }\n        else if (typeName.match(/^UnixTime$/i) !== null) {\n            if (!(value instanceof Date ||\n                (typeof value.valueOf() === \"string\" && !isNaN(Date.parse(value))))) {\n                throw new Error(`${objectName} must be an instanceof Date or a string in RFC-1123/ISO8601 format ` +\n                    `for it to be serialized in UnixTime/Epoch format.`);\n            }\n            value = dateToUnixTime(value);\n        }\n        else if (typeName.match(/^TimeSpan$/i) !== null) {\n            if (!(0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.isDuration)(value)) {\n                throw new Error(`${objectName} must be a string in ISO 8601 format. Instead was \"${value}\".`);\n            }\n        }\n    }\n    return value;\n}\nfunction serializeSequenceType(serializer, mapper, object, objectName, isXml, options) {\n    var _a;\n    if (!Array.isArray(object)) {\n        throw new Error(`${objectName} must be of type Array.`);\n    }\n    let elementType = mapper.type.element;\n    if (!elementType || typeof elementType !== \"object\") {\n        throw new Error(`element\" metadata for an Array must be defined in the ` +\n            `mapper and it must of type \"object\" in ${objectName}.`);\n    }\n    // Quirk: Composite mappers referenced by `element` might\n    // not have *all* properties declared (like uberParent),\n    // so let's try to look up the full definition by name.\n    if (elementType.type.name === \"Composite\" && elementType.type.className) {\n        elementType = (_a = serializer.modelMappers[elementType.type.className]) !== null && _a !== void 0 ? _a : elementType;\n    }\n    const tempArray = [];\n    for (let i = 0; i < object.length; i++) {\n        const serializedValue = serializer.serialize(elementType, object[i], objectName, options);\n        if (isXml && elementType.xmlNamespace) {\n            const xmlnsKey = elementType.xmlNamespacePrefix\n                ? `xmlns:${elementType.xmlNamespacePrefix}`\n                : \"xmlns\";\n            if (elementType.type.name === \"Composite\") {\n                tempArray[i] = Object.assign({}, serializedValue);\n                tempArray[i][_interfaces_js__WEBPACK_IMPORTED_MODULE_1__.XML_ATTRKEY] = { [xmlnsKey]: elementType.xmlNamespace };\n            }\n            else {\n                tempArray[i] = {};\n                tempArray[i][options.xml.xmlCharKey] = serializedValue;\n                tempArray[i][_interfaces_js__WEBPACK_IMPORTED_MODULE_1__.XML_ATTRKEY] = { [xmlnsKey]: elementType.xmlNamespace };\n            }\n        }\n        else {\n            tempArray[i] = serializedValue;\n        }\n    }\n    return tempArray;\n}\nfunction serializeDictionaryType(serializer, mapper, object, objectName, isXml, options) {\n    if (typeof object !== \"object\") {\n        throw new Error(`${objectName} must be of type object.`);\n    }\n    const valueType = mapper.type.value;\n    if (!valueType || typeof valueType !== \"object\") {\n        throw new Error(`\"value\" metadata for a Dictionary must be defined in the ` +\n            `mapper and it must of type \"object\" in ${objectName}.`);\n    }\n    const tempDictionary = {};\n    for (const key of Object.keys(object)) {\n        const serializedValue = serializer.serialize(valueType, object[key], objectName, options);\n        // If the element needs an XML namespace we need to add it within the $ property\n        tempDictionary[key] = getXmlObjectValue(valueType, serializedValue, isXml, options);\n    }\n    // Add the namespace to the root element if needed\n    if (isXml && mapper.xmlNamespace) {\n        const xmlnsKey = mapper.xmlNamespacePrefix ? `xmlns:${mapper.xmlNamespacePrefix}` : \"xmlns\";\n        const result = tempDictionary;\n        result[_interfaces_js__WEBPACK_IMPORTED_MODULE_1__.XML_ATTRKEY] = { [xmlnsKey]: mapper.xmlNamespace };\n        return result;\n    }\n    return tempDictionary;\n}\n/**\n * Resolves the additionalProperties property from a referenced mapper\n * @param serializer - the serializer containing the entire set of mappers\n * @param mapper - the composite mapper to resolve\n * @param objectName - name of the object being serialized\n */\nfunction resolveAdditionalProperties(serializer, mapper, objectName) {\n    const additionalProperties = mapper.type.additionalProperties;\n    if (!additionalProperties && mapper.type.className) {\n        const modelMapper = resolveReferencedMapper(serializer, mapper, objectName);\n        return modelMapper === null || modelMapper === void 0 ? void 0 : modelMapper.type.additionalProperties;\n    }\n    return additionalProperties;\n}\n/**\n * Finds the mapper referenced by className\n * @param serializer - the serializer containing the entire set of mappers\n * @param mapper - the composite mapper to resolve\n * @param objectName - name of the object being serialized\n */\nfunction resolveReferencedMapper(serializer, mapper, objectName) {\n    const className = mapper.type.className;\n    if (!className) {\n        throw new Error(`Class name for model \"${objectName}\" is not provided in the mapper \"${JSON.stringify(mapper, undefined, 2)}\".`);\n    }\n    return serializer.modelMappers[className];\n}\n/**\n * Resolves a composite mapper's modelProperties.\n * @param serializer - the serializer containing the entire set of mappers\n * @param mapper - the composite mapper to resolve\n */\nfunction resolveModelProperties(serializer, mapper, objectName) {\n    let modelProps = mapper.type.modelProperties;\n    if (!modelProps) {\n        const modelMapper = resolveReferencedMapper(serializer, mapper, objectName);\n        if (!modelMapper) {\n            throw new Error(`mapper() cannot be null or undefined for model \"${mapper.type.className}\".`);\n        }\n        modelProps = modelMapper === null || modelMapper === void 0 ? void 0 : modelMapper.type.modelProperties;\n        if (!modelProps) {\n            throw new Error(`modelProperties cannot be null or undefined in the ` +\n                `mapper \"${JSON.stringify(modelMapper)}\" of type \"${mapper.type.className}\" for object \"${objectName}\".`);\n        }\n    }\n    return modelProps;\n}\nfunction serializeCompositeType(serializer, mapper, object, objectName, isXml, options) {\n    if (getPolymorphicDiscriminatorRecursively(serializer, mapper)) {\n        mapper = getPolymorphicMapper(serializer, mapper, object, \"clientName\");\n    }\n    if (object !== undefined && object !== null) {\n        const payload = {};\n        const modelProps = resolveModelProperties(serializer, mapper, objectName);\n        for (const key of Object.keys(modelProps)) {\n            const propertyMapper = modelProps[key];\n            if (propertyMapper.readOnly) {\n                continue;\n            }\n            let propName;\n            let parentObject = payload;\n            if (serializer.isXML) {\n                if (propertyMapper.xmlIsWrapped) {\n                    propName = propertyMapper.xmlName;\n                }\n                else {\n                    propName = propertyMapper.xmlElementName || propertyMapper.xmlName;\n                }\n            }\n            else {\n                const paths = splitSerializeName(propertyMapper.serializedName);\n                propName = paths.pop();\n                for (const pathName of paths) {\n                    const childObject = parentObject[pathName];\n                    if ((childObject === undefined || childObject === null) &&\n                        ((object[key] !== undefined && object[key] !== null) ||\n                            propertyMapper.defaultValue !== undefined)) {\n                        parentObject[pathName] = {};\n                    }\n                    parentObject = parentObject[pathName];\n                }\n            }\n            if (parentObject !== undefined && parentObject !== null) {\n                if (isXml && mapper.xmlNamespace) {\n                    const xmlnsKey = mapper.xmlNamespacePrefix\n                        ? `xmlns:${mapper.xmlNamespacePrefix}`\n                        : \"xmlns\";\n                    parentObject[_interfaces_js__WEBPACK_IMPORTED_MODULE_1__.XML_ATTRKEY] = Object.assign(Object.assign({}, parentObject[_interfaces_js__WEBPACK_IMPORTED_MODULE_1__.XML_ATTRKEY]), { [xmlnsKey]: mapper.xmlNamespace });\n                }\n                const propertyObjectName = propertyMapper.serializedName !== \"\"\n                    ? objectName + \".\" + propertyMapper.serializedName\n                    : objectName;\n                let toSerialize = object[key];\n                const polymorphicDiscriminator = getPolymorphicDiscriminatorRecursively(serializer, mapper);\n                if (polymorphicDiscriminator &&\n                    polymorphicDiscriminator.clientName === key &&\n                    (toSerialize === undefined || toSerialize === null)) {\n                    toSerialize = mapper.serializedName;\n                }\n                const serializedValue = serializer.serialize(propertyMapper, toSerialize, propertyObjectName, options);\n                if (serializedValue !== undefined && propName !== undefined && propName !== null) {\n                    const value = getXmlObjectValue(propertyMapper, serializedValue, isXml, options);\n                    if (isXml && propertyMapper.xmlIsAttribute) {\n                        // XML_ATTRKEY, i.e., $ is the key attributes are kept under in xml2js.\n                        // This keeps things simple while preventing name collision\n                        // with names in user documents.\n                        parentObject[_interfaces_js__WEBPACK_IMPORTED_MODULE_1__.XML_ATTRKEY] = parentObject[_interfaces_js__WEBPACK_IMPORTED_MODULE_1__.XML_ATTRKEY] || {};\n                        parentObject[_interfaces_js__WEBPACK_IMPORTED_MODULE_1__.XML_ATTRKEY][propName] = serializedValue;\n                    }\n                    else if (isXml && propertyMapper.xmlIsWrapped) {\n                        parentObject[propName] = { [propertyMapper.xmlElementName]: value };\n                    }\n                    else {\n                        parentObject[propName] = value;\n                    }\n                }\n            }\n        }\n        const additionalPropertiesMapper = resolveAdditionalProperties(serializer, mapper, objectName);\n        if (additionalPropertiesMapper) {\n            const propNames = Object.keys(modelProps);\n            for (const clientPropName in object) {\n                const isAdditionalProperty = propNames.every((pn) => pn !== clientPropName);\n                if (isAdditionalProperty) {\n                    payload[clientPropName] = serializer.serialize(additionalPropertiesMapper, object[clientPropName], objectName + '[\"' + clientPropName + '\"]', options);\n                }\n            }\n        }\n        return payload;\n    }\n    return object;\n}\nfunction getXmlObjectValue(propertyMapper, serializedValue, isXml, options) {\n    if (!isXml || !propertyMapper.xmlNamespace) {\n        return serializedValue;\n    }\n    const xmlnsKey = propertyMapper.xmlNamespacePrefix\n        ? `xmlns:${propertyMapper.xmlNamespacePrefix}`\n        : \"xmlns\";\n    const xmlNamespace = { [xmlnsKey]: propertyMapper.xmlNamespace };\n    if ([\"Composite\"].includes(propertyMapper.type.name)) {\n        if (serializedValue[_interfaces_js__WEBPACK_IMPORTED_MODULE_1__.XML_ATTRKEY]) {\n            return serializedValue;\n        }\n        else {\n            const result = Object.assign({}, serializedValue);\n            result[_interfaces_js__WEBPACK_IMPORTED_MODULE_1__.XML_ATTRKEY] = xmlNamespace;\n            return result;\n        }\n    }\n    const result = {};\n    result[options.xml.xmlCharKey] = serializedValue;\n    result[_interfaces_js__WEBPACK_IMPORTED_MODULE_1__.XML_ATTRKEY] = xmlNamespace;\n    return result;\n}\nfunction isSpecialXmlProperty(propertyName, options) {\n    return [_interfaces_js__WEBPACK_IMPORTED_MODULE_1__.XML_ATTRKEY, options.xml.xmlCharKey].includes(propertyName);\n}\nfunction deserializeCompositeType(serializer, mapper, responseBody, objectName, options) {\n    var _a, _b;\n    const xmlCharKey = (_a = options.xml.xmlCharKey) !== null && _a !== void 0 ? _a : _interfaces_js__WEBPACK_IMPORTED_MODULE_1__.XML_CHARKEY;\n    if (getPolymorphicDiscriminatorRecursively(serializer, mapper)) {\n        mapper = getPolymorphicMapper(serializer, mapper, responseBody, \"serializedName\");\n    }\n    const modelProps = resolveModelProperties(serializer, mapper, objectName);\n    let instance = {};\n    const handledPropertyNames = [];\n    for (const key of Object.keys(modelProps)) {\n        const propertyMapper = modelProps[key];\n        const paths = splitSerializeName(modelProps[key].serializedName);\n        handledPropertyNames.push(paths[0]);\n        const { serializedName, xmlName, xmlElementName } = propertyMapper;\n        let propertyObjectName = objectName;\n        if (serializedName !== \"\" && serializedName !== undefined) {\n            propertyObjectName = objectName + \".\" + serializedName;\n        }\n        const headerCollectionPrefix = propertyMapper.headerCollectionPrefix;\n        if (headerCollectionPrefix) {\n            const dictionary = {};\n            for (const headerKey of Object.keys(responseBody)) {\n                if (headerKey.startsWith(headerCollectionPrefix)) {\n                    dictionary[headerKey.substring(headerCollectionPrefix.length)] = serializer.deserialize(propertyMapper.type.value, responseBody[headerKey], propertyObjectName, options);\n                }\n                handledPropertyNames.push(headerKey);\n            }\n            instance[key] = dictionary;\n        }\n        else if (serializer.isXML) {\n            if (propertyMapper.xmlIsAttribute && responseBody[_interfaces_js__WEBPACK_IMPORTED_MODULE_1__.XML_ATTRKEY]) {\n                instance[key] = serializer.deserialize(propertyMapper, responseBody[_interfaces_js__WEBPACK_IMPORTED_MODULE_1__.XML_ATTRKEY][xmlName], propertyObjectName, options);\n            }\n            else if (propertyMapper.xmlIsMsText) {\n                if (responseBody[xmlCharKey] !== undefined) {\n                    instance[key] = responseBody[xmlCharKey];\n                }\n                else if (typeof responseBody === \"string\") {\n                    // The special case where xml parser parses \"<Name>content</Name>\" into JSON of\n                    //   `{ name: \"content\"}` instead of `{ name: { \"_\": \"content\" }}`\n                    instance[key] = responseBody;\n                }\n            }\n            else {\n                const propertyName = xmlElementName || xmlName || serializedName;\n                if (propertyMapper.xmlIsWrapped) {\n                    /* a list of <xmlElementName> wrapped by <xmlName>\n                      For the xml example below\n                        <Cors>\n                          <CorsRule>...</CorsRule>\n                          <CorsRule>...</CorsRule>\n                        </Cors>\n                      the responseBody has\n                        {\n                          Cors: {\n                            CorsRule: [{...}, {...}]\n                          }\n                        }\n                      xmlName is \"Cors\" and xmlElementName is\"CorsRule\".\n                    */\n                    const wrapped = responseBody[xmlName];\n                    const elementList = (_b = wrapped === null || wrapped === void 0 ? void 0 : wrapped[xmlElementName]) !== null && _b !== void 0 ? _b : [];\n                    instance[key] = serializer.deserialize(propertyMapper, elementList, propertyObjectName, options);\n                    handledPropertyNames.push(xmlName);\n                }\n                else {\n                    const property = responseBody[propertyName];\n                    instance[key] = serializer.deserialize(propertyMapper, property, propertyObjectName, options);\n                    handledPropertyNames.push(propertyName);\n                }\n            }\n        }\n        else {\n            // deserialize the property if it is present in the provided responseBody instance\n            let propertyInstance;\n            let res = responseBody;\n            // traversing the object step by step.\n            let steps = 0;\n            for (const item of paths) {\n                if (!res)\n                    break;\n                steps++;\n                res = res[item];\n            }\n            // only accept null when reaching the last position of object otherwise it would be undefined\n            if (res === null && steps < paths.length) {\n                res = undefined;\n            }\n            propertyInstance = res;\n            const polymorphicDiscriminator = mapper.type.polymorphicDiscriminator;\n            // checking that the model property name (key)(ex: \"fishtype\") and the\n            // clientName of the polymorphicDiscriminator {metadata} (ex: \"fishtype\")\n            // instead of the serializedName of the polymorphicDiscriminator (ex: \"fish.type\")\n            // is a better approach. The generator is not consistent with escaping '\\.' in the\n            // serializedName of the property (ex: \"fish\\.type\") that is marked as polymorphic discriminator\n            // and the serializedName of the metadata polymorphicDiscriminator (ex: \"fish.type\"). However,\n            // the clientName transformation of the polymorphicDiscriminator (ex: \"fishtype\") and\n            // the transformation of model property name (ex: \"fishtype\") is done consistently.\n            // Hence, it is a safer bet to rely on the clientName of the polymorphicDiscriminator.\n            if (polymorphicDiscriminator &&\n                key === polymorphicDiscriminator.clientName &&\n                (propertyInstance === undefined || propertyInstance === null)) {\n                propertyInstance = mapper.serializedName;\n            }\n            let serializedValue;\n            // paging\n            if (Array.isArray(responseBody[key]) && modelProps[key].serializedName === \"\") {\n                propertyInstance = responseBody[key];\n                const arrayInstance = serializer.deserialize(propertyMapper, propertyInstance, propertyObjectName, options);\n                // Copy over any properties that have already been added into the instance, where they do\n                // not exist on the newly de-serialized array\n                for (const [k, v] of Object.entries(instance)) {\n                    if (!Object.prototype.hasOwnProperty.call(arrayInstance, k)) {\n                        arrayInstance[k] = v;\n                    }\n                }\n                instance = arrayInstance;\n            }\n            else if (propertyInstance !== undefined || propertyMapper.defaultValue !== undefined) {\n                serializedValue = serializer.deserialize(propertyMapper, propertyInstance, propertyObjectName, options);\n                instance[key] = serializedValue;\n            }\n        }\n    }\n    const additionalPropertiesMapper = mapper.type.additionalProperties;\n    if (additionalPropertiesMapper) {\n        const isAdditionalProperty = (responsePropName) => {\n            for (const clientPropName in modelProps) {\n                const paths = splitSerializeName(modelProps[clientPropName].serializedName);\n                if (paths[0] === responsePropName) {\n                    return false;\n                }\n            }\n            return true;\n        };\n        for (const responsePropName in responseBody) {\n            if (isAdditionalProperty(responsePropName)) {\n                instance[responsePropName] = serializer.deserialize(additionalPropertiesMapper, responseBody[responsePropName], objectName + '[\"' + responsePropName + '\"]', options);\n            }\n        }\n    }\n    else if (responseBody && !options.ignoreUnknownProperties) {\n        for (const key of Object.keys(responseBody)) {\n            if (instance[key] === undefined &&\n                !handledPropertyNames.includes(key) &&\n                !isSpecialXmlProperty(key, options)) {\n                instance[key] = responseBody[key];\n            }\n        }\n    }\n    return instance;\n}\nfunction deserializeDictionaryType(serializer, mapper, responseBody, objectName, options) {\n    /* jshint validthis: true */\n    const value = mapper.type.value;\n    if (!value || typeof value !== \"object\") {\n        throw new Error(`\"value\" metadata for a Dictionary must be defined in the ` +\n            `mapper and it must of type \"object\" in ${objectName}`);\n    }\n    if (responseBody) {\n        const tempDictionary = {};\n        for (const key of Object.keys(responseBody)) {\n            tempDictionary[key] = serializer.deserialize(value, responseBody[key], objectName, options);\n        }\n        return tempDictionary;\n    }\n    return responseBody;\n}\nfunction deserializeSequenceType(serializer, mapper, responseBody, objectName, options) {\n    var _a;\n    let element = mapper.type.element;\n    if (!element || typeof element !== \"object\") {\n        throw new Error(`element\" metadata for an Array must be defined in the ` +\n            `mapper and it must of type \"object\" in ${objectName}`);\n    }\n    if (responseBody) {\n        if (!Array.isArray(responseBody)) {\n            // xml2js will interpret a single element array as just the element, so force it to be an array\n            responseBody = [responseBody];\n        }\n        // Quirk: Composite mappers referenced by `element` might\n        // not have *all* properties declared (like uberParent),\n        // so let's try to look up the full definition by name.\n        if (element.type.name === \"Composite\" && element.type.className) {\n            element = (_a = serializer.modelMappers[element.type.className]) !== null && _a !== void 0 ? _a : element;\n        }\n        const tempArray = [];\n        for (let i = 0; i < responseBody.length; i++) {\n            tempArray[i] = serializer.deserialize(element, responseBody[i], `${objectName}[${i}]`, options);\n        }\n        return tempArray;\n    }\n    return responseBody;\n}\nfunction getIndexDiscriminator(discriminators, discriminatorValue, typeName) {\n    const typeNamesToCheck = [typeName];\n    while (typeNamesToCheck.length) {\n        const currentName = typeNamesToCheck.shift();\n        const indexDiscriminator = discriminatorValue === currentName\n            ? discriminatorValue\n            : currentName + \".\" + discriminatorValue;\n        if (Object.prototype.hasOwnProperty.call(discriminators, indexDiscriminator)) {\n            return discriminators[indexDiscriminator];\n        }\n        else {\n            for (const [name, mapper] of Object.entries(discriminators)) {\n                if (name.startsWith(currentName + \".\") &&\n                    mapper.type.uberParent === currentName &&\n                    mapper.type.className) {\n                    typeNamesToCheck.push(mapper.type.className);\n                }\n            }\n        }\n    }\n    return undefined;\n}\nfunction getPolymorphicMapper(serializer, mapper, object, polymorphicPropertyName) {\n    var _a;\n    const polymorphicDiscriminator = getPolymorphicDiscriminatorRecursively(serializer, mapper);\n    if (polymorphicDiscriminator) {\n        let discriminatorName = polymorphicDiscriminator[polymorphicPropertyName];\n        if (discriminatorName) {\n            // The serializedName might have \\\\, which we just want to ignore\n            if (polymorphicPropertyName === \"serializedName\") {\n                discriminatorName = discriminatorName.replace(/\\\\/gi, \"\");\n            }\n            const discriminatorValue = object[discriminatorName];\n            const typeName = (_a = mapper.type.uberParent) !== null && _a !== void 0 ? _a : mapper.type.className;\n            if (typeof discriminatorValue === \"string\" && typeName) {\n                const polymorphicMapper = getIndexDiscriminator(serializer.modelMappers.discriminators, discriminatorValue, typeName);\n                if (polymorphicMapper) {\n                    mapper = polymorphicMapper;\n                }\n            }\n        }\n    }\n    return mapper;\n}\nfunction getPolymorphicDiscriminatorRecursively(serializer, mapper) {\n    return (mapper.type.polymorphicDiscriminator ||\n        getPolymorphicDiscriminatorSafely(serializer, mapper.type.uberParent) ||\n        getPolymorphicDiscriminatorSafely(serializer, mapper.type.className));\n}\nfunction getPolymorphicDiscriminatorSafely(serializer, typeName) {\n    return (typeName &&\n        serializer.modelMappers[typeName] &&\n        serializer.modelMappers[typeName].type.polymorphicDiscriminator);\n}\n/**\n * Known types of Mappers\n */\nconst MapperTypeNames = {\n    Base64Url: \"Base64Url\",\n    Boolean: \"Boolean\",\n    ByteArray: \"ByteArray\",\n    Composite: \"Composite\",\n    Date: \"Date\",\n    DateTime: \"DateTime\",\n    DateTimeRfc1123: \"DateTimeRfc1123\",\n    Dictionary: \"Dictionary\",\n    Enum: \"Enum\",\n    Number: \"Number\",\n    Object: \"Object\",\n    Sequence: \"Sequence\",\n    String: \"String\",\n    Stream: \"Stream\",\n    TimeSpan: \"TimeSpan\",\n    UnixTime: \"UnixTime\",\n};\n//# sourceMappingURL=serializer.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/core-client/dist/esm/serializer.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/core-client/dist/esm/serviceClient.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@azure/core-client/dist/esm/serviceClient.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ServiceClient: () => (/* binding */ ServiceClient)\n/* harmony export */ });\n/* harmony import */ var _azure_core_rest_pipeline__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @azure/core-rest-pipeline */ \"(rsc)/./node_modules/@azure/core-rest-pipeline/dist/esm/index.js\");\n/* harmony import */ var _pipeline_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./pipeline.js */ \"(rsc)/./node_modules/@azure/core-client/dist/esm/pipeline.js\");\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./utils.js */ \"(rsc)/./node_modules/@azure/core-client/dist/esm/utils.js\");\n/* harmony import */ var _httpClientCache_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./httpClientCache.js */ \"(rsc)/./node_modules/@azure/core-client/dist/esm/httpClientCache.js\");\n/* harmony import */ var _operationHelpers_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./operationHelpers.js */ \"(rsc)/./node_modules/@azure/core-client/dist/esm/operationHelpers.js\");\n/* harmony import */ var _urlHelpers_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./urlHelpers.js */ \"(rsc)/./node_modules/@azure/core-client/dist/esm/urlHelpers.js\");\n/* harmony import */ var _interfaceHelpers_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./interfaceHelpers.js */ \"(rsc)/./node_modules/@azure/core-client/dist/esm/interfaceHelpers.js\");\n/* harmony import */ var _log_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./log.js */ \"(rsc)/./node_modules/@azure/core-client/dist/esm/log.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\n\n\n\n\n\n\n\n/**\n * Initializes a new instance of the ServiceClient.\n */\nclass ServiceClient {\n    /**\n     * The ServiceClient constructor\n     * @param credential - The credentials used for authentication with the service.\n     * @param options - The service client options that govern the behavior of the client.\n     */\n    constructor(options = {}) {\n        var _a, _b;\n        this._requestContentType = options.requestContentType;\n        this._endpoint = (_a = options.endpoint) !== null && _a !== void 0 ? _a : options.baseUri;\n        if (options.baseUri) {\n            _log_js__WEBPACK_IMPORTED_MODULE_7__.logger.warning(\"The baseUri option for SDK Clients has been deprecated, please use endpoint instead.\");\n        }\n        this._allowInsecureConnection = options.allowInsecureConnection;\n        this._httpClient = options.httpClient || (0,_httpClientCache_js__WEBPACK_IMPORTED_MODULE_3__.getCachedDefaultHttpClient)();\n        this.pipeline = options.pipeline || createDefaultPipeline(options);\n        if ((_b = options.additionalPolicies) === null || _b === void 0 ? void 0 : _b.length) {\n            for (const { policy, position } of options.additionalPolicies) {\n                // Sign happens after Retry and is commonly needed to occur\n                // before policies that intercept post-retry.\n                const afterPhase = position === \"perRetry\" ? \"Sign\" : undefined;\n                this.pipeline.addPolicy(policy, {\n                    afterPhase,\n                });\n            }\n        }\n    }\n    /**\n     * Send the provided httpRequest.\n     */\n    async sendRequest(request) {\n        return this.pipeline.sendRequest(this._httpClient, request);\n    }\n    /**\n     * Send an HTTP request that is populated using the provided OperationSpec.\n     * @typeParam T - The typed result of the request, based on the OperationSpec.\n     * @param operationArguments - The arguments that the HTTP request's templated values will be populated from.\n     * @param operationSpec - The OperationSpec to use to populate the httpRequest.\n     */\n    async sendOperationRequest(operationArguments, operationSpec) {\n        const endpoint = operationSpec.baseUrl || this._endpoint;\n        if (!endpoint) {\n            throw new Error(\"If operationSpec.baseUrl is not specified, then the ServiceClient must have a endpoint string property that contains the base URL to use.\");\n        }\n        // Templatized URLs sometimes reference properties on the ServiceClient child class,\n        // so we have to pass `this` below in order to search these properties if they're\n        // not part of OperationArguments\n        const url = (0,_urlHelpers_js__WEBPACK_IMPORTED_MODULE_5__.getRequestUrl)(endpoint, operationSpec, operationArguments, this);\n        const request = (0,_azure_core_rest_pipeline__WEBPACK_IMPORTED_MODULE_0__.createPipelineRequest)({\n            url,\n        });\n        request.method = operationSpec.httpMethod;\n        const operationInfo = (0,_operationHelpers_js__WEBPACK_IMPORTED_MODULE_4__.getOperationRequestInfo)(request);\n        operationInfo.operationSpec = operationSpec;\n        operationInfo.operationArguments = operationArguments;\n        const contentType = operationSpec.contentType || this._requestContentType;\n        if (contentType && operationSpec.requestBody) {\n            request.headers.set(\"Content-Type\", contentType);\n        }\n        const options = operationArguments.options;\n        if (options) {\n            const requestOptions = options.requestOptions;\n            if (requestOptions) {\n                if (requestOptions.timeout) {\n                    request.timeout = requestOptions.timeout;\n                }\n                if (requestOptions.onUploadProgress) {\n                    request.onUploadProgress = requestOptions.onUploadProgress;\n                }\n                if (requestOptions.onDownloadProgress) {\n                    request.onDownloadProgress = requestOptions.onDownloadProgress;\n                }\n                if (requestOptions.shouldDeserialize !== undefined) {\n                    operationInfo.shouldDeserialize = requestOptions.shouldDeserialize;\n                }\n                if (requestOptions.allowInsecureConnection) {\n                    request.allowInsecureConnection = true;\n                }\n            }\n            if (options.abortSignal) {\n                request.abortSignal = options.abortSignal;\n            }\n            if (options.tracingOptions) {\n                request.tracingOptions = options.tracingOptions;\n            }\n        }\n        if (this._allowInsecureConnection) {\n            request.allowInsecureConnection = true;\n        }\n        if (request.streamResponseStatusCodes === undefined) {\n            request.streamResponseStatusCodes = (0,_interfaceHelpers_js__WEBPACK_IMPORTED_MODULE_6__.getStreamingResponseStatusCodes)(operationSpec);\n        }\n        try {\n            const rawResponse = await this.sendRequest(request);\n            const flatResponse = (0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.flattenResponse)(rawResponse, operationSpec.responses[rawResponse.status]);\n            if (options === null || options === void 0 ? void 0 : options.onResponse) {\n                options.onResponse(rawResponse, flatResponse);\n            }\n            return flatResponse;\n        }\n        catch (error) {\n            if (typeof error === \"object\" && (error === null || error === void 0 ? void 0 : error.response)) {\n                const rawResponse = error.response;\n                const flatResponse = (0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.flattenResponse)(rawResponse, operationSpec.responses[error.statusCode] || operationSpec.responses[\"default\"]);\n                error.details = flatResponse;\n                if (options === null || options === void 0 ? void 0 : options.onResponse) {\n                    options.onResponse(rawResponse, flatResponse, error);\n                }\n            }\n            throw error;\n        }\n    }\n}\nfunction createDefaultPipeline(options) {\n    const credentialScopes = getCredentialScopes(options);\n    const credentialOptions = options.credential && credentialScopes\n        ? { credentialScopes, credential: options.credential }\n        : undefined;\n    return (0,_pipeline_js__WEBPACK_IMPORTED_MODULE_1__.createClientPipeline)(Object.assign(Object.assign({}, options), { credentialOptions }));\n}\nfunction getCredentialScopes(options) {\n    if (options.credentialScopes) {\n        return options.credentialScopes;\n    }\n    if (options.endpoint) {\n        return `${options.endpoint}/.default`;\n    }\n    if (options.baseUri) {\n        return `${options.baseUri}/.default`;\n    }\n    if (options.credential && !options.credentialScopes) {\n        throw new Error(`When using credentials, the ServiceClientOptions must contain either a endpoint or a credentialScopes. Unable to create a bearerTokenAuthenticationPolicy`);\n    }\n    return undefined;\n}\n//# sourceMappingURL=serviceClient.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/core-client/dist/esm/serviceClient.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/core-client/dist/esm/state.js":
/*!***********************************************************!*\
  !*** ./node_modules/@azure/core-client/dist/esm/state.js ***!
  \***********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   state: () => (/* binding */ state)\n/* harmony export */ });\n/* harmony import */ var _commonjs_state_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../commonjs/state.js */ \"(rsc)/./node_modules/@azure/core-client/dist/commonjs/state.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n// @ts-expect-error The recommended approach to sharing module state between ESM and CJS.\n// See https://github.com/isaacs/tshy/blob/main/README.md#module-local-state for additional information.\n\n/**\n * Defines the shared state between CJS and ESM by re-exporting the CJS state.\n */\nconst state = _commonjs_state_js__WEBPACK_IMPORTED_MODULE_0__.state;\n//# sourceMappingURL=state.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2NvcmUtY2xpZW50L2Rpc3QvZXNtL3N0YXRlLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDeUQ7QUFDekQ7QUFDQTtBQUNBO0FBQ08sY0FBYyxxREFBUTtBQUM3QiIsInNvdXJjZXMiOlsid2VicGFjazovL2RhbmllbDMtdnAyLy4vbm9kZV9tb2R1bGVzL0BhenVyZS9jb3JlLWNsaWVudC9kaXN0L2VzbS9zdGF0ZS5qcz9lOWJkIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLlxuLy8gTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlLlxuLy8gQHRzLWV4cGVjdC1lcnJvciBUaGUgcmVjb21tZW5kZWQgYXBwcm9hY2ggdG8gc2hhcmluZyBtb2R1bGUgc3RhdGUgYmV0d2VlbiBFU00gYW5kIENKUy5cbi8vIFNlZSBodHRwczovL2dpdGh1Yi5jb20vaXNhYWNzL3RzaHkvYmxvYi9tYWluL1JFQURNRS5tZCNtb2R1bGUtbG9jYWwtc3RhdGUgZm9yIGFkZGl0aW9uYWwgaW5mb3JtYXRpb24uXG5pbXBvcnQgeyBzdGF0ZSBhcyBjanNTdGF0ZSB9IGZyb20gXCIuLi9jb21tb25qcy9zdGF0ZS5qc1wiO1xuLyoqXG4gKiBEZWZpbmVzIHRoZSBzaGFyZWQgc3RhdGUgYmV0d2VlbiBDSlMgYW5kIEVTTSBieSByZS1leHBvcnRpbmcgdGhlIENKUyBzdGF0ZS5cbiAqL1xuZXhwb3J0IGNvbnN0IHN0YXRlID0gY2pzU3RhdGU7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1zdGF0ZS5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/core-client/dist/esm/state.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/core-client/dist/esm/urlHelpers.js":
/*!****************************************************************!*\
  !*** ./node_modules/@azure/core-client/dist/esm/urlHelpers.js ***!
  \****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   appendQueryParams: () => (/* binding */ appendQueryParams),\n/* harmony export */   getRequestUrl: () => (/* binding */ getRequestUrl)\n/* harmony export */ });\n/* harmony import */ var _operationHelpers_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./operationHelpers.js */ \"(rsc)/./node_modules/@azure/core-client/dist/esm/operationHelpers.js\");\n/* harmony import */ var _interfaceHelpers_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./interfaceHelpers.js */ \"(rsc)/./node_modules/@azure/core-client/dist/esm/interfaceHelpers.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\n\nconst CollectionFormatToDelimiterMap = {\n    CSV: \",\",\n    SSV: \" \",\n    Multi: \"Multi\",\n    TSV: \"\\t\",\n    Pipes: \"|\",\n};\nfunction getRequestUrl(baseUri, operationSpec, operationArguments, fallbackObject) {\n    const urlReplacements = calculateUrlReplacements(operationSpec, operationArguments, fallbackObject);\n    let isAbsolutePath = false;\n    let requestUrl = replaceAll(baseUri, urlReplacements);\n    if (operationSpec.path) {\n        let path = replaceAll(operationSpec.path, urlReplacements);\n        // QUIRK: sometimes we get a path component like /{nextLink}\n        // which may be a fully formed URL with a leading /. In that case, we should\n        // remove the leading /\n        if (operationSpec.path === \"/{nextLink}\" && path.startsWith(\"/\")) {\n            path = path.substring(1);\n        }\n        // QUIRK: sometimes we get a path component like {nextLink}\n        // which may be a fully formed URL. In that case, we should\n        // ignore the baseUri.\n        if (isAbsoluteUrl(path)) {\n            requestUrl = path;\n            isAbsolutePath = true;\n        }\n        else {\n            requestUrl = appendPath(requestUrl, path);\n        }\n    }\n    const { queryParams, sequenceParams } = calculateQueryParameters(operationSpec, operationArguments, fallbackObject);\n    /**\n     * Notice that this call sets the `noOverwrite` parameter to true if the `requestUrl`\n     * is an absolute path. This ensures that existing query parameter values in `requestUrl`\n     * do not get overwritten. On the other hand when `requestUrl` is not absolute path, it\n     * is still being built so there is nothing to overwrite.\n     */\n    requestUrl = appendQueryParams(requestUrl, queryParams, sequenceParams, isAbsolutePath);\n    return requestUrl;\n}\nfunction replaceAll(input, replacements) {\n    let result = input;\n    for (const [searchValue, replaceValue] of replacements) {\n        result = result.split(searchValue).join(replaceValue);\n    }\n    return result;\n}\nfunction calculateUrlReplacements(operationSpec, operationArguments, fallbackObject) {\n    var _a;\n    const result = new Map();\n    if ((_a = operationSpec.urlParameters) === null || _a === void 0 ? void 0 : _a.length) {\n        for (const urlParameter of operationSpec.urlParameters) {\n            let urlParameterValue = (0,_operationHelpers_js__WEBPACK_IMPORTED_MODULE_0__.getOperationArgumentValueFromParameter)(operationArguments, urlParameter, fallbackObject);\n            const parameterPathString = (0,_interfaceHelpers_js__WEBPACK_IMPORTED_MODULE_1__.getPathStringFromParameter)(urlParameter);\n            urlParameterValue = operationSpec.serializer.serialize(urlParameter.mapper, urlParameterValue, parameterPathString);\n            if (!urlParameter.skipEncoding) {\n                urlParameterValue = encodeURIComponent(urlParameterValue);\n            }\n            result.set(`{${urlParameter.mapper.serializedName || parameterPathString}}`, urlParameterValue);\n        }\n    }\n    return result;\n}\nfunction isAbsoluteUrl(url) {\n    return url.includes(\"://\");\n}\nfunction appendPath(url, pathToAppend) {\n    if (!pathToAppend) {\n        return url;\n    }\n    const parsedUrl = new URL(url);\n    let newPath = parsedUrl.pathname;\n    if (!newPath.endsWith(\"/\")) {\n        newPath = `${newPath}/`;\n    }\n    if (pathToAppend.startsWith(\"/\")) {\n        pathToAppend = pathToAppend.substring(1);\n    }\n    const searchStart = pathToAppend.indexOf(\"?\");\n    if (searchStart !== -1) {\n        const path = pathToAppend.substring(0, searchStart);\n        const search = pathToAppend.substring(searchStart + 1);\n        newPath = newPath + path;\n        if (search) {\n            parsedUrl.search = parsedUrl.search ? `${parsedUrl.search}&${search}` : search;\n        }\n    }\n    else {\n        newPath = newPath + pathToAppend;\n    }\n    parsedUrl.pathname = newPath;\n    return parsedUrl.toString();\n}\nfunction calculateQueryParameters(operationSpec, operationArguments, fallbackObject) {\n    var _a;\n    const result = new Map();\n    const sequenceParams = new Set();\n    if ((_a = operationSpec.queryParameters) === null || _a === void 0 ? void 0 : _a.length) {\n        for (const queryParameter of operationSpec.queryParameters) {\n            if (queryParameter.mapper.type.name === \"Sequence\" && queryParameter.mapper.serializedName) {\n                sequenceParams.add(queryParameter.mapper.serializedName);\n            }\n            let queryParameterValue = (0,_operationHelpers_js__WEBPACK_IMPORTED_MODULE_0__.getOperationArgumentValueFromParameter)(operationArguments, queryParameter, fallbackObject);\n            if ((queryParameterValue !== undefined && queryParameterValue !== null) ||\n                queryParameter.mapper.required) {\n                queryParameterValue = operationSpec.serializer.serialize(queryParameter.mapper, queryParameterValue, (0,_interfaceHelpers_js__WEBPACK_IMPORTED_MODULE_1__.getPathStringFromParameter)(queryParameter));\n                const delimiter = queryParameter.collectionFormat\n                    ? CollectionFormatToDelimiterMap[queryParameter.collectionFormat]\n                    : \"\";\n                if (Array.isArray(queryParameterValue)) {\n                    // replace null and undefined\n                    queryParameterValue = queryParameterValue.map((item) => {\n                        if (item === null || item === undefined) {\n                            return \"\";\n                        }\n                        return item;\n                    });\n                }\n                if (queryParameter.collectionFormat === \"Multi\" && queryParameterValue.length === 0) {\n                    continue;\n                }\n                else if (Array.isArray(queryParameterValue) &&\n                    (queryParameter.collectionFormat === \"SSV\" || queryParameter.collectionFormat === \"TSV\")) {\n                    queryParameterValue = queryParameterValue.join(delimiter);\n                }\n                if (!queryParameter.skipEncoding) {\n                    if (Array.isArray(queryParameterValue)) {\n                        queryParameterValue = queryParameterValue.map((item) => {\n                            return encodeURIComponent(item);\n                        });\n                    }\n                    else {\n                        queryParameterValue = encodeURIComponent(queryParameterValue);\n                    }\n                }\n                // Join pipes and CSV *after* encoding, or the server will be upset.\n                if (Array.isArray(queryParameterValue) &&\n                    (queryParameter.collectionFormat === \"CSV\" || queryParameter.collectionFormat === \"Pipes\")) {\n                    queryParameterValue = queryParameterValue.join(delimiter);\n                }\n                result.set(queryParameter.mapper.serializedName || (0,_interfaceHelpers_js__WEBPACK_IMPORTED_MODULE_1__.getPathStringFromParameter)(queryParameter), queryParameterValue);\n            }\n        }\n    }\n    return {\n        queryParams: result,\n        sequenceParams,\n    };\n}\nfunction simpleParseQueryParams(queryString) {\n    const result = new Map();\n    if (!queryString || queryString[0] !== \"?\") {\n        return result;\n    }\n    // remove the leading ?\n    queryString = queryString.slice(1);\n    const pairs = queryString.split(\"&\");\n    for (const pair of pairs) {\n        const [name, value] = pair.split(\"=\", 2);\n        const existingValue = result.get(name);\n        if (existingValue) {\n            if (Array.isArray(existingValue)) {\n                existingValue.push(value);\n            }\n            else {\n                result.set(name, [existingValue, value]);\n            }\n        }\n        else {\n            result.set(name, value);\n        }\n    }\n    return result;\n}\n/** @internal */\nfunction appendQueryParams(url, queryParams, sequenceParams, noOverwrite = false) {\n    if (queryParams.size === 0) {\n        return url;\n    }\n    const parsedUrl = new URL(url);\n    // QUIRK: parsedUrl.searchParams will have their name/value pairs decoded, which\n    // can change their meaning to the server, such as in the case of a SAS signature.\n    // To avoid accidentally un-encoding a query param, we parse the key/values ourselves\n    const combinedParams = simpleParseQueryParams(parsedUrl.search);\n    for (const [name, value] of queryParams) {\n        const existingValue = combinedParams.get(name);\n        if (Array.isArray(existingValue)) {\n            if (Array.isArray(value)) {\n                existingValue.push(...value);\n                const valueSet = new Set(existingValue);\n                combinedParams.set(name, Array.from(valueSet));\n            }\n            else {\n                existingValue.push(value);\n            }\n        }\n        else if (existingValue) {\n            if (Array.isArray(value)) {\n                value.unshift(existingValue);\n            }\n            else if (sequenceParams.has(name)) {\n                combinedParams.set(name, [existingValue, value]);\n            }\n            if (!noOverwrite) {\n                combinedParams.set(name, value);\n            }\n        }\n        else {\n            combinedParams.set(name, value);\n        }\n    }\n    const searchPieces = [];\n    for (const [name, value] of combinedParams) {\n        if (typeof value === \"string\") {\n            searchPieces.push(`${name}=${value}`);\n        }\n        else if (Array.isArray(value)) {\n            // QUIRK: If we get an array of values, include multiple key/value pairs\n            for (const subValue of value) {\n                searchPieces.push(`${name}=${subValue}`);\n            }\n        }\n        else {\n            searchPieces.push(`${name}=${value}`);\n        }\n    }\n    // QUIRK: we have to set search manually as searchParams will encode comma when it shouldn't.\n    parsedUrl.search = searchPieces.length ? `?${searchPieces.join(\"&\")}` : \"\";\n    return parsedUrl.toString();\n}\n//# sourceMappingURL=urlHelpers.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2NvcmUtY2xpZW50L2Rpc3QvZXNtL3VybEhlbHBlcnMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBO0FBQ0E7QUFDK0U7QUFDWjtBQUNuRTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDJEQUEyRDtBQUMzRDtBQUNBO0FBQ0Esc0NBQXNDLFNBQVM7QUFDL0M7QUFDQTtBQUNBLDBEQUEwRDtBQUMxRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFlBQVksOEJBQThCO0FBQzFDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG9DQUFvQyw0RkFBc0M7QUFDMUUsd0NBQXdDLGdGQUEwQjtBQUNsRTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHlCQUF5QixFQUFFLDJEQUEyRDtBQUN0RjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EscUJBQXFCLFFBQVE7QUFDN0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxxREFBcUQsaUJBQWlCLEdBQUcsT0FBTztBQUNoRjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esc0NBQXNDLDRGQUFzQztBQUM1RTtBQUNBO0FBQ0EscUhBQXFILGdGQUEwQjtBQUMvSTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHFCQUFxQjtBQUNyQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx5QkFBeUI7QUFDekI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxtRUFBbUUsZ0ZBQTBCO0FBQzdGO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUNBQWlDLEtBQUssR0FBRyxNQUFNO0FBQy9DO0FBQ0E7QUFDQTtBQUNBO0FBQ0EscUNBQXFDLEtBQUssR0FBRyxTQUFTO0FBQ3REO0FBQ0E7QUFDQTtBQUNBLGlDQUFpQyxLQUFLLEdBQUcsTUFBTTtBQUMvQztBQUNBO0FBQ0E7QUFDQSxpREFBaUQsdUJBQXVCO0FBQ3hFO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2RhbmllbDMtdnAyLy4vbm9kZV9tb2R1bGVzL0BhenVyZS9jb3JlLWNsaWVudC9kaXN0L2VzbS91cmxIZWxwZXJzLmpzPzI4OTciXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uXG4vLyBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UuXG5pbXBvcnQgeyBnZXRPcGVyYXRpb25Bcmd1bWVudFZhbHVlRnJvbVBhcmFtZXRlciB9IGZyb20gXCIuL29wZXJhdGlvbkhlbHBlcnMuanNcIjtcbmltcG9ydCB7IGdldFBhdGhTdHJpbmdGcm9tUGFyYW1ldGVyIH0gZnJvbSBcIi4vaW50ZXJmYWNlSGVscGVycy5qc1wiO1xuY29uc3QgQ29sbGVjdGlvbkZvcm1hdFRvRGVsaW1pdGVyTWFwID0ge1xuICAgIENTVjogXCIsXCIsXG4gICAgU1NWOiBcIiBcIixcbiAgICBNdWx0aTogXCJNdWx0aVwiLFxuICAgIFRTVjogXCJcXHRcIixcbiAgICBQaXBlczogXCJ8XCIsXG59O1xuZXhwb3J0IGZ1bmN0aW9uIGdldFJlcXVlc3RVcmwoYmFzZVVyaSwgb3BlcmF0aW9uU3BlYywgb3BlcmF0aW9uQXJndW1lbnRzLCBmYWxsYmFja09iamVjdCkge1xuICAgIGNvbnN0IHVybFJlcGxhY2VtZW50cyA9IGNhbGN1bGF0ZVVybFJlcGxhY2VtZW50cyhvcGVyYXRpb25TcGVjLCBvcGVyYXRpb25Bcmd1bWVudHMsIGZhbGxiYWNrT2JqZWN0KTtcbiAgICBsZXQgaXNBYnNvbHV0ZVBhdGggPSBmYWxzZTtcbiAgICBsZXQgcmVxdWVzdFVybCA9IHJlcGxhY2VBbGwoYmFzZVVyaSwgdXJsUmVwbGFjZW1lbnRzKTtcbiAgICBpZiAob3BlcmF0aW9uU3BlYy5wYXRoKSB7XG4gICAgICAgIGxldCBwYXRoID0gcmVwbGFjZUFsbChvcGVyYXRpb25TcGVjLnBhdGgsIHVybFJlcGxhY2VtZW50cyk7XG4gICAgICAgIC8vIFFVSVJLOiBzb21ldGltZXMgd2UgZ2V0IGEgcGF0aCBjb21wb25lbnQgbGlrZSAve25leHRMaW5rfVxuICAgICAgICAvLyB3aGljaCBtYXkgYmUgYSBmdWxseSBmb3JtZWQgVVJMIHdpdGggYSBsZWFkaW5nIC8uIEluIHRoYXQgY2FzZSwgd2Ugc2hvdWxkXG4gICAgICAgIC8vIHJlbW92ZSB0aGUgbGVhZGluZyAvXG4gICAgICAgIGlmIChvcGVyYXRpb25TcGVjLnBhdGggPT09IFwiL3tuZXh0TGlua31cIiAmJiBwYXRoLnN0YXJ0c1dpdGgoXCIvXCIpKSB7XG4gICAgICAgICAgICBwYXRoID0gcGF0aC5zdWJzdHJpbmcoMSk7XG4gICAgICAgIH1cbiAgICAgICAgLy8gUVVJUks6IHNvbWV0aW1lcyB3ZSBnZXQgYSBwYXRoIGNvbXBvbmVudCBsaWtlIHtuZXh0TGlua31cbiAgICAgICAgLy8gd2hpY2ggbWF5IGJlIGEgZnVsbHkgZm9ybWVkIFVSTC4gSW4gdGhhdCBjYXNlLCB3ZSBzaG91bGRcbiAgICAgICAgLy8gaWdub3JlIHRoZSBiYXNlVXJpLlxuICAgICAgICBpZiAoaXNBYnNvbHV0ZVVybChwYXRoKSkge1xuICAgICAgICAgICAgcmVxdWVzdFVybCA9IHBhdGg7XG4gICAgICAgICAgICBpc0Fic29sdXRlUGF0aCA9IHRydWU7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICByZXF1ZXN0VXJsID0gYXBwZW5kUGF0aChyZXF1ZXN0VXJsLCBwYXRoKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBjb25zdCB7IHF1ZXJ5UGFyYW1zLCBzZXF1ZW5jZVBhcmFtcyB9ID0gY2FsY3VsYXRlUXVlcnlQYXJhbWV0ZXJzKG9wZXJhdGlvblNwZWMsIG9wZXJhdGlvbkFyZ3VtZW50cywgZmFsbGJhY2tPYmplY3QpO1xuICAgIC8qKlxuICAgICAqIE5vdGljZSB0aGF0IHRoaXMgY2FsbCBzZXRzIHRoZSBgbm9PdmVyd3JpdGVgIHBhcmFtZXRlciB0byB0cnVlIGlmIHRoZSBgcmVxdWVzdFVybGBcbiAgICAgKiBpcyBhbiBhYnNvbHV0ZSBwYXRoLiBUaGlzIGVuc3VyZXMgdGhhdCBleGlzdGluZyBxdWVyeSBwYXJhbWV0ZXIgdmFsdWVzIGluIGByZXF1ZXN0VXJsYFxuICAgICAqIGRvIG5vdCBnZXQgb3ZlcndyaXR0ZW4uIE9uIHRoZSBvdGhlciBoYW5kIHdoZW4gYHJlcXVlc3RVcmxgIGlzIG5vdCBhYnNvbHV0ZSBwYXRoLCBpdFxuICAgICAqIGlzIHN0aWxsIGJlaW5nIGJ1aWx0IHNvIHRoZXJlIGlzIG5vdGhpbmcgdG8gb3ZlcndyaXRlLlxuICAgICAqL1xuICAgIHJlcXVlc3RVcmwgPSBhcHBlbmRRdWVyeVBhcmFtcyhyZXF1ZXN0VXJsLCBxdWVyeVBhcmFtcywgc2VxdWVuY2VQYXJhbXMsIGlzQWJzb2x1dGVQYXRoKTtcbiAgICByZXR1cm4gcmVxdWVzdFVybDtcbn1cbmZ1bmN0aW9uIHJlcGxhY2VBbGwoaW5wdXQsIHJlcGxhY2VtZW50cykge1xuICAgIGxldCByZXN1bHQgPSBpbnB1dDtcbiAgICBmb3IgKGNvbnN0IFtzZWFyY2hWYWx1ZSwgcmVwbGFjZVZhbHVlXSBvZiByZXBsYWNlbWVudHMpIHtcbiAgICAgICAgcmVzdWx0ID0gcmVzdWx0LnNwbGl0KHNlYXJjaFZhbHVlKS5qb2luKHJlcGxhY2VWYWx1ZSk7XG4gICAgfVxuICAgIHJldHVybiByZXN1bHQ7XG59XG5mdW5jdGlvbiBjYWxjdWxhdGVVcmxSZXBsYWNlbWVudHMob3BlcmF0aW9uU3BlYywgb3BlcmF0aW9uQXJndW1lbnRzLCBmYWxsYmFja09iamVjdCkge1xuICAgIHZhciBfYTtcbiAgICBjb25zdCByZXN1bHQgPSBuZXcgTWFwKCk7XG4gICAgaWYgKChfYSA9IG9wZXJhdGlvblNwZWMudXJsUGFyYW1ldGVycykgPT09IG51bGwgfHwgX2EgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9hLmxlbmd0aCkge1xuICAgICAgICBmb3IgKGNvbnN0IHVybFBhcmFtZXRlciBvZiBvcGVyYXRpb25TcGVjLnVybFBhcmFtZXRlcnMpIHtcbiAgICAgICAgICAgIGxldCB1cmxQYXJhbWV0ZXJWYWx1ZSA9IGdldE9wZXJhdGlvbkFyZ3VtZW50VmFsdWVGcm9tUGFyYW1ldGVyKG9wZXJhdGlvbkFyZ3VtZW50cywgdXJsUGFyYW1ldGVyLCBmYWxsYmFja09iamVjdCk7XG4gICAgICAgICAgICBjb25zdCBwYXJhbWV0ZXJQYXRoU3RyaW5nID0gZ2V0UGF0aFN0cmluZ0Zyb21QYXJhbWV0ZXIodXJsUGFyYW1ldGVyKTtcbiAgICAgICAgICAgIHVybFBhcmFtZXRlclZhbHVlID0gb3BlcmF0aW9uU3BlYy5zZXJpYWxpemVyLnNlcmlhbGl6ZSh1cmxQYXJhbWV0ZXIubWFwcGVyLCB1cmxQYXJhbWV0ZXJWYWx1ZSwgcGFyYW1ldGVyUGF0aFN0cmluZyk7XG4gICAgICAgICAgICBpZiAoIXVybFBhcmFtZXRlci5za2lwRW5jb2RpbmcpIHtcbiAgICAgICAgICAgICAgICB1cmxQYXJhbWV0ZXJWYWx1ZSA9IGVuY29kZVVSSUNvbXBvbmVudCh1cmxQYXJhbWV0ZXJWYWx1ZSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXN1bHQuc2V0KGB7JHt1cmxQYXJhbWV0ZXIubWFwcGVyLnNlcmlhbGl6ZWROYW1lIHx8IHBhcmFtZXRlclBhdGhTdHJpbmd9fWAsIHVybFBhcmFtZXRlclZhbHVlKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gcmVzdWx0O1xufVxuZnVuY3Rpb24gaXNBYnNvbHV0ZVVybCh1cmwpIHtcbiAgICByZXR1cm4gdXJsLmluY2x1ZGVzKFwiOi8vXCIpO1xufVxuZnVuY3Rpb24gYXBwZW5kUGF0aCh1cmwsIHBhdGhUb0FwcGVuZCkge1xuICAgIGlmICghcGF0aFRvQXBwZW5kKSB7XG4gICAgICAgIHJldHVybiB1cmw7XG4gICAgfVxuICAgIGNvbnN0IHBhcnNlZFVybCA9IG5ldyBVUkwodXJsKTtcbiAgICBsZXQgbmV3UGF0aCA9IHBhcnNlZFVybC5wYXRobmFtZTtcbiAgICBpZiAoIW5ld1BhdGguZW5kc1dpdGgoXCIvXCIpKSB7XG4gICAgICAgIG5ld1BhdGggPSBgJHtuZXdQYXRofS9gO1xuICAgIH1cbiAgICBpZiAocGF0aFRvQXBwZW5kLnN0YXJ0c1dpdGgoXCIvXCIpKSB7XG4gICAgICAgIHBhdGhUb0FwcGVuZCA9IHBhdGhUb0FwcGVuZC5zdWJzdHJpbmcoMSk7XG4gICAgfVxuICAgIGNvbnN0IHNlYXJjaFN0YXJ0ID0gcGF0aFRvQXBwZW5kLmluZGV4T2YoXCI/XCIpO1xuICAgIGlmIChzZWFyY2hTdGFydCAhPT0gLTEpIHtcbiAgICAgICAgY29uc3QgcGF0aCA9IHBhdGhUb0FwcGVuZC5zdWJzdHJpbmcoMCwgc2VhcmNoU3RhcnQpO1xuICAgICAgICBjb25zdCBzZWFyY2ggPSBwYXRoVG9BcHBlbmQuc3Vic3RyaW5nKHNlYXJjaFN0YXJ0ICsgMSk7XG4gICAgICAgIG5ld1BhdGggPSBuZXdQYXRoICsgcGF0aDtcbiAgICAgICAgaWYgKHNlYXJjaCkge1xuICAgICAgICAgICAgcGFyc2VkVXJsLnNlYXJjaCA9IHBhcnNlZFVybC5zZWFyY2ggPyBgJHtwYXJzZWRVcmwuc2VhcmNofSYke3NlYXJjaH1gIDogc2VhcmNoO1xuICAgICAgICB9XG4gICAgfVxuICAgIGVsc2Uge1xuICAgICAgICBuZXdQYXRoID0gbmV3UGF0aCArIHBhdGhUb0FwcGVuZDtcbiAgICB9XG4gICAgcGFyc2VkVXJsLnBhdGhuYW1lID0gbmV3UGF0aDtcbiAgICByZXR1cm4gcGFyc2VkVXJsLnRvU3RyaW5nKCk7XG59XG5mdW5jdGlvbiBjYWxjdWxhdGVRdWVyeVBhcmFtZXRlcnMob3BlcmF0aW9uU3BlYywgb3BlcmF0aW9uQXJndW1lbnRzLCBmYWxsYmFja09iamVjdCkge1xuICAgIHZhciBfYTtcbiAgICBjb25zdCByZXN1bHQgPSBuZXcgTWFwKCk7XG4gICAgY29uc3Qgc2VxdWVuY2VQYXJhbXMgPSBuZXcgU2V0KCk7XG4gICAgaWYgKChfYSA9IG9wZXJhdGlvblNwZWMucXVlcnlQYXJhbWV0ZXJzKSA9PT0gbnVsbCB8fCBfYSA9PT0gdm9pZCAwID8gdm9pZCAwIDogX2EubGVuZ3RoKSB7XG4gICAgICAgIGZvciAoY29uc3QgcXVlcnlQYXJhbWV0ZXIgb2Ygb3BlcmF0aW9uU3BlYy5xdWVyeVBhcmFtZXRlcnMpIHtcbiAgICAgICAgICAgIGlmIChxdWVyeVBhcmFtZXRlci5tYXBwZXIudHlwZS5uYW1lID09PSBcIlNlcXVlbmNlXCIgJiYgcXVlcnlQYXJhbWV0ZXIubWFwcGVyLnNlcmlhbGl6ZWROYW1lKSB7XG4gICAgICAgICAgICAgICAgc2VxdWVuY2VQYXJhbXMuYWRkKHF1ZXJ5UGFyYW1ldGVyLm1hcHBlci5zZXJpYWxpemVkTmFtZSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBsZXQgcXVlcnlQYXJhbWV0ZXJWYWx1ZSA9IGdldE9wZXJhdGlvbkFyZ3VtZW50VmFsdWVGcm9tUGFyYW1ldGVyKG9wZXJhdGlvbkFyZ3VtZW50cywgcXVlcnlQYXJhbWV0ZXIsIGZhbGxiYWNrT2JqZWN0KTtcbiAgICAgICAgICAgIGlmICgocXVlcnlQYXJhbWV0ZXJWYWx1ZSAhPT0gdW5kZWZpbmVkICYmIHF1ZXJ5UGFyYW1ldGVyVmFsdWUgIT09IG51bGwpIHx8XG4gICAgICAgICAgICAgICAgcXVlcnlQYXJhbWV0ZXIubWFwcGVyLnJlcXVpcmVkKSB7XG4gICAgICAgICAgICAgICAgcXVlcnlQYXJhbWV0ZXJWYWx1ZSA9IG9wZXJhdGlvblNwZWMuc2VyaWFsaXplci5zZXJpYWxpemUocXVlcnlQYXJhbWV0ZXIubWFwcGVyLCBxdWVyeVBhcmFtZXRlclZhbHVlLCBnZXRQYXRoU3RyaW5nRnJvbVBhcmFtZXRlcihxdWVyeVBhcmFtZXRlcikpO1xuICAgICAgICAgICAgICAgIGNvbnN0IGRlbGltaXRlciA9IHF1ZXJ5UGFyYW1ldGVyLmNvbGxlY3Rpb25Gb3JtYXRcbiAgICAgICAgICAgICAgICAgICAgPyBDb2xsZWN0aW9uRm9ybWF0VG9EZWxpbWl0ZXJNYXBbcXVlcnlQYXJhbWV0ZXIuY29sbGVjdGlvbkZvcm1hdF1cbiAgICAgICAgICAgICAgICAgICAgOiBcIlwiO1xuICAgICAgICAgICAgICAgIGlmIChBcnJheS5pc0FycmF5KHF1ZXJ5UGFyYW1ldGVyVmFsdWUpKSB7XG4gICAgICAgICAgICAgICAgICAgIC8vIHJlcGxhY2UgbnVsbCBhbmQgdW5kZWZpbmVkXG4gICAgICAgICAgICAgICAgICAgIHF1ZXJ5UGFyYW1ldGVyVmFsdWUgPSBxdWVyeVBhcmFtZXRlclZhbHVlLm1hcCgoaXRlbSkgPT4ge1xuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGl0ZW0gPT09IG51bGwgfHwgaXRlbSA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIFwiXCI7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gaXRlbTtcbiAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGlmIChxdWVyeVBhcmFtZXRlci5jb2xsZWN0aW9uRm9ybWF0ID09PSBcIk11bHRpXCIgJiYgcXVlcnlQYXJhbWV0ZXJWYWx1ZS5sZW5ndGggPT09IDApIHtcbiAgICAgICAgICAgICAgICAgICAgY29udGludWU7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGVsc2UgaWYgKEFycmF5LmlzQXJyYXkocXVlcnlQYXJhbWV0ZXJWYWx1ZSkgJiZcbiAgICAgICAgICAgICAgICAgICAgKHF1ZXJ5UGFyYW1ldGVyLmNvbGxlY3Rpb25Gb3JtYXQgPT09IFwiU1NWXCIgfHwgcXVlcnlQYXJhbWV0ZXIuY29sbGVjdGlvbkZvcm1hdCA9PT0gXCJUU1ZcIikpIHtcbiAgICAgICAgICAgICAgICAgICAgcXVlcnlQYXJhbWV0ZXJWYWx1ZSA9IHF1ZXJ5UGFyYW1ldGVyVmFsdWUuam9pbihkZWxpbWl0ZXIpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBpZiAoIXF1ZXJ5UGFyYW1ldGVyLnNraXBFbmNvZGluZykge1xuICAgICAgICAgICAgICAgICAgICBpZiAoQXJyYXkuaXNBcnJheShxdWVyeVBhcmFtZXRlclZhbHVlKSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgcXVlcnlQYXJhbWV0ZXJWYWx1ZSA9IHF1ZXJ5UGFyYW1ldGVyVmFsdWUubWFwKChpdGVtKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGVuY29kZVVSSUNvbXBvbmVudChpdGVtKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICAgICAgcXVlcnlQYXJhbWV0ZXJWYWx1ZSA9IGVuY29kZVVSSUNvbXBvbmVudChxdWVyeVBhcmFtZXRlclZhbHVlKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAvLyBKb2luIHBpcGVzIGFuZCBDU1YgKmFmdGVyKiBlbmNvZGluZywgb3IgdGhlIHNlcnZlciB3aWxsIGJlIHVwc2V0LlxuICAgICAgICAgICAgICAgIGlmIChBcnJheS5pc0FycmF5KHF1ZXJ5UGFyYW1ldGVyVmFsdWUpICYmXG4gICAgICAgICAgICAgICAgICAgIChxdWVyeVBhcmFtZXRlci5jb2xsZWN0aW9uRm9ybWF0ID09PSBcIkNTVlwiIHx8IHF1ZXJ5UGFyYW1ldGVyLmNvbGxlY3Rpb25Gb3JtYXQgPT09IFwiUGlwZXNcIikpIHtcbiAgICAgICAgICAgICAgICAgICAgcXVlcnlQYXJhbWV0ZXJWYWx1ZSA9IHF1ZXJ5UGFyYW1ldGVyVmFsdWUuam9pbihkZWxpbWl0ZXIpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICByZXN1bHQuc2V0KHF1ZXJ5UGFyYW1ldGVyLm1hcHBlci5zZXJpYWxpemVkTmFtZSB8fCBnZXRQYXRoU3RyaW5nRnJvbVBhcmFtZXRlcihxdWVyeVBhcmFtZXRlciksIHF1ZXJ5UGFyYW1ldGVyVmFsdWUpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuICAgIHJldHVybiB7XG4gICAgICAgIHF1ZXJ5UGFyYW1zOiByZXN1bHQsXG4gICAgICAgIHNlcXVlbmNlUGFyYW1zLFxuICAgIH07XG59XG5mdW5jdGlvbiBzaW1wbGVQYXJzZVF1ZXJ5UGFyYW1zKHF1ZXJ5U3RyaW5nKSB7XG4gICAgY29uc3QgcmVzdWx0ID0gbmV3IE1hcCgpO1xuICAgIGlmICghcXVlcnlTdHJpbmcgfHwgcXVlcnlTdHJpbmdbMF0gIT09IFwiP1wiKSB7XG4gICAgICAgIHJldHVybiByZXN1bHQ7XG4gICAgfVxuICAgIC8vIHJlbW92ZSB0aGUgbGVhZGluZyA/XG4gICAgcXVlcnlTdHJpbmcgPSBxdWVyeVN0cmluZy5zbGljZSgxKTtcbiAgICBjb25zdCBwYWlycyA9IHF1ZXJ5U3RyaW5nLnNwbGl0KFwiJlwiKTtcbiAgICBmb3IgKGNvbnN0IHBhaXIgb2YgcGFpcnMpIHtcbiAgICAgICAgY29uc3QgW25hbWUsIHZhbHVlXSA9IHBhaXIuc3BsaXQoXCI9XCIsIDIpO1xuICAgICAgICBjb25zdCBleGlzdGluZ1ZhbHVlID0gcmVzdWx0LmdldChuYW1lKTtcbiAgICAgICAgaWYgKGV4aXN0aW5nVmFsdWUpIHtcbiAgICAgICAgICAgIGlmIChBcnJheS5pc0FycmF5KGV4aXN0aW5nVmFsdWUpKSB7XG4gICAgICAgICAgICAgICAgZXhpc3RpbmdWYWx1ZS5wdXNoKHZhbHVlKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgIHJlc3VsdC5zZXQobmFtZSwgW2V4aXN0aW5nVmFsdWUsIHZhbHVlXSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICByZXN1bHQuc2V0KG5hbWUsIHZhbHVlKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gcmVzdWx0O1xufVxuLyoqIEBpbnRlcm5hbCAqL1xuZXhwb3J0IGZ1bmN0aW9uIGFwcGVuZFF1ZXJ5UGFyYW1zKHVybCwgcXVlcnlQYXJhbXMsIHNlcXVlbmNlUGFyYW1zLCBub092ZXJ3cml0ZSA9IGZhbHNlKSB7XG4gICAgaWYgKHF1ZXJ5UGFyYW1zLnNpemUgPT09IDApIHtcbiAgICAgICAgcmV0dXJuIHVybDtcbiAgICB9XG4gICAgY29uc3QgcGFyc2VkVXJsID0gbmV3IFVSTCh1cmwpO1xuICAgIC8vIFFVSVJLOiBwYXJzZWRVcmwuc2VhcmNoUGFyYW1zIHdpbGwgaGF2ZSB0aGVpciBuYW1lL3ZhbHVlIHBhaXJzIGRlY29kZWQsIHdoaWNoXG4gICAgLy8gY2FuIGNoYW5nZSB0aGVpciBtZWFuaW5nIHRvIHRoZSBzZXJ2ZXIsIHN1Y2ggYXMgaW4gdGhlIGNhc2Ugb2YgYSBTQVMgc2lnbmF0dXJlLlxuICAgIC8vIFRvIGF2b2lkIGFjY2lkZW50YWxseSB1bi1lbmNvZGluZyBhIHF1ZXJ5IHBhcmFtLCB3ZSBwYXJzZSB0aGUga2V5L3ZhbHVlcyBvdXJzZWx2ZXNcbiAgICBjb25zdCBjb21iaW5lZFBhcmFtcyA9IHNpbXBsZVBhcnNlUXVlcnlQYXJhbXMocGFyc2VkVXJsLnNlYXJjaCk7XG4gICAgZm9yIChjb25zdCBbbmFtZSwgdmFsdWVdIG9mIHF1ZXJ5UGFyYW1zKSB7XG4gICAgICAgIGNvbnN0IGV4aXN0aW5nVmFsdWUgPSBjb21iaW5lZFBhcmFtcy5nZXQobmFtZSk7XG4gICAgICAgIGlmIChBcnJheS5pc0FycmF5KGV4aXN0aW5nVmFsdWUpKSB7XG4gICAgICAgICAgICBpZiAoQXJyYXkuaXNBcnJheSh2YWx1ZSkpIHtcbiAgICAgICAgICAgICAgICBleGlzdGluZ1ZhbHVlLnB1c2goLi4udmFsdWUpO1xuICAgICAgICAgICAgICAgIGNvbnN0IHZhbHVlU2V0ID0gbmV3IFNldChleGlzdGluZ1ZhbHVlKTtcbiAgICAgICAgICAgICAgICBjb21iaW5lZFBhcmFtcy5zZXQobmFtZSwgQXJyYXkuZnJvbSh2YWx1ZVNldCkpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgZXhpc3RpbmdWYWx1ZS5wdXNoKHZhbHVlKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBlbHNlIGlmIChleGlzdGluZ1ZhbHVlKSB7XG4gICAgICAgICAgICBpZiAoQXJyYXkuaXNBcnJheSh2YWx1ZSkpIHtcbiAgICAgICAgICAgICAgICB2YWx1ZS51bnNoaWZ0KGV4aXN0aW5nVmFsdWUpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSBpZiAoc2VxdWVuY2VQYXJhbXMuaGFzKG5hbWUpKSB7XG4gICAgICAgICAgICAgICAgY29tYmluZWRQYXJhbXMuc2V0KG5hbWUsIFtleGlzdGluZ1ZhbHVlLCB2YWx1ZV0pO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKCFub092ZXJ3cml0ZSkge1xuICAgICAgICAgICAgICAgIGNvbWJpbmVkUGFyYW1zLnNldChuYW1lLCB2YWx1ZSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICBjb21iaW5lZFBhcmFtcy5zZXQobmFtZSwgdmFsdWUpO1xuICAgICAgICB9XG4gICAgfVxuICAgIGNvbnN0IHNlYXJjaFBpZWNlcyA9IFtdO1xuICAgIGZvciAoY29uc3QgW25hbWUsIHZhbHVlXSBvZiBjb21iaW5lZFBhcmFtcykge1xuICAgICAgICBpZiAodHlwZW9mIHZhbHVlID09PSBcInN0cmluZ1wiKSB7XG4gICAgICAgICAgICBzZWFyY2hQaWVjZXMucHVzaChgJHtuYW1lfT0ke3ZhbHVlfWApO1xuICAgICAgICB9XG4gICAgICAgIGVsc2UgaWYgKEFycmF5LmlzQXJyYXkodmFsdWUpKSB7XG4gICAgICAgICAgICAvLyBRVUlSSzogSWYgd2UgZ2V0IGFuIGFycmF5IG9mIHZhbHVlcywgaW5jbHVkZSBtdWx0aXBsZSBrZXkvdmFsdWUgcGFpcnNcbiAgICAgICAgICAgIGZvciAoY29uc3Qgc3ViVmFsdWUgb2YgdmFsdWUpIHtcbiAgICAgICAgICAgICAgICBzZWFyY2hQaWVjZXMucHVzaChgJHtuYW1lfT0ke3N1YlZhbHVlfWApO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgc2VhcmNoUGllY2VzLnB1c2goYCR7bmFtZX09JHt2YWx1ZX1gKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICAvLyBRVUlSSzogd2UgaGF2ZSB0byBzZXQgc2VhcmNoIG1hbnVhbGx5IGFzIHNlYXJjaFBhcmFtcyB3aWxsIGVuY29kZSBjb21tYSB3aGVuIGl0IHNob3VsZG4ndC5cbiAgICBwYXJzZWRVcmwuc2VhcmNoID0gc2VhcmNoUGllY2VzLmxlbmd0aCA/IGA/JHtzZWFyY2hQaWVjZXMuam9pbihcIiZcIil9YCA6IFwiXCI7XG4gICAgcmV0dXJuIHBhcnNlZFVybC50b1N0cmluZygpO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9dXJsSGVscGVycy5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/core-client/dist/esm/urlHelpers.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/core-client/dist/esm/utils.js":
/*!***********************************************************!*\
  !*** ./node_modules/@azure/core-client/dist/esm/utils.js ***!
  \***********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   flattenResponse: () => (/* binding */ flattenResponse),\n/* harmony export */   isDuration: () => (/* binding */ isDuration),\n/* harmony export */   isPrimitiveBody: () => (/* binding */ isPrimitiveBody),\n/* harmony export */   isValidUuid: () => (/* binding */ isValidUuid)\n/* harmony export */ });\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n/**\n * A type guard for a primitive response body.\n * @param value - Value to test\n *\n * @internal\n */\nfunction isPrimitiveBody(value, mapperTypeName) {\n    return (mapperTypeName !== \"Composite\" &&\n        mapperTypeName !== \"Dictionary\" &&\n        (typeof value === \"string\" ||\n            typeof value === \"number\" ||\n            typeof value === \"boolean\" ||\n            (mapperTypeName === null || mapperTypeName === void 0 ? void 0 : mapperTypeName.match(/^(Date|DateTime|DateTimeRfc1123|UnixTime|ByteArray|Base64Url)$/i)) !==\n                null ||\n            value === undefined ||\n            value === null));\n}\nconst validateISODuration = /^(-|\\+)?P(?:([-+]?[0-9,.]*)Y)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)W)?(?:([-+]?[0-9,.]*)D)?(?:T(?:([-+]?[0-9,.]*)H)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)S)?)?$/;\n/**\n * Returns true if the given string is in ISO 8601 format.\n * @param value - The value to be validated for ISO 8601 duration format.\n * @internal\n */\nfunction isDuration(value) {\n    return validateISODuration.test(value);\n}\nconst validUuidRegex = /^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$/i;\n/**\n * Returns true if the provided uuid is valid.\n *\n * @param uuid - The uuid that needs to be validated.\n *\n * @internal\n */\nfunction isValidUuid(uuid) {\n    return validUuidRegex.test(uuid);\n}\n/**\n * Maps the response as follows:\n * - wraps the response body if needed (typically if its type is primitive).\n * - returns null if the combination of the headers and the body is empty.\n * - otherwise, returns the combination of the headers and the body.\n *\n * @param responseObject - a representation of the parsed response\n * @returns the response that will be returned to the user which can be null and/or wrapped\n *\n * @internal\n */\nfunction handleNullableResponseAndWrappableBody(responseObject) {\n    const combinedHeadersAndBody = Object.assign(Object.assign({}, responseObject.headers), responseObject.body);\n    if (responseObject.hasNullableType &&\n        Object.getOwnPropertyNames(combinedHeadersAndBody).length === 0) {\n        return responseObject.shouldWrapBody ? { body: null } : null;\n    }\n    else {\n        return responseObject.shouldWrapBody\n            ? Object.assign(Object.assign({}, responseObject.headers), { body: responseObject.body }) : combinedHeadersAndBody;\n    }\n}\n/**\n * Take a `FullOperationResponse` and turn it into a flat\n * response object to hand back to the consumer.\n * @param fullResponse - The processed response from the operation request\n * @param responseSpec - The response map from the OperationSpec\n *\n * @internal\n */\nfunction flattenResponse(fullResponse, responseSpec) {\n    var _a, _b;\n    const parsedHeaders = fullResponse.parsedHeaders;\n    // head methods never have a body, but we return a boolean set to body property\n    // to indicate presence/absence of the resource\n    if (fullResponse.request.method === \"HEAD\") {\n        return Object.assign(Object.assign({}, parsedHeaders), { body: fullResponse.parsedBody });\n    }\n    const bodyMapper = responseSpec && responseSpec.bodyMapper;\n    const isNullable = Boolean(bodyMapper === null || bodyMapper === void 0 ? void 0 : bodyMapper.nullable);\n    const expectedBodyTypeName = bodyMapper === null || bodyMapper === void 0 ? void 0 : bodyMapper.type.name;\n    /** If the body is asked for, we look at the expected body type to handle it */\n    if (expectedBodyTypeName === \"Stream\") {\n        return Object.assign(Object.assign({}, parsedHeaders), { blobBody: fullResponse.blobBody, readableStreamBody: fullResponse.readableStreamBody });\n    }\n    const modelProperties = (expectedBodyTypeName === \"Composite\" &&\n        bodyMapper.type.modelProperties) ||\n        {};\n    const isPageableResponse = Object.keys(modelProperties).some((k) => modelProperties[k].serializedName === \"\");\n    if (expectedBodyTypeName === \"Sequence\" || isPageableResponse) {\n        const arrayResponse = (_a = fullResponse.parsedBody) !== null && _a !== void 0 ? _a : [];\n        for (const key of Object.keys(modelProperties)) {\n            if (modelProperties[key].serializedName) {\n                arrayResponse[key] = (_b = fullResponse.parsedBody) === null || _b === void 0 ? void 0 : _b[key];\n            }\n        }\n        if (parsedHeaders) {\n            for (const key of Object.keys(parsedHeaders)) {\n                arrayResponse[key] = parsedHeaders[key];\n            }\n        }\n        return isNullable &&\n            !fullResponse.parsedBody &&\n            !parsedHeaders &&\n            Object.getOwnPropertyNames(modelProperties).length === 0\n            ? null\n            : arrayResponse;\n    }\n    return handleNullableResponseAndWrappableBody({\n        body: fullResponse.parsedBody,\n        headers: parsedHeaders,\n        hasNullableType: isNullable,\n        shouldWrapBody: isPrimitiveBody(fullResponse.parsedBody, expectedBodyTypeName),\n    });\n}\n//# sourceMappingURL=utils.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/core-client/dist/esm/utils.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/core-rest-pipeline/dist/esm/constants.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@azure/core-rest-pipeline/dist/esm/constants.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DEFAULT_RETRY_POLICY_COUNT: () => (/* binding */ DEFAULT_RETRY_POLICY_COUNT),\n/* harmony export */   SDK_VERSION: () => (/* binding */ SDK_VERSION)\n/* harmony export */ });\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\nconst SDK_VERSION = \"1.16.2\";\nconst DEFAULT_RETRY_POLICY_COUNT = 3;\n//# sourceMappingURL=constants.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2NvcmUtcmVzdC1waXBlbGluZS9kaXN0L2VzbS9jb25zdGFudHMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQTtBQUNBO0FBQ087QUFDQTtBQUNQIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZGFuaWVsMy12cDIvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2NvcmUtcmVzdC1waXBlbGluZS9kaXN0L2VzbS9jb25zdGFudHMuanM/NTNiZSJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi5cbi8vIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZS5cbmV4cG9ydCBjb25zdCBTREtfVkVSU0lPTiA9IFwiMS4xNi4yXCI7XG5leHBvcnQgY29uc3QgREVGQVVMVF9SRVRSWV9QT0xJQ1lfQ09VTlQgPSAzO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Y29uc3RhbnRzLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/core-rest-pipeline/dist/esm/constants.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/core-rest-pipeline/dist/esm/createPipelineFromOptions.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/@azure/core-rest-pipeline/dist/esm/createPipelineFromOptions.js ***!
  \**************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createPipelineFromOptions: () => (/* binding */ createPipelineFromOptions)\n/* harmony export */ });\n/* harmony import */ var _policies_logPolicy_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./policies/logPolicy.js */ \"(rsc)/./node_modules/@azure/core-rest-pipeline/dist/esm/policies/logPolicy.js\");\n/* harmony import */ var _pipeline_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./pipeline.js */ \"(rsc)/./node_modules/@azure/core-rest-pipeline/dist/esm/pipeline.js\");\n/* harmony import */ var _policies_redirectPolicy_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./policies/redirectPolicy.js */ \"(rsc)/./node_modules/@azure/core-rest-pipeline/dist/esm/policies/redirectPolicy.js\");\n/* harmony import */ var _policies_userAgentPolicy_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./policies/userAgentPolicy.js */ \"(rsc)/./node_modules/@azure/core-rest-pipeline/dist/esm/policies/userAgentPolicy.js\");\n/* harmony import */ var _policies_multipartPolicy_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./policies/multipartPolicy.js */ \"(rsc)/./node_modules/@azure/core-rest-pipeline/dist/esm/policies/multipartPolicy.js\");\n/* harmony import */ var _policies_decompressResponsePolicy_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./policies/decompressResponsePolicy.js */ \"(rsc)/./node_modules/@azure/core-rest-pipeline/dist/esm/policies/decompressResponsePolicy.js\");\n/* harmony import */ var _policies_defaultRetryPolicy_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./policies/defaultRetryPolicy.js */ \"(rsc)/./node_modules/@azure/core-rest-pipeline/dist/esm/policies/defaultRetryPolicy.js\");\n/* harmony import */ var _policies_formDataPolicy_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./policies/formDataPolicy.js */ \"(rsc)/./node_modules/@azure/core-rest-pipeline/dist/esm/policies/formDataPolicy.js\");\n/* harmony import */ var _azure_core_util__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @azure/core-util */ \"(rsc)/./node_modules/@azure/core-util/dist/esm/index.js\");\n/* harmony import */ var _policies_proxyPolicy_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./policies/proxyPolicy.js */ \"(rsc)/./node_modules/@azure/core-rest-pipeline/dist/esm/policies/proxyPolicy.js\");\n/* harmony import */ var _policies_setClientRequestIdPolicy_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./policies/setClientRequestIdPolicy.js */ \"(rsc)/./node_modules/@azure/core-rest-pipeline/dist/esm/policies/setClientRequestIdPolicy.js\");\n/* harmony import */ var _policies_tlsPolicy_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./policies/tlsPolicy.js */ \"(rsc)/./node_modules/@azure/core-rest-pipeline/dist/esm/policies/tlsPolicy.js\");\n/* harmony import */ var _policies_tracingPolicy_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./policies/tracingPolicy.js */ \"(rsc)/./node_modules/@azure/core-rest-pipeline/dist/esm/policies/tracingPolicy.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\n\n\n\n\n\n\n\n\n\n\n\n\n/**\n * Create a new pipeline with a default set of customizable policies.\n * @param options - Options to configure a custom pipeline.\n */\nfunction createPipelineFromOptions(options) {\n    var _a;\n    const pipeline = (0,_pipeline_js__WEBPACK_IMPORTED_MODULE_1__.createEmptyPipeline)();\n    if (_azure_core_util__WEBPACK_IMPORTED_MODULE_8__.isNodeLike) {\n        if (options.tlsOptions) {\n            pipeline.addPolicy((0,_policies_tlsPolicy_js__WEBPACK_IMPORTED_MODULE_11__.tlsPolicy)(options.tlsOptions));\n        }\n        pipeline.addPolicy((0,_policies_proxyPolicy_js__WEBPACK_IMPORTED_MODULE_9__.proxyPolicy)(options.proxyOptions));\n        pipeline.addPolicy((0,_policies_decompressResponsePolicy_js__WEBPACK_IMPORTED_MODULE_5__.decompressResponsePolicy)());\n    }\n    pipeline.addPolicy((0,_policies_formDataPolicy_js__WEBPACK_IMPORTED_MODULE_7__.formDataPolicy)(), { beforePolicies: [_policies_multipartPolicy_js__WEBPACK_IMPORTED_MODULE_4__.multipartPolicyName] });\n    pipeline.addPolicy((0,_policies_userAgentPolicy_js__WEBPACK_IMPORTED_MODULE_3__.userAgentPolicy)(options.userAgentOptions));\n    pipeline.addPolicy((0,_policies_setClientRequestIdPolicy_js__WEBPACK_IMPORTED_MODULE_10__.setClientRequestIdPolicy)((_a = options.telemetryOptions) === null || _a === void 0 ? void 0 : _a.clientRequestIdHeaderName));\n    // The multipart policy is added after policies with no phase, so that\n    // policies can be added between it and formDataPolicy to modify\n    // properties (e.g., making the boundary constant in recorded tests).\n    pipeline.addPolicy((0,_policies_multipartPolicy_js__WEBPACK_IMPORTED_MODULE_4__.multipartPolicy)(), { afterPhase: \"Deserialize\" });\n    pipeline.addPolicy((0,_policies_defaultRetryPolicy_js__WEBPACK_IMPORTED_MODULE_6__.defaultRetryPolicy)(options.retryOptions), { phase: \"Retry\" });\n    pipeline.addPolicy((0,_policies_tracingPolicy_js__WEBPACK_IMPORTED_MODULE_12__.tracingPolicy)(Object.assign(Object.assign({}, options.userAgentOptions), options.loggingOptions)), {\n        afterPhase: \"Retry\",\n    });\n    if (_azure_core_util__WEBPACK_IMPORTED_MODULE_8__.isNodeLike) {\n        // Both XHR and Fetch expect to handle redirects automatically,\n        // so only include this policy when we're in Node.\n        pipeline.addPolicy((0,_policies_redirectPolicy_js__WEBPACK_IMPORTED_MODULE_2__.redirectPolicy)(options.redirectOptions), { afterPhase: \"Retry\" });\n    }\n    pipeline.addPolicy((0,_policies_logPolicy_js__WEBPACK_IMPORTED_MODULE_0__.logPolicy)(options.loggingOptions), { afterPhase: \"Sign\" });\n    return pipeline;\n}\n//# sourceMappingURL=createPipelineFromOptions.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2NvcmUtcmVzdC1waXBlbGluZS9kaXN0L2VzbS9jcmVhdGVQaXBlbGluZUZyb21PcHRpb25zLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQUE7QUFDQTtBQUNvRDtBQUNBO0FBQ1U7QUFDRTtBQUNxQjtBQUNIO0FBQ1o7QUFDUjtBQUNoQjtBQUNVO0FBQzBCO0FBQzlCO0FBQ1E7QUFDNUQ7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0EscUJBQXFCLGlFQUFtQjtBQUN4QyxRQUFRLHdEQUFVO0FBQ2xCO0FBQ0EsK0JBQStCLGtFQUFTO0FBQ3hDO0FBQ0EsMkJBQTJCLHFFQUFXO0FBQ3RDLDJCQUEyQiwrRkFBd0I7QUFDbkQ7QUFDQSx1QkFBdUIsMkVBQWMsTUFBTSxpQkFBaUIsNkVBQW1CLEdBQUc7QUFDbEYsdUJBQXVCLDZFQUFlO0FBQ3RDLHVCQUF1QixnR0FBd0I7QUFDL0M7QUFDQTtBQUNBO0FBQ0EsdUJBQXVCLDZFQUFlLE1BQU0sMkJBQTJCO0FBQ3ZFLHVCQUF1QixtRkFBa0IsMEJBQTBCLGdCQUFnQjtBQUNuRix1QkFBdUIsMEVBQWEsK0JBQStCO0FBQ25FO0FBQ0EsS0FBSztBQUNMLFFBQVEsd0RBQVU7QUFDbEI7QUFDQTtBQUNBLDJCQUEyQiwyRUFBYyw2QkFBNkIscUJBQXFCO0FBQzNGO0FBQ0EsdUJBQXVCLGlFQUFTLDRCQUE0QixvQkFBb0I7QUFDaEY7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZGFuaWVsMy12cDIvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2NvcmUtcmVzdC1waXBlbGluZS9kaXN0L2VzbS9jcmVhdGVQaXBlbGluZUZyb21PcHRpb25zLmpzP2JkMjIiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uXG4vLyBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UuXG5pbXBvcnQgeyBsb2dQb2xpY3kgfSBmcm9tIFwiLi9wb2xpY2llcy9sb2dQb2xpY3kuanNcIjtcbmltcG9ydCB7IGNyZWF0ZUVtcHR5UGlwZWxpbmUgfSBmcm9tIFwiLi9waXBlbGluZS5qc1wiO1xuaW1wb3J0IHsgcmVkaXJlY3RQb2xpY3kgfSBmcm9tIFwiLi9wb2xpY2llcy9yZWRpcmVjdFBvbGljeS5qc1wiO1xuaW1wb3J0IHsgdXNlckFnZW50UG9saWN5IH0gZnJvbSBcIi4vcG9saWNpZXMvdXNlckFnZW50UG9saWN5LmpzXCI7XG5pbXBvcnQgeyBtdWx0aXBhcnRQb2xpY3ksIG11bHRpcGFydFBvbGljeU5hbWUgfSBmcm9tIFwiLi9wb2xpY2llcy9tdWx0aXBhcnRQb2xpY3kuanNcIjtcbmltcG9ydCB7IGRlY29tcHJlc3NSZXNwb25zZVBvbGljeSB9IGZyb20gXCIuL3BvbGljaWVzL2RlY29tcHJlc3NSZXNwb25zZVBvbGljeS5qc1wiO1xuaW1wb3J0IHsgZGVmYXVsdFJldHJ5UG9saWN5IH0gZnJvbSBcIi4vcG9saWNpZXMvZGVmYXVsdFJldHJ5UG9saWN5LmpzXCI7XG5pbXBvcnQgeyBmb3JtRGF0YVBvbGljeSB9IGZyb20gXCIuL3BvbGljaWVzL2Zvcm1EYXRhUG9saWN5LmpzXCI7XG5pbXBvcnQgeyBpc05vZGVMaWtlIH0gZnJvbSBcIkBhenVyZS9jb3JlLXV0aWxcIjtcbmltcG9ydCB7IHByb3h5UG9saWN5IH0gZnJvbSBcIi4vcG9saWNpZXMvcHJveHlQb2xpY3kuanNcIjtcbmltcG9ydCB7IHNldENsaWVudFJlcXVlc3RJZFBvbGljeSB9IGZyb20gXCIuL3BvbGljaWVzL3NldENsaWVudFJlcXVlc3RJZFBvbGljeS5qc1wiO1xuaW1wb3J0IHsgdGxzUG9saWN5IH0gZnJvbSBcIi4vcG9saWNpZXMvdGxzUG9saWN5LmpzXCI7XG5pbXBvcnQgeyB0cmFjaW5nUG9saWN5IH0gZnJvbSBcIi4vcG9saWNpZXMvdHJhY2luZ1BvbGljeS5qc1wiO1xuLyoqXG4gKiBDcmVhdGUgYSBuZXcgcGlwZWxpbmUgd2l0aCBhIGRlZmF1bHQgc2V0IG9mIGN1c3RvbWl6YWJsZSBwb2xpY2llcy5cbiAqIEBwYXJhbSBvcHRpb25zIC0gT3B0aW9ucyB0byBjb25maWd1cmUgYSBjdXN0b20gcGlwZWxpbmUuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBjcmVhdGVQaXBlbGluZUZyb21PcHRpb25zKG9wdGlvbnMpIHtcbiAgICB2YXIgX2E7XG4gICAgY29uc3QgcGlwZWxpbmUgPSBjcmVhdGVFbXB0eVBpcGVsaW5lKCk7XG4gICAgaWYgKGlzTm9kZUxpa2UpIHtcbiAgICAgICAgaWYgKG9wdGlvbnMudGxzT3B0aW9ucykge1xuICAgICAgICAgICAgcGlwZWxpbmUuYWRkUG9saWN5KHRsc1BvbGljeShvcHRpb25zLnRsc09wdGlvbnMpKTtcbiAgICAgICAgfVxuICAgICAgICBwaXBlbGluZS5hZGRQb2xpY3kocHJveHlQb2xpY3kob3B0aW9ucy5wcm94eU9wdGlvbnMpKTtcbiAgICAgICAgcGlwZWxpbmUuYWRkUG9saWN5KGRlY29tcHJlc3NSZXNwb25zZVBvbGljeSgpKTtcbiAgICB9XG4gICAgcGlwZWxpbmUuYWRkUG9saWN5KGZvcm1EYXRhUG9saWN5KCksIHsgYmVmb3JlUG9saWNpZXM6IFttdWx0aXBhcnRQb2xpY3lOYW1lXSB9KTtcbiAgICBwaXBlbGluZS5hZGRQb2xpY3kodXNlckFnZW50UG9saWN5KG9wdGlvbnMudXNlckFnZW50T3B0aW9ucykpO1xuICAgIHBpcGVsaW5lLmFkZFBvbGljeShzZXRDbGllbnRSZXF1ZXN0SWRQb2xpY3koKF9hID0gb3B0aW9ucy50ZWxlbWV0cnlPcHRpb25zKSA9PT0gbnVsbCB8fCBfYSA9PT0gdm9pZCAwID8gdm9pZCAwIDogX2EuY2xpZW50UmVxdWVzdElkSGVhZGVyTmFtZSkpO1xuICAgIC8vIFRoZSBtdWx0aXBhcnQgcG9saWN5IGlzIGFkZGVkIGFmdGVyIHBvbGljaWVzIHdpdGggbm8gcGhhc2UsIHNvIHRoYXRcbiAgICAvLyBwb2xpY2llcyBjYW4gYmUgYWRkZWQgYmV0d2VlbiBpdCBhbmQgZm9ybURhdGFQb2xpY3kgdG8gbW9kaWZ5XG4gICAgLy8gcHJvcGVydGllcyAoZS5nLiwgbWFraW5nIHRoZSBib3VuZGFyeSBjb25zdGFudCBpbiByZWNvcmRlZCB0ZXN0cykuXG4gICAgcGlwZWxpbmUuYWRkUG9saWN5KG11bHRpcGFydFBvbGljeSgpLCB7IGFmdGVyUGhhc2U6IFwiRGVzZXJpYWxpemVcIiB9KTtcbiAgICBwaXBlbGluZS5hZGRQb2xpY3koZGVmYXVsdFJldHJ5UG9saWN5KG9wdGlvbnMucmV0cnlPcHRpb25zKSwgeyBwaGFzZTogXCJSZXRyeVwiIH0pO1xuICAgIHBpcGVsaW5lLmFkZFBvbGljeSh0cmFjaW5nUG9saWN5KE9iamVjdC5hc3NpZ24oT2JqZWN0LmFzc2lnbih7fSwgb3B0aW9ucy51c2VyQWdlbnRPcHRpb25zKSwgb3B0aW9ucy5sb2dnaW5nT3B0aW9ucykpLCB7XG4gICAgICAgIGFmdGVyUGhhc2U6IFwiUmV0cnlcIixcbiAgICB9KTtcbiAgICBpZiAoaXNOb2RlTGlrZSkge1xuICAgICAgICAvLyBCb3RoIFhIUiBhbmQgRmV0Y2ggZXhwZWN0IHRvIGhhbmRsZSByZWRpcmVjdHMgYXV0b21hdGljYWxseSxcbiAgICAgICAgLy8gc28gb25seSBpbmNsdWRlIHRoaXMgcG9saWN5IHdoZW4gd2UncmUgaW4gTm9kZS5cbiAgICAgICAgcGlwZWxpbmUuYWRkUG9saWN5KHJlZGlyZWN0UG9saWN5KG9wdGlvbnMucmVkaXJlY3RPcHRpb25zKSwgeyBhZnRlclBoYXNlOiBcIlJldHJ5XCIgfSk7XG4gICAgfVxuICAgIHBpcGVsaW5lLmFkZFBvbGljeShsb2dQb2xpY3kob3B0aW9ucy5sb2dnaW5nT3B0aW9ucyksIHsgYWZ0ZXJQaGFzZTogXCJTaWduXCIgfSk7XG4gICAgcmV0dXJuIHBpcGVsaW5lO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Y3JlYXRlUGlwZWxpbmVGcm9tT3B0aW9ucy5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/core-rest-pipeline/dist/esm/createPipelineFromOptions.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/core-rest-pipeline/dist/esm/defaultHttpClient.js":
/*!******************************************************************************!*\
  !*** ./node_modules/@azure/core-rest-pipeline/dist/esm/defaultHttpClient.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createDefaultHttpClient: () => (/* binding */ createDefaultHttpClient)\n/* harmony export */ });\n/* harmony import */ var _nodeHttpClient_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./nodeHttpClient.js */ \"(rsc)/./node_modules/@azure/core-rest-pipeline/dist/esm/nodeHttpClient.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\n/**\n * Create the correct HttpClient for the current environment.\n */\nfunction createDefaultHttpClient() {\n    return (0,_nodeHttpClient_js__WEBPACK_IMPORTED_MODULE_0__.createNodeHttpClient)();\n}\n//# sourceMappingURL=defaultHttpClient.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2NvcmUtcmVzdC1waXBlbGluZS9kaXN0L2VzbS9kZWZhdWx0SHR0cENsaWVudC5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFBO0FBQ0E7QUFDMkQ7QUFDM0Q7QUFDQTtBQUNBO0FBQ087QUFDUCxXQUFXLHdFQUFvQjtBQUMvQjtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZGFuaWVsMy12cDIvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2NvcmUtcmVzdC1waXBlbGluZS9kaXN0L2VzbS9kZWZhdWx0SHR0cENsaWVudC5qcz8wMTk1Il0sInNvdXJjZXNDb250ZW50IjpbIi8vIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLlxuLy8gTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlLlxuaW1wb3J0IHsgY3JlYXRlTm9kZUh0dHBDbGllbnQgfSBmcm9tIFwiLi9ub2RlSHR0cENsaWVudC5qc1wiO1xuLyoqXG4gKiBDcmVhdGUgdGhlIGNvcnJlY3QgSHR0cENsaWVudCBmb3IgdGhlIGN1cnJlbnQgZW52aXJvbm1lbnQuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBjcmVhdGVEZWZhdWx0SHR0cENsaWVudCgpIHtcbiAgICByZXR1cm4gY3JlYXRlTm9kZUh0dHBDbGllbnQoKTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWRlZmF1bHRIdHRwQ2xpZW50LmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/core-rest-pipeline/dist/esm/defaultHttpClient.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/core-rest-pipeline/dist/esm/httpHeaders.js":
/*!************************************************************************!*\
  !*** ./node_modules/@azure/core-rest-pipeline/dist/esm/httpHeaders.js ***!
  \************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createHttpHeaders: () => (/* binding */ createHttpHeaders)\n/* harmony export */ });\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\nfunction normalizeName(name) {\n    return name.toLowerCase();\n}\nfunction* headerIterator(map) {\n    for (const entry of map.values()) {\n        yield [entry.name, entry.value];\n    }\n}\nclass HttpHeadersImpl {\n    constructor(rawHeaders) {\n        this._headersMap = new Map();\n        if (rawHeaders) {\n            for (const headerName of Object.keys(rawHeaders)) {\n                this.set(headerName, rawHeaders[headerName]);\n            }\n        }\n    }\n    /**\n     * Set a header in this collection with the provided name and value. The name is\n     * case-insensitive.\n     * @param name - The name of the header to set. This value is case-insensitive.\n     * @param value - The value of the header to set.\n     */\n    set(name, value) {\n        this._headersMap.set(normalizeName(name), { name, value: String(value).trim() });\n    }\n    /**\n     * Get the header value for the provided header name, or undefined if no header exists in this\n     * collection with the provided name.\n     * @param name - The name of the header. This value is case-insensitive.\n     */\n    get(name) {\n        var _a;\n        return (_a = this._headersMap.get(normalizeName(name))) === null || _a === void 0 ? void 0 : _a.value;\n    }\n    /**\n     * Get whether or not this header collection contains a header entry for the provided header name.\n     * @param name - The name of the header to set. This value is case-insensitive.\n     */\n    has(name) {\n        return this._headersMap.has(normalizeName(name));\n    }\n    /**\n     * Remove the header with the provided headerName.\n     * @param name - The name of the header to remove.\n     */\n    delete(name) {\n        this._headersMap.delete(normalizeName(name));\n    }\n    /**\n     * Get the JSON object representation of this HTTP header collection.\n     */\n    toJSON(options = {}) {\n        const result = {};\n        if (options.preserveCase) {\n            for (const entry of this._headersMap.values()) {\n                result[entry.name] = entry.value;\n            }\n        }\n        else {\n            for (const [normalizedName, entry] of this._headersMap) {\n                result[normalizedName] = entry.value;\n            }\n        }\n        return result;\n    }\n    /**\n     * Get the string representation of this HTTP header collection.\n     */\n    toString() {\n        return JSON.stringify(this.toJSON({ preserveCase: true }));\n    }\n    /**\n     * Iterate over tuples of header [name, value] pairs.\n     */\n    [Symbol.iterator]() {\n        return headerIterator(this._headersMap);\n    }\n}\n/**\n * Creates an object that satisfies the `HttpHeaders` interface.\n * @param rawHeaders - A simple object representing initial headers\n */\nfunction createHttpHeaders(rawHeaders) {\n    return new HttpHeadersImpl(rawHeaders);\n}\n//# sourceMappingURL=httpHeaders.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2NvcmUtcmVzdC1waXBlbGluZS9kaXN0L2VzbS9odHRwSGVhZGVycy5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG9EQUFvRCxtQ0FBbUM7QUFDdkY7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsdUJBQXVCO0FBQ3ZCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw0Q0FBNEMsb0JBQW9CO0FBQ2hFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZGFuaWVsMy12cDIvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2NvcmUtcmVzdC1waXBlbGluZS9kaXN0L2VzbS9odHRwSGVhZGVycy5qcz8xNDIyIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLlxuLy8gTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlLlxuZnVuY3Rpb24gbm9ybWFsaXplTmFtZShuYW1lKSB7XG4gICAgcmV0dXJuIG5hbWUudG9Mb3dlckNhc2UoKTtcbn1cbmZ1bmN0aW9uKiBoZWFkZXJJdGVyYXRvcihtYXApIHtcbiAgICBmb3IgKGNvbnN0IGVudHJ5IG9mIG1hcC52YWx1ZXMoKSkge1xuICAgICAgICB5aWVsZCBbZW50cnkubmFtZSwgZW50cnkudmFsdWVdO1xuICAgIH1cbn1cbmNsYXNzIEh0dHBIZWFkZXJzSW1wbCB7XG4gICAgY29uc3RydWN0b3IocmF3SGVhZGVycykge1xuICAgICAgICB0aGlzLl9oZWFkZXJzTWFwID0gbmV3IE1hcCgpO1xuICAgICAgICBpZiAocmF3SGVhZGVycykge1xuICAgICAgICAgICAgZm9yIChjb25zdCBoZWFkZXJOYW1lIG9mIE9iamVjdC5rZXlzKHJhd0hlYWRlcnMpKSB7XG4gICAgICAgICAgICAgICAgdGhpcy5zZXQoaGVhZGVyTmFtZSwgcmF3SGVhZGVyc1toZWFkZXJOYW1lXSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG4gICAgLyoqXG4gICAgICogU2V0IGEgaGVhZGVyIGluIHRoaXMgY29sbGVjdGlvbiB3aXRoIHRoZSBwcm92aWRlZCBuYW1lIGFuZCB2YWx1ZS4gVGhlIG5hbWUgaXNcbiAgICAgKiBjYXNlLWluc2Vuc2l0aXZlLlxuICAgICAqIEBwYXJhbSBuYW1lIC0gVGhlIG5hbWUgb2YgdGhlIGhlYWRlciB0byBzZXQuIFRoaXMgdmFsdWUgaXMgY2FzZS1pbnNlbnNpdGl2ZS5cbiAgICAgKiBAcGFyYW0gdmFsdWUgLSBUaGUgdmFsdWUgb2YgdGhlIGhlYWRlciB0byBzZXQuXG4gICAgICovXG4gICAgc2V0KG5hbWUsIHZhbHVlKSB7XG4gICAgICAgIHRoaXMuX2hlYWRlcnNNYXAuc2V0KG5vcm1hbGl6ZU5hbWUobmFtZSksIHsgbmFtZSwgdmFsdWU6IFN0cmluZyh2YWx1ZSkudHJpbSgpIH0pO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBHZXQgdGhlIGhlYWRlciB2YWx1ZSBmb3IgdGhlIHByb3ZpZGVkIGhlYWRlciBuYW1lLCBvciB1bmRlZmluZWQgaWYgbm8gaGVhZGVyIGV4aXN0cyBpbiB0aGlzXG4gICAgICogY29sbGVjdGlvbiB3aXRoIHRoZSBwcm92aWRlZCBuYW1lLlxuICAgICAqIEBwYXJhbSBuYW1lIC0gVGhlIG5hbWUgb2YgdGhlIGhlYWRlci4gVGhpcyB2YWx1ZSBpcyBjYXNlLWluc2Vuc2l0aXZlLlxuICAgICAqL1xuICAgIGdldChuYW1lKSB7XG4gICAgICAgIHZhciBfYTtcbiAgICAgICAgcmV0dXJuIChfYSA9IHRoaXMuX2hlYWRlcnNNYXAuZ2V0KG5vcm1hbGl6ZU5hbWUobmFtZSkpKSA9PT0gbnVsbCB8fCBfYSA9PT0gdm9pZCAwID8gdm9pZCAwIDogX2EudmFsdWU7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIEdldCB3aGV0aGVyIG9yIG5vdCB0aGlzIGhlYWRlciBjb2xsZWN0aW9uIGNvbnRhaW5zIGEgaGVhZGVyIGVudHJ5IGZvciB0aGUgcHJvdmlkZWQgaGVhZGVyIG5hbWUuXG4gICAgICogQHBhcmFtIG5hbWUgLSBUaGUgbmFtZSBvZiB0aGUgaGVhZGVyIHRvIHNldC4gVGhpcyB2YWx1ZSBpcyBjYXNlLWluc2Vuc2l0aXZlLlxuICAgICAqL1xuICAgIGhhcyhuYW1lKSB7XG4gICAgICAgIHJldHVybiB0aGlzLl9oZWFkZXJzTWFwLmhhcyhub3JtYWxpemVOYW1lKG5hbWUpKTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogUmVtb3ZlIHRoZSBoZWFkZXIgd2l0aCB0aGUgcHJvdmlkZWQgaGVhZGVyTmFtZS5cbiAgICAgKiBAcGFyYW0gbmFtZSAtIFRoZSBuYW1lIG9mIHRoZSBoZWFkZXIgdG8gcmVtb3ZlLlxuICAgICAqL1xuICAgIGRlbGV0ZShuYW1lKSB7XG4gICAgICAgIHRoaXMuX2hlYWRlcnNNYXAuZGVsZXRlKG5vcm1hbGl6ZU5hbWUobmFtZSkpO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBHZXQgdGhlIEpTT04gb2JqZWN0IHJlcHJlc2VudGF0aW9uIG9mIHRoaXMgSFRUUCBoZWFkZXIgY29sbGVjdGlvbi5cbiAgICAgKi9cbiAgICB0b0pTT04ob3B0aW9ucyA9IHt9KSB7XG4gICAgICAgIGNvbnN0IHJlc3VsdCA9IHt9O1xuICAgICAgICBpZiAob3B0aW9ucy5wcmVzZXJ2ZUNhc2UpIHtcbiAgICAgICAgICAgIGZvciAoY29uc3QgZW50cnkgb2YgdGhpcy5faGVhZGVyc01hcC52YWx1ZXMoKSkge1xuICAgICAgICAgICAgICAgIHJlc3VsdFtlbnRyeS5uYW1lXSA9IGVudHJ5LnZhbHVlO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgZm9yIChjb25zdCBbbm9ybWFsaXplZE5hbWUsIGVudHJ5XSBvZiB0aGlzLl9oZWFkZXJzTWFwKSB7XG4gICAgICAgICAgICAgICAgcmVzdWx0W25vcm1hbGl6ZWROYW1lXSA9IGVudHJ5LnZhbHVlO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIHJldHVybiByZXN1bHQ7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIEdldCB0aGUgc3RyaW5nIHJlcHJlc2VudGF0aW9uIG9mIHRoaXMgSFRUUCBoZWFkZXIgY29sbGVjdGlvbi5cbiAgICAgKi9cbiAgICB0b1N0cmluZygpIHtcbiAgICAgICAgcmV0dXJuIEpTT04uc3RyaW5naWZ5KHRoaXMudG9KU09OKHsgcHJlc2VydmVDYXNlOiB0cnVlIH0pKTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogSXRlcmF0ZSBvdmVyIHR1cGxlcyBvZiBoZWFkZXIgW25hbWUsIHZhbHVlXSBwYWlycy5cbiAgICAgKi9cbiAgICBbU3ltYm9sLml0ZXJhdG9yXSgpIHtcbiAgICAgICAgcmV0dXJuIGhlYWRlckl0ZXJhdG9yKHRoaXMuX2hlYWRlcnNNYXApO1xuICAgIH1cbn1cbi8qKlxuICogQ3JlYXRlcyBhbiBvYmplY3QgdGhhdCBzYXRpc2ZpZXMgdGhlIGBIdHRwSGVhZGVyc2AgaW50ZXJmYWNlLlxuICogQHBhcmFtIHJhd0hlYWRlcnMgLSBBIHNpbXBsZSBvYmplY3QgcmVwcmVzZW50aW5nIGluaXRpYWwgaGVhZGVyc1xuICovXG5leHBvcnQgZnVuY3Rpb24gY3JlYXRlSHR0cEhlYWRlcnMocmF3SGVhZGVycykge1xuICAgIHJldHVybiBuZXcgSHR0cEhlYWRlcnNJbXBsKHJhd0hlYWRlcnMpO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aHR0cEhlYWRlcnMuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/core-rest-pipeline/dist/esm/httpHeaders.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/core-rest-pipeline/dist/esm/index.js":
/*!******************************************************************!*\
  !*** ./node_modules/@azure/core-rest-pipeline/dist/esm/index.js ***!
  \******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   RestError: () => (/* reexport safe */ _restError_js__WEBPACK_IMPORTED_MODULE_5__.RestError),\n/* harmony export */   auxiliaryAuthenticationHeaderPolicy: () => (/* reexport safe */ _policies_auxiliaryAuthenticationHeaderPolicy_js__WEBPACK_IMPORTED_MODULE_23__.auxiliaryAuthenticationHeaderPolicy),\n/* harmony export */   auxiliaryAuthenticationHeaderPolicyName: () => (/* reexport safe */ _policies_auxiliaryAuthenticationHeaderPolicy_js__WEBPACK_IMPORTED_MODULE_23__.auxiliaryAuthenticationHeaderPolicyName),\n/* harmony export */   bearerTokenAuthenticationPolicy: () => (/* reexport safe */ _policies_bearerTokenAuthenticationPolicy_js__WEBPACK_IMPORTED_MODULE_21__.bearerTokenAuthenticationPolicy),\n/* harmony export */   bearerTokenAuthenticationPolicyName: () => (/* reexport safe */ _policies_bearerTokenAuthenticationPolicy_js__WEBPACK_IMPORTED_MODULE_21__.bearerTokenAuthenticationPolicyName),\n/* harmony export */   createDefaultHttpClient: () => (/* reexport safe */ _defaultHttpClient_js__WEBPACK_IMPORTED_MODULE_2__.createDefaultHttpClient),\n/* harmony export */   createEmptyPipeline: () => (/* reexport safe */ _pipeline_js__WEBPACK_IMPORTED_MODULE_0__.createEmptyPipeline),\n/* harmony export */   createFile: () => (/* reexport safe */ _util_file_js__WEBPACK_IMPORTED_MODULE_24__.createFile),\n/* harmony export */   createFileFromStream: () => (/* reexport safe */ _util_file_js__WEBPACK_IMPORTED_MODULE_24__.createFileFromStream),\n/* harmony export */   createHttpHeaders: () => (/* reexport safe */ _httpHeaders_js__WEBPACK_IMPORTED_MODULE_3__.createHttpHeaders),\n/* harmony export */   createPipelineFromOptions: () => (/* reexport safe */ _createPipelineFromOptions_js__WEBPACK_IMPORTED_MODULE_1__.createPipelineFromOptions),\n/* harmony export */   createPipelineRequest: () => (/* reexport safe */ _pipelineRequest_js__WEBPACK_IMPORTED_MODULE_4__.createPipelineRequest),\n/* harmony export */   decompressResponsePolicy: () => (/* reexport safe */ _policies_decompressResponsePolicy_js__WEBPACK_IMPORTED_MODULE_6__.decompressResponsePolicy),\n/* harmony export */   decompressResponsePolicyName: () => (/* reexport safe */ _policies_decompressResponsePolicy_js__WEBPACK_IMPORTED_MODULE_6__.decompressResponsePolicyName),\n/* harmony export */   defaultRetryPolicy: () => (/* reexport safe */ _policies_defaultRetryPolicy_js__WEBPACK_IMPORTED_MODULE_17__.defaultRetryPolicy),\n/* harmony export */   exponentialRetryPolicy: () => (/* reexport safe */ _policies_exponentialRetryPolicy_js__WEBPACK_IMPORTED_MODULE_7__.exponentialRetryPolicy),\n/* harmony export */   exponentialRetryPolicyName: () => (/* reexport safe */ _policies_exponentialRetryPolicy_js__WEBPACK_IMPORTED_MODULE_7__.exponentialRetryPolicyName),\n/* harmony export */   formDataPolicy: () => (/* reexport safe */ _policies_formDataPolicy_js__WEBPACK_IMPORTED_MODULE_20__.formDataPolicy),\n/* harmony export */   formDataPolicyName: () => (/* reexport safe */ _policies_formDataPolicy_js__WEBPACK_IMPORTED_MODULE_20__.formDataPolicyName),\n/* harmony export */   getDefaultProxySettings: () => (/* reexport safe */ _policies_proxyPolicy_js__WEBPACK_IMPORTED_MODULE_11__.getDefaultProxySettings),\n/* harmony export */   isRestError: () => (/* reexport safe */ _restError_js__WEBPACK_IMPORTED_MODULE_5__.isRestError),\n/* harmony export */   logPolicy: () => (/* reexport safe */ _policies_logPolicy_js__WEBPACK_IMPORTED_MODULE_9__.logPolicy),\n/* harmony export */   logPolicyName: () => (/* reexport safe */ _policies_logPolicy_js__WEBPACK_IMPORTED_MODULE_9__.logPolicyName),\n/* harmony export */   multipartPolicy: () => (/* reexport safe */ _policies_multipartPolicy_js__WEBPACK_IMPORTED_MODULE_10__.multipartPolicy),\n/* harmony export */   multipartPolicyName: () => (/* reexport safe */ _policies_multipartPolicy_js__WEBPACK_IMPORTED_MODULE_10__.multipartPolicyName),\n/* harmony export */   ndJsonPolicy: () => (/* reexport safe */ _policies_ndJsonPolicy_js__WEBPACK_IMPORTED_MODULE_22__.ndJsonPolicy),\n/* harmony export */   ndJsonPolicyName: () => (/* reexport safe */ _policies_ndJsonPolicy_js__WEBPACK_IMPORTED_MODULE_22__.ndJsonPolicyName),\n/* harmony export */   proxyPolicy: () => (/* reexport safe */ _policies_proxyPolicy_js__WEBPACK_IMPORTED_MODULE_11__.proxyPolicy),\n/* harmony export */   proxyPolicyName: () => (/* reexport safe */ _policies_proxyPolicy_js__WEBPACK_IMPORTED_MODULE_11__.proxyPolicyName),\n/* harmony export */   redirectPolicy: () => (/* reexport safe */ _policies_redirectPolicy_js__WEBPACK_IMPORTED_MODULE_12__.redirectPolicy),\n/* harmony export */   redirectPolicyName: () => (/* reexport safe */ _policies_redirectPolicy_js__WEBPACK_IMPORTED_MODULE_12__.redirectPolicyName),\n/* harmony export */   retryPolicy: () => (/* reexport safe */ _policies_retryPolicy_js__WEBPACK_IMPORTED_MODULE_15__.retryPolicy),\n/* harmony export */   setClientRequestIdPolicy: () => (/* reexport safe */ _policies_setClientRequestIdPolicy_js__WEBPACK_IMPORTED_MODULE_8__.setClientRequestIdPolicy),\n/* harmony export */   setClientRequestIdPolicyName: () => (/* reexport safe */ _policies_setClientRequestIdPolicy_js__WEBPACK_IMPORTED_MODULE_8__.setClientRequestIdPolicyName),\n/* harmony export */   systemErrorRetryPolicy: () => (/* reexport safe */ _policies_systemErrorRetryPolicy_js__WEBPACK_IMPORTED_MODULE_13__.systemErrorRetryPolicy),\n/* harmony export */   systemErrorRetryPolicyName: () => (/* reexport safe */ _policies_systemErrorRetryPolicy_js__WEBPACK_IMPORTED_MODULE_13__.systemErrorRetryPolicyName),\n/* harmony export */   throttlingRetryPolicy: () => (/* reexport safe */ _policies_throttlingRetryPolicy_js__WEBPACK_IMPORTED_MODULE_14__.throttlingRetryPolicy),\n/* harmony export */   throttlingRetryPolicyName: () => (/* reexport safe */ _policies_throttlingRetryPolicy_js__WEBPACK_IMPORTED_MODULE_14__.throttlingRetryPolicyName),\n/* harmony export */   tlsPolicy: () => (/* reexport safe */ _policies_tlsPolicy_js__WEBPACK_IMPORTED_MODULE_19__.tlsPolicy),\n/* harmony export */   tlsPolicyName: () => (/* reexport safe */ _policies_tlsPolicy_js__WEBPACK_IMPORTED_MODULE_19__.tlsPolicyName),\n/* harmony export */   tracingPolicy: () => (/* reexport safe */ _policies_tracingPolicy_js__WEBPACK_IMPORTED_MODULE_16__.tracingPolicy),\n/* harmony export */   tracingPolicyName: () => (/* reexport safe */ _policies_tracingPolicy_js__WEBPACK_IMPORTED_MODULE_16__.tracingPolicyName),\n/* harmony export */   userAgentPolicy: () => (/* reexport safe */ _policies_userAgentPolicy_js__WEBPACK_IMPORTED_MODULE_18__.userAgentPolicy),\n/* harmony export */   userAgentPolicyName: () => (/* reexport safe */ _policies_userAgentPolicy_js__WEBPACK_IMPORTED_MODULE_18__.userAgentPolicyName)\n/* harmony export */ });\n/* harmony import */ var _pipeline_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./pipeline.js */ \"(rsc)/./node_modules/@azure/core-rest-pipeline/dist/esm/pipeline.js\");\n/* harmony import */ var _createPipelineFromOptions_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./createPipelineFromOptions.js */ \"(rsc)/./node_modules/@azure/core-rest-pipeline/dist/esm/createPipelineFromOptions.js\");\n/* harmony import */ var _defaultHttpClient_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./defaultHttpClient.js */ \"(rsc)/./node_modules/@azure/core-rest-pipeline/dist/esm/defaultHttpClient.js\");\n/* harmony import */ var _httpHeaders_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./httpHeaders.js */ \"(rsc)/./node_modules/@azure/core-rest-pipeline/dist/esm/httpHeaders.js\");\n/* harmony import */ var _pipelineRequest_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./pipelineRequest.js */ \"(rsc)/./node_modules/@azure/core-rest-pipeline/dist/esm/pipelineRequest.js\");\n/* harmony import */ var _restError_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./restError.js */ \"(rsc)/./node_modules/@azure/core-rest-pipeline/dist/esm/restError.js\");\n/* harmony import */ var _policies_decompressResponsePolicy_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./policies/decompressResponsePolicy.js */ \"(rsc)/./node_modules/@azure/core-rest-pipeline/dist/esm/policies/decompressResponsePolicy.js\");\n/* harmony import */ var _policies_exponentialRetryPolicy_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./policies/exponentialRetryPolicy.js */ \"(rsc)/./node_modules/@azure/core-rest-pipeline/dist/esm/policies/exponentialRetryPolicy.js\");\n/* harmony import */ var _policies_setClientRequestIdPolicy_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./policies/setClientRequestIdPolicy.js */ \"(rsc)/./node_modules/@azure/core-rest-pipeline/dist/esm/policies/setClientRequestIdPolicy.js\");\n/* harmony import */ var _policies_logPolicy_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./policies/logPolicy.js */ \"(rsc)/./node_modules/@azure/core-rest-pipeline/dist/esm/policies/logPolicy.js\");\n/* harmony import */ var _policies_multipartPolicy_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./policies/multipartPolicy.js */ \"(rsc)/./node_modules/@azure/core-rest-pipeline/dist/esm/policies/multipartPolicy.js\");\n/* harmony import */ var _policies_proxyPolicy_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./policies/proxyPolicy.js */ \"(rsc)/./node_modules/@azure/core-rest-pipeline/dist/esm/policies/proxyPolicy.js\");\n/* harmony import */ var _policies_redirectPolicy_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./policies/redirectPolicy.js */ \"(rsc)/./node_modules/@azure/core-rest-pipeline/dist/esm/policies/redirectPolicy.js\");\n/* harmony import */ var _policies_systemErrorRetryPolicy_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./policies/systemErrorRetryPolicy.js */ \"(rsc)/./node_modules/@azure/core-rest-pipeline/dist/esm/policies/systemErrorRetryPolicy.js\");\n/* harmony import */ var _policies_throttlingRetryPolicy_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./policies/throttlingRetryPolicy.js */ \"(rsc)/./node_modules/@azure/core-rest-pipeline/dist/esm/policies/throttlingRetryPolicy.js\");\n/* harmony import */ var _policies_retryPolicy_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./policies/retryPolicy.js */ \"(rsc)/./node_modules/@azure/core-rest-pipeline/dist/esm/policies/retryPolicy.js\");\n/* harmony import */ var _policies_tracingPolicy_js__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./policies/tracingPolicy.js */ \"(rsc)/./node_modules/@azure/core-rest-pipeline/dist/esm/policies/tracingPolicy.js\");\n/* harmony import */ var _policies_defaultRetryPolicy_js__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./policies/defaultRetryPolicy.js */ \"(rsc)/./node_modules/@azure/core-rest-pipeline/dist/esm/policies/defaultRetryPolicy.js\");\n/* harmony import */ var _policies_userAgentPolicy_js__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./policies/userAgentPolicy.js */ \"(rsc)/./node_modules/@azure/core-rest-pipeline/dist/esm/policies/userAgentPolicy.js\");\n/* harmony import */ var _policies_tlsPolicy_js__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ./policies/tlsPolicy.js */ \"(rsc)/./node_modules/@azure/core-rest-pipeline/dist/esm/policies/tlsPolicy.js\");\n/* harmony import */ var _policies_formDataPolicy_js__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ./policies/formDataPolicy.js */ \"(rsc)/./node_modules/@azure/core-rest-pipeline/dist/esm/policies/formDataPolicy.js\");\n/* harmony import */ var _policies_bearerTokenAuthenticationPolicy_js__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ./policies/bearerTokenAuthenticationPolicy.js */ \"(rsc)/./node_modules/@azure/core-rest-pipeline/dist/esm/policies/bearerTokenAuthenticationPolicy.js\");\n/* harmony import */ var _policies_ndJsonPolicy_js__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! ./policies/ndJsonPolicy.js */ \"(rsc)/./node_modules/@azure/core-rest-pipeline/dist/esm/policies/ndJsonPolicy.js\");\n/* harmony import */ var _policies_auxiliaryAuthenticationHeaderPolicy_js__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! ./policies/auxiliaryAuthenticationHeaderPolicy.js */ \"(rsc)/./node_modules/@azure/core-rest-pipeline/dist/esm/policies/auxiliaryAuthenticationHeaderPolicy.js\");\n/* harmony import */ var _util_file_js__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! ./util/file.js */ \"(rsc)/./node_modules/@azure/core-rest-pipeline/dist/esm/util/file.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2NvcmUtcmVzdC1waXBlbGluZS9kaXN0L2VzbS9pbmRleC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBQTtBQUNBO0FBQ3FEO0FBQ3VCO0FBQ1g7QUFDWjtBQUNRO0FBQ0w7QUFDeUQ7QUFDTjtBQUNNO0FBQzlDO0FBQ2tCO0FBQ2E7QUFDZjtBQUN3QjtBQUNIO0FBQ2hEO0FBQ3dCO0FBQ1Q7QUFDZTtBQUNuQjtBQUNlO0FBQ29EO0FBQzFEO0FBQ3NFO0FBQy9FO0FBQ25FIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZGFuaWVsMy12cDIvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2NvcmUtcmVzdC1waXBlbGluZS9kaXN0L2VzbS9pbmRleC5qcz8xNzEzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLlxuLy8gTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlLlxuZXhwb3J0IHsgY3JlYXRlRW1wdHlQaXBlbGluZSwgfSBmcm9tIFwiLi9waXBlbGluZS5qc1wiO1xuZXhwb3J0IHsgY3JlYXRlUGlwZWxpbmVGcm9tT3B0aW9ucywgfSBmcm9tIFwiLi9jcmVhdGVQaXBlbGluZUZyb21PcHRpb25zLmpzXCI7XG5leHBvcnQgeyBjcmVhdGVEZWZhdWx0SHR0cENsaWVudCB9IGZyb20gXCIuL2RlZmF1bHRIdHRwQ2xpZW50LmpzXCI7XG5leHBvcnQgeyBjcmVhdGVIdHRwSGVhZGVycyB9IGZyb20gXCIuL2h0dHBIZWFkZXJzLmpzXCI7XG5leHBvcnQgeyBjcmVhdGVQaXBlbGluZVJlcXVlc3QgfSBmcm9tIFwiLi9waXBlbGluZVJlcXVlc3QuanNcIjtcbmV4cG9ydCB7IFJlc3RFcnJvciwgaXNSZXN0RXJyb3IgfSBmcm9tIFwiLi9yZXN0RXJyb3IuanNcIjtcbmV4cG9ydCB7IGRlY29tcHJlc3NSZXNwb25zZVBvbGljeSwgZGVjb21wcmVzc1Jlc3BvbnNlUG9saWN5TmFtZSwgfSBmcm9tIFwiLi9wb2xpY2llcy9kZWNvbXByZXNzUmVzcG9uc2VQb2xpY3kuanNcIjtcbmV4cG9ydCB7IGV4cG9uZW50aWFsUmV0cnlQb2xpY3ksIGV4cG9uZW50aWFsUmV0cnlQb2xpY3lOYW1lLCB9IGZyb20gXCIuL3BvbGljaWVzL2V4cG9uZW50aWFsUmV0cnlQb2xpY3kuanNcIjtcbmV4cG9ydCB7IHNldENsaWVudFJlcXVlc3RJZFBvbGljeSwgc2V0Q2xpZW50UmVxdWVzdElkUG9saWN5TmFtZSwgfSBmcm9tIFwiLi9wb2xpY2llcy9zZXRDbGllbnRSZXF1ZXN0SWRQb2xpY3kuanNcIjtcbmV4cG9ydCB7IGxvZ1BvbGljeSwgbG9nUG9saWN5TmFtZSB9IGZyb20gXCIuL3BvbGljaWVzL2xvZ1BvbGljeS5qc1wiO1xuZXhwb3J0IHsgbXVsdGlwYXJ0UG9saWN5LCBtdWx0aXBhcnRQb2xpY3lOYW1lIH0gZnJvbSBcIi4vcG9saWNpZXMvbXVsdGlwYXJ0UG9saWN5LmpzXCI7XG5leHBvcnQgeyBwcm94eVBvbGljeSwgcHJveHlQb2xpY3lOYW1lLCBnZXREZWZhdWx0UHJveHlTZXR0aW5ncyB9IGZyb20gXCIuL3BvbGljaWVzL3Byb3h5UG9saWN5LmpzXCI7XG5leHBvcnQgeyByZWRpcmVjdFBvbGljeSwgcmVkaXJlY3RQb2xpY3lOYW1lLCB9IGZyb20gXCIuL3BvbGljaWVzL3JlZGlyZWN0UG9saWN5LmpzXCI7XG5leHBvcnQgeyBzeXN0ZW1FcnJvclJldHJ5UG9saWN5LCBzeXN0ZW1FcnJvclJldHJ5UG9saWN5TmFtZSwgfSBmcm9tIFwiLi9wb2xpY2llcy9zeXN0ZW1FcnJvclJldHJ5UG9saWN5LmpzXCI7XG5leHBvcnQgeyB0aHJvdHRsaW5nUmV0cnlQb2xpY3ksIHRocm90dGxpbmdSZXRyeVBvbGljeU5hbWUsIH0gZnJvbSBcIi4vcG9saWNpZXMvdGhyb3R0bGluZ1JldHJ5UG9saWN5LmpzXCI7XG5leHBvcnQgeyByZXRyeVBvbGljeSB9IGZyb20gXCIuL3BvbGljaWVzL3JldHJ5UG9saWN5LmpzXCI7XG5leHBvcnQgeyB0cmFjaW5nUG9saWN5LCB0cmFjaW5nUG9saWN5TmFtZSwgfSBmcm9tIFwiLi9wb2xpY2llcy90cmFjaW5nUG9saWN5LmpzXCI7XG5leHBvcnQgeyBkZWZhdWx0UmV0cnlQb2xpY3ksIH0gZnJvbSBcIi4vcG9saWNpZXMvZGVmYXVsdFJldHJ5UG9saWN5LmpzXCI7XG5leHBvcnQgeyB1c2VyQWdlbnRQb2xpY3ksIHVzZXJBZ2VudFBvbGljeU5hbWUsIH0gZnJvbSBcIi4vcG9saWNpZXMvdXNlckFnZW50UG9saWN5LmpzXCI7XG5leHBvcnQgeyB0bHNQb2xpY3ksIHRsc1BvbGljeU5hbWUgfSBmcm9tIFwiLi9wb2xpY2llcy90bHNQb2xpY3kuanNcIjtcbmV4cG9ydCB7IGZvcm1EYXRhUG9saWN5LCBmb3JtRGF0YVBvbGljeU5hbWUgfSBmcm9tIFwiLi9wb2xpY2llcy9mb3JtRGF0YVBvbGljeS5qc1wiO1xuZXhwb3J0IHsgYmVhcmVyVG9rZW5BdXRoZW50aWNhdGlvblBvbGljeSwgYmVhcmVyVG9rZW5BdXRoZW50aWNhdGlvblBvbGljeU5hbWUsIH0gZnJvbSBcIi4vcG9saWNpZXMvYmVhcmVyVG9rZW5BdXRoZW50aWNhdGlvblBvbGljeS5qc1wiO1xuZXhwb3J0IHsgbmRKc29uUG9saWN5LCBuZEpzb25Qb2xpY3lOYW1lIH0gZnJvbSBcIi4vcG9saWNpZXMvbmRKc29uUG9saWN5LmpzXCI7XG5leHBvcnQgeyBhdXhpbGlhcnlBdXRoZW50aWNhdGlvbkhlYWRlclBvbGljeSwgYXV4aWxpYXJ5QXV0aGVudGljYXRpb25IZWFkZXJQb2xpY3lOYW1lLCB9IGZyb20gXCIuL3BvbGljaWVzL2F1eGlsaWFyeUF1dGhlbnRpY2F0aW9uSGVhZGVyUG9saWN5LmpzXCI7XG5leHBvcnQgeyBjcmVhdGVGaWxlLCBjcmVhdGVGaWxlRnJvbVN0cmVhbSwgfSBmcm9tIFwiLi91dGlsL2ZpbGUuanNcIjtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWluZGV4LmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/core-rest-pipeline/dist/esm/index.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/core-rest-pipeline/dist/esm/log.js":
/*!****************************************************************!*\
  !*** ./node_modules/@azure/core-rest-pipeline/dist/esm/log.js ***!
  \****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   logger: () => (/* binding */ logger)\n/* harmony export */ });\n/* harmony import */ var _azure_logger__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @azure/logger */ \"(rsc)/./node_modules/@azure/logger/dist/esm/index.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nconst logger = (0,_azure_logger__WEBPACK_IMPORTED_MODULE_0__.createClientLogger)(\"core-rest-pipeline\");\n//# sourceMappingURL=log.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2NvcmUtcmVzdC1waXBlbGluZS9kaXN0L2VzbS9sb2cuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQTtBQUNBO0FBQ21EO0FBQzVDLGVBQWUsaUVBQWtCO0FBQ3hDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZGFuaWVsMy12cDIvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2NvcmUtcmVzdC1waXBlbGluZS9kaXN0L2VzbS9sb2cuanM/NGM4OCJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi5cbi8vIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZS5cbmltcG9ydCB7IGNyZWF0ZUNsaWVudExvZ2dlciB9IGZyb20gXCJAYXp1cmUvbG9nZ2VyXCI7XG5leHBvcnQgY29uc3QgbG9nZ2VyID0gY3JlYXRlQ2xpZW50TG9nZ2VyKFwiY29yZS1yZXN0LXBpcGVsaW5lXCIpO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9bG9nLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/core-rest-pipeline/dist/esm/log.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/core-rest-pipeline/dist/esm/nodeHttpClient.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@azure/core-rest-pipeline/dist/esm/nodeHttpClient.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createNodeHttpClient: () => (/* binding */ createNodeHttpClient),\n/* harmony export */   getBodyLength: () => (/* binding */ getBodyLength)\n/* harmony export */ });\n/* harmony import */ var node_http__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! node:http */ \"node:http\");\n/* harmony import */ var node_https__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! node:https */ \"node:https\");\n/* harmony import */ var node_zlib__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! node:zlib */ \"node:zlib\");\n/* harmony import */ var node_stream__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! node:stream */ \"node:stream\");\n/* harmony import */ var _azure_abort_controller__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @azure/abort-controller */ \"(rsc)/./node_modules/@azure/abort-controller/dist/esm/index.js\");\n/* harmony import */ var _httpHeaders_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./httpHeaders.js */ \"(rsc)/./node_modules/@azure/core-rest-pipeline/dist/esm/httpHeaders.js\");\n/* harmony import */ var _restError_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./restError.js */ \"(rsc)/./node_modules/@azure/core-rest-pipeline/dist/esm/restError.js\");\n/* harmony import */ var _log_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./log.js */ \"(rsc)/./node_modules/@azure/core-rest-pipeline/dist/esm/log.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\n\n\n\n\n\n\n\nconst DEFAULT_TLS_SETTINGS = {};\nfunction isReadableStream(body) {\n    return body && typeof body.pipe === \"function\";\n}\nfunction isStreamComplete(stream) {\n    return new Promise((resolve) => {\n        stream.on(\"close\", resolve);\n        stream.on(\"end\", resolve);\n        stream.on(\"error\", resolve);\n    });\n}\nfunction isArrayBuffer(body) {\n    return body && typeof body.byteLength === \"number\";\n}\nclass ReportTransform extends node_stream__WEBPACK_IMPORTED_MODULE_3__.Transform {\n    // eslint-disable-next-line @typescript-eslint/ban-types\n    _transform(chunk, _encoding, callback) {\n        this.push(chunk);\n        this.loadedBytes += chunk.length;\n        try {\n            this.progressCallback({ loadedBytes: this.loadedBytes });\n            callback();\n        }\n        catch (e) {\n            callback(e);\n        }\n    }\n    constructor(progressCallback) {\n        super();\n        this.loadedBytes = 0;\n        this.progressCallback = progressCallback;\n    }\n}\n/**\n * A HttpClient implementation that uses Node's \"https\" module to send HTTPS requests.\n * @internal\n */\nclass NodeHttpClient {\n    constructor() {\n        this.cachedHttpsAgents = new WeakMap();\n    }\n    /**\n     * Makes a request over an underlying transport layer and returns the response.\n     * @param request - The request to be made.\n     */\n    async sendRequest(request) {\n        var _a, _b, _c;\n        const abortController = new AbortController();\n        let abortListener;\n        if (request.abortSignal) {\n            if (request.abortSignal.aborted) {\n                throw new _azure_abort_controller__WEBPACK_IMPORTED_MODULE_4__.AbortError(\"The operation was aborted.\");\n            }\n            abortListener = (event) => {\n                if (event.type === \"abort\") {\n                    abortController.abort();\n                }\n            };\n            request.abortSignal.addEventListener(\"abort\", abortListener);\n        }\n        if (request.timeout > 0) {\n            setTimeout(() => {\n                abortController.abort();\n            }, request.timeout);\n        }\n        const acceptEncoding = request.headers.get(\"Accept-Encoding\");\n        const shouldDecompress = (acceptEncoding === null || acceptEncoding === void 0 ? void 0 : acceptEncoding.includes(\"gzip\")) || (acceptEncoding === null || acceptEncoding === void 0 ? void 0 : acceptEncoding.includes(\"deflate\"));\n        let body = typeof request.body === \"function\" ? request.body() : request.body;\n        if (body && !request.headers.has(\"Content-Length\")) {\n            const bodyLength = getBodyLength(body);\n            if (bodyLength !== null) {\n                request.headers.set(\"Content-Length\", bodyLength);\n            }\n        }\n        let responseStream;\n        try {\n            if (body && request.onUploadProgress) {\n                const onUploadProgress = request.onUploadProgress;\n                const uploadReportStream = new ReportTransform(onUploadProgress);\n                uploadReportStream.on(\"error\", (e) => {\n                    _log_js__WEBPACK_IMPORTED_MODULE_7__.logger.error(\"Error in upload progress\", e);\n                });\n                if (isReadableStream(body)) {\n                    body.pipe(uploadReportStream);\n                }\n                else {\n                    uploadReportStream.end(body);\n                }\n                body = uploadReportStream;\n            }\n            const res = await this.makeRequest(request, abortController, body);\n            const headers = getResponseHeaders(res);\n            const status = (_a = res.statusCode) !== null && _a !== void 0 ? _a : 0;\n            const response = {\n                status,\n                headers,\n                request,\n            };\n            // Responses to HEAD must not have a body.\n            // If they do return a body, that body must be ignored.\n            if (request.method === \"HEAD\") {\n                // call resume() and not destroy() to avoid closing the socket\n                // and losing keep alive\n                res.resume();\n                return response;\n            }\n            responseStream = shouldDecompress ? getDecodedResponseStream(res, headers) : res;\n            const onDownloadProgress = request.onDownloadProgress;\n            if (onDownloadProgress) {\n                const downloadReportStream = new ReportTransform(onDownloadProgress);\n                downloadReportStream.on(\"error\", (e) => {\n                    _log_js__WEBPACK_IMPORTED_MODULE_7__.logger.error(\"Error in download progress\", e);\n                });\n                responseStream.pipe(downloadReportStream);\n                responseStream = downloadReportStream;\n            }\n            if (\n            // Value of POSITIVE_INFINITY in streamResponseStatusCodes is considered as any status code\n            ((_b = request.streamResponseStatusCodes) === null || _b === void 0 ? void 0 : _b.has(Number.POSITIVE_INFINITY)) ||\n                ((_c = request.streamResponseStatusCodes) === null || _c === void 0 ? void 0 : _c.has(response.status))) {\n                response.readableStreamBody = responseStream;\n            }\n            else {\n                response.bodyAsText = await streamToText(responseStream);\n            }\n            return response;\n        }\n        finally {\n            // clean up event listener\n            if (request.abortSignal && abortListener) {\n                let uploadStreamDone = Promise.resolve();\n                if (isReadableStream(body)) {\n                    uploadStreamDone = isStreamComplete(body);\n                }\n                let downloadStreamDone = Promise.resolve();\n                if (isReadableStream(responseStream)) {\n                    downloadStreamDone = isStreamComplete(responseStream);\n                }\n                Promise.all([uploadStreamDone, downloadStreamDone])\n                    .then(() => {\n                    var _a;\n                    // eslint-disable-next-line promise/always-return\n                    if (abortListener) {\n                        (_a = request.abortSignal) === null || _a === void 0 ? void 0 : _a.removeEventListener(\"abort\", abortListener);\n                    }\n                })\n                    .catch((e) => {\n                    _log_js__WEBPACK_IMPORTED_MODULE_7__.logger.warning(\"Error when cleaning up abortListener on httpRequest\", e);\n                });\n            }\n        }\n    }\n    makeRequest(request, abortController, body) {\n        var _a;\n        const url = new URL(request.url);\n        const isInsecure = url.protocol !== \"https:\";\n        if (isInsecure && !request.allowInsecureConnection) {\n            throw new Error(`Cannot connect to ${request.url} while allowInsecureConnection is false.`);\n        }\n        const agent = (_a = request.agent) !== null && _a !== void 0 ? _a : this.getOrCreateAgent(request, isInsecure);\n        const options = {\n            agent,\n            hostname: url.hostname,\n            path: `${url.pathname}${url.search}`,\n            port: url.port,\n            method: request.method,\n            headers: request.headers.toJSON({ preserveCase: true }),\n        };\n        return new Promise((resolve, reject) => {\n            const req = isInsecure ? node_http__WEBPACK_IMPORTED_MODULE_0__.request(options, resolve) : node_https__WEBPACK_IMPORTED_MODULE_1__.request(options, resolve);\n            req.once(\"error\", (err) => {\n                var _a;\n                reject(new _restError_js__WEBPACK_IMPORTED_MODULE_6__.RestError(err.message, { code: (_a = err.code) !== null && _a !== void 0 ? _a : _restError_js__WEBPACK_IMPORTED_MODULE_6__.RestError.REQUEST_SEND_ERROR, request }));\n            });\n            abortController.signal.addEventListener(\"abort\", () => {\n                const abortError = new _azure_abort_controller__WEBPACK_IMPORTED_MODULE_4__.AbortError(\"The operation was aborted.\");\n                req.destroy(abortError);\n                reject(abortError);\n            });\n            if (body && isReadableStream(body)) {\n                body.pipe(req);\n            }\n            else if (body) {\n                if (typeof body === \"string\" || Buffer.isBuffer(body)) {\n                    req.end(body);\n                }\n                else if (isArrayBuffer(body)) {\n                    req.end(ArrayBuffer.isView(body) ? Buffer.from(body.buffer) : Buffer.from(body));\n                }\n                else {\n                    _log_js__WEBPACK_IMPORTED_MODULE_7__.logger.error(\"Unrecognized body type\", body);\n                    reject(new _restError_js__WEBPACK_IMPORTED_MODULE_6__.RestError(\"Unrecognized body type\"));\n                }\n            }\n            else {\n                // streams don't like \"undefined\" being passed as data\n                req.end();\n            }\n        });\n    }\n    getOrCreateAgent(request, isInsecure) {\n        var _a;\n        const disableKeepAlive = request.disableKeepAlive;\n        // Handle Insecure requests first\n        if (isInsecure) {\n            if (disableKeepAlive) {\n                // keepAlive:false is the default so we don't need a custom Agent\n                return node_http__WEBPACK_IMPORTED_MODULE_0__.globalAgent;\n            }\n            if (!this.cachedHttpAgent) {\n                // If there is no cached agent create a new one and cache it.\n                this.cachedHttpAgent = new node_http__WEBPACK_IMPORTED_MODULE_0__.Agent({ keepAlive: true });\n            }\n            return this.cachedHttpAgent;\n        }\n        else {\n            if (disableKeepAlive && !request.tlsSettings) {\n                // When there are no tlsSettings and keepAlive is false\n                // we don't need a custom agent\n                return node_https__WEBPACK_IMPORTED_MODULE_1__.globalAgent;\n            }\n            // We use the tlsSettings to index cached clients\n            const tlsSettings = (_a = request.tlsSettings) !== null && _a !== void 0 ? _a : DEFAULT_TLS_SETTINGS;\n            // Get the cached agent or create a new one with the\n            // provided values for keepAlive and tlsSettings\n            let agent = this.cachedHttpsAgents.get(tlsSettings);\n            if (agent && agent.options.keepAlive === !disableKeepAlive) {\n                return agent;\n            }\n            _log_js__WEBPACK_IMPORTED_MODULE_7__.logger.info(\"No cached TLS Agent exist, creating a new Agent\");\n            agent = new node_https__WEBPACK_IMPORTED_MODULE_1__.Agent(Object.assign({ \n                // keepAlive is true if disableKeepAlive is false.\n                keepAlive: !disableKeepAlive }, tlsSettings));\n            this.cachedHttpsAgents.set(tlsSettings, agent);\n            return agent;\n        }\n    }\n}\nfunction getResponseHeaders(res) {\n    const headers = (0,_httpHeaders_js__WEBPACK_IMPORTED_MODULE_5__.createHttpHeaders)();\n    for (const header of Object.keys(res.headers)) {\n        const value = res.headers[header];\n        if (Array.isArray(value)) {\n            if (value.length > 0) {\n                headers.set(header, value[0]);\n            }\n        }\n        else if (value) {\n            headers.set(header, value);\n        }\n    }\n    return headers;\n}\nfunction getDecodedResponseStream(stream, headers) {\n    const contentEncoding = headers.get(\"Content-Encoding\");\n    if (contentEncoding === \"gzip\") {\n        const unzip = node_zlib__WEBPACK_IMPORTED_MODULE_2__.createGunzip();\n        stream.pipe(unzip);\n        return unzip;\n    }\n    else if (contentEncoding === \"deflate\") {\n        const inflate = node_zlib__WEBPACK_IMPORTED_MODULE_2__.createInflate();\n        stream.pipe(inflate);\n        return inflate;\n    }\n    return stream;\n}\nfunction streamToText(stream) {\n    return new Promise((resolve, reject) => {\n        const buffer = [];\n        stream.on(\"data\", (chunk) => {\n            if (Buffer.isBuffer(chunk)) {\n                buffer.push(chunk);\n            }\n            else {\n                buffer.push(Buffer.from(chunk));\n            }\n        });\n        stream.on(\"end\", () => {\n            resolve(Buffer.concat(buffer).toString(\"utf8\"));\n        });\n        stream.on(\"error\", (e) => {\n            if (e && (e === null || e === void 0 ? void 0 : e.name) === \"AbortError\") {\n                reject(e);\n            }\n            else {\n                reject(new _restError_js__WEBPACK_IMPORTED_MODULE_6__.RestError(`Error reading response as text: ${e.message}`, {\n                    code: _restError_js__WEBPACK_IMPORTED_MODULE_6__.RestError.PARSE_ERROR,\n                }));\n            }\n        });\n    });\n}\n/** @internal */\nfunction getBodyLength(body) {\n    if (!body) {\n        return 0;\n    }\n    else if (Buffer.isBuffer(body)) {\n        return body.length;\n    }\n    else if (isReadableStream(body)) {\n        return null;\n    }\n    else if (isArrayBuffer(body)) {\n        return body.byteLength;\n    }\n    else if (typeof body === \"string\") {\n        return Buffer.from(body).length;\n    }\n    else {\n        return null;\n    }\n}\n/**\n * Create a new HttpClient instance for the NodeJS environment.\n * @internal\n */\nfunction createNodeHttpClient() {\n    return new NodeHttpClient();\n}\n//# sourceMappingURL=nodeHttpClient.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/core-rest-pipeline/dist/esm/nodeHttpClient.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/core-rest-pipeline/dist/esm/pipeline.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@azure/core-rest-pipeline/dist/esm/pipeline.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createEmptyPipeline: () => (/* binding */ createEmptyPipeline)\n/* harmony export */ });\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\nconst ValidPhaseNames = new Set([\"Deserialize\", \"Serialize\", \"Retry\", \"Sign\"]);\n/**\n * A private implementation of Pipeline.\n * Do not export this class from the package.\n * @internal\n */\nclass HttpPipeline {\n    constructor(policies) {\n        var _a;\n        this._policies = [];\n        this._policies = (_a = policies === null || policies === void 0 ? void 0 : policies.slice(0)) !== null && _a !== void 0 ? _a : [];\n        this._orderedPolicies = undefined;\n    }\n    addPolicy(policy, options = {}) {\n        if (options.phase && options.afterPhase) {\n            throw new Error(\"Policies inside a phase cannot specify afterPhase.\");\n        }\n        if (options.phase && !ValidPhaseNames.has(options.phase)) {\n            throw new Error(`Invalid phase name: ${options.phase}`);\n        }\n        if (options.afterPhase && !ValidPhaseNames.has(options.afterPhase)) {\n            throw new Error(`Invalid afterPhase name: ${options.afterPhase}`);\n        }\n        this._policies.push({\n            policy,\n            options,\n        });\n        this._orderedPolicies = undefined;\n    }\n    removePolicy(options) {\n        const removedPolicies = [];\n        this._policies = this._policies.filter((policyDescriptor) => {\n            if ((options.name && policyDescriptor.policy.name === options.name) ||\n                (options.phase && policyDescriptor.options.phase === options.phase)) {\n                removedPolicies.push(policyDescriptor.policy);\n                return false;\n            }\n            else {\n                return true;\n            }\n        });\n        this._orderedPolicies = undefined;\n        return removedPolicies;\n    }\n    sendRequest(httpClient, request) {\n        const policies = this.getOrderedPolicies();\n        const pipeline = policies.reduceRight((next, policy) => {\n            return (req) => {\n                return policy.sendRequest(req, next);\n            };\n        }, (req) => httpClient.sendRequest(req));\n        return pipeline(request);\n    }\n    getOrderedPolicies() {\n        if (!this._orderedPolicies) {\n            this._orderedPolicies = this.orderPolicies();\n        }\n        return this._orderedPolicies;\n    }\n    clone() {\n        return new HttpPipeline(this._policies);\n    }\n    static create() {\n        return new HttpPipeline();\n    }\n    orderPolicies() {\n        /**\n         * The goal of this method is to reliably order pipeline policies\n         * based on their declared requirements when they were added.\n         *\n         * Order is first determined by phase:\n         *\n         * 1. Serialize Phase\n         * 2. Policies not in a phase\n         * 3. Deserialize Phase\n         * 4. Retry Phase\n         * 5. Sign Phase\n         *\n         * Within each phase, policies are executed in the order\n         * they were added unless they were specified to execute\n         * before/after other policies or after a particular phase.\n         *\n         * To determine the final order, we will walk the policy list\n         * in phase order multiple times until all dependencies are\n         * satisfied.\n         *\n         * `afterPolicies` are the set of policies that must be\n         * executed before a given policy. This requirement is\n         * considered satisfied when each of the listed policies\n         * have been scheduled.\n         *\n         * `beforePolicies` are the set of policies that must be\n         * executed after a given policy. Since this dependency\n         * can be expressed by converting it into a equivalent\n         * `afterPolicies` declarations, they are normalized\n         * into that form for simplicity.\n         *\n         * An `afterPhase` dependency is considered satisfied when all\n         * policies in that phase have scheduled.\n         *\n         */\n        const result = [];\n        // Track all policies we know about.\n        const policyMap = new Map();\n        function createPhase(name) {\n            return {\n                name,\n                policies: new Set(),\n                hasRun: false,\n                hasAfterPolicies: false,\n            };\n        }\n        // Track policies for each phase.\n        const serializePhase = createPhase(\"Serialize\");\n        const noPhase = createPhase(\"None\");\n        const deserializePhase = createPhase(\"Deserialize\");\n        const retryPhase = createPhase(\"Retry\");\n        const signPhase = createPhase(\"Sign\");\n        // a list of phases in order\n        const orderedPhases = [serializePhase, noPhase, deserializePhase, retryPhase, signPhase];\n        // Small helper function to map phase name to each Phase\n        function getPhase(phase) {\n            if (phase === \"Retry\") {\n                return retryPhase;\n            }\n            else if (phase === \"Serialize\") {\n                return serializePhase;\n            }\n            else if (phase === \"Deserialize\") {\n                return deserializePhase;\n            }\n            else if (phase === \"Sign\") {\n                return signPhase;\n            }\n            else {\n                return noPhase;\n            }\n        }\n        // First walk each policy and create a node to track metadata.\n        for (const descriptor of this._policies) {\n            const policy = descriptor.policy;\n            const options = descriptor.options;\n            const policyName = policy.name;\n            if (policyMap.has(policyName)) {\n                throw new Error(\"Duplicate policy names not allowed in pipeline\");\n            }\n            const node = {\n                policy,\n                dependsOn: new Set(),\n                dependants: new Set(),\n            };\n            if (options.afterPhase) {\n                node.afterPhase = getPhase(options.afterPhase);\n                node.afterPhase.hasAfterPolicies = true;\n            }\n            policyMap.set(policyName, node);\n            const phase = getPhase(options.phase);\n            phase.policies.add(node);\n        }\n        // Now that each policy has a node, connect dependency references.\n        for (const descriptor of this._policies) {\n            const { policy, options } = descriptor;\n            const policyName = policy.name;\n            const node = policyMap.get(policyName);\n            if (!node) {\n                throw new Error(`Missing node for policy ${policyName}`);\n            }\n            if (options.afterPolicies) {\n                for (const afterPolicyName of options.afterPolicies) {\n                    const afterNode = policyMap.get(afterPolicyName);\n                    if (afterNode) {\n                        // Linking in both directions helps later\n                        // when we want to notify dependants.\n                        node.dependsOn.add(afterNode);\n                        afterNode.dependants.add(node);\n                    }\n                }\n            }\n            if (options.beforePolicies) {\n                for (const beforePolicyName of options.beforePolicies) {\n                    const beforeNode = policyMap.get(beforePolicyName);\n                    if (beforeNode) {\n                        // To execute before another node, make it\n                        // depend on the current node.\n                        beforeNode.dependsOn.add(node);\n                        node.dependants.add(beforeNode);\n                    }\n                }\n            }\n        }\n        function walkPhase(phase) {\n            phase.hasRun = true;\n            // Sets iterate in insertion order\n            for (const node of phase.policies) {\n                if (node.afterPhase && (!node.afterPhase.hasRun || node.afterPhase.policies.size)) {\n                    // If this node is waiting on a phase to complete,\n                    // we need to skip it for now.\n                    // Even if the phase is empty, we should wait for it\n                    // to be walked to avoid re-ordering policies.\n                    continue;\n                }\n                if (node.dependsOn.size === 0) {\n                    // If there's nothing else we're waiting for, we can\n                    // add this policy to the result list.\n                    result.push(node.policy);\n                    // Notify anything that depends on this policy that\n                    // the policy has been scheduled.\n                    for (const dependant of node.dependants) {\n                        dependant.dependsOn.delete(node);\n                    }\n                    policyMap.delete(node.policy.name);\n                    phase.policies.delete(node);\n                }\n            }\n        }\n        function walkPhases() {\n            for (const phase of orderedPhases) {\n                walkPhase(phase);\n                // if the phase isn't complete\n                if (phase.policies.size > 0 && phase !== noPhase) {\n                    if (!noPhase.hasRun) {\n                        // Try running noPhase to see if that unblocks this phase next tick.\n                        // This can happen if a phase that happens before noPhase\n                        // is waiting on a noPhase policy to complete.\n                        walkPhase(noPhase);\n                    }\n                    // Don't proceed to the next phase until this phase finishes.\n                    return;\n                }\n                if (phase.hasAfterPolicies) {\n                    // Run any policies unblocked by this phase\n                    walkPhase(noPhase);\n                }\n            }\n        }\n        // Iterate until we've put every node in the result list.\n        let iteration = 0;\n        while (policyMap.size > 0) {\n            iteration++;\n            const initialResultLength = result.length;\n            // Keep walking each phase in order until we can order every node.\n            walkPhases();\n            // The result list *should* get at least one larger each time\n            // after the first full pass.\n            // Otherwise, we're going to loop forever.\n            if (result.length <= initialResultLength && iteration > 1) {\n                throw new Error(\"Cannot satisfy policy dependencies due to requirements cycle.\");\n            }\n        }\n        return result;\n    }\n}\n/**\n * Creates a totally empty pipeline.\n * Useful for testing or creating a custom one.\n */\nfunction createEmptyPipeline() {\n    return HttpPipeline.create();\n}\n//# sourceMappingURL=pipeline.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/core-rest-pipeline/dist/esm/pipeline.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/core-rest-pipeline/dist/esm/pipelineRequest.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@azure/core-rest-pipeline/dist/esm/pipelineRequest.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createPipelineRequest: () => (/* binding */ createPipelineRequest)\n/* harmony export */ });\n/* harmony import */ var _httpHeaders_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./httpHeaders.js */ \"(rsc)/./node_modules/@azure/core-rest-pipeline/dist/esm/httpHeaders.js\");\n/* harmony import */ var _azure_core_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @azure/core-util */ \"(rsc)/./node_modules/@azure/core-util/dist/esm/index.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\n\nclass PipelineRequestImpl {\n    constructor(options) {\n        var _a, _b, _c, _d, _e, _f, _g;\n        this.url = options.url;\n        this.body = options.body;\n        this.headers = (_a = options.headers) !== null && _a !== void 0 ? _a : (0,_httpHeaders_js__WEBPACK_IMPORTED_MODULE_0__.createHttpHeaders)();\n        this.method = (_b = options.method) !== null && _b !== void 0 ? _b : \"GET\";\n        this.timeout = (_c = options.timeout) !== null && _c !== void 0 ? _c : 0;\n        this.multipartBody = options.multipartBody;\n        this.formData = options.formData;\n        this.disableKeepAlive = (_d = options.disableKeepAlive) !== null && _d !== void 0 ? _d : false;\n        this.proxySettings = options.proxySettings;\n        this.streamResponseStatusCodes = options.streamResponseStatusCodes;\n        this.withCredentials = (_e = options.withCredentials) !== null && _e !== void 0 ? _e : false;\n        this.abortSignal = options.abortSignal;\n        this.tracingOptions = options.tracingOptions;\n        this.onUploadProgress = options.onUploadProgress;\n        this.onDownloadProgress = options.onDownloadProgress;\n        this.requestId = options.requestId || (0,_azure_core_util__WEBPACK_IMPORTED_MODULE_1__.randomUUID)();\n        this.allowInsecureConnection = (_f = options.allowInsecureConnection) !== null && _f !== void 0 ? _f : false;\n        this.enableBrowserStreams = (_g = options.enableBrowserStreams) !== null && _g !== void 0 ? _g : false;\n    }\n}\n/**\n * Creates a new pipeline request with the given options.\n * This method is to allow for the easy setting of default values and not required.\n * @param options - The options to create the request with.\n */\nfunction createPipelineRequest(options) {\n    return new PipelineRequestImpl(options);\n}\n//# sourceMappingURL=pipelineRequest.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2NvcmUtcmVzdC1waXBlbGluZS9kaXN0L2VzbS9waXBlbGluZVJlcXVlc3QuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUE7QUFDQTtBQUNxRDtBQUNQO0FBQzlDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwrRUFBK0Usa0VBQWlCO0FBQ2hHO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDhDQUE4Qyw0REFBVTtBQUN4RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2RhbmllbDMtdnAyLy4vbm9kZV9tb2R1bGVzL0BhenVyZS9jb3JlLXJlc3QtcGlwZWxpbmUvZGlzdC9lc20vcGlwZWxpbmVSZXF1ZXN0LmpzPzdjMTAiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uXG4vLyBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UuXG5pbXBvcnQgeyBjcmVhdGVIdHRwSGVhZGVycyB9IGZyb20gXCIuL2h0dHBIZWFkZXJzLmpzXCI7XG5pbXBvcnQgeyByYW5kb21VVUlEIH0gZnJvbSBcIkBhenVyZS9jb3JlLXV0aWxcIjtcbmNsYXNzIFBpcGVsaW5lUmVxdWVzdEltcGwge1xuICAgIGNvbnN0cnVjdG9yKG9wdGlvbnMpIHtcbiAgICAgICAgdmFyIF9hLCBfYiwgX2MsIF9kLCBfZSwgX2YsIF9nO1xuICAgICAgICB0aGlzLnVybCA9IG9wdGlvbnMudXJsO1xuICAgICAgICB0aGlzLmJvZHkgPSBvcHRpb25zLmJvZHk7XG4gICAgICAgIHRoaXMuaGVhZGVycyA9IChfYSA9IG9wdGlvbnMuaGVhZGVycykgIT09IG51bGwgJiYgX2EgIT09IHZvaWQgMCA/IF9hIDogY3JlYXRlSHR0cEhlYWRlcnMoKTtcbiAgICAgICAgdGhpcy5tZXRob2QgPSAoX2IgPSBvcHRpb25zLm1ldGhvZCkgIT09IG51bGwgJiYgX2IgIT09IHZvaWQgMCA/IF9iIDogXCJHRVRcIjtcbiAgICAgICAgdGhpcy50aW1lb3V0ID0gKF9jID0gb3B0aW9ucy50aW1lb3V0KSAhPT0gbnVsbCAmJiBfYyAhPT0gdm9pZCAwID8gX2MgOiAwO1xuICAgICAgICB0aGlzLm11bHRpcGFydEJvZHkgPSBvcHRpb25zLm11bHRpcGFydEJvZHk7XG4gICAgICAgIHRoaXMuZm9ybURhdGEgPSBvcHRpb25zLmZvcm1EYXRhO1xuICAgICAgICB0aGlzLmRpc2FibGVLZWVwQWxpdmUgPSAoX2QgPSBvcHRpb25zLmRpc2FibGVLZWVwQWxpdmUpICE9PSBudWxsICYmIF9kICE9PSB2b2lkIDAgPyBfZCA6IGZhbHNlO1xuICAgICAgICB0aGlzLnByb3h5U2V0dGluZ3MgPSBvcHRpb25zLnByb3h5U2V0dGluZ3M7XG4gICAgICAgIHRoaXMuc3RyZWFtUmVzcG9uc2VTdGF0dXNDb2RlcyA9IG9wdGlvbnMuc3RyZWFtUmVzcG9uc2VTdGF0dXNDb2RlcztcbiAgICAgICAgdGhpcy53aXRoQ3JlZGVudGlhbHMgPSAoX2UgPSBvcHRpb25zLndpdGhDcmVkZW50aWFscykgIT09IG51bGwgJiYgX2UgIT09IHZvaWQgMCA/IF9lIDogZmFsc2U7XG4gICAgICAgIHRoaXMuYWJvcnRTaWduYWwgPSBvcHRpb25zLmFib3J0U2lnbmFsO1xuICAgICAgICB0aGlzLnRyYWNpbmdPcHRpb25zID0gb3B0aW9ucy50cmFjaW5nT3B0aW9ucztcbiAgICAgICAgdGhpcy5vblVwbG9hZFByb2dyZXNzID0gb3B0aW9ucy5vblVwbG9hZFByb2dyZXNzO1xuICAgICAgICB0aGlzLm9uRG93bmxvYWRQcm9ncmVzcyA9IG9wdGlvbnMub25Eb3dubG9hZFByb2dyZXNzO1xuICAgICAgICB0aGlzLnJlcXVlc3RJZCA9IG9wdGlvbnMucmVxdWVzdElkIHx8IHJhbmRvbVVVSUQoKTtcbiAgICAgICAgdGhpcy5hbGxvd0luc2VjdXJlQ29ubmVjdGlvbiA9IChfZiA9IG9wdGlvbnMuYWxsb3dJbnNlY3VyZUNvbm5lY3Rpb24pICE9PSBudWxsICYmIF9mICE9PSB2b2lkIDAgPyBfZiA6IGZhbHNlO1xuICAgICAgICB0aGlzLmVuYWJsZUJyb3dzZXJTdHJlYW1zID0gKF9nID0gb3B0aW9ucy5lbmFibGVCcm93c2VyU3RyZWFtcykgIT09IG51bGwgJiYgX2cgIT09IHZvaWQgMCA/IF9nIDogZmFsc2U7XG4gICAgfVxufVxuLyoqXG4gKiBDcmVhdGVzIGEgbmV3IHBpcGVsaW5lIHJlcXVlc3Qgd2l0aCB0aGUgZ2l2ZW4gb3B0aW9ucy5cbiAqIFRoaXMgbWV0aG9kIGlzIHRvIGFsbG93IGZvciB0aGUgZWFzeSBzZXR0aW5nIG9mIGRlZmF1bHQgdmFsdWVzIGFuZCBub3QgcmVxdWlyZWQuXG4gKiBAcGFyYW0gb3B0aW9ucyAtIFRoZSBvcHRpb25zIHRvIGNyZWF0ZSB0aGUgcmVxdWVzdCB3aXRoLlxuICovXG5leHBvcnQgZnVuY3Rpb24gY3JlYXRlUGlwZWxpbmVSZXF1ZXN0KG9wdGlvbnMpIHtcbiAgICByZXR1cm4gbmV3IFBpcGVsaW5lUmVxdWVzdEltcGwob3B0aW9ucyk7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1waXBlbGluZVJlcXVlc3QuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/core-rest-pipeline/dist/esm/pipelineRequest.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/core-rest-pipeline/dist/esm/policies/auxiliaryAuthenticationHeaderPolicy.js":
/*!*********************************************************************************************************!*\
  !*** ./node_modules/@azure/core-rest-pipeline/dist/esm/policies/auxiliaryAuthenticationHeaderPolicy.js ***!
  \*********************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   auxiliaryAuthenticationHeaderPolicy: () => (/* binding */ auxiliaryAuthenticationHeaderPolicy),\n/* harmony export */   auxiliaryAuthenticationHeaderPolicyName: () => (/* binding */ auxiliaryAuthenticationHeaderPolicyName)\n/* harmony export */ });\n/* harmony import */ var _util_tokenCycler_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../util/tokenCycler.js */ \"(rsc)/./node_modules/@azure/core-rest-pipeline/dist/esm/util/tokenCycler.js\");\n/* harmony import */ var _log_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../log.js */ \"(rsc)/./node_modules/@azure/core-rest-pipeline/dist/esm/log.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\n\n/**\n * The programmatic identifier of the auxiliaryAuthenticationHeaderPolicy.\n */\nconst auxiliaryAuthenticationHeaderPolicyName = \"auxiliaryAuthenticationHeaderPolicy\";\nconst AUTHORIZATION_AUXILIARY_HEADER = \"x-ms-authorization-auxiliary\";\nasync function sendAuthorizeRequest(options) {\n    var _a, _b;\n    const { scopes, getAccessToken, request } = options;\n    const getTokenOptions = {\n        abortSignal: request.abortSignal,\n        tracingOptions: request.tracingOptions,\n    };\n    return (_b = (_a = (await getAccessToken(scopes, getTokenOptions))) === null || _a === void 0 ? void 0 : _a.token) !== null && _b !== void 0 ? _b : \"\";\n}\n/**\n * A policy for external tokens to `x-ms-authorization-auxiliary` header.\n * This header will be used when creating a cross-tenant application we may need to handle authentication requests\n * for resources that are in different tenants.\n * You could see [ARM docs](https://learn.microsoft.com/en-us/azure/azure-resource-manager/management/authenticate-multi-tenant) for a rundown of how this feature works\n */\nfunction auxiliaryAuthenticationHeaderPolicy(options) {\n    const { credentials, scopes } = options;\n    const logger = options.logger || _log_js__WEBPACK_IMPORTED_MODULE_1__.logger;\n    const tokenCyclerMap = new WeakMap();\n    return {\n        name: auxiliaryAuthenticationHeaderPolicyName,\n        async sendRequest(request, next) {\n            if (!request.url.toLowerCase().startsWith(\"https://\")) {\n                throw new Error(\"Bearer token authentication for auxiliary header is not permitted for non-TLS protected (non-https) URLs.\");\n            }\n            if (!credentials || credentials.length === 0) {\n                logger.info(`${auxiliaryAuthenticationHeaderPolicyName} header will not be set due to empty credentials.`);\n                return next(request);\n            }\n            const tokenPromises = [];\n            for (const credential of credentials) {\n                let getAccessToken = tokenCyclerMap.get(credential);\n                if (!getAccessToken) {\n                    getAccessToken = (0,_util_tokenCycler_js__WEBPACK_IMPORTED_MODULE_0__.createTokenCycler)(credential);\n                    tokenCyclerMap.set(credential, getAccessToken);\n                }\n                tokenPromises.push(sendAuthorizeRequest({\n                    scopes: Array.isArray(scopes) ? scopes : [scopes],\n                    request,\n                    getAccessToken,\n                    logger,\n                }));\n            }\n            const auxiliaryTokens = (await Promise.all(tokenPromises)).filter((token) => Boolean(token));\n            if (auxiliaryTokens.length === 0) {\n                logger.warning(`None of the auxiliary tokens are valid. ${AUTHORIZATION_AUXILIARY_HEADER} header will not be set.`);\n                return next(request);\n            }\n            request.headers.set(AUTHORIZATION_AUXILIARY_HEADER, auxiliaryTokens.map((token) => `Bearer ${token}`).join(\", \"));\n            return next(request);\n        },\n    };\n}\n//# sourceMappingURL=auxiliaryAuthenticationHeaderPolicy.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2NvcmUtcmVzdC1waXBlbGluZS9kaXN0L2VzbS9wb2xpY2llcy9hdXhpbGlhcnlBdXRoZW50aWNhdGlvbkhlYWRlclBvbGljeS5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7QUFDQTtBQUMyRDtBQUNWO0FBQ2pEO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0EsWUFBWSxrQ0FBa0M7QUFDOUM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUCxZQUFZLHNCQUFzQjtBQUNsQyxxQ0FBcUMsMkNBQVU7QUFDL0M7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLCtCQUErQix5Q0FBeUM7QUFDeEU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EscUNBQXFDLHVFQUFpQjtBQUN0RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQjtBQUNqQjtBQUNBO0FBQ0E7QUFDQSwwRUFBMEUsZ0NBQWdDO0FBQzFHO0FBQ0E7QUFDQSx5R0FBeUcsTUFBTTtBQUMvRztBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9kYW5pZWwzLXZwMi8uL25vZGVfbW9kdWxlcy9AYXp1cmUvY29yZS1yZXN0LXBpcGVsaW5lL2Rpc3QvZXNtL3BvbGljaWVzL2F1eGlsaWFyeUF1dGhlbnRpY2F0aW9uSGVhZGVyUG9saWN5LmpzPzUwNDQiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uXG4vLyBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UuXG5pbXBvcnQgeyBjcmVhdGVUb2tlbkN5Y2xlciB9IGZyb20gXCIuLi91dGlsL3Rva2VuQ3ljbGVyLmpzXCI7XG5pbXBvcnQgeyBsb2dnZXIgYXMgY29yZUxvZ2dlciB9IGZyb20gXCIuLi9sb2cuanNcIjtcbi8qKlxuICogVGhlIHByb2dyYW1tYXRpYyBpZGVudGlmaWVyIG9mIHRoZSBhdXhpbGlhcnlBdXRoZW50aWNhdGlvbkhlYWRlclBvbGljeS5cbiAqL1xuZXhwb3J0IGNvbnN0IGF1eGlsaWFyeUF1dGhlbnRpY2F0aW9uSGVhZGVyUG9saWN5TmFtZSA9IFwiYXV4aWxpYXJ5QXV0aGVudGljYXRpb25IZWFkZXJQb2xpY3lcIjtcbmNvbnN0IEFVVEhPUklaQVRJT05fQVVYSUxJQVJZX0hFQURFUiA9IFwieC1tcy1hdXRob3JpemF0aW9uLWF1eGlsaWFyeVwiO1xuYXN5bmMgZnVuY3Rpb24gc2VuZEF1dGhvcml6ZVJlcXVlc3Qob3B0aW9ucykge1xuICAgIHZhciBfYSwgX2I7XG4gICAgY29uc3QgeyBzY29wZXMsIGdldEFjY2Vzc1Rva2VuLCByZXF1ZXN0IH0gPSBvcHRpb25zO1xuICAgIGNvbnN0IGdldFRva2VuT3B0aW9ucyA9IHtcbiAgICAgICAgYWJvcnRTaWduYWw6IHJlcXVlc3QuYWJvcnRTaWduYWwsXG4gICAgICAgIHRyYWNpbmdPcHRpb25zOiByZXF1ZXN0LnRyYWNpbmdPcHRpb25zLFxuICAgIH07XG4gICAgcmV0dXJuIChfYiA9IChfYSA9IChhd2FpdCBnZXRBY2Nlc3NUb2tlbihzY29wZXMsIGdldFRva2VuT3B0aW9ucykpKSA9PT0gbnVsbCB8fCBfYSA9PT0gdm9pZCAwID8gdm9pZCAwIDogX2EudG9rZW4pICE9PSBudWxsICYmIF9iICE9PSB2b2lkIDAgPyBfYiA6IFwiXCI7XG59XG4vKipcbiAqIEEgcG9saWN5IGZvciBleHRlcm5hbCB0b2tlbnMgdG8gYHgtbXMtYXV0aG9yaXphdGlvbi1hdXhpbGlhcnlgIGhlYWRlci5cbiAqIFRoaXMgaGVhZGVyIHdpbGwgYmUgdXNlZCB3aGVuIGNyZWF0aW5nIGEgY3Jvc3MtdGVuYW50IGFwcGxpY2F0aW9uIHdlIG1heSBuZWVkIHRvIGhhbmRsZSBhdXRoZW50aWNhdGlvbiByZXF1ZXN0c1xuICogZm9yIHJlc291cmNlcyB0aGF0IGFyZSBpbiBkaWZmZXJlbnQgdGVuYW50cy5cbiAqIFlvdSBjb3VsZCBzZWUgW0FSTSBkb2NzXShodHRwczovL2xlYXJuLm1pY3Jvc29mdC5jb20vZW4tdXMvYXp1cmUvYXp1cmUtcmVzb3VyY2UtbWFuYWdlci9tYW5hZ2VtZW50L2F1dGhlbnRpY2F0ZS1tdWx0aS10ZW5hbnQpIGZvciBhIHJ1bmRvd24gb2YgaG93IHRoaXMgZmVhdHVyZSB3b3Jrc1xuICovXG5leHBvcnQgZnVuY3Rpb24gYXV4aWxpYXJ5QXV0aGVudGljYXRpb25IZWFkZXJQb2xpY3kob3B0aW9ucykge1xuICAgIGNvbnN0IHsgY3JlZGVudGlhbHMsIHNjb3BlcyB9ID0gb3B0aW9ucztcbiAgICBjb25zdCBsb2dnZXIgPSBvcHRpb25zLmxvZ2dlciB8fCBjb3JlTG9nZ2VyO1xuICAgIGNvbnN0IHRva2VuQ3ljbGVyTWFwID0gbmV3IFdlYWtNYXAoKTtcbiAgICByZXR1cm4ge1xuICAgICAgICBuYW1lOiBhdXhpbGlhcnlBdXRoZW50aWNhdGlvbkhlYWRlclBvbGljeU5hbWUsXG4gICAgICAgIGFzeW5jIHNlbmRSZXF1ZXN0KHJlcXVlc3QsIG5leHQpIHtcbiAgICAgICAgICAgIGlmICghcmVxdWVzdC51cmwudG9Mb3dlckNhc2UoKS5zdGFydHNXaXRoKFwiaHR0cHM6Ly9cIikpIHtcbiAgICAgICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJCZWFyZXIgdG9rZW4gYXV0aGVudGljYXRpb24gZm9yIGF1eGlsaWFyeSBoZWFkZXIgaXMgbm90IHBlcm1pdHRlZCBmb3Igbm9uLVRMUyBwcm90ZWN0ZWQgKG5vbi1odHRwcykgVVJMcy5cIik7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAoIWNyZWRlbnRpYWxzIHx8IGNyZWRlbnRpYWxzLmxlbmd0aCA9PT0gMCkge1xuICAgICAgICAgICAgICAgIGxvZ2dlci5pbmZvKGAke2F1eGlsaWFyeUF1dGhlbnRpY2F0aW9uSGVhZGVyUG9saWN5TmFtZX0gaGVhZGVyIHdpbGwgbm90IGJlIHNldCBkdWUgdG8gZW1wdHkgY3JlZGVudGlhbHMuYCk7XG4gICAgICAgICAgICAgICAgcmV0dXJuIG5leHQocmVxdWVzdCk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBjb25zdCB0b2tlblByb21pc2VzID0gW107XG4gICAgICAgICAgICBmb3IgKGNvbnN0IGNyZWRlbnRpYWwgb2YgY3JlZGVudGlhbHMpIHtcbiAgICAgICAgICAgICAgICBsZXQgZ2V0QWNjZXNzVG9rZW4gPSB0b2tlbkN5Y2xlck1hcC5nZXQoY3JlZGVudGlhbCk7XG4gICAgICAgICAgICAgICAgaWYgKCFnZXRBY2Nlc3NUb2tlbikge1xuICAgICAgICAgICAgICAgICAgICBnZXRBY2Nlc3NUb2tlbiA9IGNyZWF0ZVRva2VuQ3ljbGVyKGNyZWRlbnRpYWwpO1xuICAgICAgICAgICAgICAgICAgICB0b2tlbkN5Y2xlck1hcC5zZXQoY3JlZGVudGlhbCwgZ2V0QWNjZXNzVG9rZW4pO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB0b2tlblByb21pc2VzLnB1c2goc2VuZEF1dGhvcml6ZVJlcXVlc3Qoe1xuICAgICAgICAgICAgICAgICAgICBzY29wZXM6IEFycmF5LmlzQXJyYXkoc2NvcGVzKSA/IHNjb3BlcyA6IFtzY29wZXNdLFxuICAgICAgICAgICAgICAgICAgICByZXF1ZXN0LFxuICAgICAgICAgICAgICAgICAgICBnZXRBY2Nlc3NUb2tlbixcbiAgICAgICAgICAgICAgICAgICAgbG9nZ2VyLFxuICAgICAgICAgICAgICAgIH0pKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGNvbnN0IGF1eGlsaWFyeVRva2VucyA9IChhd2FpdCBQcm9taXNlLmFsbCh0b2tlblByb21pc2VzKSkuZmlsdGVyKCh0b2tlbikgPT4gQm9vbGVhbih0b2tlbikpO1xuICAgICAgICAgICAgaWYgKGF1eGlsaWFyeVRva2Vucy5sZW5ndGggPT09IDApIHtcbiAgICAgICAgICAgICAgICBsb2dnZXIud2FybmluZyhgTm9uZSBvZiB0aGUgYXV4aWxpYXJ5IHRva2VucyBhcmUgdmFsaWQuICR7QVVUSE9SSVpBVElPTl9BVVhJTElBUllfSEVBREVSfSBoZWFkZXIgd2lsbCBub3QgYmUgc2V0LmApO1xuICAgICAgICAgICAgICAgIHJldHVybiBuZXh0KHJlcXVlc3QpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcmVxdWVzdC5oZWFkZXJzLnNldChBVVRIT1JJWkFUSU9OX0FVWElMSUFSWV9IRUFERVIsIGF1eGlsaWFyeVRva2Vucy5tYXAoKHRva2VuKSA9PiBgQmVhcmVyICR7dG9rZW59YCkuam9pbihcIiwgXCIpKTtcbiAgICAgICAgICAgIHJldHVybiBuZXh0KHJlcXVlc3QpO1xuICAgICAgICB9LFxuICAgIH07XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1hdXhpbGlhcnlBdXRoZW50aWNhdGlvbkhlYWRlclBvbGljeS5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/core-rest-pipeline/dist/esm/policies/auxiliaryAuthenticationHeaderPolicy.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/core-rest-pipeline/dist/esm/policies/bearerTokenAuthenticationPolicy.js":
/*!*****************************************************************************************************!*\
  !*** ./node_modules/@azure/core-rest-pipeline/dist/esm/policies/bearerTokenAuthenticationPolicy.js ***!
  \*****************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   bearerTokenAuthenticationPolicy: () => (/* binding */ bearerTokenAuthenticationPolicy),\n/* harmony export */   bearerTokenAuthenticationPolicyName: () => (/* binding */ bearerTokenAuthenticationPolicyName)\n/* harmony export */ });\n/* harmony import */ var _util_tokenCycler_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../util/tokenCycler.js */ \"(rsc)/./node_modules/@azure/core-rest-pipeline/dist/esm/util/tokenCycler.js\");\n/* harmony import */ var _log_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../log.js */ \"(rsc)/./node_modules/@azure/core-rest-pipeline/dist/esm/log.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\n\n/**\n * The programmatic identifier of the bearerTokenAuthenticationPolicy.\n */\nconst bearerTokenAuthenticationPolicyName = \"bearerTokenAuthenticationPolicy\";\n/**\n * Default authorize request handler\n */\nasync function defaultAuthorizeRequest(options) {\n    const { scopes, getAccessToken, request } = options;\n    const getTokenOptions = {\n        abortSignal: request.abortSignal,\n        tracingOptions: request.tracingOptions,\n    };\n    const accessToken = await getAccessToken(scopes, getTokenOptions);\n    if (accessToken) {\n        options.request.headers.set(\"Authorization\", `Bearer ${accessToken.token}`);\n    }\n}\n/**\n * We will retrieve the challenge only if the response status code was 401,\n * and if the response contained the header \"WWW-Authenticate\" with a non-empty value.\n */\nfunction getChallenge(response) {\n    const challenge = response.headers.get(\"WWW-Authenticate\");\n    if (response.status === 401 && challenge) {\n        return challenge;\n    }\n    return;\n}\n/**\n * A policy that can request a token from a TokenCredential implementation and\n * then apply it to the Authorization header of a request as a Bearer token.\n */\nfunction bearerTokenAuthenticationPolicy(options) {\n    var _a;\n    const { credential, scopes, challengeCallbacks } = options;\n    const logger = options.logger || _log_js__WEBPACK_IMPORTED_MODULE_1__.logger;\n    const callbacks = Object.assign({ authorizeRequest: (_a = challengeCallbacks === null || challengeCallbacks === void 0 ? void 0 : challengeCallbacks.authorizeRequest) !== null && _a !== void 0 ? _a : defaultAuthorizeRequest, authorizeRequestOnChallenge: challengeCallbacks === null || challengeCallbacks === void 0 ? void 0 : challengeCallbacks.authorizeRequestOnChallenge }, challengeCallbacks);\n    // This function encapsulates the entire process of reliably retrieving the token\n    // The options are left out of the public API until there's demand to configure this.\n    // Remember to extend `BearerTokenAuthenticationPolicyOptions` with `TokenCyclerOptions`\n    // in order to pass through the `options` object.\n    const getAccessToken = credential\n        ? (0,_util_tokenCycler_js__WEBPACK_IMPORTED_MODULE_0__.createTokenCycler)(credential /* , options */)\n        : () => Promise.resolve(null);\n    return {\n        name: bearerTokenAuthenticationPolicyName,\n        /**\n         * If there's no challenge parameter:\n         * - It will try to retrieve the token using the cache, or the credential's getToken.\n         * - Then it will try the next policy with or without the retrieved token.\n         *\n         * It uses the challenge parameters to:\n         * - Skip a first attempt to get the token from the credential if there's no cached token,\n         *   since it expects the token to be retrievable only after the challenge.\n         * - Prepare the outgoing request if the `prepareRequest` method has been provided.\n         * - Send an initial request to receive the challenge if it fails.\n         * - Process a challenge if the response contains it.\n         * - Retrieve a token with the challenge information, then re-send the request.\n         */\n        async sendRequest(request, next) {\n            if (!request.url.toLowerCase().startsWith(\"https://\")) {\n                throw new Error(\"Bearer token authentication is not permitted for non-TLS protected (non-https) URLs.\");\n            }\n            await callbacks.authorizeRequest({\n                scopes: Array.isArray(scopes) ? scopes : [scopes],\n                request,\n                getAccessToken,\n                logger,\n            });\n            let response;\n            let error;\n            try {\n                response = await next(request);\n            }\n            catch (err) {\n                error = err;\n                response = err.response;\n            }\n            if (callbacks.authorizeRequestOnChallenge &&\n                (response === null || response === void 0 ? void 0 : response.status) === 401 &&\n                getChallenge(response)) {\n                // processes challenge\n                const shouldSendRequest = await callbacks.authorizeRequestOnChallenge({\n                    scopes: Array.isArray(scopes) ? scopes : [scopes],\n                    request,\n                    response,\n                    getAccessToken,\n                    logger,\n                });\n                if (shouldSendRequest) {\n                    return next(request);\n                }\n            }\n            if (error) {\n                throw error;\n            }\n            else {\n                return response;\n            }\n        },\n    };\n}\n//# sourceMappingURL=bearerTokenAuthenticationPolicy.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2NvcmUtcmVzdC1waXBlbGluZS9kaXN0L2VzbS9wb2xpY2llcy9iZWFyZXJUb2tlbkF1dGhlbnRpY2F0aW9uUG9saWN5LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTtBQUNBO0FBQzJEO0FBQ1Y7QUFDakQ7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBLFlBQVksa0NBQWtDO0FBQzlDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLCtEQUErRCxrQkFBa0I7QUFDakY7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQSxZQUFZLHlDQUF5QztBQUNyRCxxQ0FBcUMsMkNBQVU7QUFDL0Msc0NBQXNDLG9WQUFvVjtBQUMxWDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsVUFBVSx1RUFBaUI7QUFDM0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUI7QUFDakI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZGFuaWVsMy12cDIvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2NvcmUtcmVzdC1waXBlbGluZS9kaXN0L2VzbS9wb2xpY2llcy9iZWFyZXJUb2tlbkF1dGhlbnRpY2F0aW9uUG9saWN5LmpzP2U2NTkiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uXG4vLyBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UuXG5pbXBvcnQgeyBjcmVhdGVUb2tlbkN5Y2xlciB9IGZyb20gXCIuLi91dGlsL3Rva2VuQ3ljbGVyLmpzXCI7XG5pbXBvcnQgeyBsb2dnZXIgYXMgY29yZUxvZ2dlciB9IGZyb20gXCIuLi9sb2cuanNcIjtcbi8qKlxuICogVGhlIHByb2dyYW1tYXRpYyBpZGVudGlmaWVyIG9mIHRoZSBiZWFyZXJUb2tlbkF1dGhlbnRpY2F0aW9uUG9saWN5LlxuICovXG5leHBvcnQgY29uc3QgYmVhcmVyVG9rZW5BdXRoZW50aWNhdGlvblBvbGljeU5hbWUgPSBcImJlYXJlclRva2VuQXV0aGVudGljYXRpb25Qb2xpY3lcIjtcbi8qKlxuICogRGVmYXVsdCBhdXRob3JpemUgcmVxdWVzdCBoYW5kbGVyXG4gKi9cbmFzeW5jIGZ1bmN0aW9uIGRlZmF1bHRBdXRob3JpemVSZXF1ZXN0KG9wdGlvbnMpIHtcbiAgICBjb25zdCB7IHNjb3BlcywgZ2V0QWNjZXNzVG9rZW4sIHJlcXVlc3QgfSA9IG9wdGlvbnM7XG4gICAgY29uc3QgZ2V0VG9rZW5PcHRpb25zID0ge1xuICAgICAgICBhYm9ydFNpZ25hbDogcmVxdWVzdC5hYm9ydFNpZ25hbCxcbiAgICAgICAgdHJhY2luZ09wdGlvbnM6IHJlcXVlc3QudHJhY2luZ09wdGlvbnMsXG4gICAgfTtcbiAgICBjb25zdCBhY2Nlc3NUb2tlbiA9IGF3YWl0IGdldEFjY2Vzc1Rva2VuKHNjb3BlcywgZ2V0VG9rZW5PcHRpb25zKTtcbiAgICBpZiAoYWNjZXNzVG9rZW4pIHtcbiAgICAgICAgb3B0aW9ucy5yZXF1ZXN0LmhlYWRlcnMuc2V0KFwiQXV0aG9yaXphdGlvblwiLCBgQmVhcmVyICR7YWNjZXNzVG9rZW4udG9rZW59YCk7XG4gICAgfVxufVxuLyoqXG4gKiBXZSB3aWxsIHJldHJpZXZlIHRoZSBjaGFsbGVuZ2Ugb25seSBpZiB0aGUgcmVzcG9uc2Ugc3RhdHVzIGNvZGUgd2FzIDQwMSxcbiAqIGFuZCBpZiB0aGUgcmVzcG9uc2UgY29udGFpbmVkIHRoZSBoZWFkZXIgXCJXV1ctQXV0aGVudGljYXRlXCIgd2l0aCBhIG5vbi1lbXB0eSB2YWx1ZS5cbiAqL1xuZnVuY3Rpb24gZ2V0Q2hhbGxlbmdlKHJlc3BvbnNlKSB7XG4gICAgY29uc3QgY2hhbGxlbmdlID0gcmVzcG9uc2UuaGVhZGVycy5nZXQoXCJXV1ctQXV0aGVudGljYXRlXCIpO1xuICAgIGlmIChyZXNwb25zZS5zdGF0dXMgPT09IDQwMSAmJiBjaGFsbGVuZ2UpIHtcbiAgICAgICAgcmV0dXJuIGNoYWxsZW5nZTtcbiAgICB9XG4gICAgcmV0dXJuO1xufVxuLyoqXG4gKiBBIHBvbGljeSB0aGF0IGNhbiByZXF1ZXN0IGEgdG9rZW4gZnJvbSBhIFRva2VuQ3JlZGVudGlhbCBpbXBsZW1lbnRhdGlvbiBhbmRcbiAqIHRoZW4gYXBwbHkgaXQgdG8gdGhlIEF1dGhvcml6YXRpb24gaGVhZGVyIG9mIGEgcmVxdWVzdCBhcyBhIEJlYXJlciB0b2tlbi5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGJlYXJlclRva2VuQXV0aGVudGljYXRpb25Qb2xpY3kob3B0aW9ucykge1xuICAgIHZhciBfYTtcbiAgICBjb25zdCB7IGNyZWRlbnRpYWwsIHNjb3BlcywgY2hhbGxlbmdlQ2FsbGJhY2tzIH0gPSBvcHRpb25zO1xuICAgIGNvbnN0IGxvZ2dlciA9IG9wdGlvbnMubG9nZ2VyIHx8IGNvcmVMb2dnZXI7XG4gICAgY29uc3QgY2FsbGJhY2tzID0gT2JqZWN0LmFzc2lnbih7IGF1dGhvcml6ZVJlcXVlc3Q6IChfYSA9IGNoYWxsZW5nZUNhbGxiYWNrcyA9PT0gbnVsbCB8fCBjaGFsbGVuZ2VDYWxsYmFja3MgPT09IHZvaWQgMCA/IHZvaWQgMCA6IGNoYWxsZW5nZUNhbGxiYWNrcy5hdXRob3JpemVSZXF1ZXN0KSAhPT0gbnVsbCAmJiBfYSAhPT0gdm9pZCAwID8gX2EgOiBkZWZhdWx0QXV0aG9yaXplUmVxdWVzdCwgYXV0aG9yaXplUmVxdWVzdE9uQ2hhbGxlbmdlOiBjaGFsbGVuZ2VDYWxsYmFja3MgPT09IG51bGwgfHwgY2hhbGxlbmdlQ2FsbGJhY2tzID09PSB2b2lkIDAgPyB2b2lkIDAgOiBjaGFsbGVuZ2VDYWxsYmFja3MuYXV0aG9yaXplUmVxdWVzdE9uQ2hhbGxlbmdlIH0sIGNoYWxsZW5nZUNhbGxiYWNrcyk7XG4gICAgLy8gVGhpcyBmdW5jdGlvbiBlbmNhcHN1bGF0ZXMgdGhlIGVudGlyZSBwcm9jZXNzIG9mIHJlbGlhYmx5IHJldHJpZXZpbmcgdGhlIHRva2VuXG4gICAgLy8gVGhlIG9wdGlvbnMgYXJlIGxlZnQgb3V0IG9mIHRoZSBwdWJsaWMgQVBJIHVudGlsIHRoZXJlJ3MgZGVtYW5kIHRvIGNvbmZpZ3VyZSB0aGlzLlxuICAgIC8vIFJlbWVtYmVyIHRvIGV4dGVuZCBgQmVhcmVyVG9rZW5BdXRoZW50aWNhdGlvblBvbGljeU9wdGlvbnNgIHdpdGggYFRva2VuQ3ljbGVyT3B0aW9uc2BcbiAgICAvLyBpbiBvcmRlciB0byBwYXNzIHRocm91Z2ggdGhlIGBvcHRpb25zYCBvYmplY3QuXG4gICAgY29uc3QgZ2V0QWNjZXNzVG9rZW4gPSBjcmVkZW50aWFsXG4gICAgICAgID8gY3JlYXRlVG9rZW5DeWNsZXIoY3JlZGVudGlhbCAvKiAsIG9wdGlvbnMgKi8pXG4gICAgICAgIDogKCkgPT4gUHJvbWlzZS5yZXNvbHZlKG51bGwpO1xuICAgIHJldHVybiB7XG4gICAgICAgIG5hbWU6IGJlYXJlclRva2VuQXV0aGVudGljYXRpb25Qb2xpY3lOYW1lLFxuICAgICAgICAvKipcbiAgICAgICAgICogSWYgdGhlcmUncyBubyBjaGFsbGVuZ2UgcGFyYW1ldGVyOlxuICAgICAgICAgKiAtIEl0IHdpbGwgdHJ5IHRvIHJldHJpZXZlIHRoZSB0b2tlbiB1c2luZyB0aGUgY2FjaGUsIG9yIHRoZSBjcmVkZW50aWFsJ3MgZ2V0VG9rZW4uXG4gICAgICAgICAqIC0gVGhlbiBpdCB3aWxsIHRyeSB0aGUgbmV4dCBwb2xpY3kgd2l0aCBvciB3aXRob3V0IHRoZSByZXRyaWV2ZWQgdG9rZW4uXG4gICAgICAgICAqXG4gICAgICAgICAqIEl0IHVzZXMgdGhlIGNoYWxsZW5nZSBwYXJhbWV0ZXJzIHRvOlxuICAgICAgICAgKiAtIFNraXAgYSBmaXJzdCBhdHRlbXB0IHRvIGdldCB0aGUgdG9rZW4gZnJvbSB0aGUgY3JlZGVudGlhbCBpZiB0aGVyZSdzIG5vIGNhY2hlZCB0b2tlbixcbiAgICAgICAgICogICBzaW5jZSBpdCBleHBlY3RzIHRoZSB0b2tlbiB0byBiZSByZXRyaWV2YWJsZSBvbmx5IGFmdGVyIHRoZSBjaGFsbGVuZ2UuXG4gICAgICAgICAqIC0gUHJlcGFyZSB0aGUgb3V0Z29pbmcgcmVxdWVzdCBpZiB0aGUgYHByZXBhcmVSZXF1ZXN0YCBtZXRob2QgaGFzIGJlZW4gcHJvdmlkZWQuXG4gICAgICAgICAqIC0gU2VuZCBhbiBpbml0aWFsIHJlcXVlc3QgdG8gcmVjZWl2ZSB0aGUgY2hhbGxlbmdlIGlmIGl0IGZhaWxzLlxuICAgICAgICAgKiAtIFByb2Nlc3MgYSBjaGFsbGVuZ2UgaWYgdGhlIHJlc3BvbnNlIGNvbnRhaW5zIGl0LlxuICAgICAgICAgKiAtIFJldHJpZXZlIGEgdG9rZW4gd2l0aCB0aGUgY2hhbGxlbmdlIGluZm9ybWF0aW9uLCB0aGVuIHJlLXNlbmQgdGhlIHJlcXVlc3QuXG4gICAgICAgICAqL1xuICAgICAgICBhc3luYyBzZW5kUmVxdWVzdChyZXF1ZXN0LCBuZXh0KSB7XG4gICAgICAgICAgICBpZiAoIXJlcXVlc3QudXJsLnRvTG93ZXJDYXNlKCkuc3RhcnRzV2l0aChcImh0dHBzOi8vXCIpKSB7XG4gICAgICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiQmVhcmVyIHRva2VuIGF1dGhlbnRpY2F0aW9uIGlzIG5vdCBwZXJtaXR0ZWQgZm9yIG5vbi1UTFMgcHJvdGVjdGVkIChub24taHR0cHMpIFVSTHMuXCIpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgYXdhaXQgY2FsbGJhY2tzLmF1dGhvcml6ZVJlcXVlc3Qoe1xuICAgICAgICAgICAgICAgIHNjb3BlczogQXJyYXkuaXNBcnJheShzY29wZXMpID8gc2NvcGVzIDogW3Njb3Blc10sXG4gICAgICAgICAgICAgICAgcmVxdWVzdCxcbiAgICAgICAgICAgICAgICBnZXRBY2Nlc3NUb2tlbixcbiAgICAgICAgICAgICAgICBsb2dnZXIsXG4gICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIGxldCByZXNwb25zZTtcbiAgICAgICAgICAgIGxldCBlcnJvcjtcbiAgICAgICAgICAgIHRyeSB7XG4gICAgICAgICAgICAgICAgcmVzcG9uc2UgPSBhd2FpdCBuZXh0KHJlcXVlc3QpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgY2F0Y2ggKGVycikge1xuICAgICAgICAgICAgICAgIGVycm9yID0gZXJyO1xuICAgICAgICAgICAgICAgIHJlc3BvbnNlID0gZXJyLnJlc3BvbnNlO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKGNhbGxiYWNrcy5hdXRob3JpemVSZXF1ZXN0T25DaGFsbGVuZ2UgJiZcbiAgICAgICAgICAgICAgICAocmVzcG9uc2UgPT09IG51bGwgfHwgcmVzcG9uc2UgPT09IHZvaWQgMCA/IHZvaWQgMCA6IHJlc3BvbnNlLnN0YXR1cykgPT09IDQwMSAmJlxuICAgICAgICAgICAgICAgIGdldENoYWxsZW5nZShyZXNwb25zZSkpIHtcbiAgICAgICAgICAgICAgICAvLyBwcm9jZXNzZXMgY2hhbGxlbmdlXG4gICAgICAgICAgICAgICAgY29uc3Qgc2hvdWxkU2VuZFJlcXVlc3QgPSBhd2FpdCBjYWxsYmFja3MuYXV0aG9yaXplUmVxdWVzdE9uQ2hhbGxlbmdlKHtcbiAgICAgICAgICAgICAgICAgICAgc2NvcGVzOiBBcnJheS5pc0FycmF5KHNjb3BlcykgPyBzY29wZXMgOiBbc2NvcGVzXSxcbiAgICAgICAgICAgICAgICAgICAgcmVxdWVzdCxcbiAgICAgICAgICAgICAgICAgICAgcmVzcG9uc2UsXG4gICAgICAgICAgICAgICAgICAgIGdldEFjY2Vzc1Rva2VuLFxuICAgICAgICAgICAgICAgICAgICBsb2dnZXIsXG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgaWYgKHNob3VsZFNlbmRSZXF1ZXN0KSB7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBuZXh0KHJlcXVlc3QpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmIChlcnJvcikge1xuICAgICAgICAgICAgICAgIHRocm93IGVycm9yO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHJlc3BvbnNlO1xuICAgICAgICAgICAgfVxuICAgICAgICB9LFxuICAgIH07XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1iZWFyZXJUb2tlbkF1dGhlbnRpY2F0aW9uUG9saWN5LmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/core-rest-pipeline/dist/esm/policies/bearerTokenAuthenticationPolicy.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/core-rest-pipeline/dist/esm/policies/decompressResponsePolicy.js":
/*!**********************************************************************************************!*\
  !*** ./node_modules/@azure/core-rest-pipeline/dist/esm/policies/decompressResponsePolicy.js ***!
  \**********************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   decompressResponsePolicy: () => (/* binding */ decompressResponsePolicy),\n/* harmony export */   decompressResponsePolicyName: () => (/* binding */ decompressResponsePolicyName)\n/* harmony export */ });\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n/**\n * The programmatic identifier of the decompressResponsePolicy.\n */\nconst decompressResponsePolicyName = \"decompressResponsePolicy\";\n/**\n * A policy to enable response decompression according to Accept-Encoding header\n * https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Accept-Encoding\n */\nfunction decompressResponsePolicy() {\n    return {\n        name: decompressResponsePolicyName,\n        async sendRequest(request, next) {\n            // HEAD requests have no body\n            if (request.method !== \"HEAD\") {\n                request.headers.set(\"Accept-Encoding\", \"gzip,deflate\");\n            }\n            return next(request);\n        },\n    };\n}\n//# sourceMappingURL=decompressResponsePolicy.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2NvcmUtcmVzdC1waXBlbGluZS9kaXN0L2VzbS9wb2xpY2llcy9kZWNvbXByZXNzUmVzcG9uc2VQb2xpY3kuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9kYW5pZWwzLXZwMi8uL25vZGVfbW9kdWxlcy9AYXp1cmUvY29yZS1yZXN0LXBpcGVsaW5lL2Rpc3QvZXNtL3BvbGljaWVzL2RlY29tcHJlc3NSZXNwb25zZVBvbGljeS5qcz8yMzM4Il0sInNvdXJjZXNDb250ZW50IjpbIi8vIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLlxuLy8gTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlLlxuLyoqXG4gKiBUaGUgcHJvZ3JhbW1hdGljIGlkZW50aWZpZXIgb2YgdGhlIGRlY29tcHJlc3NSZXNwb25zZVBvbGljeS5cbiAqL1xuZXhwb3J0IGNvbnN0IGRlY29tcHJlc3NSZXNwb25zZVBvbGljeU5hbWUgPSBcImRlY29tcHJlc3NSZXNwb25zZVBvbGljeVwiO1xuLyoqXG4gKiBBIHBvbGljeSB0byBlbmFibGUgcmVzcG9uc2UgZGVjb21wcmVzc2lvbiBhY2NvcmRpbmcgdG8gQWNjZXB0LUVuY29kaW5nIGhlYWRlclxuICogaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZW4tVVMvZG9jcy9XZWIvSFRUUC9IZWFkZXJzL0FjY2VwdC1FbmNvZGluZ1xuICovXG5leHBvcnQgZnVuY3Rpb24gZGVjb21wcmVzc1Jlc3BvbnNlUG9saWN5KCkge1xuICAgIHJldHVybiB7XG4gICAgICAgIG5hbWU6IGRlY29tcHJlc3NSZXNwb25zZVBvbGljeU5hbWUsXG4gICAgICAgIGFzeW5jIHNlbmRSZXF1ZXN0KHJlcXVlc3QsIG5leHQpIHtcbiAgICAgICAgICAgIC8vIEhFQUQgcmVxdWVzdHMgaGF2ZSBubyBib2R5XG4gICAgICAgICAgICBpZiAocmVxdWVzdC5tZXRob2QgIT09IFwiSEVBRFwiKSB7XG4gICAgICAgICAgICAgICAgcmVxdWVzdC5oZWFkZXJzLnNldChcIkFjY2VwdC1FbmNvZGluZ1wiLCBcImd6aXAsZGVmbGF0ZVwiKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJldHVybiBuZXh0KHJlcXVlc3QpO1xuICAgICAgICB9LFxuICAgIH07XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1kZWNvbXByZXNzUmVzcG9uc2VQb2xpY3kuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/core-rest-pipeline/dist/esm/policies/decompressResponsePolicy.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/core-rest-pipeline/dist/esm/policies/defaultRetryPolicy.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/@azure/core-rest-pipeline/dist/esm/policies/defaultRetryPolicy.js ***!
  \****************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   defaultRetryPolicy: () => (/* binding */ defaultRetryPolicy),\n/* harmony export */   defaultRetryPolicyName: () => (/* binding */ defaultRetryPolicyName)\n/* harmony export */ });\n/* harmony import */ var _retryStrategies_exponentialRetryStrategy_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../retryStrategies/exponentialRetryStrategy.js */ \"(rsc)/./node_modules/@azure/core-rest-pipeline/dist/esm/retryStrategies/exponentialRetryStrategy.js\");\n/* harmony import */ var _retryStrategies_throttlingRetryStrategy_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../retryStrategies/throttlingRetryStrategy.js */ \"(rsc)/./node_modules/@azure/core-rest-pipeline/dist/esm/retryStrategies/throttlingRetryStrategy.js\");\n/* harmony import */ var _retryPolicy_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./retryPolicy.js */ \"(rsc)/./node_modules/@azure/core-rest-pipeline/dist/esm/policies/retryPolicy.js\");\n/* harmony import */ var _constants_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../constants.js */ \"(rsc)/./node_modules/@azure/core-rest-pipeline/dist/esm/constants.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\n\n\n\n/**\n * Name of the {@link defaultRetryPolicy}\n */\nconst defaultRetryPolicyName = \"defaultRetryPolicy\";\n/**\n * A policy that retries according to three strategies:\n * - When the server sends a 429 response with a Retry-After header.\n * - When there are errors in the underlying transport layer (e.g. DNS lookup failures).\n * - Or otherwise if the outgoing request fails, it will retry with an exponentially increasing delay.\n */\nfunction defaultRetryPolicy(options = {}) {\n    var _a;\n    return {\n        name: defaultRetryPolicyName,\n        sendRequest: (0,_retryPolicy_js__WEBPACK_IMPORTED_MODULE_2__.retryPolicy)([(0,_retryStrategies_throttlingRetryStrategy_js__WEBPACK_IMPORTED_MODULE_1__.throttlingRetryStrategy)(), (0,_retryStrategies_exponentialRetryStrategy_js__WEBPACK_IMPORTED_MODULE_0__.exponentialRetryStrategy)(options)], {\n            maxRetries: (_a = options.maxRetries) !== null && _a !== void 0 ? _a : _constants_js__WEBPACK_IMPORTED_MODULE_3__.DEFAULT_RETRY_POLICY_COUNT,\n        }).sendRequest,\n    };\n}\n//# sourceMappingURL=defaultRetryPolicy.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2NvcmUtcmVzdC1waXBlbGluZS9kaXN0L2VzbS9wb2xpY2llcy9kZWZhdWx0UmV0cnlQb2xpY3kuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQUE7QUFDQTtBQUMwRjtBQUNGO0FBQ3pDO0FBQ2M7QUFDN0Q7QUFDQSxnQkFBZ0I7QUFDaEI7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPLHdDQUF3QztBQUMvQztBQUNBO0FBQ0E7QUFDQSxxQkFBcUIsNERBQVcsRUFBRSxvR0FBdUIsSUFBSSxzR0FBd0I7QUFDckYsbUZBQW1GLHFFQUEwQjtBQUM3RyxTQUFTO0FBQ1Q7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZGFuaWVsMy12cDIvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2NvcmUtcmVzdC1waXBlbGluZS9kaXN0L2VzbS9wb2xpY2llcy9kZWZhdWx0UmV0cnlQb2xpY3kuanM/YmRmOCJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi5cbi8vIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZS5cbmltcG9ydCB7IGV4cG9uZW50aWFsUmV0cnlTdHJhdGVneSB9IGZyb20gXCIuLi9yZXRyeVN0cmF0ZWdpZXMvZXhwb25lbnRpYWxSZXRyeVN0cmF0ZWd5LmpzXCI7XG5pbXBvcnQgeyB0aHJvdHRsaW5nUmV0cnlTdHJhdGVneSB9IGZyb20gXCIuLi9yZXRyeVN0cmF0ZWdpZXMvdGhyb3R0bGluZ1JldHJ5U3RyYXRlZ3kuanNcIjtcbmltcG9ydCB7IHJldHJ5UG9saWN5IH0gZnJvbSBcIi4vcmV0cnlQb2xpY3kuanNcIjtcbmltcG9ydCB7IERFRkFVTFRfUkVUUllfUE9MSUNZX0NPVU5UIH0gZnJvbSBcIi4uL2NvbnN0YW50cy5qc1wiO1xuLyoqXG4gKiBOYW1lIG9mIHRoZSB7QGxpbmsgZGVmYXVsdFJldHJ5UG9saWN5fVxuICovXG5leHBvcnQgY29uc3QgZGVmYXVsdFJldHJ5UG9saWN5TmFtZSA9IFwiZGVmYXVsdFJldHJ5UG9saWN5XCI7XG4vKipcbiAqIEEgcG9saWN5IHRoYXQgcmV0cmllcyBhY2NvcmRpbmcgdG8gdGhyZWUgc3RyYXRlZ2llczpcbiAqIC0gV2hlbiB0aGUgc2VydmVyIHNlbmRzIGEgNDI5IHJlc3BvbnNlIHdpdGggYSBSZXRyeS1BZnRlciBoZWFkZXIuXG4gKiAtIFdoZW4gdGhlcmUgYXJlIGVycm9ycyBpbiB0aGUgdW5kZXJseWluZyB0cmFuc3BvcnQgbGF5ZXIgKGUuZy4gRE5TIGxvb2t1cCBmYWlsdXJlcykuXG4gKiAtIE9yIG90aGVyd2lzZSBpZiB0aGUgb3V0Z29pbmcgcmVxdWVzdCBmYWlscywgaXQgd2lsbCByZXRyeSB3aXRoIGFuIGV4cG9uZW50aWFsbHkgaW5jcmVhc2luZyBkZWxheS5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGRlZmF1bHRSZXRyeVBvbGljeShvcHRpb25zID0ge30pIHtcbiAgICB2YXIgX2E7XG4gICAgcmV0dXJuIHtcbiAgICAgICAgbmFtZTogZGVmYXVsdFJldHJ5UG9saWN5TmFtZSxcbiAgICAgICAgc2VuZFJlcXVlc3Q6IHJldHJ5UG9saWN5KFt0aHJvdHRsaW5nUmV0cnlTdHJhdGVneSgpLCBleHBvbmVudGlhbFJldHJ5U3RyYXRlZ3kob3B0aW9ucyldLCB7XG4gICAgICAgICAgICBtYXhSZXRyaWVzOiAoX2EgPSBvcHRpb25zLm1heFJldHJpZXMpICE9PSBudWxsICYmIF9hICE9PSB2b2lkIDAgPyBfYSA6IERFRkFVTFRfUkVUUllfUE9MSUNZX0NPVU5ULFxuICAgICAgICB9KS5zZW5kUmVxdWVzdCxcbiAgICB9O1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZGVmYXVsdFJldHJ5UG9saWN5LmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/core-rest-pipeline/dist/esm/policies/defaultRetryPolicy.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/core-rest-pipeline/dist/esm/policies/exponentialRetryPolicy.js":
/*!********************************************************************************************!*\
  !*** ./node_modules/@azure/core-rest-pipeline/dist/esm/policies/exponentialRetryPolicy.js ***!
  \********************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   exponentialRetryPolicy: () => (/* binding */ exponentialRetryPolicy),\n/* harmony export */   exponentialRetryPolicyName: () => (/* binding */ exponentialRetryPolicyName)\n/* harmony export */ });\n/* harmony import */ var _retryStrategies_exponentialRetryStrategy_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../retryStrategies/exponentialRetryStrategy.js */ \"(rsc)/./node_modules/@azure/core-rest-pipeline/dist/esm/retryStrategies/exponentialRetryStrategy.js\");\n/* harmony import */ var _retryPolicy_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./retryPolicy.js */ \"(rsc)/./node_modules/@azure/core-rest-pipeline/dist/esm/policies/retryPolicy.js\");\n/* harmony import */ var _constants_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../constants.js */ \"(rsc)/./node_modules/@azure/core-rest-pipeline/dist/esm/constants.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\n\n\n/**\n * The programmatic identifier of the exponentialRetryPolicy.\n */\nconst exponentialRetryPolicyName = \"exponentialRetryPolicy\";\n/**\n * A policy that attempts to retry requests while introducing an exponentially increasing delay.\n * @param options - Options that configure retry logic.\n */\nfunction exponentialRetryPolicy(options = {}) {\n    var _a;\n    return (0,_retryPolicy_js__WEBPACK_IMPORTED_MODULE_1__.retryPolicy)([\n        (0,_retryStrategies_exponentialRetryStrategy_js__WEBPACK_IMPORTED_MODULE_0__.exponentialRetryStrategy)(Object.assign(Object.assign({}, options), { ignoreSystemErrors: true })),\n    ], {\n        maxRetries: (_a = options.maxRetries) !== null && _a !== void 0 ? _a : _constants_js__WEBPACK_IMPORTED_MODULE_2__.DEFAULT_RETRY_POLICY_COUNT,\n    });\n}\n//# sourceMappingURL=exponentialRetryPolicy.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2NvcmUtcmVzdC1waXBlbGluZS9kaXN0L2VzbS9wb2xpY2llcy9leHBvbmVudGlhbFJldHJ5UG9saWN5LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQUE7QUFDQTtBQUMwRjtBQUMzQztBQUNjO0FBQzdEO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDTyw0Q0FBNEM7QUFDbkQ7QUFDQSxXQUFXLDREQUFXO0FBQ3RCLFFBQVEsc0dBQXdCLCtCQUErQixjQUFjLDBCQUEwQjtBQUN2RztBQUNBLCtFQUErRSxxRUFBMEI7QUFDekcsS0FBSztBQUNMO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9kYW5pZWwzLXZwMi8uL25vZGVfbW9kdWxlcy9AYXp1cmUvY29yZS1yZXN0LXBpcGVsaW5lL2Rpc3QvZXNtL3BvbGljaWVzL2V4cG9uZW50aWFsUmV0cnlQb2xpY3kuanM/ZTBjMSJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi5cbi8vIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZS5cbmltcG9ydCB7IGV4cG9uZW50aWFsUmV0cnlTdHJhdGVneSB9IGZyb20gXCIuLi9yZXRyeVN0cmF0ZWdpZXMvZXhwb25lbnRpYWxSZXRyeVN0cmF0ZWd5LmpzXCI7XG5pbXBvcnQgeyByZXRyeVBvbGljeSB9IGZyb20gXCIuL3JldHJ5UG9saWN5LmpzXCI7XG5pbXBvcnQgeyBERUZBVUxUX1JFVFJZX1BPTElDWV9DT1VOVCB9IGZyb20gXCIuLi9jb25zdGFudHMuanNcIjtcbi8qKlxuICogVGhlIHByb2dyYW1tYXRpYyBpZGVudGlmaWVyIG9mIHRoZSBleHBvbmVudGlhbFJldHJ5UG9saWN5LlxuICovXG5leHBvcnQgY29uc3QgZXhwb25lbnRpYWxSZXRyeVBvbGljeU5hbWUgPSBcImV4cG9uZW50aWFsUmV0cnlQb2xpY3lcIjtcbi8qKlxuICogQSBwb2xpY3kgdGhhdCBhdHRlbXB0cyB0byByZXRyeSByZXF1ZXN0cyB3aGlsZSBpbnRyb2R1Y2luZyBhbiBleHBvbmVudGlhbGx5IGluY3JlYXNpbmcgZGVsYXkuXG4gKiBAcGFyYW0gb3B0aW9ucyAtIE9wdGlvbnMgdGhhdCBjb25maWd1cmUgcmV0cnkgbG9naWMuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBleHBvbmVudGlhbFJldHJ5UG9saWN5KG9wdGlvbnMgPSB7fSkge1xuICAgIHZhciBfYTtcbiAgICByZXR1cm4gcmV0cnlQb2xpY3koW1xuICAgICAgICBleHBvbmVudGlhbFJldHJ5U3RyYXRlZ3koT2JqZWN0LmFzc2lnbihPYmplY3QuYXNzaWduKHt9LCBvcHRpb25zKSwgeyBpZ25vcmVTeXN0ZW1FcnJvcnM6IHRydWUgfSkpLFxuICAgIF0sIHtcbiAgICAgICAgbWF4UmV0cmllczogKF9hID0gb3B0aW9ucy5tYXhSZXRyaWVzKSAhPT0gbnVsbCAmJiBfYSAhPT0gdm9pZCAwID8gX2EgOiBERUZBVUxUX1JFVFJZX1BPTElDWV9DT1VOVCxcbiAgICB9KTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWV4cG9uZW50aWFsUmV0cnlQb2xpY3kuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/core-rest-pipeline/dist/esm/policies/exponentialRetryPolicy.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/core-rest-pipeline/dist/esm/policies/formDataPolicy.js":
/*!************************************************************************************!*\
  !*** ./node_modules/@azure/core-rest-pipeline/dist/esm/policies/formDataPolicy.js ***!
  \************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   formDataPolicy: () => (/* binding */ formDataPolicy),\n/* harmony export */   formDataPolicyName: () => (/* binding */ formDataPolicyName)\n/* harmony export */ });\n/* harmony import */ var _azure_core_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @azure/core-util */ \"(rsc)/./node_modules/@azure/core-util/dist/esm/index.js\");\n/* harmony import */ var _httpHeaders_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../httpHeaders.js */ \"(rsc)/./node_modules/@azure/core-rest-pipeline/dist/esm/httpHeaders.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\n\n/**\n * The programmatic identifier of the formDataPolicy.\n */\nconst formDataPolicyName = \"formDataPolicy\";\nfunction formDataToFormDataMap(formData) {\n    var _a;\n    const formDataMap = {};\n    for (const [key, value] of formData.entries()) {\n        (_a = formDataMap[key]) !== null && _a !== void 0 ? _a : (formDataMap[key] = []);\n        formDataMap[key].push(value);\n    }\n    return formDataMap;\n}\n/**\n * A policy that encodes FormData on the request into the body.\n */\nfunction formDataPolicy() {\n    return {\n        name: formDataPolicyName,\n        async sendRequest(request, next) {\n            if (_azure_core_util__WEBPACK_IMPORTED_MODULE_0__.isNodeLike && typeof FormData !== \"undefined\" && request.body instanceof FormData) {\n                request.formData = formDataToFormDataMap(request.body);\n                request.body = undefined;\n            }\n            if (request.formData) {\n                const contentType = request.headers.get(\"Content-Type\");\n                if (contentType && contentType.indexOf(\"application/x-www-form-urlencoded\") !== -1) {\n                    request.body = wwwFormUrlEncode(request.formData);\n                }\n                else {\n                    await prepareFormData(request.formData, request);\n                }\n                request.formData = undefined;\n            }\n            return next(request);\n        },\n    };\n}\nfunction wwwFormUrlEncode(formData) {\n    const urlSearchParams = new URLSearchParams();\n    for (const [key, value] of Object.entries(formData)) {\n        if (Array.isArray(value)) {\n            for (const subValue of value) {\n                urlSearchParams.append(key, subValue.toString());\n            }\n        }\n        else {\n            urlSearchParams.append(key, value.toString());\n        }\n    }\n    return urlSearchParams.toString();\n}\nasync function prepareFormData(formData, request) {\n    // validate content type (multipart/form-data)\n    const contentType = request.headers.get(\"Content-Type\");\n    if (contentType && !contentType.startsWith(\"multipart/form-data\")) {\n        // content type is specified and is not multipart/form-data. Exit.\n        return;\n    }\n    request.headers.set(\"Content-Type\", contentType !== null && contentType !== void 0 ? contentType : \"multipart/form-data\");\n    // set body to MultipartRequestBody using content from FormDataMap\n    const parts = [];\n    for (const [fieldName, values] of Object.entries(formData)) {\n        for (const value of Array.isArray(values) ? values : [values]) {\n            if (typeof value === \"string\") {\n                parts.push({\n                    headers: (0,_httpHeaders_js__WEBPACK_IMPORTED_MODULE_1__.createHttpHeaders)({\n                        \"Content-Disposition\": `form-data; name=\"${fieldName}\"`,\n                    }),\n                    body: (0,_azure_core_util__WEBPACK_IMPORTED_MODULE_0__.stringToUint8Array)(value, \"utf-8\"),\n                });\n            }\n            else if (value === undefined || value === null || typeof value !== \"object\") {\n                throw new Error(`Unexpected value for key ${fieldName}: ${value}. Value should be serialized to string first.`);\n            }\n            else {\n                // using || instead of ?? here since if value.name is empty we should create a file name\n                const fileName = value.name || \"blob\";\n                const headers = (0,_httpHeaders_js__WEBPACK_IMPORTED_MODULE_1__.createHttpHeaders)();\n                headers.set(\"Content-Disposition\", `form-data; name=\"${fieldName}\"; filename=\"${fileName}\"`);\n                // again, || is used since an empty value.type means the content type is unset\n                headers.set(\"Content-Type\", value.type || \"application/octet-stream\");\n                parts.push({\n                    headers,\n                    body: value,\n                });\n            }\n        }\n    }\n    request.multipartBody = { parts };\n}\n//# sourceMappingURL=formDataPolicy.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2NvcmUtcmVzdC1waXBlbGluZS9kaXN0L2VzbS9wb2xpY2llcy9mb3JtRGF0YVBvbGljeS5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7QUFDQTtBQUNrRTtBQUNaO0FBQ3REO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQSxnQkFBZ0Isd0RBQVU7QUFDMUI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw2QkFBNkIsa0VBQWlCO0FBQzlDLDJEQUEyRCxRQUFRLFVBQVU7QUFDN0UscUJBQXFCO0FBQ3JCLDBCQUEwQixvRUFBa0I7QUFDNUMsaUJBQWlCO0FBQ2pCO0FBQ0E7QUFDQSw0REFBNEQsVUFBVSxJQUFJLE1BQU07QUFDaEY7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnQ0FBZ0Msa0VBQWlCO0FBQ2pELCtEQUErRCxRQUFRLFVBQVUsR0FBRyxZQUFZLFNBQVM7QUFDekc7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQjtBQUNqQjtBQUNBO0FBQ0E7QUFDQSw4QkFBOEI7QUFDOUI7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2RhbmllbDMtdnAyLy4vbm9kZV9tb2R1bGVzL0BhenVyZS9jb3JlLXJlc3QtcGlwZWxpbmUvZGlzdC9lc20vcG9saWNpZXMvZm9ybURhdGFQb2xpY3kuanM/OTI2YSJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi5cbi8vIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZS5cbmltcG9ydCB7IGlzTm9kZUxpa2UsIHN0cmluZ1RvVWludDhBcnJheSB9IGZyb20gXCJAYXp1cmUvY29yZS11dGlsXCI7XG5pbXBvcnQgeyBjcmVhdGVIdHRwSGVhZGVycyB9IGZyb20gXCIuLi9odHRwSGVhZGVycy5qc1wiO1xuLyoqXG4gKiBUaGUgcHJvZ3JhbW1hdGljIGlkZW50aWZpZXIgb2YgdGhlIGZvcm1EYXRhUG9saWN5LlxuICovXG5leHBvcnQgY29uc3QgZm9ybURhdGFQb2xpY3lOYW1lID0gXCJmb3JtRGF0YVBvbGljeVwiO1xuZnVuY3Rpb24gZm9ybURhdGFUb0Zvcm1EYXRhTWFwKGZvcm1EYXRhKSB7XG4gICAgdmFyIF9hO1xuICAgIGNvbnN0IGZvcm1EYXRhTWFwID0ge307XG4gICAgZm9yIChjb25zdCBba2V5LCB2YWx1ZV0gb2YgZm9ybURhdGEuZW50cmllcygpKSB7XG4gICAgICAgIChfYSA9IGZvcm1EYXRhTWFwW2tleV0pICE9PSBudWxsICYmIF9hICE9PSB2b2lkIDAgPyBfYSA6IChmb3JtRGF0YU1hcFtrZXldID0gW10pO1xuICAgICAgICBmb3JtRGF0YU1hcFtrZXldLnB1c2godmFsdWUpO1xuICAgIH1cbiAgICByZXR1cm4gZm9ybURhdGFNYXA7XG59XG4vKipcbiAqIEEgcG9saWN5IHRoYXQgZW5jb2RlcyBGb3JtRGF0YSBvbiB0aGUgcmVxdWVzdCBpbnRvIHRoZSBib2R5LlxuICovXG5leHBvcnQgZnVuY3Rpb24gZm9ybURhdGFQb2xpY3koKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgICAgbmFtZTogZm9ybURhdGFQb2xpY3lOYW1lLFxuICAgICAgICBhc3luYyBzZW5kUmVxdWVzdChyZXF1ZXN0LCBuZXh0KSB7XG4gICAgICAgICAgICBpZiAoaXNOb2RlTGlrZSAmJiB0eXBlb2YgRm9ybURhdGEgIT09IFwidW5kZWZpbmVkXCIgJiYgcmVxdWVzdC5ib2R5IGluc3RhbmNlb2YgRm9ybURhdGEpIHtcbiAgICAgICAgICAgICAgICByZXF1ZXN0LmZvcm1EYXRhID0gZm9ybURhdGFUb0Zvcm1EYXRhTWFwKHJlcXVlc3QuYm9keSk7XG4gICAgICAgICAgICAgICAgcmVxdWVzdC5ib2R5ID0gdW5kZWZpbmVkO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKHJlcXVlc3QuZm9ybURhdGEpIHtcbiAgICAgICAgICAgICAgICBjb25zdCBjb250ZW50VHlwZSA9IHJlcXVlc3QuaGVhZGVycy5nZXQoXCJDb250ZW50LVR5cGVcIik7XG4gICAgICAgICAgICAgICAgaWYgKGNvbnRlbnRUeXBlICYmIGNvbnRlbnRUeXBlLmluZGV4T2YoXCJhcHBsaWNhdGlvbi94LXd3dy1mb3JtLXVybGVuY29kZWRcIikgIT09IC0xKSB7XG4gICAgICAgICAgICAgICAgICAgIHJlcXVlc3QuYm9keSA9IHd3d0Zvcm1VcmxFbmNvZGUocmVxdWVzdC5mb3JtRGF0YSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICBhd2FpdCBwcmVwYXJlRm9ybURhdGEocmVxdWVzdC5mb3JtRGF0YSwgcmVxdWVzdCk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHJlcXVlc3QuZm9ybURhdGEgPSB1bmRlZmluZWQ7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXR1cm4gbmV4dChyZXF1ZXN0KTtcbiAgICAgICAgfSxcbiAgICB9O1xufVxuZnVuY3Rpb24gd3d3Rm9ybVVybEVuY29kZShmb3JtRGF0YSkge1xuICAgIGNvbnN0IHVybFNlYXJjaFBhcmFtcyA9IG5ldyBVUkxTZWFyY2hQYXJhbXMoKTtcbiAgICBmb3IgKGNvbnN0IFtrZXksIHZhbHVlXSBvZiBPYmplY3QuZW50cmllcyhmb3JtRGF0YSkpIHtcbiAgICAgICAgaWYgKEFycmF5LmlzQXJyYXkodmFsdWUpKSB7XG4gICAgICAgICAgICBmb3IgKGNvbnN0IHN1YlZhbHVlIG9mIHZhbHVlKSB7XG4gICAgICAgICAgICAgICAgdXJsU2VhcmNoUGFyYW1zLmFwcGVuZChrZXksIHN1YlZhbHVlLnRvU3RyaW5nKCkpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgdXJsU2VhcmNoUGFyYW1zLmFwcGVuZChrZXksIHZhbHVlLnRvU3RyaW5nKCkpO1xuICAgICAgICB9XG4gICAgfVxuICAgIHJldHVybiB1cmxTZWFyY2hQYXJhbXMudG9TdHJpbmcoKTtcbn1cbmFzeW5jIGZ1bmN0aW9uIHByZXBhcmVGb3JtRGF0YShmb3JtRGF0YSwgcmVxdWVzdCkge1xuICAgIC8vIHZhbGlkYXRlIGNvbnRlbnQgdHlwZSAobXVsdGlwYXJ0L2Zvcm0tZGF0YSlcbiAgICBjb25zdCBjb250ZW50VHlwZSA9IHJlcXVlc3QuaGVhZGVycy5nZXQoXCJDb250ZW50LVR5cGVcIik7XG4gICAgaWYgKGNvbnRlbnRUeXBlICYmICFjb250ZW50VHlwZS5zdGFydHNXaXRoKFwibXVsdGlwYXJ0L2Zvcm0tZGF0YVwiKSkge1xuICAgICAgICAvLyBjb250ZW50IHR5cGUgaXMgc3BlY2lmaWVkIGFuZCBpcyBub3QgbXVsdGlwYXJ0L2Zvcm0tZGF0YS4gRXhpdC5cbiAgICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICByZXF1ZXN0LmhlYWRlcnMuc2V0KFwiQ29udGVudC1UeXBlXCIsIGNvbnRlbnRUeXBlICE9PSBudWxsICYmIGNvbnRlbnRUeXBlICE9PSB2b2lkIDAgPyBjb250ZW50VHlwZSA6IFwibXVsdGlwYXJ0L2Zvcm0tZGF0YVwiKTtcbiAgICAvLyBzZXQgYm9keSB0byBNdWx0aXBhcnRSZXF1ZXN0Qm9keSB1c2luZyBjb250ZW50IGZyb20gRm9ybURhdGFNYXBcbiAgICBjb25zdCBwYXJ0cyA9IFtdO1xuICAgIGZvciAoY29uc3QgW2ZpZWxkTmFtZSwgdmFsdWVzXSBvZiBPYmplY3QuZW50cmllcyhmb3JtRGF0YSkpIHtcbiAgICAgICAgZm9yIChjb25zdCB2YWx1ZSBvZiBBcnJheS5pc0FycmF5KHZhbHVlcykgPyB2YWx1ZXMgOiBbdmFsdWVzXSkge1xuICAgICAgICAgICAgaWYgKHR5cGVvZiB2YWx1ZSA9PT0gXCJzdHJpbmdcIikge1xuICAgICAgICAgICAgICAgIHBhcnRzLnB1c2goe1xuICAgICAgICAgICAgICAgICAgICBoZWFkZXJzOiBjcmVhdGVIdHRwSGVhZGVycyh7XG4gICAgICAgICAgICAgICAgICAgICAgICBcIkNvbnRlbnQtRGlzcG9zaXRpb25cIjogYGZvcm0tZGF0YTsgbmFtZT1cIiR7ZmllbGROYW1lfVwiYCxcbiAgICAgICAgICAgICAgICAgICAgfSksXG4gICAgICAgICAgICAgICAgICAgIGJvZHk6IHN0cmluZ1RvVWludDhBcnJheSh2YWx1ZSwgXCJ1dGYtOFwiKSxcbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2UgaWYgKHZhbHVlID09PSB1bmRlZmluZWQgfHwgdmFsdWUgPT09IG51bGwgfHwgdHlwZW9mIHZhbHVlICE9PSBcIm9iamVjdFwiKSB7XG4gICAgICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKGBVbmV4cGVjdGVkIHZhbHVlIGZvciBrZXkgJHtmaWVsZE5hbWV9OiAke3ZhbHVlfS4gVmFsdWUgc2hvdWxkIGJlIHNlcmlhbGl6ZWQgdG8gc3RyaW5nIGZpcnN0LmApO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgLy8gdXNpbmcgfHwgaW5zdGVhZCBvZiA/PyBoZXJlIHNpbmNlIGlmIHZhbHVlLm5hbWUgaXMgZW1wdHkgd2Ugc2hvdWxkIGNyZWF0ZSBhIGZpbGUgbmFtZVxuICAgICAgICAgICAgICAgIGNvbnN0IGZpbGVOYW1lID0gdmFsdWUubmFtZSB8fCBcImJsb2JcIjtcbiAgICAgICAgICAgICAgICBjb25zdCBoZWFkZXJzID0gY3JlYXRlSHR0cEhlYWRlcnMoKTtcbiAgICAgICAgICAgICAgICBoZWFkZXJzLnNldChcIkNvbnRlbnQtRGlzcG9zaXRpb25cIiwgYGZvcm0tZGF0YTsgbmFtZT1cIiR7ZmllbGROYW1lfVwiOyBmaWxlbmFtZT1cIiR7ZmlsZU5hbWV9XCJgKTtcbiAgICAgICAgICAgICAgICAvLyBhZ2FpbiwgfHwgaXMgdXNlZCBzaW5jZSBhbiBlbXB0eSB2YWx1ZS50eXBlIG1lYW5zIHRoZSBjb250ZW50IHR5cGUgaXMgdW5zZXRcbiAgICAgICAgICAgICAgICBoZWFkZXJzLnNldChcIkNvbnRlbnQtVHlwZVwiLCB2YWx1ZS50eXBlIHx8IFwiYXBwbGljYXRpb24vb2N0ZXQtc3RyZWFtXCIpO1xuICAgICAgICAgICAgICAgIHBhcnRzLnB1c2goe1xuICAgICAgICAgICAgICAgICAgICBoZWFkZXJzLFxuICAgICAgICAgICAgICAgICAgICBib2R5OiB2YWx1ZSxcbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cbiAgICByZXF1ZXN0Lm11bHRpcGFydEJvZHkgPSB7IHBhcnRzIH07XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1mb3JtRGF0YVBvbGljeS5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/core-rest-pipeline/dist/esm/policies/formDataPolicy.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/core-rest-pipeline/dist/esm/policies/logPolicy.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/@azure/core-rest-pipeline/dist/esm/policies/logPolicy.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   logPolicy: () => (/* binding */ logPolicy),\n/* harmony export */   logPolicyName: () => (/* binding */ logPolicyName)\n/* harmony export */ });\n/* harmony import */ var _log_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../log.js */ \"(rsc)/./node_modules/@azure/core-rest-pipeline/dist/esm/log.js\");\n/* harmony import */ var _util_sanitizer_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../util/sanitizer.js */ \"(rsc)/./node_modules/@azure/core-rest-pipeline/dist/esm/util/sanitizer.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\n\n/**\n * The programmatic identifier of the logPolicy.\n */\nconst logPolicyName = \"logPolicy\";\n/**\n * A policy that logs all requests and responses.\n * @param options - Options to configure logPolicy.\n */\nfunction logPolicy(options = {}) {\n    var _a;\n    const logger = (_a = options.logger) !== null && _a !== void 0 ? _a : _log_js__WEBPACK_IMPORTED_MODULE_0__.logger.info;\n    const sanitizer = new _util_sanitizer_js__WEBPACK_IMPORTED_MODULE_1__.Sanitizer({\n        additionalAllowedHeaderNames: options.additionalAllowedHeaderNames,\n        additionalAllowedQueryParameters: options.additionalAllowedQueryParameters,\n    });\n    return {\n        name: logPolicyName,\n        async sendRequest(request, next) {\n            if (!logger.enabled) {\n                return next(request);\n            }\n            logger(`Request: ${sanitizer.sanitize(request)}`);\n            const response = await next(request);\n            logger(`Response status code: ${response.status}`);\n            logger(`Headers: ${sanitizer.sanitize(response.headers)}`);\n            return response;\n        },\n    };\n}\n//# sourceMappingURL=logPolicy.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2NvcmUtcmVzdC1waXBlbGluZS9kaXN0L2VzbS9wb2xpY2llcy9sb2dQb2xpY3kuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBO0FBQ0E7QUFDaUQ7QUFDQTtBQUNqRDtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ08sK0JBQStCO0FBQ3RDO0FBQ0EsMEVBQTBFLDJDQUFVO0FBQ3BGLDBCQUEwQix5REFBUztBQUNuQztBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLCtCQUErQiw0QkFBNEI7QUFDM0Q7QUFDQSw0Q0FBNEMsZ0JBQWdCO0FBQzVELCtCQUErQixxQ0FBcUM7QUFDcEU7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZGFuaWVsMy12cDIvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2NvcmUtcmVzdC1waXBlbGluZS9kaXN0L2VzbS9wb2xpY2llcy9sb2dQb2xpY3kuanM/YWNkMyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi5cbi8vIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZS5cbmltcG9ydCB7IGxvZ2dlciBhcyBjb3JlTG9nZ2VyIH0gZnJvbSBcIi4uL2xvZy5qc1wiO1xuaW1wb3J0IHsgU2FuaXRpemVyIH0gZnJvbSBcIi4uL3V0aWwvc2FuaXRpemVyLmpzXCI7XG4vKipcbiAqIFRoZSBwcm9ncmFtbWF0aWMgaWRlbnRpZmllciBvZiB0aGUgbG9nUG9saWN5LlxuICovXG5leHBvcnQgY29uc3QgbG9nUG9saWN5TmFtZSA9IFwibG9nUG9saWN5XCI7XG4vKipcbiAqIEEgcG9saWN5IHRoYXQgbG9ncyBhbGwgcmVxdWVzdHMgYW5kIHJlc3BvbnNlcy5cbiAqIEBwYXJhbSBvcHRpb25zIC0gT3B0aW9ucyB0byBjb25maWd1cmUgbG9nUG9saWN5LlxuICovXG5leHBvcnQgZnVuY3Rpb24gbG9nUG9saWN5KG9wdGlvbnMgPSB7fSkge1xuICAgIHZhciBfYTtcbiAgICBjb25zdCBsb2dnZXIgPSAoX2EgPSBvcHRpb25zLmxvZ2dlcikgIT09IG51bGwgJiYgX2EgIT09IHZvaWQgMCA/IF9hIDogY29yZUxvZ2dlci5pbmZvO1xuICAgIGNvbnN0IHNhbml0aXplciA9IG5ldyBTYW5pdGl6ZXIoe1xuICAgICAgICBhZGRpdGlvbmFsQWxsb3dlZEhlYWRlck5hbWVzOiBvcHRpb25zLmFkZGl0aW9uYWxBbGxvd2VkSGVhZGVyTmFtZXMsXG4gICAgICAgIGFkZGl0aW9uYWxBbGxvd2VkUXVlcnlQYXJhbWV0ZXJzOiBvcHRpb25zLmFkZGl0aW9uYWxBbGxvd2VkUXVlcnlQYXJhbWV0ZXJzLFxuICAgIH0pO1xuICAgIHJldHVybiB7XG4gICAgICAgIG5hbWU6IGxvZ1BvbGljeU5hbWUsXG4gICAgICAgIGFzeW5jIHNlbmRSZXF1ZXN0KHJlcXVlc3QsIG5leHQpIHtcbiAgICAgICAgICAgIGlmICghbG9nZ2VyLmVuYWJsZWQpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gbmV4dChyZXF1ZXN0KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGxvZ2dlcihgUmVxdWVzdDogJHtzYW5pdGl6ZXIuc2FuaXRpemUocmVxdWVzdCl9YCk7XG4gICAgICAgICAgICBjb25zdCByZXNwb25zZSA9IGF3YWl0IG5leHQocmVxdWVzdCk7XG4gICAgICAgICAgICBsb2dnZXIoYFJlc3BvbnNlIHN0YXR1cyBjb2RlOiAke3Jlc3BvbnNlLnN0YXR1c31gKTtcbiAgICAgICAgICAgIGxvZ2dlcihgSGVhZGVyczogJHtzYW5pdGl6ZXIuc2FuaXRpemUocmVzcG9uc2UuaGVhZGVycyl9YCk7XG4gICAgICAgICAgICByZXR1cm4gcmVzcG9uc2U7XG4gICAgICAgIH0sXG4gICAgfTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWxvZ1BvbGljeS5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/core-rest-pipeline/dist/esm/policies/logPolicy.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/core-rest-pipeline/dist/esm/policies/multipartPolicy.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/@azure/core-rest-pipeline/dist/esm/policies/multipartPolicy.js ***!
  \*************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   multipartPolicy: () => (/* binding */ multipartPolicy),\n/* harmony export */   multipartPolicyName: () => (/* binding */ multipartPolicyName)\n/* harmony export */ });\n/* harmony import */ var _azure_core_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @azure/core-util */ \"(rsc)/./node_modules/@azure/core-util/dist/esm/index.js\");\n/* harmony import */ var _util_concat_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../util/concat.js */ \"(rsc)/./node_modules/@azure/core-rest-pipeline/dist/esm/util/concat.js\");\n/* harmony import */ var _util_typeGuards_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../util/typeGuards.js */ \"(rsc)/./node_modules/@azure/core-rest-pipeline/dist/esm/util/typeGuards.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\n\n\nfunction generateBoundary() {\n    return `----AzSDKFormBoundary${(0,_azure_core_util__WEBPACK_IMPORTED_MODULE_0__.randomUUID)()}`;\n}\nfunction encodeHeaders(headers) {\n    let result = \"\";\n    for (const [key, value] of headers) {\n        result += `${key}: ${value}\\r\\n`;\n    }\n    return result;\n}\nfunction getLength(source) {\n    if (source instanceof Uint8Array) {\n        return source.byteLength;\n    }\n    else if ((0,_util_typeGuards_js__WEBPACK_IMPORTED_MODULE_2__.isBlob)(source)) {\n        // if was created using createFile then -1 means we have an unknown size\n        return source.size === -1 ? undefined : source.size;\n    }\n    else {\n        return undefined;\n    }\n}\nfunction getTotalLength(sources) {\n    let total = 0;\n    for (const source of sources) {\n        const partLength = getLength(source);\n        if (partLength === undefined) {\n            return undefined;\n        }\n        else {\n            total += partLength;\n        }\n    }\n    return total;\n}\nasync function buildRequestBody(request, parts, boundary) {\n    const sources = [\n        (0,_azure_core_util__WEBPACK_IMPORTED_MODULE_0__.stringToUint8Array)(`--${boundary}`, \"utf-8\"),\n        ...parts.flatMap((part) => [\n            (0,_azure_core_util__WEBPACK_IMPORTED_MODULE_0__.stringToUint8Array)(\"\\r\\n\", \"utf-8\"),\n            (0,_azure_core_util__WEBPACK_IMPORTED_MODULE_0__.stringToUint8Array)(encodeHeaders(part.headers), \"utf-8\"),\n            (0,_azure_core_util__WEBPACK_IMPORTED_MODULE_0__.stringToUint8Array)(\"\\r\\n\", \"utf-8\"),\n            part.body,\n            (0,_azure_core_util__WEBPACK_IMPORTED_MODULE_0__.stringToUint8Array)(`\\r\\n--${boundary}`, \"utf-8\"),\n        ]),\n        (0,_azure_core_util__WEBPACK_IMPORTED_MODULE_0__.stringToUint8Array)(\"--\\r\\n\\r\\n\", \"utf-8\"),\n    ];\n    const contentLength = getTotalLength(sources);\n    if (contentLength) {\n        request.headers.set(\"Content-Length\", contentLength);\n    }\n    request.body = await (0,_util_concat_js__WEBPACK_IMPORTED_MODULE_1__.concat)(sources);\n}\n/**\n * Name of multipart policy\n */\nconst multipartPolicyName = \"multipartPolicy\";\nconst maxBoundaryLength = 70;\nconst validBoundaryCharacters = new Set(`abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789'()+,-./:=?`);\nfunction assertValidBoundary(boundary) {\n    if (boundary.length > maxBoundaryLength) {\n        throw new Error(`Multipart boundary \"${boundary}\" exceeds maximum length of 70 characters`);\n    }\n    if (Array.from(boundary).some((x) => !validBoundaryCharacters.has(x))) {\n        throw new Error(`Multipart boundary \"${boundary}\" contains invalid characters`);\n    }\n}\n/**\n * Pipeline policy for multipart requests\n */\nfunction multipartPolicy() {\n    return {\n        name: multipartPolicyName,\n        async sendRequest(request, next) {\n            var _a;\n            if (!request.multipartBody) {\n                return next(request);\n            }\n            if (request.body) {\n                throw new Error(\"multipartBody and regular body cannot be set at the same time\");\n            }\n            let boundary = request.multipartBody.boundary;\n            const contentTypeHeader = (_a = request.headers.get(\"Content-Type\")) !== null && _a !== void 0 ? _a : \"multipart/mixed\";\n            const parsedHeader = contentTypeHeader.match(/^(multipart\\/[^ ;]+)(?:; *boundary=(.+))?$/);\n            if (!parsedHeader) {\n                throw new Error(`Got multipart request body, but content-type header was not multipart: ${contentTypeHeader}`);\n            }\n            const [, contentType, parsedBoundary] = parsedHeader;\n            if (parsedBoundary && boundary && parsedBoundary !== boundary) {\n                throw new Error(`Multipart boundary was specified as ${parsedBoundary} in the header, but got ${boundary} in the request body`);\n            }\n            boundary !== null && boundary !== void 0 ? boundary : (boundary = parsedBoundary);\n            if (boundary) {\n                assertValidBoundary(boundary);\n            }\n            else {\n                boundary = generateBoundary();\n            }\n            request.headers.set(\"Content-Type\", `${contentType}; boundary=${boundary}`);\n            await buildRequestBody(request, request.multipartBody.parts, boundary);\n            request.multipartBody = undefined;\n            return next(request);\n        },\n    };\n}\n//# sourceMappingURL=multipartPolicy.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2NvcmUtcmVzdC1waXBlbGluZS9kaXN0L2VzbS9wb2xpY2llcy9tdWx0aXBhcnRQb2xpY3kuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBQTtBQUNBO0FBQ2tFO0FBQ3ZCO0FBQ0k7QUFDL0M7QUFDQSxtQ0FBbUMsNERBQVUsR0FBRztBQUNoRDtBQUNBO0FBQ0E7QUFDQTtBQUNBLHFCQUFxQixJQUFJLElBQUksTUFBTTtBQUNuQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWEsMkRBQU07QUFDbkI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxRQUFRLG9FQUFrQixNQUFNLFNBQVM7QUFDekM7QUFDQSxZQUFZLG9FQUFrQjtBQUM5QixZQUFZLG9FQUFrQjtBQUM5QixZQUFZLG9FQUFrQjtBQUM5QjtBQUNBLFlBQVksb0VBQWtCLFVBQVUsU0FBUztBQUNqRDtBQUNBLFFBQVEsb0VBQWtCO0FBQzFCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx5QkFBeUIsdURBQU07QUFDL0I7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsK0NBQStDLFNBQVM7QUFDeEQ7QUFDQTtBQUNBLCtDQUErQyxTQUFTO0FBQ3hEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDJFQUEyRSxRQUFRO0FBQ25GO0FBQ0EsMEdBQTBHLGtCQUFrQjtBQUM1SDtBQUNBO0FBQ0E7QUFDQSx1RUFBdUUsZ0JBQWdCLHlCQUF5QixVQUFVO0FBQzFIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxtREFBbUQsY0FBYyxXQUFXLFNBQVM7QUFDckY7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2RhbmllbDMtdnAyLy4vbm9kZV9tb2R1bGVzL0BhenVyZS9jb3JlLXJlc3QtcGlwZWxpbmUvZGlzdC9lc20vcG9saWNpZXMvbXVsdGlwYXJ0UG9saWN5LmpzP2UzNWUiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uXG4vLyBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UuXG5pbXBvcnQgeyByYW5kb21VVUlELCBzdHJpbmdUb1VpbnQ4QXJyYXkgfSBmcm9tIFwiQGF6dXJlL2NvcmUtdXRpbFwiO1xuaW1wb3J0IHsgY29uY2F0IH0gZnJvbSBcIi4uL3V0aWwvY29uY2F0LmpzXCI7XG5pbXBvcnQgeyBpc0Jsb2IgfSBmcm9tIFwiLi4vdXRpbC90eXBlR3VhcmRzLmpzXCI7XG5mdW5jdGlvbiBnZW5lcmF0ZUJvdW5kYXJ5KCkge1xuICAgIHJldHVybiBgLS0tLUF6U0RLRm9ybUJvdW5kYXJ5JHtyYW5kb21VVUlEKCl9YDtcbn1cbmZ1bmN0aW9uIGVuY29kZUhlYWRlcnMoaGVhZGVycykge1xuICAgIGxldCByZXN1bHQgPSBcIlwiO1xuICAgIGZvciAoY29uc3QgW2tleSwgdmFsdWVdIG9mIGhlYWRlcnMpIHtcbiAgICAgICAgcmVzdWx0ICs9IGAke2tleX06ICR7dmFsdWV9XFxyXFxuYDtcbiAgICB9XG4gICAgcmV0dXJuIHJlc3VsdDtcbn1cbmZ1bmN0aW9uIGdldExlbmd0aChzb3VyY2UpIHtcbiAgICBpZiAoc291cmNlIGluc3RhbmNlb2YgVWludDhBcnJheSkge1xuICAgICAgICByZXR1cm4gc291cmNlLmJ5dGVMZW5ndGg7XG4gICAgfVxuICAgIGVsc2UgaWYgKGlzQmxvYihzb3VyY2UpKSB7XG4gICAgICAgIC8vIGlmIHdhcyBjcmVhdGVkIHVzaW5nIGNyZWF0ZUZpbGUgdGhlbiAtMSBtZWFucyB3ZSBoYXZlIGFuIHVua25vd24gc2l6ZVxuICAgICAgICByZXR1cm4gc291cmNlLnNpemUgPT09IC0xID8gdW5kZWZpbmVkIDogc291cmNlLnNpemU7XG4gICAgfVxuICAgIGVsc2Uge1xuICAgICAgICByZXR1cm4gdW5kZWZpbmVkO1xuICAgIH1cbn1cbmZ1bmN0aW9uIGdldFRvdGFsTGVuZ3RoKHNvdXJjZXMpIHtcbiAgICBsZXQgdG90YWwgPSAwO1xuICAgIGZvciAoY29uc3Qgc291cmNlIG9mIHNvdXJjZXMpIHtcbiAgICAgICAgY29uc3QgcGFydExlbmd0aCA9IGdldExlbmd0aChzb3VyY2UpO1xuICAgICAgICBpZiAocGFydExlbmd0aCA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICAgICByZXR1cm4gdW5kZWZpbmVkO1xuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgdG90YWwgKz0gcGFydExlbmd0aDtcbiAgICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gdG90YWw7XG59XG5hc3luYyBmdW5jdGlvbiBidWlsZFJlcXVlc3RCb2R5KHJlcXVlc3QsIHBhcnRzLCBib3VuZGFyeSkge1xuICAgIGNvbnN0IHNvdXJjZXMgPSBbXG4gICAgICAgIHN0cmluZ1RvVWludDhBcnJheShgLS0ke2JvdW5kYXJ5fWAsIFwidXRmLThcIiksXG4gICAgICAgIC4uLnBhcnRzLmZsYXRNYXAoKHBhcnQpID0+IFtcbiAgICAgICAgICAgIHN0cmluZ1RvVWludDhBcnJheShcIlxcclxcblwiLCBcInV0Zi04XCIpLFxuICAgICAgICAgICAgc3RyaW5nVG9VaW50OEFycmF5KGVuY29kZUhlYWRlcnMocGFydC5oZWFkZXJzKSwgXCJ1dGYtOFwiKSxcbiAgICAgICAgICAgIHN0cmluZ1RvVWludDhBcnJheShcIlxcclxcblwiLCBcInV0Zi04XCIpLFxuICAgICAgICAgICAgcGFydC5ib2R5LFxuICAgICAgICAgICAgc3RyaW5nVG9VaW50OEFycmF5KGBcXHJcXG4tLSR7Ym91bmRhcnl9YCwgXCJ1dGYtOFwiKSxcbiAgICAgICAgXSksXG4gICAgICAgIHN0cmluZ1RvVWludDhBcnJheShcIi0tXFxyXFxuXFxyXFxuXCIsIFwidXRmLThcIiksXG4gICAgXTtcbiAgICBjb25zdCBjb250ZW50TGVuZ3RoID0gZ2V0VG90YWxMZW5ndGgoc291cmNlcyk7XG4gICAgaWYgKGNvbnRlbnRMZW5ndGgpIHtcbiAgICAgICAgcmVxdWVzdC5oZWFkZXJzLnNldChcIkNvbnRlbnQtTGVuZ3RoXCIsIGNvbnRlbnRMZW5ndGgpO1xuICAgIH1cbiAgICByZXF1ZXN0LmJvZHkgPSBhd2FpdCBjb25jYXQoc291cmNlcyk7XG59XG4vKipcbiAqIE5hbWUgb2YgbXVsdGlwYXJ0IHBvbGljeVxuICovXG5leHBvcnQgY29uc3QgbXVsdGlwYXJ0UG9saWN5TmFtZSA9IFwibXVsdGlwYXJ0UG9saWN5XCI7XG5jb25zdCBtYXhCb3VuZGFyeUxlbmd0aCA9IDcwO1xuY29uc3QgdmFsaWRCb3VuZGFyeUNoYXJhY3RlcnMgPSBuZXcgU2V0KGBhYmNkZWZnaGlqa2xtbm9wcXJzdHV2d3h5ekFCQ0RFRkdISUpLTE1OT1BRUlNUVVZXWFlaMDEyMzQ1Njc4OScoKSssLS4vOj0/YCk7XG5mdW5jdGlvbiBhc3NlcnRWYWxpZEJvdW5kYXJ5KGJvdW5kYXJ5KSB7XG4gICAgaWYgKGJvdW5kYXJ5Lmxlbmd0aCA+IG1heEJvdW5kYXJ5TGVuZ3RoKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcihgTXVsdGlwYXJ0IGJvdW5kYXJ5IFwiJHtib3VuZGFyeX1cIiBleGNlZWRzIG1heGltdW0gbGVuZ3RoIG9mIDcwIGNoYXJhY3RlcnNgKTtcbiAgICB9XG4gICAgaWYgKEFycmF5LmZyb20oYm91bmRhcnkpLnNvbWUoKHgpID0+ICF2YWxpZEJvdW5kYXJ5Q2hhcmFjdGVycy5oYXMoeCkpKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcihgTXVsdGlwYXJ0IGJvdW5kYXJ5IFwiJHtib3VuZGFyeX1cIiBjb250YWlucyBpbnZhbGlkIGNoYXJhY3RlcnNgKTtcbiAgICB9XG59XG4vKipcbiAqIFBpcGVsaW5lIHBvbGljeSBmb3IgbXVsdGlwYXJ0IHJlcXVlc3RzXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBtdWx0aXBhcnRQb2xpY3koKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgICAgbmFtZTogbXVsdGlwYXJ0UG9saWN5TmFtZSxcbiAgICAgICAgYXN5bmMgc2VuZFJlcXVlc3QocmVxdWVzdCwgbmV4dCkge1xuICAgICAgICAgICAgdmFyIF9hO1xuICAgICAgICAgICAgaWYgKCFyZXF1ZXN0Lm11bHRpcGFydEJvZHkpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gbmV4dChyZXF1ZXN0KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmIChyZXF1ZXN0LmJvZHkpIHtcbiAgICAgICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJtdWx0aXBhcnRCb2R5IGFuZCByZWd1bGFyIGJvZHkgY2Fubm90IGJlIHNldCBhdCB0aGUgc2FtZSB0aW1lXCIpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgbGV0IGJvdW5kYXJ5ID0gcmVxdWVzdC5tdWx0aXBhcnRCb2R5LmJvdW5kYXJ5O1xuICAgICAgICAgICAgY29uc3QgY29udGVudFR5cGVIZWFkZXIgPSAoX2EgPSByZXF1ZXN0LmhlYWRlcnMuZ2V0KFwiQ29udGVudC1UeXBlXCIpKSAhPT0gbnVsbCAmJiBfYSAhPT0gdm9pZCAwID8gX2EgOiBcIm11bHRpcGFydC9taXhlZFwiO1xuICAgICAgICAgICAgY29uc3QgcGFyc2VkSGVhZGVyID0gY29udGVudFR5cGVIZWFkZXIubWF0Y2goL14obXVsdGlwYXJ0XFwvW14gO10rKSg/OjsgKmJvdW5kYXJ5PSguKykpPyQvKTtcbiAgICAgICAgICAgIGlmICghcGFyc2VkSGVhZGVyKSB7XG4gICAgICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKGBHb3QgbXVsdGlwYXJ0IHJlcXVlc3QgYm9keSwgYnV0IGNvbnRlbnQtdHlwZSBoZWFkZXIgd2FzIG5vdCBtdWx0aXBhcnQ6ICR7Y29udGVudFR5cGVIZWFkZXJ9YCk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBjb25zdCBbLCBjb250ZW50VHlwZSwgcGFyc2VkQm91bmRhcnldID0gcGFyc2VkSGVhZGVyO1xuICAgICAgICAgICAgaWYgKHBhcnNlZEJvdW5kYXJ5ICYmIGJvdW5kYXJ5ICYmIHBhcnNlZEJvdW5kYXJ5ICE9PSBib3VuZGFyeSkge1xuICAgICAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihgTXVsdGlwYXJ0IGJvdW5kYXJ5IHdhcyBzcGVjaWZpZWQgYXMgJHtwYXJzZWRCb3VuZGFyeX0gaW4gdGhlIGhlYWRlciwgYnV0IGdvdCAke2JvdW5kYXJ5fSBpbiB0aGUgcmVxdWVzdCBib2R5YCk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBib3VuZGFyeSAhPT0gbnVsbCAmJiBib3VuZGFyeSAhPT0gdm9pZCAwID8gYm91bmRhcnkgOiAoYm91bmRhcnkgPSBwYXJzZWRCb3VuZGFyeSk7XG4gICAgICAgICAgICBpZiAoYm91bmRhcnkpIHtcbiAgICAgICAgICAgICAgICBhc3NlcnRWYWxpZEJvdW5kYXJ5KGJvdW5kYXJ5KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgIGJvdW5kYXJ5ID0gZ2VuZXJhdGVCb3VuZGFyeSgpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcmVxdWVzdC5oZWFkZXJzLnNldChcIkNvbnRlbnQtVHlwZVwiLCBgJHtjb250ZW50VHlwZX07IGJvdW5kYXJ5PSR7Ym91bmRhcnl9YCk7XG4gICAgICAgICAgICBhd2FpdCBidWlsZFJlcXVlc3RCb2R5KHJlcXVlc3QsIHJlcXVlc3QubXVsdGlwYXJ0Qm9keS5wYXJ0cywgYm91bmRhcnkpO1xuICAgICAgICAgICAgcmVxdWVzdC5tdWx0aXBhcnRCb2R5ID0gdW5kZWZpbmVkO1xuICAgICAgICAgICAgcmV0dXJuIG5leHQocmVxdWVzdCk7XG4gICAgICAgIH0sXG4gICAgfTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPW11bHRpcGFydFBvbGljeS5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/core-rest-pipeline/dist/esm/policies/multipartPolicy.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/core-rest-pipeline/dist/esm/policies/ndJsonPolicy.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/@azure/core-rest-pipeline/dist/esm/policies/ndJsonPolicy.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ndJsonPolicy: () => (/* binding */ ndJsonPolicy),\n/* harmony export */   ndJsonPolicyName: () => (/* binding */ ndJsonPolicyName)\n/* harmony export */ });\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n/**\n * The programmatic identifier of the ndJsonPolicy.\n */\nconst ndJsonPolicyName = \"ndJsonPolicy\";\n/**\n * ndJsonPolicy is a policy used to control keep alive settings for every request.\n */\nfunction ndJsonPolicy() {\n    return {\n        name: ndJsonPolicyName,\n        async sendRequest(request, next) {\n            // There currently isn't a good way to bypass the serializer\n            if (typeof request.body === \"string\" && request.body.startsWith(\"[\")) {\n                const body = JSON.parse(request.body);\n                if (Array.isArray(body)) {\n                    request.body = body.map((item) => JSON.stringify(item) + \"\\n\").join(\"\");\n                }\n            }\n            return next(request);\n        },\n    };\n}\n//# sourceMappingURL=ndJsonPolicy.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2NvcmUtcmVzdC1waXBlbGluZS9kaXN0L2VzbS9wb2xpY2llcy9uZEpzb25Qb2xpY3kuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZGFuaWVsMy12cDIvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2NvcmUtcmVzdC1waXBlbGluZS9kaXN0L2VzbS9wb2xpY2llcy9uZEpzb25Qb2xpY3kuanM/Y2RmMiJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi5cbi8vIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZS5cbi8qKlxuICogVGhlIHByb2dyYW1tYXRpYyBpZGVudGlmaWVyIG9mIHRoZSBuZEpzb25Qb2xpY3kuXG4gKi9cbmV4cG9ydCBjb25zdCBuZEpzb25Qb2xpY3lOYW1lID0gXCJuZEpzb25Qb2xpY3lcIjtcbi8qKlxuICogbmRKc29uUG9saWN5IGlzIGEgcG9saWN5IHVzZWQgdG8gY29udHJvbCBrZWVwIGFsaXZlIHNldHRpbmdzIGZvciBldmVyeSByZXF1ZXN0LlxuICovXG5leHBvcnQgZnVuY3Rpb24gbmRKc29uUG9saWN5KCkge1xuICAgIHJldHVybiB7XG4gICAgICAgIG5hbWU6IG5kSnNvblBvbGljeU5hbWUsXG4gICAgICAgIGFzeW5jIHNlbmRSZXF1ZXN0KHJlcXVlc3QsIG5leHQpIHtcbiAgICAgICAgICAgIC8vIFRoZXJlIGN1cnJlbnRseSBpc24ndCBhIGdvb2Qgd2F5IHRvIGJ5cGFzcyB0aGUgc2VyaWFsaXplclxuICAgICAgICAgICAgaWYgKHR5cGVvZiByZXF1ZXN0LmJvZHkgPT09IFwic3RyaW5nXCIgJiYgcmVxdWVzdC5ib2R5LnN0YXJ0c1dpdGgoXCJbXCIpKSB7XG4gICAgICAgICAgICAgICAgY29uc3QgYm9keSA9IEpTT04ucGFyc2UocmVxdWVzdC5ib2R5KTtcbiAgICAgICAgICAgICAgICBpZiAoQXJyYXkuaXNBcnJheShib2R5KSkge1xuICAgICAgICAgICAgICAgICAgICByZXF1ZXN0LmJvZHkgPSBib2R5Lm1hcCgoaXRlbSkgPT4gSlNPTi5zdHJpbmdpZnkoaXRlbSkgKyBcIlxcblwiKS5qb2luKFwiXCIpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJldHVybiBuZXh0KHJlcXVlc3QpO1xuICAgICAgICB9LFxuICAgIH07XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1uZEpzb25Qb2xpY3kuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/core-rest-pipeline/dist/esm/policies/ndJsonPolicy.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/core-rest-pipeline/dist/esm/policies/proxyPolicy.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/@azure/core-rest-pipeline/dist/esm/policies/proxyPolicy.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getDefaultProxySettings: () => (/* binding */ getDefaultProxySettings),\n/* harmony export */   globalNoProxyList: () => (/* binding */ globalNoProxyList),\n/* harmony export */   loadNoProxy: () => (/* binding */ loadNoProxy),\n/* harmony export */   proxyPolicy: () => (/* binding */ proxyPolicy),\n/* harmony export */   proxyPolicyName: () => (/* binding */ proxyPolicyName)\n/* harmony export */ });\n/* harmony import */ var https_proxy_agent__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! https-proxy-agent */ \"(rsc)/./node_modules/https-proxy-agent/dist/index.js\");\n/* harmony import */ var http_proxy_agent__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! http-proxy-agent */ \"(rsc)/./node_modules/http-proxy-agent/dist/index.js\");\n/* harmony import */ var _log_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../log.js */ \"(rsc)/./node_modules/@azure/core-rest-pipeline/dist/esm/log.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\n\n\nconst HTTPS_PROXY = \"HTTPS_PROXY\";\nconst HTTP_PROXY = \"HTTP_PROXY\";\nconst ALL_PROXY = \"ALL_PROXY\";\nconst NO_PROXY = \"NO_PROXY\";\n/**\n * The programmatic identifier of the proxyPolicy.\n */\nconst proxyPolicyName = \"proxyPolicy\";\n/**\n * Stores the patterns specified in NO_PROXY environment variable.\n * @internal\n */\nconst globalNoProxyList = [];\nlet noProxyListLoaded = false;\n/** A cache of whether a host should bypass the proxy. */\nconst globalBypassedMap = new Map();\nfunction getEnvironmentValue(name) {\n    if (process.env[name]) {\n        return process.env[name];\n    }\n    else if (process.env[name.toLowerCase()]) {\n        return process.env[name.toLowerCase()];\n    }\n    return undefined;\n}\nfunction loadEnvironmentProxyValue() {\n    if (!process) {\n        return undefined;\n    }\n    const httpsProxy = getEnvironmentValue(HTTPS_PROXY);\n    const allProxy = getEnvironmentValue(ALL_PROXY);\n    const httpProxy = getEnvironmentValue(HTTP_PROXY);\n    return httpsProxy || allProxy || httpProxy;\n}\n/**\n * Check whether the host of a given `uri` matches any pattern in the no proxy list.\n * If there's a match, any request sent to the same host shouldn't have the proxy settings set.\n * This implementation is a port of https://github.com/Azure/azure-sdk-for-net/blob/8cca811371159e527159c7eb65602477898683e2/sdk/core/Azure.Core/src/Pipeline/Internal/HttpEnvironmentProxy.cs#L210\n */\nfunction isBypassed(uri, noProxyList, bypassedMap) {\n    if (noProxyList.length === 0) {\n        return false;\n    }\n    const host = new URL(uri).hostname;\n    if (bypassedMap === null || bypassedMap === void 0 ? void 0 : bypassedMap.has(host)) {\n        return bypassedMap.get(host);\n    }\n    let isBypassedFlag = false;\n    for (const pattern of noProxyList) {\n        if (pattern[0] === \".\") {\n            // This should match either domain it self or any subdomain or host\n            // .foo.com will match foo.com it self or *.foo.com\n            if (host.endsWith(pattern)) {\n                isBypassedFlag = true;\n            }\n            else {\n                if (host.length === pattern.length - 1 && host === pattern.slice(1)) {\n                    isBypassedFlag = true;\n                }\n            }\n        }\n        else {\n            if (host === pattern) {\n                isBypassedFlag = true;\n            }\n        }\n    }\n    bypassedMap === null || bypassedMap === void 0 ? void 0 : bypassedMap.set(host, isBypassedFlag);\n    return isBypassedFlag;\n}\nfunction loadNoProxy() {\n    const noProxy = getEnvironmentValue(NO_PROXY);\n    noProxyListLoaded = true;\n    if (noProxy) {\n        return noProxy\n            .split(\",\")\n            .map((item) => item.trim())\n            .filter((item) => item.length);\n    }\n    return [];\n}\n/**\n * This method converts a proxy url into `ProxySettings` for use with ProxyPolicy.\n * If no argument is given, it attempts to parse a proxy URL from the environment\n * variables `HTTPS_PROXY` or `HTTP_PROXY`.\n * @param proxyUrl - The url of the proxy to use. May contain authentication information.\n * @deprecated - Internally this method is no longer necessary when setting proxy information.\n */\nfunction getDefaultProxySettings(proxyUrl) {\n    if (!proxyUrl) {\n        proxyUrl = loadEnvironmentProxyValue();\n        if (!proxyUrl) {\n            return undefined;\n        }\n    }\n    const parsedUrl = new URL(proxyUrl);\n    const schema = parsedUrl.protocol ? parsedUrl.protocol + \"//\" : \"\";\n    return {\n        host: schema + parsedUrl.hostname,\n        port: Number.parseInt(parsedUrl.port || \"80\"),\n        username: parsedUrl.username,\n        password: parsedUrl.password,\n    };\n}\n/**\n * This method attempts to parse a proxy URL from the environment\n * variables `HTTPS_PROXY` or `HTTP_PROXY`.\n */\nfunction getDefaultProxySettingsInternal() {\n    const envProxy = loadEnvironmentProxyValue();\n    return envProxy ? new URL(envProxy) : undefined;\n}\nfunction getUrlFromProxySettings(settings) {\n    let parsedProxyUrl;\n    try {\n        parsedProxyUrl = new URL(settings.host);\n    }\n    catch (_error) {\n        throw new Error(`Expecting a valid host string in proxy settings, but found \"${settings.host}\".`);\n    }\n    parsedProxyUrl.port = String(settings.port);\n    if (settings.username) {\n        parsedProxyUrl.username = settings.username;\n    }\n    if (settings.password) {\n        parsedProxyUrl.password = settings.password;\n    }\n    return parsedProxyUrl;\n}\nfunction setProxyAgentOnRequest(request, cachedAgents, proxyUrl) {\n    // Custom Agent should take precedence so if one is present\n    // we should skip to avoid overwriting it.\n    if (request.agent) {\n        return;\n    }\n    const url = new URL(request.url);\n    const isInsecure = url.protocol !== \"https:\";\n    if (request.tlsSettings) {\n        _log_js__WEBPACK_IMPORTED_MODULE_2__.logger.warning(\"TLS settings are not supported in combination with custom Proxy, certificates provided to the client will be ignored.\");\n    }\n    const headers = request.headers.toJSON();\n    if (isInsecure) {\n        if (!cachedAgents.httpProxyAgent) {\n            cachedAgents.httpProxyAgent = new http_proxy_agent__WEBPACK_IMPORTED_MODULE_1__.HttpProxyAgent(proxyUrl, { headers });\n        }\n        request.agent = cachedAgents.httpProxyAgent;\n    }\n    else {\n        if (!cachedAgents.httpsProxyAgent) {\n            cachedAgents.httpsProxyAgent = new https_proxy_agent__WEBPACK_IMPORTED_MODULE_0__.HttpsProxyAgent(proxyUrl, { headers });\n        }\n        request.agent = cachedAgents.httpsProxyAgent;\n    }\n}\n/**\n * A policy that allows one to apply proxy settings to all requests.\n * If not passed static settings, they will be retrieved from the HTTPS_PROXY\n * or HTTP_PROXY environment variables.\n * @param proxySettings - ProxySettings to use on each request.\n * @param options - additional settings, for example, custom NO_PROXY patterns\n */\nfunction proxyPolicy(proxySettings, options) {\n    if (!noProxyListLoaded) {\n        globalNoProxyList.push(...loadNoProxy());\n    }\n    const defaultProxy = proxySettings\n        ? getUrlFromProxySettings(proxySettings)\n        : getDefaultProxySettingsInternal();\n    const cachedAgents = {};\n    return {\n        name: proxyPolicyName,\n        async sendRequest(request, next) {\n            var _a;\n            if (!request.proxySettings &&\n                defaultProxy &&\n                !isBypassed(request.url, (_a = options === null || options === void 0 ? void 0 : options.customNoProxyList) !== null && _a !== void 0 ? _a : globalNoProxyList, (options === null || options === void 0 ? void 0 : options.customNoProxyList) ? undefined : globalBypassedMap)) {\n                setProxyAgentOnRequest(request, cachedAgents, defaultProxy);\n            }\n            else if (request.proxySettings) {\n                setProxyAgentOnRequest(request, cachedAgents, getUrlFromProxySettings(request.proxySettings));\n            }\n            return next(request);\n        },\n    };\n}\n//# sourceMappingURL=proxyPolicy.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/core-rest-pipeline/dist/esm/policies/proxyPolicy.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/core-rest-pipeline/dist/esm/policies/redirectPolicy.js":
/*!************************************************************************************!*\
  !*** ./node_modules/@azure/core-rest-pipeline/dist/esm/policies/redirectPolicy.js ***!
  \************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   redirectPolicy: () => (/* binding */ redirectPolicy),\n/* harmony export */   redirectPolicyName: () => (/* binding */ redirectPolicyName)\n/* harmony export */ });\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n/**\n * The programmatic identifier of the redirectPolicy.\n */\nconst redirectPolicyName = \"redirectPolicy\";\n/**\n * Methods that are allowed to follow redirects 301 and 302\n */\nconst allowedRedirect = [\"GET\", \"HEAD\"];\n/**\n * A policy to follow Location headers from the server in order\n * to support server-side redirection.\n * In the browser, this policy is not used.\n * @param options - Options to control policy behavior.\n */\nfunction redirectPolicy(options = {}) {\n    const { maxRetries = 20 } = options;\n    return {\n        name: redirectPolicyName,\n        async sendRequest(request, next) {\n            const response = await next(request);\n            return handleRedirect(next, response, maxRetries);\n        },\n    };\n}\nasync function handleRedirect(next, response, maxRetries, currentRetries = 0) {\n    const { request, status, headers } = response;\n    const locationHeader = headers.get(\"location\");\n    if (locationHeader &&\n        (status === 300 ||\n            (status === 301 && allowedRedirect.includes(request.method)) ||\n            (status === 302 && allowedRedirect.includes(request.method)) ||\n            (status === 303 && request.method === \"POST\") ||\n            status === 307) &&\n        currentRetries < maxRetries) {\n        const url = new URL(locationHeader, request.url);\n        request.url = url.toString();\n        // POST request with Status code 303 should be converted into a\n        // redirected GET request if the redirect url is present in the location header\n        if (status === 303) {\n            request.method = \"GET\";\n            request.headers.delete(\"Content-Length\");\n            delete request.body;\n        }\n        request.headers.delete(\"Authorization\");\n        const res = await next(request);\n        return handleRedirect(next, res, maxRetries, currentRetries + 1);\n    }\n    return response;\n}\n//# sourceMappingURL=redirectPolicy.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2NvcmUtcmVzdC1waXBlbGluZS9kaXN0L2VzbS9wb2xpY2llcy9yZWRpcmVjdFBvbGljeS5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ08sb0NBQW9DO0FBQzNDLFlBQVksa0JBQWtCO0FBQzlCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0EsWUFBWSwyQkFBMkI7QUFDdkM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZGFuaWVsMy12cDIvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2NvcmUtcmVzdC1waXBlbGluZS9kaXN0L2VzbS9wb2xpY2llcy9yZWRpcmVjdFBvbGljeS5qcz9kM2U2Il0sInNvdXJjZXNDb250ZW50IjpbIi8vIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLlxuLy8gTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlLlxuLyoqXG4gKiBUaGUgcHJvZ3JhbW1hdGljIGlkZW50aWZpZXIgb2YgdGhlIHJlZGlyZWN0UG9saWN5LlxuICovXG5leHBvcnQgY29uc3QgcmVkaXJlY3RQb2xpY3lOYW1lID0gXCJyZWRpcmVjdFBvbGljeVwiO1xuLyoqXG4gKiBNZXRob2RzIHRoYXQgYXJlIGFsbG93ZWQgdG8gZm9sbG93IHJlZGlyZWN0cyAzMDEgYW5kIDMwMlxuICovXG5jb25zdCBhbGxvd2VkUmVkaXJlY3QgPSBbXCJHRVRcIiwgXCJIRUFEXCJdO1xuLyoqXG4gKiBBIHBvbGljeSB0byBmb2xsb3cgTG9jYXRpb24gaGVhZGVycyBmcm9tIHRoZSBzZXJ2ZXIgaW4gb3JkZXJcbiAqIHRvIHN1cHBvcnQgc2VydmVyLXNpZGUgcmVkaXJlY3Rpb24uXG4gKiBJbiB0aGUgYnJvd3NlciwgdGhpcyBwb2xpY3kgaXMgbm90IHVzZWQuXG4gKiBAcGFyYW0gb3B0aW9ucyAtIE9wdGlvbnMgdG8gY29udHJvbCBwb2xpY3kgYmVoYXZpb3IuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiByZWRpcmVjdFBvbGljeShvcHRpb25zID0ge30pIHtcbiAgICBjb25zdCB7IG1heFJldHJpZXMgPSAyMCB9ID0gb3B0aW9ucztcbiAgICByZXR1cm4ge1xuICAgICAgICBuYW1lOiByZWRpcmVjdFBvbGljeU5hbWUsXG4gICAgICAgIGFzeW5jIHNlbmRSZXF1ZXN0KHJlcXVlc3QsIG5leHQpIHtcbiAgICAgICAgICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgbmV4dChyZXF1ZXN0KTtcbiAgICAgICAgICAgIHJldHVybiBoYW5kbGVSZWRpcmVjdChuZXh0LCByZXNwb25zZSwgbWF4UmV0cmllcyk7XG4gICAgICAgIH0sXG4gICAgfTtcbn1cbmFzeW5jIGZ1bmN0aW9uIGhhbmRsZVJlZGlyZWN0KG5leHQsIHJlc3BvbnNlLCBtYXhSZXRyaWVzLCBjdXJyZW50UmV0cmllcyA9IDApIHtcbiAgICBjb25zdCB7IHJlcXVlc3QsIHN0YXR1cywgaGVhZGVycyB9ID0gcmVzcG9uc2U7XG4gICAgY29uc3QgbG9jYXRpb25IZWFkZXIgPSBoZWFkZXJzLmdldChcImxvY2F0aW9uXCIpO1xuICAgIGlmIChsb2NhdGlvbkhlYWRlciAmJlxuICAgICAgICAoc3RhdHVzID09PSAzMDAgfHxcbiAgICAgICAgICAgIChzdGF0dXMgPT09IDMwMSAmJiBhbGxvd2VkUmVkaXJlY3QuaW5jbHVkZXMocmVxdWVzdC5tZXRob2QpKSB8fFxuICAgICAgICAgICAgKHN0YXR1cyA9PT0gMzAyICYmIGFsbG93ZWRSZWRpcmVjdC5pbmNsdWRlcyhyZXF1ZXN0Lm1ldGhvZCkpIHx8XG4gICAgICAgICAgICAoc3RhdHVzID09PSAzMDMgJiYgcmVxdWVzdC5tZXRob2QgPT09IFwiUE9TVFwiKSB8fFxuICAgICAgICAgICAgc3RhdHVzID09PSAzMDcpICYmXG4gICAgICAgIGN1cnJlbnRSZXRyaWVzIDwgbWF4UmV0cmllcykge1xuICAgICAgICBjb25zdCB1cmwgPSBuZXcgVVJMKGxvY2F0aW9uSGVhZGVyLCByZXF1ZXN0LnVybCk7XG4gICAgICAgIHJlcXVlc3QudXJsID0gdXJsLnRvU3RyaW5nKCk7XG4gICAgICAgIC8vIFBPU1QgcmVxdWVzdCB3aXRoIFN0YXR1cyBjb2RlIDMwMyBzaG91bGQgYmUgY29udmVydGVkIGludG8gYVxuICAgICAgICAvLyByZWRpcmVjdGVkIEdFVCByZXF1ZXN0IGlmIHRoZSByZWRpcmVjdCB1cmwgaXMgcHJlc2VudCBpbiB0aGUgbG9jYXRpb24gaGVhZGVyXG4gICAgICAgIGlmIChzdGF0dXMgPT09IDMwMykge1xuICAgICAgICAgICAgcmVxdWVzdC5tZXRob2QgPSBcIkdFVFwiO1xuICAgICAgICAgICAgcmVxdWVzdC5oZWFkZXJzLmRlbGV0ZShcIkNvbnRlbnQtTGVuZ3RoXCIpO1xuICAgICAgICAgICAgZGVsZXRlIHJlcXVlc3QuYm9keTtcbiAgICAgICAgfVxuICAgICAgICByZXF1ZXN0LmhlYWRlcnMuZGVsZXRlKFwiQXV0aG9yaXphdGlvblwiKTtcbiAgICAgICAgY29uc3QgcmVzID0gYXdhaXQgbmV4dChyZXF1ZXN0KTtcbiAgICAgICAgcmV0dXJuIGhhbmRsZVJlZGlyZWN0KG5leHQsIHJlcywgbWF4UmV0cmllcywgY3VycmVudFJldHJpZXMgKyAxKTtcbiAgICB9XG4gICAgcmV0dXJuIHJlc3BvbnNlO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9cmVkaXJlY3RQb2xpY3kuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/core-rest-pipeline/dist/esm/policies/redirectPolicy.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/core-rest-pipeline/dist/esm/policies/retryPolicy.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/@azure/core-rest-pipeline/dist/esm/policies/retryPolicy.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   retryPolicy: () => (/* binding */ retryPolicy)\n/* harmony export */ });\n/* harmony import */ var _util_helpers_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../util/helpers.js */ \"(rsc)/./node_modules/@azure/core-rest-pipeline/dist/esm/util/helpers.js\");\n/* harmony import */ var _azure_logger__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @azure/logger */ \"(rsc)/./node_modules/@azure/logger/dist/esm/index.js\");\n/* harmony import */ var _azure_abort_controller__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @azure/abort-controller */ \"(rsc)/./node_modules/@azure/abort-controller/dist/esm/index.js\");\n/* harmony import */ var _constants_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../constants.js */ \"(rsc)/./node_modules/@azure/core-rest-pipeline/dist/esm/constants.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\n\n\n\nconst retryPolicyLogger = (0,_azure_logger__WEBPACK_IMPORTED_MODULE_1__.createClientLogger)(\"core-rest-pipeline retryPolicy\");\n/**\n * The programmatic identifier of the retryPolicy.\n */\nconst retryPolicyName = \"retryPolicy\";\n/**\n * retryPolicy is a generic policy to enable retrying requests when certain conditions are met\n */\nfunction retryPolicy(strategies, options = { maxRetries: _constants_js__WEBPACK_IMPORTED_MODULE_3__.DEFAULT_RETRY_POLICY_COUNT }) {\n    const logger = options.logger || retryPolicyLogger;\n    return {\n        name: retryPolicyName,\n        async sendRequest(request, next) {\n            var _a, _b;\n            let response;\n            let responseError;\n            let retryCount = -1;\n            // eslint-disable-next-line no-constant-condition\n            retryRequest: while (true) {\n                retryCount += 1;\n                response = undefined;\n                responseError = undefined;\n                try {\n                    logger.info(`Retry ${retryCount}: Attempting to send request`, request.requestId);\n                    response = await next(request);\n                    logger.info(`Retry ${retryCount}: Received a response from request`, request.requestId);\n                }\n                catch (e) {\n                    logger.error(`Retry ${retryCount}: Received an error from request`, request.requestId);\n                    // RestErrors are valid targets for the retry strategies.\n                    // If none of the retry strategies can work with them, they will be thrown later in this policy.\n                    // If the received error is not a RestError, it is immediately thrown.\n                    responseError = e;\n                    if (!e || responseError.name !== \"RestError\") {\n                        throw e;\n                    }\n                    response = responseError.response;\n                }\n                if ((_a = request.abortSignal) === null || _a === void 0 ? void 0 : _a.aborted) {\n                    logger.error(`Retry ${retryCount}: Request aborted.`);\n                    const abortError = new _azure_abort_controller__WEBPACK_IMPORTED_MODULE_2__.AbortError();\n                    throw abortError;\n                }\n                if (retryCount >= ((_b = options.maxRetries) !== null && _b !== void 0 ? _b : _constants_js__WEBPACK_IMPORTED_MODULE_3__.DEFAULT_RETRY_POLICY_COUNT)) {\n                    logger.info(`Retry ${retryCount}: Maximum retries reached. Returning the last received response, or throwing the last received error.`);\n                    if (responseError) {\n                        throw responseError;\n                    }\n                    else if (response) {\n                        return response;\n                    }\n                    else {\n                        throw new Error(\"Maximum retries reached with no response or error to throw\");\n                    }\n                }\n                logger.info(`Retry ${retryCount}: Processing ${strategies.length} retry strategies.`);\n                strategiesLoop: for (const strategy of strategies) {\n                    const strategyLogger = strategy.logger || retryPolicyLogger;\n                    strategyLogger.info(`Retry ${retryCount}: Processing retry strategy ${strategy.name}.`);\n                    const modifiers = strategy.retry({\n                        retryCount,\n                        response,\n                        responseError,\n                    });\n                    if (modifiers.skipStrategy) {\n                        strategyLogger.info(`Retry ${retryCount}: Skipped.`);\n                        continue strategiesLoop;\n                    }\n                    const { errorToThrow, retryAfterInMs, redirectTo } = modifiers;\n                    if (errorToThrow) {\n                        strategyLogger.error(`Retry ${retryCount}: Retry strategy ${strategy.name} throws error:`, errorToThrow);\n                        throw errorToThrow;\n                    }\n                    if (retryAfterInMs || retryAfterInMs === 0) {\n                        strategyLogger.info(`Retry ${retryCount}: Retry strategy ${strategy.name} retries after ${retryAfterInMs}`);\n                        await (0,_util_helpers_js__WEBPACK_IMPORTED_MODULE_0__.delay)(retryAfterInMs, undefined, { abortSignal: request.abortSignal });\n                        continue retryRequest;\n                    }\n                    if (redirectTo) {\n                        strategyLogger.info(`Retry ${retryCount}: Retry strategy ${strategy.name} redirects to ${redirectTo}`);\n                        request.url = redirectTo;\n                        continue retryRequest;\n                    }\n                }\n                if (responseError) {\n                    logger.info(`None of the retry strategies could work with the received error. Throwing it.`);\n                    throw responseError;\n                }\n                if (response) {\n                    logger.info(`None of the retry strategies could work with the received response. Returning it.`);\n                    return response;\n                }\n                // If all the retries skip and there's no response,\n                // we're still in the retry loop, so a new request will be sent\n                // until `maxRetries` is reached.\n            }\n        },\n    };\n}\n//# sourceMappingURL=retryPolicy.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/core-rest-pipeline/dist/esm/policies/retryPolicy.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/core-rest-pipeline/dist/esm/policies/setClientRequestIdPolicy.js":
/*!**********************************************************************************************!*\
  !*** ./node_modules/@azure/core-rest-pipeline/dist/esm/policies/setClientRequestIdPolicy.js ***!
  \**********************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   setClientRequestIdPolicy: () => (/* binding */ setClientRequestIdPolicy),\n/* harmony export */   setClientRequestIdPolicyName: () => (/* binding */ setClientRequestIdPolicyName)\n/* harmony export */ });\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n/**\n * The programmatic identifier of the setClientRequestIdPolicy.\n */\nconst setClientRequestIdPolicyName = \"setClientRequestIdPolicy\";\n/**\n * Each PipelineRequest gets a unique id upon creation.\n * This policy passes that unique id along via an HTTP header to enable better\n * telemetry and tracing.\n * @param requestIdHeaderName - The name of the header to pass the request ID to.\n */\nfunction setClientRequestIdPolicy(requestIdHeaderName = \"x-ms-client-request-id\") {\n    return {\n        name: setClientRequestIdPolicyName,\n        async sendRequest(request, next) {\n            if (!request.headers.has(requestIdHeaderName)) {\n                request.headers.set(requestIdHeaderName, request.requestId);\n            }\n            return next(request);\n        },\n    };\n}\n//# sourceMappingURL=setClientRequestIdPolicy.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2NvcmUtcmVzdC1waXBlbGluZS9kaXN0L2VzbS9wb2xpY2llcy9zZXRDbGllbnRSZXF1ZXN0SWRQb2xpY3kuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2RhbmllbDMtdnAyLy4vbm9kZV9tb2R1bGVzL0BhenVyZS9jb3JlLXJlc3QtcGlwZWxpbmUvZGlzdC9lc20vcG9saWNpZXMvc2V0Q2xpZW50UmVxdWVzdElkUG9saWN5LmpzPzMxZmIiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uXG4vLyBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UuXG4vKipcbiAqIFRoZSBwcm9ncmFtbWF0aWMgaWRlbnRpZmllciBvZiB0aGUgc2V0Q2xpZW50UmVxdWVzdElkUG9saWN5LlxuICovXG5leHBvcnQgY29uc3Qgc2V0Q2xpZW50UmVxdWVzdElkUG9saWN5TmFtZSA9IFwic2V0Q2xpZW50UmVxdWVzdElkUG9saWN5XCI7XG4vKipcbiAqIEVhY2ggUGlwZWxpbmVSZXF1ZXN0IGdldHMgYSB1bmlxdWUgaWQgdXBvbiBjcmVhdGlvbi5cbiAqIFRoaXMgcG9saWN5IHBhc3NlcyB0aGF0IHVuaXF1ZSBpZCBhbG9uZyB2aWEgYW4gSFRUUCBoZWFkZXIgdG8gZW5hYmxlIGJldHRlclxuICogdGVsZW1ldHJ5IGFuZCB0cmFjaW5nLlxuICogQHBhcmFtIHJlcXVlc3RJZEhlYWRlck5hbWUgLSBUaGUgbmFtZSBvZiB0aGUgaGVhZGVyIHRvIHBhc3MgdGhlIHJlcXVlc3QgSUQgdG8uXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBzZXRDbGllbnRSZXF1ZXN0SWRQb2xpY3kocmVxdWVzdElkSGVhZGVyTmFtZSA9IFwieC1tcy1jbGllbnQtcmVxdWVzdC1pZFwiKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgICAgbmFtZTogc2V0Q2xpZW50UmVxdWVzdElkUG9saWN5TmFtZSxcbiAgICAgICAgYXN5bmMgc2VuZFJlcXVlc3QocmVxdWVzdCwgbmV4dCkge1xuICAgICAgICAgICAgaWYgKCFyZXF1ZXN0LmhlYWRlcnMuaGFzKHJlcXVlc3RJZEhlYWRlck5hbWUpKSB7XG4gICAgICAgICAgICAgICAgcmVxdWVzdC5oZWFkZXJzLnNldChyZXF1ZXN0SWRIZWFkZXJOYW1lLCByZXF1ZXN0LnJlcXVlc3RJZCk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXR1cm4gbmV4dChyZXF1ZXN0KTtcbiAgICAgICAgfSxcbiAgICB9O1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9c2V0Q2xpZW50UmVxdWVzdElkUG9saWN5LmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/core-rest-pipeline/dist/esm/policies/setClientRequestIdPolicy.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/core-rest-pipeline/dist/esm/policies/systemErrorRetryPolicy.js":
/*!********************************************************************************************!*\
  !*** ./node_modules/@azure/core-rest-pipeline/dist/esm/policies/systemErrorRetryPolicy.js ***!
  \********************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   systemErrorRetryPolicy: () => (/* binding */ systemErrorRetryPolicy),\n/* harmony export */   systemErrorRetryPolicyName: () => (/* binding */ systemErrorRetryPolicyName)\n/* harmony export */ });\n/* harmony import */ var _retryStrategies_exponentialRetryStrategy_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../retryStrategies/exponentialRetryStrategy.js */ \"(rsc)/./node_modules/@azure/core-rest-pipeline/dist/esm/retryStrategies/exponentialRetryStrategy.js\");\n/* harmony import */ var _retryPolicy_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./retryPolicy.js */ \"(rsc)/./node_modules/@azure/core-rest-pipeline/dist/esm/policies/retryPolicy.js\");\n/* harmony import */ var _constants_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../constants.js */ \"(rsc)/./node_modules/@azure/core-rest-pipeline/dist/esm/constants.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\n\n\n/**\n * Name of the {@link systemErrorRetryPolicy}\n */\nconst systemErrorRetryPolicyName = \"systemErrorRetryPolicy\";\n/**\n * A retry policy that specifically seeks to handle errors in the\n * underlying transport layer (e.g. DNS lookup failures) rather than\n * retryable error codes from the server itself.\n * @param options - Options that customize the policy.\n */\nfunction systemErrorRetryPolicy(options = {}) {\n    var _a;\n    return {\n        name: systemErrorRetryPolicyName,\n        sendRequest: (0,_retryPolicy_js__WEBPACK_IMPORTED_MODULE_1__.retryPolicy)([\n            (0,_retryStrategies_exponentialRetryStrategy_js__WEBPACK_IMPORTED_MODULE_0__.exponentialRetryStrategy)(Object.assign(Object.assign({}, options), { ignoreHttpStatusCodes: true })),\n        ], {\n            maxRetries: (_a = options.maxRetries) !== null && _a !== void 0 ? _a : _constants_js__WEBPACK_IMPORTED_MODULE_2__.DEFAULT_RETRY_POLICY_COUNT,\n        }).sendRequest,\n    };\n}\n//# sourceMappingURL=systemErrorRetryPolicy.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2NvcmUtcmVzdC1waXBlbGluZS9kaXN0L2VzbS9wb2xpY2llcy9zeXN0ZW1FcnJvclJldHJ5UG9saWN5LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQUE7QUFDQTtBQUMwRjtBQUMzQztBQUNjO0FBQzdEO0FBQ0EsZ0JBQWdCO0FBQ2hCO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTyw0Q0FBNEM7QUFDbkQ7QUFDQTtBQUNBO0FBQ0EscUJBQXFCLDREQUFXO0FBQ2hDLFlBQVksc0dBQXdCLCtCQUErQixjQUFjLDZCQUE2QjtBQUM5RztBQUNBLG1GQUFtRixxRUFBMEI7QUFDN0csU0FBUztBQUNUO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2RhbmllbDMtdnAyLy4vbm9kZV9tb2R1bGVzL0BhenVyZS9jb3JlLXJlc3QtcGlwZWxpbmUvZGlzdC9lc20vcG9saWNpZXMvc3lzdGVtRXJyb3JSZXRyeVBvbGljeS5qcz9mN2QzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLlxuLy8gTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlLlxuaW1wb3J0IHsgZXhwb25lbnRpYWxSZXRyeVN0cmF0ZWd5IH0gZnJvbSBcIi4uL3JldHJ5U3RyYXRlZ2llcy9leHBvbmVudGlhbFJldHJ5U3RyYXRlZ3kuanNcIjtcbmltcG9ydCB7IHJldHJ5UG9saWN5IH0gZnJvbSBcIi4vcmV0cnlQb2xpY3kuanNcIjtcbmltcG9ydCB7IERFRkFVTFRfUkVUUllfUE9MSUNZX0NPVU5UIH0gZnJvbSBcIi4uL2NvbnN0YW50cy5qc1wiO1xuLyoqXG4gKiBOYW1lIG9mIHRoZSB7QGxpbmsgc3lzdGVtRXJyb3JSZXRyeVBvbGljeX1cbiAqL1xuZXhwb3J0IGNvbnN0IHN5c3RlbUVycm9yUmV0cnlQb2xpY3lOYW1lID0gXCJzeXN0ZW1FcnJvclJldHJ5UG9saWN5XCI7XG4vKipcbiAqIEEgcmV0cnkgcG9saWN5IHRoYXQgc3BlY2lmaWNhbGx5IHNlZWtzIHRvIGhhbmRsZSBlcnJvcnMgaW4gdGhlXG4gKiB1bmRlcmx5aW5nIHRyYW5zcG9ydCBsYXllciAoZS5nLiBETlMgbG9va3VwIGZhaWx1cmVzKSByYXRoZXIgdGhhblxuICogcmV0cnlhYmxlIGVycm9yIGNvZGVzIGZyb20gdGhlIHNlcnZlciBpdHNlbGYuXG4gKiBAcGFyYW0gb3B0aW9ucyAtIE9wdGlvbnMgdGhhdCBjdXN0b21pemUgdGhlIHBvbGljeS5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIHN5c3RlbUVycm9yUmV0cnlQb2xpY3kob3B0aW9ucyA9IHt9KSB7XG4gICAgdmFyIF9hO1xuICAgIHJldHVybiB7XG4gICAgICAgIG5hbWU6IHN5c3RlbUVycm9yUmV0cnlQb2xpY3lOYW1lLFxuICAgICAgICBzZW5kUmVxdWVzdDogcmV0cnlQb2xpY3koW1xuICAgICAgICAgICAgZXhwb25lbnRpYWxSZXRyeVN0cmF0ZWd5KE9iamVjdC5hc3NpZ24oT2JqZWN0LmFzc2lnbih7fSwgb3B0aW9ucyksIHsgaWdub3JlSHR0cFN0YXR1c0NvZGVzOiB0cnVlIH0pKSxcbiAgICAgICAgXSwge1xuICAgICAgICAgICAgbWF4UmV0cmllczogKF9hID0gb3B0aW9ucy5tYXhSZXRyaWVzKSAhPT0gbnVsbCAmJiBfYSAhPT0gdm9pZCAwID8gX2EgOiBERUZBVUxUX1JFVFJZX1BPTElDWV9DT1VOVCxcbiAgICAgICAgfSkuc2VuZFJlcXVlc3QsXG4gICAgfTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXN5c3RlbUVycm9yUmV0cnlQb2xpY3kuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/core-rest-pipeline/dist/esm/policies/systemErrorRetryPolicy.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/core-rest-pipeline/dist/esm/policies/throttlingRetryPolicy.js":
/*!*******************************************************************************************!*\
  !*** ./node_modules/@azure/core-rest-pipeline/dist/esm/policies/throttlingRetryPolicy.js ***!
  \*******************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   throttlingRetryPolicy: () => (/* binding */ throttlingRetryPolicy),\n/* harmony export */   throttlingRetryPolicyName: () => (/* binding */ throttlingRetryPolicyName)\n/* harmony export */ });\n/* harmony import */ var _retryStrategies_throttlingRetryStrategy_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../retryStrategies/throttlingRetryStrategy.js */ \"(rsc)/./node_modules/@azure/core-rest-pipeline/dist/esm/retryStrategies/throttlingRetryStrategy.js\");\n/* harmony import */ var _retryPolicy_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./retryPolicy.js */ \"(rsc)/./node_modules/@azure/core-rest-pipeline/dist/esm/policies/retryPolicy.js\");\n/* harmony import */ var _constants_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../constants.js */ \"(rsc)/./node_modules/@azure/core-rest-pipeline/dist/esm/constants.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\n\n\n/**\n * Name of the {@link throttlingRetryPolicy}\n */\nconst throttlingRetryPolicyName = \"throttlingRetryPolicy\";\n/**\n * A policy that retries when the server sends a 429 response with a Retry-After header.\n *\n * To learn more, please refer to\n * https://docs.microsoft.com/en-us/azure/azure-resource-manager/resource-manager-request-limits,\n * https://docs.microsoft.com/en-us/azure/azure-subscription-service-limits and\n * https://docs.microsoft.com/en-us/azure/virtual-machines/troubleshooting/troubleshooting-throttling-errors\n *\n * @param options - Options that configure retry logic.\n */\nfunction throttlingRetryPolicy(options = {}) {\n    var _a;\n    return {\n        name: throttlingRetryPolicyName,\n        sendRequest: (0,_retryPolicy_js__WEBPACK_IMPORTED_MODULE_1__.retryPolicy)([(0,_retryStrategies_throttlingRetryStrategy_js__WEBPACK_IMPORTED_MODULE_0__.throttlingRetryStrategy)()], {\n            maxRetries: (_a = options.maxRetries) !== null && _a !== void 0 ? _a : _constants_js__WEBPACK_IMPORTED_MODULE_2__.DEFAULT_RETRY_POLICY_COUNT,\n        }).sendRequest,\n    };\n}\n//# sourceMappingURL=throttlingRetryPolicy.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2NvcmUtcmVzdC1waXBlbGluZS9kaXN0L2VzbS9wb2xpY2llcy90aHJvdHRsaW5nUmV0cnlQb2xpY3kuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBQTtBQUNBO0FBQ3dGO0FBQ3pDO0FBQ2M7QUFDN0Q7QUFDQSxnQkFBZ0I7QUFDaEI7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ08sMkNBQTJDO0FBQ2xEO0FBQ0E7QUFDQTtBQUNBLHFCQUFxQiw0REFBVyxFQUFFLG9HQUF1QjtBQUN6RCxtRkFBbUYscUVBQTBCO0FBQzdHLFNBQVM7QUFDVDtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9kYW5pZWwzLXZwMi8uL25vZGVfbW9kdWxlcy9AYXp1cmUvY29yZS1yZXN0LXBpcGVsaW5lL2Rpc3QvZXNtL3BvbGljaWVzL3Rocm90dGxpbmdSZXRyeVBvbGljeS5qcz9iNTE3Il0sInNvdXJjZXNDb250ZW50IjpbIi8vIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLlxuLy8gTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlLlxuaW1wb3J0IHsgdGhyb3R0bGluZ1JldHJ5U3RyYXRlZ3kgfSBmcm9tIFwiLi4vcmV0cnlTdHJhdGVnaWVzL3Rocm90dGxpbmdSZXRyeVN0cmF0ZWd5LmpzXCI7XG5pbXBvcnQgeyByZXRyeVBvbGljeSB9IGZyb20gXCIuL3JldHJ5UG9saWN5LmpzXCI7XG5pbXBvcnQgeyBERUZBVUxUX1JFVFJZX1BPTElDWV9DT1VOVCB9IGZyb20gXCIuLi9jb25zdGFudHMuanNcIjtcbi8qKlxuICogTmFtZSBvZiB0aGUge0BsaW5rIHRocm90dGxpbmdSZXRyeVBvbGljeX1cbiAqL1xuZXhwb3J0IGNvbnN0IHRocm90dGxpbmdSZXRyeVBvbGljeU5hbWUgPSBcInRocm90dGxpbmdSZXRyeVBvbGljeVwiO1xuLyoqXG4gKiBBIHBvbGljeSB0aGF0IHJldHJpZXMgd2hlbiB0aGUgc2VydmVyIHNlbmRzIGEgNDI5IHJlc3BvbnNlIHdpdGggYSBSZXRyeS1BZnRlciBoZWFkZXIuXG4gKlxuICogVG8gbGVhcm4gbW9yZSwgcGxlYXNlIHJlZmVyIHRvXG4gKiBodHRwczovL2RvY3MubWljcm9zb2Z0LmNvbS9lbi11cy9henVyZS9henVyZS1yZXNvdXJjZS1tYW5hZ2VyL3Jlc291cmNlLW1hbmFnZXItcmVxdWVzdC1saW1pdHMsXG4gKiBodHRwczovL2RvY3MubWljcm9zb2Z0LmNvbS9lbi11cy9henVyZS9henVyZS1zdWJzY3JpcHRpb24tc2VydmljZS1saW1pdHMgYW5kXG4gKiBodHRwczovL2RvY3MubWljcm9zb2Z0LmNvbS9lbi11cy9henVyZS92aXJ0dWFsLW1hY2hpbmVzL3Ryb3VibGVzaG9vdGluZy90cm91Ymxlc2hvb3RpbmctdGhyb3R0bGluZy1lcnJvcnNcbiAqXG4gKiBAcGFyYW0gb3B0aW9ucyAtIE9wdGlvbnMgdGhhdCBjb25maWd1cmUgcmV0cnkgbG9naWMuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiB0aHJvdHRsaW5nUmV0cnlQb2xpY3kob3B0aW9ucyA9IHt9KSB7XG4gICAgdmFyIF9hO1xuICAgIHJldHVybiB7XG4gICAgICAgIG5hbWU6IHRocm90dGxpbmdSZXRyeVBvbGljeU5hbWUsXG4gICAgICAgIHNlbmRSZXF1ZXN0OiByZXRyeVBvbGljeShbdGhyb3R0bGluZ1JldHJ5U3RyYXRlZ3koKV0sIHtcbiAgICAgICAgICAgIG1heFJldHJpZXM6IChfYSA9IG9wdGlvbnMubWF4UmV0cmllcykgIT09IG51bGwgJiYgX2EgIT09IHZvaWQgMCA/IF9hIDogREVGQVVMVF9SRVRSWV9QT0xJQ1lfQ09VTlQsXG4gICAgICAgIH0pLnNlbmRSZXF1ZXN0LFxuICAgIH07XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD10aHJvdHRsaW5nUmV0cnlQb2xpY3kuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/core-rest-pipeline/dist/esm/policies/throttlingRetryPolicy.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/core-rest-pipeline/dist/esm/policies/tlsPolicy.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/@azure/core-rest-pipeline/dist/esm/policies/tlsPolicy.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   tlsPolicy: () => (/* binding */ tlsPolicy),\n/* harmony export */   tlsPolicyName: () => (/* binding */ tlsPolicyName)\n/* harmony export */ });\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n/**\n * Name of the TLS Policy\n */\nconst tlsPolicyName = \"tlsPolicy\";\n/**\n * Gets a pipeline policy that adds the client certificate to the HttpClient agent for authentication.\n */\nfunction tlsPolicy(tlsSettings) {\n    return {\n        name: tlsPolicyName,\n        sendRequest: async (req, next) => {\n            // Users may define a request tlsSettings, honor those over the client level one\n            if (!req.tlsSettings) {\n                req.tlsSettings = tlsSettings;\n            }\n            return next(req);\n        },\n    };\n}\n//# sourceMappingURL=tlsPolicy.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2NvcmUtcmVzdC1waXBlbGluZS9kaXN0L2VzbS9wb2xpY2llcy90bHNQb2xpY3kuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZGFuaWVsMy12cDIvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2NvcmUtcmVzdC1waXBlbGluZS9kaXN0L2VzbS9wb2xpY2llcy90bHNQb2xpY3kuanM/MzIxMCJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi5cbi8vIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZS5cbi8qKlxuICogTmFtZSBvZiB0aGUgVExTIFBvbGljeVxuICovXG5leHBvcnQgY29uc3QgdGxzUG9saWN5TmFtZSA9IFwidGxzUG9saWN5XCI7XG4vKipcbiAqIEdldHMgYSBwaXBlbGluZSBwb2xpY3kgdGhhdCBhZGRzIHRoZSBjbGllbnQgY2VydGlmaWNhdGUgdG8gdGhlIEh0dHBDbGllbnQgYWdlbnQgZm9yIGF1dGhlbnRpY2F0aW9uLlxuICovXG5leHBvcnQgZnVuY3Rpb24gdGxzUG9saWN5KHRsc1NldHRpbmdzKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgICAgbmFtZTogdGxzUG9saWN5TmFtZSxcbiAgICAgICAgc2VuZFJlcXVlc3Q6IGFzeW5jIChyZXEsIG5leHQpID0+IHtcbiAgICAgICAgICAgIC8vIFVzZXJzIG1heSBkZWZpbmUgYSByZXF1ZXN0IHRsc1NldHRpbmdzLCBob25vciB0aG9zZSBvdmVyIHRoZSBjbGllbnQgbGV2ZWwgb25lXG4gICAgICAgICAgICBpZiAoIXJlcS50bHNTZXR0aW5ncykge1xuICAgICAgICAgICAgICAgIHJlcS50bHNTZXR0aW5ncyA9IHRsc1NldHRpbmdzO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcmV0dXJuIG5leHQocmVxKTtcbiAgICAgICAgfSxcbiAgICB9O1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9dGxzUG9saWN5LmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/core-rest-pipeline/dist/esm/policies/tlsPolicy.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/core-rest-pipeline/dist/esm/policies/tracingPolicy.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/@azure/core-rest-pipeline/dist/esm/policies/tracingPolicy.js ***!
  \***********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   tracingPolicy: () => (/* binding */ tracingPolicy),\n/* harmony export */   tracingPolicyName: () => (/* binding */ tracingPolicyName)\n/* harmony export */ });\n/* harmony import */ var _azure_core_tracing__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @azure/core-tracing */ \"(rsc)/./node_modules/@azure/core-tracing/dist/esm/index.js\");\n/* harmony import */ var _constants_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../constants.js */ \"(rsc)/./node_modules/@azure/core-rest-pipeline/dist/esm/constants.js\");\n/* harmony import */ var _util_userAgent_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../util/userAgent.js */ \"(rsc)/./node_modules/@azure/core-rest-pipeline/dist/esm/util/userAgent.js\");\n/* harmony import */ var _log_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../log.js */ \"(rsc)/./node_modules/@azure/core-rest-pipeline/dist/esm/log.js\");\n/* harmony import */ var _azure_core_util__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @azure/core-util */ \"(rsc)/./node_modules/@azure/core-util/dist/esm/index.js\");\n/* harmony import */ var _restError_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../restError.js */ \"(rsc)/./node_modules/@azure/core-rest-pipeline/dist/esm/restError.js\");\n/* harmony import */ var _util_sanitizer_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../util/sanitizer.js */ \"(rsc)/./node_modules/@azure/core-rest-pipeline/dist/esm/util/sanitizer.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\n\n\n\n\n\n\n/**\n * The programmatic identifier of the tracingPolicy.\n */\nconst tracingPolicyName = \"tracingPolicy\";\n/**\n * A simple policy to create OpenTelemetry Spans for each request made by the pipeline\n * that has SpanOptions with a parent.\n * Requests made without a parent Span will not be recorded.\n * @param options - Options to configure the telemetry logged by the tracing policy.\n */\nfunction tracingPolicy(options = {}) {\n    const userAgentPromise = (0,_util_userAgent_js__WEBPACK_IMPORTED_MODULE_2__.getUserAgentValue)(options.userAgentPrefix);\n    const sanitizer = new _util_sanitizer_js__WEBPACK_IMPORTED_MODULE_6__.Sanitizer({\n        additionalAllowedQueryParameters: options.additionalAllowedQueryParameters,\n    });\n    const tracingClient = tryCreateTracingClient();\n    return {\n        name: tracingPolicyName,\n        async sendRequest(request, next) {\n            var _a, _b;\n            if (!tracingClient || !((_a = request.tracingOptions) === null || _a === void 0 ? void 0 : _a.tracingContext)) {\n                return next(request);\n            }\n            const userAgent = await userAgentPromise;\n            const spanAttributes = {\n                \"http.url\": sanitizer.sanitizeUrl(request.url),\n                \"http.method\": request.method,\n                \"http.user_agent\": userAgent,\n                requestId: request.requestId,\n            };\n            if (userAgent) {\n                spanAttributes[\"http.user_agent\"] = userAgent;\n            }\n            const { span, tracingContext } = (_b = tryCreateSpan(tracingClient, request, spanAttributes)) !== null && _b !== void 0 ? _b : {};\n            if (!span || !tracingContext) {\n                return next(request);\n            }\n            try {\n                const response = await tracingClient.withContext(tracingContext, next, request);\n                tryProcessResponse(span, response);\n                return response;\n            }\n            catch (err) {\n                tryProcessError(span, err);\n                throw err;\n            }\n        },\n    };\n}\nfunction tryCreateTracingClient() {\n    try {\n        return (0,_azure_core_tracing__WEBPACK_IMPORTED_MODULE_0__.createTracingClient)({\n            namespace: \"\",\n            packageName: \"@azure/core-rest-pipeline\",\n            packageVersion: _constants_js__WEBPACK_IMPORTED_MODULE_1__.SDK_VERSION,\n        });\n    }\n    catch (e) {\n        _log_js__WEBPACK_IMPORTED_MODULE_3__.logger.warning(`Error when creating the TracingClient: ${(0,_azure_core_util__WEBPACK_IMPORTED_MODULE_4__.getErrorMessage)(e)}`);\n        return undefined;\n    }\n}\nfunction tryCreateSpan(tracingClient, request, spanAttributes) {\n    try {\n        // As per spec, we do not need to differentiate between HTTP and HTTPS in span name.\n        const { span, updatedOptions } = tracingClient.startSpan(`HTTP ${request.method}`, { tracingOptions: request.tracingOptions }, {\n            spanKind: \"client\",\n            spanAttributes,\n        });\n        // If the span is not recording, don't do any more work.\n        if (!span.isRecording()) {\n            span.end();\n            return undefined;\n        }\n        // set headers\n        const headers = tracingClient.createRequestHeaders(updatedOptions.tracingOptions.tracingContext);\n        for (const [key, value] of Object.entries(headers)) {\n            request.headers.set(key, value);\n        }\n        return { span, tracingContext: updatedOptions.tracingOptions.tracingContext };\n    }\n    catch (e) {\n        _log_js__WEBPACK_IMPORTED_MODULE_3__.logger.warning(`Skipping creating a tracing span due to an error: ${(0,_azure_core_util__WEBPACK_IMPORTED_MODULE_4__.getErrorMessage)(e)}`);\n        return undefined;\n    }\n}\nfunction tryProcessError(span, error) {\n    try {\n        span.setStatus({\n            status: \"error\",\n            error: (0,_azure_core_util__WEBPACK_IMPORTED_MODULE_4__.isError)(error) ? error : undefined,\n        });\n        if ((0,_restError_js__WEBPACK_IMPORTED_MODULE_5__.isRestError)(error) && error.statusCode) {\n            span.setAttribute(\"http.status_code\", error.statusCode);\n        }\n        span.end();\n    }\n    catch (e) {\n        _log_js__WEBPACK_IMPORTED_MODULE_3__.logger.warning(`Skipping tracing span processing due to an error: ${(0,_azure_core_util__WEBPACK_IMPORTED_MODULE_4__.getErrorMessage)(e)}`);\n    }\n}\nfunction tryProcessResponse(span, response) {\n    try {\n        span.setAttribute(\"http.status_code\", response.status);\n        const serviceRequestId = response.headers.get(\"x-ms-request-id\");\n        if (serviceRequestId) {\n            span.setAttribute(\"serviceRequestId\", serviceRequestId);\n        }\n        span.setStatus({\n            status: \"success\",\n        });\n        span.end();\n    }\n    catch (e) {\n        _log_js__WEBPACK_IMPORTED_MODULE_3__.logger.warning(`Skipping tracing span processing due to an error: ${(0,_azure_core_util__WEBPACK_IMPORTED_MODULE_4__.getErrorMessage)(e)}`);\n    }\n}\n//# sourceMappingURL=tracingPolicy.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/core-rest-pipeline/dist/esm/policies/tracingPolicy.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/core-rest-pipeline/dist/esm/policies/userAgentPolicy.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/@azure/core-rest-pipeline/dist/esm/policies/userAgentPolicy.js ***!
  \*************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   userAgentPolicy: () => (/* binding */ userAgentPolicy),\n/* harmony export */   userAgentPolicyName: () => (/* binding */ userAgentPolicyName)\n/* harmony export */ });\n/* harmony import */ var _util_userAgent_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../util/userAgent.js */ \"(rsc)/./node_modules/@azure/core-rest-pipeline/dist/esm/util/userAgent.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nconst UserAgentHeaderName = (0,_util_userAgent_js__WEBPACK_IMPORTED_MODULE_0__.getUserAgentHeaderName)();\n/**\n * The programmatic identifier of the userAgentPolicy.\n */\nconst userAgentPolicyName = \"userAgentPolicy\";\n/**\n * A policy that sets the User-Agent header (or equivalent) to reflect\n * the library version.\n * @param options - Options to customize the user agent value.\n */\nfunction userAgentPolicy(options = {}) {\n    const userAgentValue = (0,_util_userAgent_js__WEBPACK_IMPORTED_MODULE_0__.getUserAgentValue)(options.userAgentPrefix);\n    return {\n        name: userAgentPolicyName,\n        async sendRequest(request, next) {\n            if (!request.headers.has(UserAgentHeaderName)) {\n                request.headers.set(UserAgentHeaderName, await userAgentValue);\n            }\n            return next(request);\n        },\n    };\n}\n//# sourceMappingURL=userAgentPolicy.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2NvcmUtcmVzdC1waXBlbGluZS9kaXN0L2VzbS9wb2xpY2llcy91c2VyQWdlbnRQb2xpY3kuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUE7QUFDQTtBQUNpRjtBQUNqRiw0QkFBNEIsMEVBQXNCO0FBQ2xEO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPLHFDQUFxQztBQUM1QywyQkFBMkIscUVBQWlCO0FBQzVDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2RhbmllbDMtdnAyLy4vbm9kZV9tb2R1bGVzL0BhenVyZS9jb3JlLXJlc3QtcGlwZWxpbmUvZGlzdC9lc20vcG9saWNpZXMvdXNlckFnZW50UG9saWN5LmpzPzU2NmYiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uXG4vLyBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UuXG5pbXBvcnQgeyBnZXRVc2VyQWdlbnRIZWFkZXJOYW1lLCBnZXRVc2VyQWdlbnRWYWx1ZSB9IGZyb20gXCIuLi91dGlsL3VzZXJBZ2VudC5qc1wiO1xuY29uc3QgVXNlckFnZW50SGVhZGVyTmFtZSA9IGdldFVzZXJBZ2VudEhlYWRlck5hbWUoKTtcbi8qKlxuICogVGhlIHByb2dyYW1tYXRpYyBpZGVudGlmaWVyIG9mIHRoZSB1c2VyQWdlbnRQb2xpY3kuXG4gKi9cbmV4cG9ydCBjb25zdCB1c2VyQWdlbnRQb2xpY3lOYW1lID0gXCJ1c2VyQWdlbnRQb2xpY3lcIjtcbi8qKlxuICogQSBwb2xpY3kgdGhhdCBzZXRzIHRoZSBVc2VyLUFnZW50IGhlYWRlciAob3IgZXF1aXZhbGVudCkgdG8gcmVmbGVjdFxuICogdGhlIGxpYnJhcnkgdmVyc2lvbi5cbiAqIEBwYXJhbSBvcHRpb25zIC0gT3B0aW9ucyB0byBjdXN0b21pemUgdGhlIHVzZXIgYWdlbnQgdmFsdWUuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiB1c2VyQWdlbnRQb2xpY3kob3B0aW9ucyA9IHt9KSB7XG4gICAgY29uc3QgdXNlckFnZW50VmFsdWUgPSBnZXRVc2VyQWdlbnRWYWx1ZShvcHRpb25zLnVzZXJBZ2VudFByZWZpeCk7XG4gICAgcmV0dXJuIHtcbiAgICAgICAgbmFtZTogdXNlckFnZW50UG9saWN5TmFtZSxcbiAgICAgICAgYXN5bmMgc2VuZFJlcXVlc3QocmVxdWVzdCwgbmV4dCkge1xuICAgICAgICAgICAgaWYgKCFyZXF1ZXN0LmhlYWRlcnMuaGFzKFVzZXJBZ2VudEhlYWRlck5hbWUpKSB7XG4gICAgICAgICAgICAgICAgcmVxdWVzdC5oZWFkZXJzLnNldChVc2VyQWdlbnRIZWFkZXJOYW1lLCBhd2FpdCB1c2VyQWdlbnRWYWx1ZSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXR1cm4gbmV4dChyZXF1ZXN0KTtcbiAgICAgICAgfSxcbiAgICB9O1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9dXNlckFnZW50UG9saWN5LmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/core-rest-pipeline/dist/esm/policies/userAgentPolicy.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/core-rest-pipeline/dist/esm/restError.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@azure/core-rest-pipeline/dist/esm/restError.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   RestError: () => (/* binding */ RestError),\n/* harmony export */   isRestError: () => (/* binding */ isRestError)\n/* harmony export */ });\n/* harmony import */ var _azure_core_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @azure/core-util */ \"(rsc)/./node_modules/@azure/core-util/dist/esm/index.js\");\n/* harmony import */ var _util_inspect_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./util/inspect.js */ \"(rsc)/./node_modules/@azure/core-rest-pipeline/dist/esm/util/inspect.js\");\n/* harmony import */ var _util_sanitizer_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./util/sanitizer.js */ \"(rsc)/./node_modules/@azure/core-rest-pipeline/dist/esm/util/sanitizer.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\n\n\nconst errorSanitizer = new _util_sanitizer_js__WEBPACK_IMPORTED_MODULE_2__.Sanitizer();\n/**\n * A custom error type for failed pipeline requests.\n */\nclass RestError extends Error {\n    constructor(message, options = {}) {\n        super(message);\n        this.name = \"RestError\";\n        this.code = options.code;\n        this.statusCode = options.statusCode;\n        this.request = options.request;\n        this.response = options.response;\n        Object.setPrototypeOf(this, RestError.prototype);\n    }\n    /**\n     * Logging method for util.inspect in Node\n     */\n    [_util_inspect_js__WEBPACK_IMPORTED_MODULE_1__.custom]() {\n        return `RestError: ${this.message} \\n ${errorSanitizer.sanitize(this)}`;\n    }\n}\n/**\n * Something went wrong when making the request.\n * This means the actual request failed for some reason,\n * such as a DNS issue or the connection being lost.\n */\nRestError.REQUEST_SEND_ERROR = \"REQUEST_SEND_ERROR\";\n/**\n * This means that parsing the response from the server failed.\n * It may have been malformed.\n */\nRestError.PARSE_ERROR = \"PARSE_ERROR\";\n/**\n * Typeguard for RestError\n * @param e - Something caught by a catch clause.\n */\nfunction isRestError(e) {\n    if (e instanceof RestError) {\n        return true;\n    }\n    return (0,_azure_core_util__WEBPACK_IMPORTED_MODULE_0__.isError)(e) && e.name === \"RestError\";\n}\n//# sourceMappingURL=restError.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2NvcmUtcmVzdC1waXBlbGluZS9kaXN0L2VzbS9yZXN0RXJyb3IuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBQTtBQUNBO0FBQzJDO0FBQ0E7QUFDSztBQUNoRCwyQkFBMkIseURBQVM7QUFDcEM7QUFDQTtBQUNBO0FBQ087QUFDUCxxQ0FBcUM7QUFDckM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUssb0RBQU07QUFDWCw2QkFBNkIsY0FBYyxLQUFLLDhCQUE4QjtBQUM5RTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQSxXQUFXLHlEQUFPO0FBQ2xCO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9kYW5pZWwzLXZwMi8uL25vZGVfbW9kdWxlcy9AYXp1cmUvY29yZS1yZXN0LXBpcGVsaW5lL2Rpc3QvZXNtL3Jlc3RFcnJvci5qcz83MDBmIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLlxuLy8gTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlLlxuaW1wb3J0IHsgaXNFcnJvciB9IGZyb20gXCJAYXp1cmUvY29yZS11dGlsXCI7XG5pbXBvcnQgeyBjdXN0b20gfSBmcm9tIFwiLi91dGlsL2luc3BlY3QuanNcIjtcbmltcG9ydCB7IFNhbml0aXplciB9IGZyb20gXCIuL3V0aWwvc2FuaXRpemVyLmpzXCI7XG5jb25zdCBlcnJvclNhbml0aXplciA9IG5ldyBTYW5pdGl6ZXIoKTtcbi8qKlxuICogQSBjdXN0b20gZXJyb3IgdHlwZSBmb3IgZmFpbGVkIHBpcGVsaW5lIHJlcXVlc3RzLlxuICovXG5leHBvcnQgY2xhc3MgUmVzdEVycm9yIGV4dGVuZHMgRXJyb3Ige1xuICAgIGNvbnN0cnVjdG9yKG1lc3NhZ2UsIG9wdGlvbnMgPSB7fSkge1xuICAgICAgICBzdXBlcihtZXNzYWdlKTtcbiAgICAgICAgdGhpcy5uYW1lID0gXCJSZXN0RXJyb3JcIjtcbiAgICAgICAgdGhpcy5jb2RlID0gb3B0aW9ucy5jb2RlO1xuICAgICAgICB0aGlzLnN0YXR1c0NvZGUgPSBvcHRpb25zLnN0YXR1c0NvZGU7XG4gICAgICAgIHRoaXMucmVxdWVzdCA9IG9wdGlvbnMucmVxdWVzdDtcbiAgICAgICAgdGhpcy5yZXNwb25zZSA9IG9wdGlvbnMucmVzcG9uc2U7XG4gICAgICAgIE9iamVjdC5zZXRQcm90b3R5cGVPZih0aGlzLCBSZXN0RXJyb3IucHJvdG90eXBlKTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogTG9nZ2luZyBtZXRob2QgZm9yIHV0aWwuaW5zcGVjdCBpbiBOb2RlXG4gICAgICovXG4gICAgW2N1c3RvbV0oKSB7XG4gICAgICAgIHJldHVybiBgUmVzdEVycm9yOiAke3RoaXMubWVzc2FnZX0gXFxuICR7ZXJyb3JTYW5pdGl6ZXIuc2FuaXRpemUodGhpcyl9YDtcbiAgICB9XG59XG4vKipcbiAqIFNvbWV0aGluZyB3ZW50IHdyb25nIHdoZW4gbWFraW5nIHRoZSByZXF1ZXN0LlxuICogVGhpcyBtZWFucyB0aGUgYWN0dWFsIHJlcXVlc3QgZmFpbGVkIGZvciBzb21lIHJlYXNvbixcbiAqIHN1Y2ggYXMgYSBETlMgaXNzdWUgb3IgdGhlIGNvbm5lY3Rpb24gYmVpbmcgbG9zdC5cbiAqL1xuUmVzdEVycm9yLlJFUVVFU1RfU0VORF9FUlJPUiA9IFwiUkVRVUVTVF9TRU5EX0VSUk9SXCI7XG4vKipcbiAqIFRoaXMgbWVhbnMgdGhhdCBwYXJzaW5nIHRoZSByZXNwb25zZSBmcm9tIHRoZSBzZXJ2ZXIgZmFpbGVkLlxuICogSXQgbWF5IGhhdmUgYmVlbiBtYWxmb3JtZWQuXG4gKi9cblJlc3RFcnJvci5QQVJTRV9FUlJPUiA9IFwiUEFSU0VfRVJST1JcIjtcbi8qKlxuICogVHlwZWd1YXJkIGZvciBSZXN0RXJyb3JcbiAqIEBwYXJhbSBlIC0gU29tZXRoaW5nIGNhdWdodCBieSBhIGNhdGNoIGNsYXVzZS5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGlzUmVzdEVycm9yKGUpIHtcbiAgICBpZiAoZSBpbnN0YW5jZW9mIFJlc3RFcnJvcikge1xuICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICB9XG4gICAgcmV0dXJuIGlzRXJyb3IoZSkgJiYgZS5uYW1lID09PSBcIlJlc3RFcnJvclwiO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9cmVzdEVycm9yLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/core-rest-pipeline/dist/esm/restError.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/core-rest-pipeline/dist/esm/retryStrategies/exponentialRetryStrategy.js":
/*!*****************************************************************************************************!*\
  !*** ./node_modules/@azure/core-rest-pipeline/dist/esm/retryStrategies/exponentialRetryStrategy.js ***!
  \*****************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   exponentialRetryStrategy: () => (/* binding */ exponentialRetryStrategy),\n/* harmony export */   isExponentialRetryResponse: () => (/* binding */ isExponentialRetryResponse),\n/* harmony export */   isSystemError: () => (/* binding */ isSystemError)\n/* harmony export */ });\n/* harmony import */ var _azure_core_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @azure/core-util */ \"(rsc)/./node_modules/@azure/core-util/dist/esm/index.js\");\n/* harmony import */ var _throttlingRetryStrategy_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./throttlingRetryStrategy.js */ \"(rsc)/./node_modules/@azure/core-rest-pipeline/dist/esm/retryStrategies/throttlingRetryStrategy.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\n\n// intervals are in milliseconds\nconst DEFAULT_CLIENT_RETRY_INTERVAL = 1000;\nconst DEFAULT_CLIENT_MAX_RETRY_INTERVAL = 1000 * 64;\n/**\n * A retry strategy that retries with an exponentially increasing delay in these two cases:\n * - When there are errors in the underlying transport layer (e.g. DNS lookup failures).\n * - Or otherwise if the outgoing request fails (408, greater or equal than 500, except for 501 and 505).\n */\nfunction exponentialRetryStrategy(options = {}) {\n    var _a, _b;\n    const retryInterval = (_a = options.retryDelayInMs) !== null && _a !== void 0 ? _a : DEFAULT_CLIENT_RETRY_INTERVAL;\n    const maxRetryInterval = (_b = options.maxRetryDelayInMs) !== null && _b !== void 0 ? _b : DEFAULT_CLIENT_MAX_RETRY_INTERVAL;\n    let retryAfterInMs = retryInterval;\n    return {\n        name: \"exponentialRetryStrategy\",\n        retry({ retryCount, response, responseError }) {\n            const matchedSystemError = isSystemError(responseError);\n            const ignoreSystemErrors = matchedSystemError && options.ignoreSystemErrors;\n            const isExponential = isExponentialRetryResponse(response);\n            const ignoreExponentialResponse = isExponential && options.ignoreHttpStatusCodes;\n            const unknownResponse = response && ((0,_throttlingRetryStrategy_js__WEBPACK_IMPORTED_MODULE_1__.isThrottlingRetryResponse)(response) || !isExponential);\n            if (unknownResponse || ignoreExponentialResponse || ignoreSystemErrors) {\n                return { skipStrategy: true };\n            }\n            if (responseError && !matchedSystemError && !isExponential) {\n                return { errorToThrow: responseError };\n            }\n            // Exponentially increase the delay each time\n            const exponentialDelay = retryAfterInMs * Math.pow(2, retryCount);\n            // Don't let the delay exceed the maximum\n            const clampedExponentialDelay = Math.min(maxRetryInterval, exponentialDelay);\n            // Allow the final value to have some \"jitter\" (within 50% of the delay size) so\n            // that retries across multiple clients don't occur simultaneously.\n            retryAfterInMs =\n                clampedExponentialDelay / 2 + (0,_azure_core_util__WEBPACK_IMPORTED_MODULE_0__.getRandomIntegerInclusive)(0, clampedExponentialDelay / 2);\n            return { retryAfterInMs };\n        },\n    };\n}\n/**\n * A response is a retry response if it has status codes:\n * - 408, or\n * - Greater or equal than 500, except for 501 and 505.\n */\nfunction isExponentialRetryResponse(response) {\n    return Boolean(response &&\n        response.status !== undefined &&\n        (response.status >= 500 || response.status === 408) &&\n        response.status !== 501 &&\n        response.status !== 505);\n}\n/**\n * Determines whether an error from a pipeline response was triggered in the network layer.\n */\nfunction isSystemError(err) {\n    if (!err) {\n        return false;\n    }\n    return (err.code === \"ETIMEDOUT\" ||\n        err.code === \"ESOCKETTIMEDOUT\" ||\n        err.code === \"ECONNREFUSED\" ||\n        err.code === \"ECONNRESET\" ||\n        err.code === \"ENOENT\" ||\n        err.code === \"ENOTFOUND\");\n}\n//# sourceMappingURL=exponentialRetryStrategy.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2NvcmUtcmVzdC1waXBlbGluZS9kaXN0L2VzbS9yZXRyeVN0cmF0ZWdpZXMvZXhwb25lbnRpYWxSZXRyeVN0cmF0ZWd5LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQUE7QUFDQTtBQUM2RDtBQUNZO0FBQ3pFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTyw4Q0FBOEM7QUFDckQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0JBQWdCLHFDQUFxQztBQUNyRDtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlEQUFpRCxzRkFBeUI7QUFDMUU7QUFDQSx5QkFBeUI7QUFDekI7QUFDQTtBQUNBLHlCQUF5QjtBQUN6QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsOENBQThDLDJFQUF5QjtBQUN2RSxxQkFBcUI7QUFDckIsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9kYW5pZWwzLXZwMi8uL25vZGVfbW9kdWxlcy9AYXp1cmUvY29yZS1yZXN0LXBpcGVsaW5lL2Rpc3QvZXNtL3JldHJ5U3RyYXRlZ2llcy9leHBvbmVudGlhbFJldHJ5U3RyYXRlZ3kuanM/YWQxOCJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi5cbi8vIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZS5cbmltcG9ydCB7IGdldFJhbmRvbUludGVnZXJJbmNsdXNpdmUgfSBmcm9tIFwiQGF6dXJlL2NvcmUtdXRpbFwiO1xuaW1wb3J0IHsgaXNUaHJvdHRsaW5nUmV0cnlSZXNwb25zZSB9IGZyb20gXCIuL3Rocm90dGxpbmdSZXRyeVN0cmF0ZWd5LmpzXCI7XG4vLyBpbnRlcnZhbHMgYXJlIGluIG1pbGxpc2Vjb25kc1xuY29uc3QgREVGQVVMVF9DTElFTlRfUkVUUllfSU5URVJWQUwgPSAxMDAwO1xuY29uc3QgREVGQVVMVF9DTElFTlRfTUFYX1JFVFJZX0lOVEVSVkFMID0gMTAwMCAqIDY0O1xuLyoqXG4gKiBBIHJldHJ5IHN0cmF0ZWd5IHRoYXQgcmV0cmllcyB3aXRoIGFuIGV4cG9uZW50aWFsbHkgaW5jcmVhc2luZyBkZWxheSBpbiB0aGVzZSB0d28gY2FzZXM6XG4gKiAtIFdoZW4gdGhlcmUgYXJlIGVycm9ycyBpbiB0aGUgdW5kZXJseWluZyB0cmFuc3BvcnQgbGF5ZXIgKGUuZy4gRE5TIGxvb2t1cCBmYWlsdXJlcykuXG4gKiAtIE9yIG90aGVyd2lzZSBpZiB0aGUgb3V0Z29pbmcgcmVxdWVzdCBmYWlscyAoNDA4LCBncmVhdGVyIG9yIGVxdWFsIHRoYW4gNTAwLCBleGNlcHQgZm9yIDUwMSBhbmQgNTA1KS5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGV4cG9uZW50aWFsUmV0cnlTdHJhdGVneShvcHRpb25zID0ge30pIHtcbiAgICB2YXIgX2EsIF9iO1xuICAgIGNvbnN0IHJldHJ5SW50ZXJ2YWwgPSAoX2EgPSBvcHRpb25zLnJldHJ5RGVsYXlJbk1zKSAhPT0gbnVsbCAmJiBfYSAhPT0gdm9pZCAwID8gX2EgOiBERUZBVUxUX0NMSUVOVF9SRVRSWV9JTlRFUlZBTDtcbiAgICBjb25zdCBtYXhSZXRyeUludGVydmFsID0gKF9iID0gb3B0aW9ucy5tYXhSZXRyeURlbGF5SW5NcykgIT09IG51bGwgJiYgX2IgIT09IHZvaWQgMCA/IF9iIDogREVGQVVMVF9DTElFTlRfTUFYX1JFVFJZX0lOVEVSVkFMO1xuICAgIGxldCByZXRyeUFmdGVySW5NcyA9IHJldHJ5SW50ZXJ2YWw7XG4gICAgcmV0dXJuIHtcbiAgICAgICAgbmFtZTogXCJleHBvbmVudGlhbFJldHJ5U3RyYXRlZ3lcIixcbiAgICAgICAgcmV0cnkoeyByZXRyeUNvdW50LCByZXNwb25zZSwgcmVzcG9uc2VFcnJvciB9KSB7XG4gICAgICAgICAgICBjb25zdCBtYXRjaGVkU3lzdGVtRXJyb3IgPSBpc1N5c3RlbUVycm9yKHJlc3BvbnNlRXJyb3IpO1xuICAgICAgICAgICAgY29uc3QgaWdub3JlU3lzdGVtRXJyb3JzID0gbWF0Y2hlZFN5c3RlbUVycm9yICYmIG9wdGlvbnMuaWdub3JlU3lzdGVtRXJyb3JzO1xuICAgICAgICAgICAgY29uc3QgaXNFeHBvbmVudGlhbCA9IGlzRXhwb25lbnRpYWxSZXRyeVJlc3BvbnNlKHJlc3BvbnNlKTtcbiAgICAgICAgICAgIGNvbnN0IGlnbm9yZUV4cG9uZW50aWFsUmVzcG9uc2UgPSBpc0V4cG9uZW50aWFsICYmIG9wdGlvbnMuaWdub3JlSHR0cFN0YXR1c0NvZGVzO1xuICAgICAgICAgICAgY29uc3QgdW5rbm93blJlc3BvbnNlID0gcmVzcG9uc2UgJiYgKGlzVGhyb3R0bGluZ1JldHJ5UmVzcG9uc2UocmVzcG9uc2UpIHx8ICFpc0V4cG9uZW50aWFsKTtcbiAgICAgICAgICAgIGlmICh1bmtub3duUmVzcG9uc2UgfHwgaWdub3JlRXhwb25lbnRpYWxSZXNwb25zZSB8fCBpZ25vcmVTeXN0ZW1FcnJvcnMpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4geyBza2lwU3RyYXRlZ3k6IHRydWUgfTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmIChyZXNwb25zZUVycm9yICYmICFtYXRjaGVkU3lzdGVtRXJyb3IgJiYgIWlzRXhwb25lbnRpYWwpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4geyBlcnJvclRvVGhyb3c6IHJlc3BvbnNlRXJyb3IgfTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIC8vIEV4cG9uZW50aWFsbHkgaW5jcmVhc2UgdGhlIGRlbGF5IGVhY2ggdGltZVxuICAgICAgICAgICAgY29uc3QgZXhwb25lbnRpYWxEZWxheSA9IHJldHJ5QWZ0ZXJJbk1zICogTWF0aC5wb3coMiwgcmV0cnlDb3VudCk7XG4gICAgICAgICAgICAvLyBEb24ndCBsZXQgdGhlIGRlbGF5IGV4Y2VlZCB0aGUgbWF4aW11bVxuICAgICAgICAgICAgY29uc3QgY2xhbXBlZEV4cG9uZW50aWFsRGVsYXkgPSBNYXRoLm1pbihtYXhSZXRyeUludGVydmFsLCBleHBvbmVudGlhbERlbGF5KTtcbiAgICAgICAgICAgIC8vIEFsbG93IHRoZSBmaW5hbCB2YWx1ZSB0byBoYXZlIHNvbWUgXCJqaXR0ZXJcIiAod2l0aGluIDUwJSBvZiB0aGUgZGVsYXkgc2l6ZSkgc29cbiAgICAgICAgICAgIC8vIHRoYXQgcmV0cmllcyBhY3Jvc3MgbXVsdGlwbGUgY2xpZW50cyBkb24ndCBvY2N1ciBzaW11bHRhbmVvdXNseS5cbiAgICAgICAgICAgIHJldHJ5QWZ0ZXJJbk1zID1cbiAgICAgICAgICAgICAgICBjbGFtcGVkRXhwb25lbnRpYWxEZWxheSAvIDIgKyBnZXRSYW5kb21JbnRlZ2VySW5jbHVzaXZlKDAsIGNsYW1wZWRFeHBvbmVudGlhbERlbGF5IC8gMik7XG4gICAgICAgICAgICByZXR1cm4geyByZXRyeUFmdGVySW5NcyB9O1xuICAgICAgICB9LFxuICAgIH07XG59XG4vKipcbiAqIEEgcmVzcG9uc2UgaXMgYSByZXRyeSByZXNwb25zZSBpZiBpdCBoYXMgc3RhdHVzIGNvZGVzOlxuICogLSA0MDgsIG9yXG4gKiAtIEdyZWF0ZXIgb3IgZXF1YWwgdGhhbiA1MDAsIGV4Y2VwdCBmb3IgNTAxIGFuZCA1MDUuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBpc0V4cG9uZW50aWFsUmV0cnlSZXNwb25zZShyZXNwb25zZSkge1xuICAgIHJldHVybiBCb29sZWFuKHJlc3BvbnNlICYmXG4gICAgICAgIHJlc3BvbnNlLnN0YXR1cyAhPT0gdW5kZWZpbmVkICYmXG4gICAgICAgIChyZXNwb25zZS5zdGF0dXMgPj0gNTAwIHx8IHJlc3BvbnNlLnN0YXR1cyA9PT0gNDA4KSAmJlxuICAgICAgICByZXNwb25zZS5zdGF0dXMgIT09IDUwMSAmJlxuICAgICAgICByZXNwb25zZS5zdGF0dXMgIT09IDUwNSk7XG59XG4vKipcbiAqIERldGVybWluZXMgd2hldGhlciBhbiBlcnJvciBmcm9tIGEgcGlwZWxpbmUgcmVzcG9uc2Ugd2FzIHRyaWdnZXJlZCBpbiB0aGUgbmV0d29yayBsYXllci5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGlzU3lzdGVtRXJyb3IoZXJyKSB7XG4gICAgaWYgKCFlcnIpIHtcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cbiAgICByZXR1cm4gKGVyci5jb2RlID09PSBcIkVUSU1FRE9VVFwiIHx8XG4gICAgICAgIGVyci5jb2RlID09PSBcIkVTT0NLRVRUSU1FRE9VVFwiIHx8XG4gICAgICAgIGVyci5jb2RlID09PSBcIkVDT05OUkVGVVNFRFwiIHx8XG4gICAgICAgIGVyci5jb2RlID09PSBcIkVDT05OUkVTRVRcIiB8fFxuICAgICAgICBlcnIuY29kZSA9PT0gXCJFTk9FTlRcIiB8fFxuICAgICAgICBlcnIuY29kZSA9PT0gXCJFTk9URk9VTkRcIik7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1leHBvbmVudGlhbFJldHJ5U3RyYXRlZ3kuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/core-rest-pipeline/dist/esm/retryStrategies/exponentialRetryStrategy.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/core-rest-pipeline/dist/esm/retryStrategies/throttlingRetryStrategy.js":
/*!****************************************************************************************************!*\
  !*** ./node_modules/@azure/core-rest-pipeline/dist/esm/retryStrategies/throttlingRetryStrategy.js ***!
  \****************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   isThrottlingRetryResponse: () => (/* binding */ isThrottlingRetryResponse),\n/* harmony export */   throttlingRetryStrategy: () => (/* binding */ throttlingRetryStrategy)\n/* harmony export */ });\n/* harmony import */ var _util_helpers_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../util/helpers.js */ \"(rsc)/./node_modules/@azure/core-rest-pipeline/dist/esm/util/helpers.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\n/**\n * The header that comes back from Azure services representing\n * the amount of time (minimum) to wait to retry (in seconds or timestamp after which we can retry).\n */\nconst RetryAfterHeader = \"Retry-After\";\n/**\n * The headers that come back from Azure services representing\n * the amount of time (minimum) to wait to retry.\n *\n * \"retry-after-ms\", \"x-ms-retry-after-ms\" : milliseconds\n * \"Retry-After\" : seconds or timestamp\n */\nconst AllRetryAfterHeaders = [\"retry-after-ms\", \"x-ms-retry-after-ms\", RetryAfterHeader];\n/**\n * A response is a throttling retry response if it has a throttling status code (429 or 503),\n * as long as one of the [ \"Retry-After\" or \"retry-after-ms\" or \"x-ms-retry-after-ms\" ] headers has a valid value.\n *\n * Returns the `retryAfterInMs` value if the response is a throttling retry response.\n * If not throttling retry response, returns `undefined`.\n *\n * @internal\n */\nfunction getRetryAfterInMs(response) {\n    if (!(response && [429, 503].includes(response.status)))\n        return undefined;\n    try {\n        // Headers: \"retry-after-ms\", \"x-ms-retry-after-ms\", \"Retry-After\"\n        for (const header of AllRetryAfterHeaders) {\n            const retryAfterValue = (0,_util_helpers_js__WEBPACK_IMPORTED_MODULE_0__.parseHeaderValueAsNumber)(response, header);\n            if (retryAfterValue === 0 || retryAfterValue) {\n                // \"Retry-After\" header ==> seconds\n                // \"retry-after-ms\", \"x-ms-retry-after-ms\" headers ==> milli-seconds\n                const multiplyingFactor = header === RetryAfterHeader ? 1000 : 1;\n                return retryAfterValue * multiplyingFactor; // in milli-seconds\n            }\n        }\n        // RetryAfterHeader (\"Retry-After\") has a special case where it might be formatted as a date instead of a number of seconds\n        const retryAfterHeader = response.headers.get(RetryAfterHeader);\n        if (!retryAfterHeader)\n            return;\n        const date = Date.parse(retryAfterHeader);\n        const diff = date - Date.now();\n        // negative diff would mean a date in the past, so retry asap with 0 milliseconds\n        return Number.isFinite(diff) ? Math.max(0, diff) : undefined;\n    }\n    catch (e) {\n        return undefined;\n    }\n}\n/**\n * A response is a retry response if it has a throttling status code (429 or 503),\n * as long as one of the [ \"Retry-After\" or \"retry-after-ms\" or \"x-ms-retry-after-ms\" ] headers has a valid value.\n */\nfunction isThrottlingRetryResponse(response) {\n    return Number.isFinite(getRetryAfterInMs(response));\n}\nfunction throttlingRetryStrategy() {\n    return {\n        name: \"throttlingRetryStrategy\",\n        retry({ response }) {\n            const retryAfterInMs = getRetryAfterInMs(response);\n            if (!Number.isFinite(retryAfterInMs)) {\n                return { skipStrategy: true };\n            }\n            return {\n                retryAfterInMs,\n            };\n        },\n    };\n}\n//# sourceMappingURL=throttlingRetryStrategy.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2NvcmUtcmVzdC1waXBlbGluZS9kaXN0L2VzbS9yZXRyeVN0cmF0ZWdpZXMvdGhyb3R0bGluZ1JldHJ5U3RyYXRlZ3kuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUE7QUFDQTtBQUM4RDtBQUM5RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG9DQUFvQywwRUFBd0I7QUFDNUQ7QUFDQTtBQUNBO0FBQ0E7QUFDQSw0REFBNEQ7QUFDNUQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQSxnQkFBZ0IsVUFBVTtBQUMxQjtBQUNBO0FBQ0EseUJBQXlCO0FBQ3pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2RhbmllbDMtdnAyLy4vbm9kZV9tb2R1bGVzL0BhenVyZS9jb3JlLXJlc3QtcGlwZWxpbmUvZGlzdC9lc20vcmV0cnlTdHJhdGVnaWVzL3Rocm90dGxpbmdSZXRyeVN0cmF0ZWd5LmpzP2YwNzAiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uXG4vLyBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UuXG5pbXBvcnQgeyBwYXJzZUhlYWRlclZhbHVlQXNOdW1iZXIgfSBmcm9tIFwiLi4vdXRpbC9oZWxwZXJzLmpzXCI7XG4vKipcbiAqIFRoZSBoZWFkZXIgdGhhdCBjb21lcyBiYWNrIGZyb20gQXp1cmUgc2VydmljZXMgcmVwcmVzZW50aW5nXG4gKiB0aGUgYW1vdW50IG9mIHRpbWUgKG1pbmltdW0pIHRvIHdhaXQgdG8gcmV0cnkgKGluIHNlY29uZHMgb3IgdGltZXN0YW1wIGFmdGVyIHdoaWNoIHdlIGNhbiByZXRyeSkuXG4gKi9cbmNvbnN0IFJldHJ5QWZ0ZXJIZWFkZXIgPSBcIlJldHJ5LUFmdGVyXCI7XG4vKipcbiAqIFRoZSBoZWFkZXJzIHRoYXQgY29tZSBiYWNrIGZyb20gQXp1cmUgc2VydmljZXMgcmVwcmVzZW50aW5nXG4gKiB0aGUgYW1vdW50IG9mIHRpbWUgKG1pbmltdW0pIHRvIHdhaXQgdG8gcmV0cnkuXG4gKlxuICogXCJyZXRyeS1hZnRlci1tc1wiLCBcIngtbXMtcmV0cnktYWZ0ZXItbXNcIiA6IG1pbGxpc2Vjb25kc1xuICogXCJSZXRyeS1BZnRlclwiIDogc2Vjb25kcyBvciB0aW1lc3RhbXBcbiAqL1xuY29uc3QgQWxsUmV0cnlBZnRlckhlYWRlcnMgPSBbXCJyZXRyeS1hZnRlci1tc1wiLCBcIngtbXMtcmV0cnktYWZ0ZXItbXNcIiwgUmV0cnlBZnRlckhlYWRlcl07XG4vKipcbiAqIEEgcmVzcG9uc2UgaXMgYSB0aHJvdHRsaW5nIHJldHJ5IHJlc3BvbnNlIGlmIGl0IGhhcyBhIHRocm90dGxpbmcgc3RhdHVzIGNvZGUgKDQyOSBvciA1MDMpLFxuICogYXMgbG9uZyBhcyBvbmUgb2YgdGhlIFsgXCJSZXRyeS1BZnRlclwiIG9yIFwicmV0cnktYWZ0ZXItbXNcIiBvciBcIngtbXMtcmV0cnktYWZ0ZXItbXNcIiBdIGhlYWRlcnMgaGFzIGEgdmFsaWQgdmFsdWUuXG4gKlxuICogUmV0dXJucyB0aGUgYHJldHJ5QWZ0ZXJJbk1zYCB2YWx1ZSBpZiB0aGUgcmVzcG9uc2UgaXMgYSB0aHJvdHRsaW5nIHJldHJ5IHJlc3BvbnNlLlxuICogSWYgbm90IHRocm90dGxpbmcgcmV0cnkgcmVzcG9uc2UsIHJldHVybnMgYHVuZGVmaW5lZGAuXG4gKlxuICogQGludGVybmFsXG4gKi9cbmZ1bmN0aW9uIGdldFJldHJ5QWZ0ZXJJbk1zKHJlc3BvbnNlKSB7XG4gICAgaWYgKCEocmVzcG9uc2UgJiYgWzQyOSwgNTAzXS5pbmNsdWRlcyhyZXNwb25zZS5zdGF0dXMpKSlcbiAgICAgICAgcmV0dXJuIHVuZGVmaW5lZDtcbiAgICB0cnkge1xuICAgICAgICAvLyBIZWFkZXJzOiBcInJldHJ5LWFmdGVyLW1zXCIsIFwieC1tcy1yZXRyeS1hZnRlci1tc1wiLCBcIlJldHJ5LUFmdGVyXCJcbiAgICAgICAgZm9yIChjb25zdCBoZWFkZXIgb2YgQWxsUmV0cnlBZnRlckhlYWRlcnMpIHtcbiAgICAgICAgICAgIGNvbnN0IHJldHJ5QWZ0ZXJWYWx1ZSA9IHBhcnNlSGVhZGVyVmFsdWVBc051bWJlcihyZXNwb25zZSwgaGVhZGVyKTtcbiAgICAgICAgICAgIGlmIChyZXRyeUFmdGVyVmFsdWUgPT09IDAgfHwgcmV0cnlBZnRlclZhbHVlKSB7XG4gICAgICAgICAgICAgICAgLy8gXCJSZXRyeS1BZnRlclwiIGhlYWRlciA9PT4gc2Vjb25kc1xuICAgICAgICAgICAgICAgIC8vIFwicmV0cnktYWZ0ZXItbXNcIiwgXCJ4LW1zLXJldHJ5LWFmdGVyLW1zXCIgaGVhZGVycyA9PT4gbWlsbGktc2Vjb25kc1xuICAgICAgICAgICAgICAgIGNvbnN0IG11bHRpcGx5aW5nRmFjdG9yID0gaGVhZGVyID09PSBSZXRyeUFmdGVySGVhZGVyID8gMTAwMCA6IDE7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHJldHJ5QWZ0ZXJWYWx1ZSAqIG11bHRpcGx5aW5nRmFjdG9yOyAvLyBpbiBtaWxsaS1zZWNvbmRzXG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgLy8gUmV0cnlBZnRlckhlYWRlciAoXCJSZXRyeS1BZnRlclwiKSBoYXMgYSBzcGVjaWFsIGNhc2Ugd2hlcmUgaXQgbWlnaHQgYmUgZm9ybWF0dGVkIGFzIGEgZGF0ZSBpbnN0ZWFkIG9mIGEgbnVtYmVyIG9mIHNlY29uZHNcbiAgICAgICAgY29uc3QgcmV0cnlBZnRlckhlYWRlciA9IHJlc3BvbnNlLmhlYWRlcnMuZ2V0KFJldHJ5QWZ0ZXJIZWFkZXIpO1xuICAgICAgICBpZiAoIXJldHJ5QWZ0ZXJIZWFkZXIpXG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIGNvbnN0IGRhdGUgPSBEYXRlLnBhcnNlKHJldHJ5QWZ0ZXJIZWFkZXIpO1xuICAgICAgICBjb25zdCBkaWZmID0gZGF0ZSAtIERhdGUubm93KCk7XG4gICAgICAgIC8vIG5lZ2F0aXZlIGRpZmYgd291bGQgbWVhbiBhIGRhdGUgaW4gdGhlIHBhc3QsIHNvIHJldHJ5IGFzYXAgd2l0aCAwIG1pbGxpc2Vjb25kc1xuICAgICAgICByZXR1cm4gTnVtYmVyLmlzRmluaXRlKGRpZmYpID8gTWF0aC5tYXgoMCwgZGlmZikgOiB1bmRlZmluZWQ7XG4gICAgfVxuICAgIGNhdGNoIChlKSB7XG4gICAgICAgIHJldHVybiB1bmRlZmluZWQ7XG4gICAgfVxufVxuLyoqXG4gKiBBIHJlc3BvbnNlIGlzIGEgcmV0cnkgcmVzcG9uc2UgaWYgaXQgaGFzIGEgdGhyb3R0bGluZyBzdGF0dXMgY29kZSAoNDI5IG9yIDUwMyksXG4gKiBhcyBsb25nIGFzIG9uZSBvZiB0aGUgWyBcIlJldHJ5LUFmdGVyXCIgb3IgXCJyZXRyeS1hZnRlci1tc1wiIG9yIFwieC1tcy1yZXRyeS1hZnRlci1tc1wiIF0gaGVhZGVycyBoYXMgYSB2YWxpZCB2YWx1ZS5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGlzVGhyb3R0bGluZ1JldHJ5UmVzcG9uc2UocmVzcG9uc2UpIHtcbiAgICByZXR1cm4gTnVtYmVyLmlzRmluaXRlKGdldFJldHJ5QWZ0ZXJJbk1zKHJlc3BvbnNlKSk7XG59XG5leHBvcnQgZnVuY3Rpb24gdGhyb3R0bGluZ1JldHJ5U3RyYXRlZ3koKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgICAgbmFtZTogXCJ0aHJvdHRsaW5nUmV0cnlTdHJhdGVneVwiLFxuICAgICAgICByZXRyeSh7IHJlc3BvbnNlIH0pIHtcbiAgICAgICAgICAgIGNvbnN0IHJldHJ5QWZ0ZXJJbk1zID0gZ2V0UmV0cnlBZnRlckluTXMocmVzcG9uc2UpO1xuICAgICAgICAgICAgaWYgKCFOdW1iZXIuaXNGaW5pdGUocmV0cnlBZnRlckluTXMpKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHsgc2tpcFN0cmF0ZWd5OiB0cnVlIH07XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgICAgIHJldHJ5QWZ0ZXJJbk1zLFxuICAgICAgICAgICAgfTtcbiAgICAgICAgfSxcbiAgICB9O1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9dGhyb3R0bGluZ1JldHJ5U3RyYXRlZ3kuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/core-rest-pipeline/dist/esm/retryStrategies/throttlingRetryStrategy.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/core-rest-pipeline/dist/esm/util/concat.js":
/*!************************************************************************!*\
  !*** ./node_modules/@azure/core-rest-pipeline/dist/esm/util/concat.js ***!
  \************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   concat: () => (/* binding */ concat)\n/* harmony export */ });\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! tslib */ \"(rsc)/./node_modules/tslib/tslib.es6.mjs\");\n/* harmony import */ var node_stream__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! node:stream */ \"node:stream\");\n/* harmony import */ var _typeGuards_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./typeGuards.js */ \"(rsc)/./node_modules/@azure/core-rest-pipeline/dist/esm/util/typeGuards.js\");\n/* harmony import */ var _file_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./file.js */ \"(rsc)/./node_modules/@azure/core-rest-pipeline/dist/esm/util/file.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\n\n\n\nfunction streamAsyncIterator() {\n    return (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__asyncGenerator)(this, arguments, function* streamAsyncIterator_1() {\n        const reader = this.getReader();\n        try {\n            while (true) {\n                const { done, value } = yield (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__await)(reader.read());\n                if (done) {\n                    return yield (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__await)(void 0);\n                }\n                yield yield (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__await)(value);\n            }\n        }\n        finally {\n            reader.releaseLock();\n        }\n    });\n}\nfunction makeAsyncIterable(webStream) {\n    if (!webStream[Symbol.asyncIterator]) {\n        webStream[Symbol.asyncIterator] = streamAsyncIterator.bind(webStream);\n    }\n    if (!webStream.values) {\n        webStream.values = streamAsyncIterator.bind(webStream);\n    }\n}\nfunction ensureNodeStream(stream) {\n    if (stream instanceof ReadableStream) {\n        makeAsyncIterable(stream);\n        return node_stream__WEBPACK_IMPORTED_MODULE_0__.Readable.fromWeb(stream);\n    }\n    else {\n        return stream;\n    }\n}\nfunction toStream(source) {\n    if (source instanceof Uint8Array) {\n        return node_stream__WEBPACK_IMPORTED_MODULE_0__.Readable.from(Buffer.from(source));\n    }\n    else if ((0,_typeGuards_js__WEBPACK_IMPORTED_MODULE_1__.isBlob)(source)) {\n        return toStream((0,_file_js__WEBPACK_IMPORTED_MODULE_2__.getRawContent)(source));\n    }\n    else {\n        return ensureNodeStream(source);\n    }\n}\n/**\n * Utility function that concatenates a set of binary inputs into one combined output.\n *\n * @param sources - array of sources for the concatenation\n * @returns - in Node, a (() =\\> NodeJS.ReadableStream) which, when read, produces a concatenation of all the inputs.\n *           In browser, returns a `Blob` representing all the concatenated inputs.\n *\n * @internal\n */\nasync function concat(sources) {\n    return function () {\n        const streams = sources.map((x) => (typeof x === \"function\" ? x() : x)).map(toStream);\n        return node_stream__WEBPACK_IMPORTED_MODULE_0__.Readable.from((function () {\n            return (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__asyncGenerator)(this, arguments, function* () {\n                var _a, e_1, _b, _c;\n                for (const stream of streams) {\n                    try {\n                        for (var _d = true, stream_1 = (e_1 = void 0, (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__asyncValues)(stream)), stream_1_1; stream_1_1 = yield (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__await)(stream_1.next()), _a = stream_1_1.done, !_a; _d = true) {\n                            _c = stream_1_1.value;\n                            _d = false;\n                            const chunk = _c;\n                            yield yield (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__await)(chunk);\n                        }\n                    }\n                    catch (e_1_1) { e_1 = { error: e_1_1 }; }\n                    finally {\n                        try {\n                            if (!_d && !_a && (_b = stream_1.return)) yield (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__await)(_b.call(stream_1));\n                        }\n                        finally { if (e_1) throw e_1.error; }\n                    }\n                }\n            });\n        })());\n    };\n}\n//# sourceMappingURL=concat.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2NvcmUtcmVzdC1waXBlbGluZS9kaXN0L2VzbS91dGlsL2NvbmNhdC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUFBO0FBQ0E7QUFDaUU7QUFDMUI7QUFDRTtBQUNDO0FBQzFDO0FBQ0EsV0FBVyx1REFBZ0I7QUFDM0I7QUFDQTtBQUNBO0FBQ0Esd0JBQXdCLGNBQWMsUUFBUSw4Q0FBTztBQUNyRDtBQUNBLGlDQUFpQyw4Q0FBTztBQUN4QztBQUNBLDRCQUE0Qiw4Q0FBTztBQUNuQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWUsaURBQVE7QUFDdkI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxlQUFlLGlEQUFRO0FBQ3ZCO0FBQ0EsYUFBYSxzREFBTTtBQUNuQix3QkFBd0IsdURBQWE7QUFDckM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBLGVBQWUsaURBQVE7QUFDdkIsbUJBQW1CLHVEQUFnQjtBQUNuQztBQUNBO0FBQ0E7QUFDQSxzRUFBc0Usb0RBQWEsdUJBQXVCLG1CQUFtQiw4Q0FBTyw4Q0FBOEM7QUFDbEw7QUFDQTtBQUNBO0FBQ0Esd0NBQXdDLDhDQUFPO0FBQy9DO0FBQ0E7QUFDQSxvQ0FBb0MsUUFBUTtBQUM1QztBQUNBO0FBQ0EsNEVBQTRFLDhDQUFPO0FBQ25GO0FBQ0Esa0NBQWtDO0FBQ2xDO0FBQ0E7QUFDQSxhQUFhO0FBQ2IsU0FBUztBQUNUO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2RhbmllbDMtdnAyLy4vbm9kZV9tb2R1bGVzL0BhenVyZS9jb3JlLXJlc3QtcGlwZWxpbmUvZGlzdC9lc20vdXRpbC9jb25jYXQuanM/OWYxYyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi5cbi8vIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZS5cbmltcG9ydCB7IF9fYXN5bmNHZW5lcmF0b3IsIF9fYXN5bmNWYWx1ZXMsIF9fYXdhaXQgfSBmcm9tIFwidHNsaWJcIjtcbmltcG9ydCB7IFJlYWRhYmxlIH0gZnJvbSBcIm5vZGU6c3RyZWFtXCI7XG5pbXBvcnQgeyBpc0Jsb2IgfSBmcm9tIFwiLi90eXBlR3VhcmRzLmpzXCI7XG5pbXBvcnQgeyBnZXRSYXdDb250ZW50IH0gZnJvbSBcIi4vZmlsZS5qc1wiO1xuZnVuY3Rpb24gc3RyZWFtQXN5bmNJdGVyYXRvcigpIHtcbiAgICByZXR1cm4gX19hc3luY0dlbmVyYXRvcih0aGlzLCBhcmd1bWVudHMsIGZ1bmN0aW9uKiBzdHJlYW1Bc3luY0l0ZXJhdG9yXzEoKSB7XG4gICAgICAgIGNvbnN0IHJlYWRlciA9IHRoaXMuZ2V0UmVhZGVyKCk7XG4gICAgICAgIHRyeSB7XG4gICAgICAgICAgICB3aGlsZSAodHJ1ZSkge1xuICAgICAgICAgICAgICAgIGNvbnN0IHsgZG9uZSwgdmFsdWUgfSA9IHlpZWxkIF9fYXdhaXQocmVhZGVyLnJlYWQoKSk7XG4gICAgICAgICAgICAgICAgaWYgKGRvbmUpIHtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHlpZWxkIF9fYXdhaXQodm9pZCAwKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgeWllbGQgeWllbGQgX19hd2FpdCh2YWx1ZSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgZmluYWxseSB7XG4gICAgICAgICAgICByZWFkZXIucmVsZWFzZUxvY2soKTtcbiAgICAgICAgfVxuICAgIH0pO1xufVxuZnVuY3Rpb24gbWFrZUFzeW5jSXRlcmFibGUod2ViU3RyZWFtKSB7XG4gICAgaWYgKCF3ZWJTdHJlYW1bU3ltYm9sLmFzeW5jSXRlcmF0b3JdKSB7XG4gICAgICAgIHdlYlN0cmVhbVtTeW1ib2wuYXN5bmNJdGVyYXRvcl0gPSBzdHJlYW1Bc3luY0l0ZXJhdG9yLmJpbmQod2ViU3RyZWFtKTtcbiAgICB9XG4gICAgaWYgKCF3ZWJTdHJlYW0udmFsdWVzKSB7XG4gICAgICAgIHdlYlN0cmVhbS52YWx1ZXMgPSBzdHJlYW1Bc3luY0l0ZXJhdG9yLmJpbmQod2ViU3RyZWFtKTtcbiAgICB9XG59XG5mdW5jdGlvbiBlbnN1cmVOb2RlU3RyZWFtKHN0cmVhbSkge1xuICAgIGlmIChzdHJlYW0gaW5zdGFuY2VvZiBSZWFkYWJsZVN0cmVhbSkge1xuICAgICAgICBtYWtlQXN5bmNJdGVyYWJsZShzdHJlYW0pO1xuICAgICAgICByZXR1cm4gUmVhZGFibGUuZnJvbVdlYihzdHJlYW0pO1xuICAgIH1cbiAgICBlbHNlIHtcbiAgICAgICAgcmV0dXJuIHN0cmVhbTtcbiAgICB9XG59XG5mdW5jdGlvbiB0b1N0cmVhbShzb3VyY2UpIHtcbiAgICBpZiAoc291cmNlIGluc3RhbmNlb2YgVWludDhBcnJheSkge1xuICAgICAgICByZXR1cm4gUmVhZGFibGUuZnJvbShCdWZmZXIuZnJvbShzb3VyY2UpKTtcbiAgICB9XG4gICAgZWxzZSBpZiAoaXNCbG9iKHNvdXJjZSkpIHtcbiAgICAgICAgcmV0dXJuIHRvU3RyZWFtKGdldFJhd0NvbnRlbnQoc291cmNlKSk7XG4gICAgfVxuICAgIGVsc2Uge1xuICAgICAgICByZXR1cm4gZW5zdXJlTm9kZVN0cmVhbShzb3VyY2UpO1xuICAgIH1cbn1cbi8qKlxuICogVXRpbGl0eSBmdW5jdGlvbiB0aGF0IGNvbmNhdGVuYXRlcyBhIHNldCBvZiBiaW5hcnkgaW5wdXRzIGludG8gb25lIGNvbWJpbmVkIG91dHB1dC5cbiAqXG4gKiBAcGFyYW0gc291cmNlcyAtIGFycmF5IG9mIHNvdXJjZXMgZm9yIHRoZSBjb25jYXRlbmF0aW9uXG4gKiBAcmV0dXJucyAtIGluIE5vZGUsIGEgKCgpID1cXD4gTm9kZUpTLlJlYWRhYmxlU3RyZWFtKSB3aGljaCwgd2hlbiByZWFkLCBwcm9kdWNlcyBhIGNvbmNhdGVuYXRpb24gb2YgYWxsIHRoZSBpbnB1dHMuXG4gKiAgICAgICAgICAgSW4gYnJvd3NlciwgcmV0dXJucyBhIGBCbG9iYCByZXByZXNlbnRpbmcgYWxsIHRoZSBjb25jYXRlbmF0ZWQgaW5wdXRzLlxuICpcbiAqIEBpbnRlcm5hbFxuICovXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gY29uY2F0KHNvdXJjZXMpIHtcbiAgICByZXR1cm4gZnVuY3Rpb24gKCkge1xuICAgICAgICBjb25zdCBzdHJlYW1zID0gc291cmNlcy5tYXAoKHgpID0+ICh0eXBlb2YgeCA9PT0gXCJmdW5jdGlvblwiID8geCgpIDogeCkpLm1hcCh0b1N0cmVhbSk7XG4gICAgICAgIHJldHVybiBSZWFkYWJsZS5mcm9tKChmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICByZXR1cm4gX19hc3luY0dlbmVyYXRvcih0aGlzLCBhcmd1bWVudHMsIGZ1bmN0aW9uKiAoKSB7XG4gICAgICAgICAgICAgICAgdmFyIF9hLCBlXzEsIF9iLCBfYztcbiAgICAgICAgICAgICAgICBmb3IgKGNvbnN0IHN0cmVhbSBvZiBzdHJlYW1zKSB7XG4gICAgICAgICAgICAgICAgICAgIHRyeSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBmb3IgKHZhciBfZCA9IHRydWUsIHN0cmVhbV8xID0gKGVfMSA9IHZvaWQgMCwgX19hc3luY1ZhbHVlcyhzdHJlYW0pKSwgc3RyZWFtXzFfMTsgc3RyZWFtXzFfMSA9IHlpZWxkIF9fYXdhaXQoc3RyZWFtXzEubmV4dCgpKSwgX2EgPSBzdHJlYW1fMV8xLmRvbmUsICFfYTsgX2QgPSB0cnVlKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgX2MgPSBzdHJlYW1fMV8xLnZhbHVlO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIF9kID0gZmFsc2U7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY29uc3QgY2h1bmsgPSBfYztcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB5aWVsZCB5aWVsZCBfX2F3YWl0KGNodW5rKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICBjYXRjaCAoZV8xXzEpIHsgZV8xID0geyBlcnJvcjogZV8xXzEgfTsgfVxuICAgICAgICAgICAgICAgICAgICBmaW5hbGx5IHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHRyeSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKCFfZCAmJiAhX2EgJiYgKF9iID0gc3RyZWFtXzEucmV0dXJuKSkgeWllbGQgX19hd2FpdChfYi5jYWxsKHN0cmVhbV8xKSk7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICBmaW5hbGx5IHsgaWYgKGVfMSkgdGhyb3cgZV8xLmVycm9yOyB9XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfSkoKSk7XG4gICAgfTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWNvbmNhdC5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/core-rest-pipeline/dist/esm/util/concat.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/core-rest-pipeline/dist/esm/util/file.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@azure/core-rest-pipeline/dist/esm/util/file.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createFile: () => (/* binding */ createFile),\n/* harmony export */   createFileFromStream: () => (/* binding */ createFileFromStream),\n/* harmony export */   getRawContent: () => (/* binding */ getRawContent)\n/* harmony export */ });\n/* harmony import */ var _azure_core_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @azure/core-util */ \"(rsc)/./node_modules/@azure/core-util/dist/esm/index.js\");\n/* harmony import */ var _typeGuards_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./typeGuards.js */ \"(rsc)/./node_modules/@azure/core-rest-pipeline/dist/esm/util/typeGuards.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\n\nconst unimplementedMethods = {\n    arrayBuffer: () => {\n        throw new Error(\"Not implemented\");\n    },\n    slice: () => {\n        throw new Error(\"Not implemented\");\n    },\n    text: () => {\n        throw new Error(\"Not implemented\");\n    },\n};\n/**\n * Private symbol used as key on objects created using createFile containing the\n * original source of the file object.\n *\n * This is used in Node to access the original Node stream without using Blob#stream, which\n * returns a web stream. This is done to avoid a couple of bugs to do with Blob#stream and\n * Readable#to/fromWeb in Node versions we support:\n * - https://github.com/nodejs/node/issues/42694 (fixed in Node 18.14)\n * - https://github.com/nodejs/node/issues/48916 (fixed in Node 20.6)\n *\n * Once these versions are no longer supported, we may be able to stop doing this.\n *\n * @internal\n */\nconst rawContent = Symbol(\"rawContent\");\nfunction hasRawContent(x) {\n    return typeof x[rawContent] === \"function\";\n}\n/**\n * Extract the raw content from a given blob-like object. If the input was created using createFile\n * or createFileFromStream, the exact content passed into createFile/createFileFromStream will be used.\n * For true instances of Blob and File, returns the blob's content as a Web ReadableStream<Uint8Array>.\n *\n * @internal\n */\nfunction getRawContent(blob) {\n    if (hasRawContent(blob)) {\n        return blob[rawContent]();\n    }\n    else {\n        return blob.stream();\n    }\n}\n/**\n * Create an object that implements the File interface. This object is intended to be\n * passed into RequestBodyType.formData, and is not guaranteed to work as expected in\n * other situations.\n *\n * Use this function to:\n * - Create a File object for use in RequestBodyType.formData in environments where the\n *   global File object is unavailable.\n * - Create a File-like object from a readable stream without reading the stream into memory.\n *\n * @param stream - the content of the file as a callback returning a stream. When a File object made using createFile is\n *                  passed in a request's form data map, the stream will not be read into memory\n *                  and instead will be streamed when the request is made. In the event of a retry, the\n *                  stream needs to be read again, so this callback SHOULD return a fresh stream if possible.\n * @param name - the name of the file.\n * @param options - optional metadata about the file, e.g. file name, file size, MIME type.\n */\nfunction createFileFromStream(stream, name, options = {}) {\n    var _a, _b, _c, _d;\n    return Object.assign(Object.assign({}, unimplementedMethods), { type: (_a = options.type) !== null && _a !== void 0 ? _a : \"\", lastModified: (_b = options.lastModified) !== null && _b !== void 0 ? _b : new Date().getTime(), webkitRelativePath: (_c = options.webkitRelativePath) !== null && _c !== void 0 ? _c : \"\", size: (_d = options.size) !== null && _d !== void 0 ? _d : -1, name, stream: () => {\n            const s = stream();\n            if ((0,_typeGuards_js__WEBPACK_IMPORTED_MODULE_1__.isNodeReadableStream)(s)) {\n                throw new Error(\"Not supported: a Node stream was provided as input to createFileFromStream.\");\n            }\n            return s;\n        }, [rawContent]: stream });\n}\n/**\n * Create an object that implements the File interface. This object is intended to be\n * passed into RequestBodyType.formData, and is not guaranteed to work as expected in\n * other situations.\n *\n * Use this function create a File object for use in RequestBodyType.formData in environments where the global File object is unavailable.\n *\n * @param content - the content of the file as a Uint8Array in memory.\n * @param name - the name of the file.\n * @param options - optional metadata about the file, e.g. file name, file size, MIME type.\n */\nfunction createFile(content, name, options = {}) {\n    var _a, _b, _c;\n    if (_azure_core_util__WEBPACK_IMPORTED_MODULE_0__.isNodeLike) {\n        return Object.assign(Object.assign({}, unimplementedMethods), { type: (_a = options.type) !== null && _a !== void 0 ? _a : \"\", lastModified: (_b = options.lastModified) !== null && _b !== void 0 ? _b : new Date().getTime(), webkitRelativePath: (_c = options.webkitRelativePath) !== null && _c !== void 0 ? _c : \"\", size: content.byteLength, name, arrayBuffer: async () => content.buffer, stream: () => new Blob([content]).stream(), [rawContent]: () => content });\n    }\n    else {\n        return new File([content], name, options);\n    }\n}\n//# sourceMappingURL=file.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2NvcmUtcmVzdC1waXBlbGluZS9kaXN0L2VzbS91dGlsL2ZpbGUuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBQTtBQUNBO0FBQzhDO0FBQ1M7QUFDdkQ7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTyx3REFBd0Q7QUFDL0Q7QUFDQSx5Q0FBeUMsMkJBQTJCO0FBQ3BFO0FBQ0EsZ0JBQWdCLG9FQUFvQjtBQUNwQztBQUNBO0FBQ0E7QUFDQSxTQUFTLHdCQUF3QjtBQUNqQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTywrQ0FBK0M7QUFDdEQ7QUFDQSxRQUFRLHdEQUFVO0FBQ2xCLDZDQUE2QywyQkFBMkIsNllBQTZZO0FBQ3JkO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2RhbmllbDMtdnAyLy4vbm9kZV9tb2R1bGVzL0BhenVyZS9jb3JlLXJlc3QtcGlwZWxpbmUvZGlzdC9lc20vdXRpbC9maWxlLmpzP2M4Y2MiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uXG4vLyBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UuXG5pbXBvcnQgeyBpc05vZGVMaWtlIH0gZnJvbSBcIkBhenVyZS9jb3JlLXV0aWxcIjtcbmltcG9ydCB7IGlzTm9kZVJlYWRhYmxlU3RyZWFtIH0gZnJvbSBcIi4vdHlwZUd1YXJkcy5qc1wiO1xuY29uc3QgdW5pbXBsZW1lbnRlZE1ldGhvZHMgPSB7XG4gICAgYXJyYXlCdWZmZXI6ICgpID0+IHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiTm90IGltcGxlbWVudGVkXCIpO1xuICAgIH0sXG4gICAgc2xpY2U6ICgpID0+IHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiTm90IGltcGxlbWVudGVkXCIpO1xuICAgIH0sXG4gICAgdGV4dDogKCkgPT4ge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJOb3QgaW1wbGVtZW50ZWRcIik7XG4gICAgfSxcbn07XG4vKipcbiAqIFByaXZhdGUgc3ltYm9sIHVzZWQgYXMga2V5IG9uIG9iamVjdHMgY3JlYXRlZCB1c2luZyBjcmVhdGVGaWxlIGNvbnRhaW5pbmcgdGhlXG4gKiBvcmlnaW5hbCBzb3VyY2Ugb2YgdGhlIGZpbGUgb2JqZWN0LlxuICpcbiAqIFRoaXMgaXMgdXNlZCBpbiBOb2RlIHRvIGFjY2VzcyB0aGUgb3JpZ2luYWwgTm9kZSBzdHJlYW0gd2l0aG91dCB1c2luZyBCbG9iI3N0cmVhbSwgd2hpY2hcbiAqIHJldHVybnMgYSB3ZWIgc3RyZWFtLiBUaGlzIGlzIGRvbmUgdG8gYXZvaWQgYSBjb3VwbGUgb2YgYnVncyB0byBkbyB3aXRoIEJsb2Ijc3RyZWFtIGFuZFxuICogUmVhZGFibGUjdG8vZnJvbVdlYiBpbiBOb2RlIHZlcnNpb25zIHdlIHN1cHBvcnQ6XG4gKiAtIGh0dHBzOi8vZ2l0aHViLmNvbS9ub2RlanMvbm9kZS9pc3N1ZXMvNDI2OTQgKGZpeGVkIGluIE5vZGUgMTguMTQpXG4gKiAtIGh0dHBzOi8vZ2l0aHViLmNvbS9ub2RlanMvbm9kZS9pc3N1ZXMvNDg5MTYgKGZpeGVkIGluIE5vZGUgMjAuNilcbiAqXG4gKiBPbmNlIHRoZXNlIHZlcnNpb25zIGFyZSBubyBsb25nZXIgc3VwcG9ydGVkLCB3ZSBtYXkgYmUgYWJsZSB0byBzdG9wIGRvaW5nIHRoaXMuXG4gKlxuICogQGludGVybmFsXG4gKi9cbmNvbnN0IHJhd0NvbnRlbnQgPSBTeW1ib2woXCJyYXdDb250ZW50XCIpO1xuZnVuY3Rpb24gaGFzUmF3Q29udGVudCh4KSB7XG4gICAgcmV0dXJuIHR5cGVvZiB4W3Jhd0NvbnRlbnRdID09PSBcImZ1bmN0aW9uXCI7XG59XG4vKipcbiAqIEV4dHJhY3QgdGhlIHJhdyBjb250ZW50IGZyb20gYSBnaXZlbiBibG9iLWxpa2Ugb2JqZWN0LiBJZiB0aGUgaW5wdXQgd2FzIGNyZWF0ZWQgdXNpbmcgY3JlYXRlRmlsZVxuICogb3IgY3JlYXRlRmlsZUZyb21TdHJlYW0sIHRoZSBleGFjdCBjb250ZW50IHBhc3NlZCBpbnRvIGNyZWF0ZUZpbGUvY3JlYXRlRmlsZUZyb21TdHJlYW0gd2lsbCBiZSB1c2VkLlxuICogRm9yIHRydWUgaW5zdGFuY2VzIG9mIEJsb2IgYW5kIEZpbGUsIHJldHVybnMgdGhlIGJsb2IncyBjb250ZW50IGFzIGEgV2ViIFJlYWRhYmxlU3RyZWFtPFVpbnQ4QXJyYXk+LlxuICpcbiAqIEBpbnRlcm5hbFxuICovXG5leHBvcnQgZnVuY3Rpb24gZ2V0UmF3Q29udGVudChibG9iKSB7XG4gICAgaWYgKGhhc1Jhd0NvbnRlbnQoYmxvYikpIHtcbiAgICAgICAgcmV0dXJuIGJsb2JbcmF3Q29udGVudF0oKTtcbiAgICB9XG4gICAgZWxzZSB7XG4gICAgICAgIHJldHVybiBibG9iLnN0cmVhbSgpO1xuICAgIH1cbn1cbi8qKlxuICogQ3JlYXRlIGFuIG9iamVjdCB0aGF0IGltcGxlbWVudHMgdGhlIEZpbGUgaW50ZXJmYWNlLiBUaGlzIG9iamVjdCBpcyBpbnRlbmRlZCB0byBiZVxuICogcGFzc2VkIGludG8gUmVxdWVzdEJvZHlUeXBlLmZvcm1EYXRhLCBhbmQgaXMgbm90IGd1YXJhbnRlZWQgdG8gd29yayBhcyBleHBlY3RlZCBpblxuICogb3RoZXIgc2l0dWF0aW9ucy5cbiAqXG4gKiBVc2UgdGhpcyBmdW5jdGlvbiB0bzpcbiAqIC0gQ3JlYXRlIGEgRmlsZSBvYmplY3QgZm9yIHVzZSBpbiBSZXF1ZXN0Qm9keVR5cGUuZm9ybURhdGEgaW4gZW52aXJvbm1lbnRzIHdoZXJlIHRoZVxuICogICBnbG9iYWwgRmlsZSBvYmplY3QgaXMgdW5hdmFpbGFibGUuXG4gKiAtIENyZWF0ZSBhIEZpbGUtbGlrZSBvYmplY3QgZnJvbSBhIHJlYWRhYmxlIHN0cmVhbSB3aXRob3V0IHJlYWRpbmcgdGhlIHN0cmVhbSBpbnRvIG1lbW9yeS5cbiAqXG4gKiBAcGFyYW0gc3RyZWFtIC0gdGhlIGNvbnRlbnQgb2YgdGhlIGZpbGUgYXMgYSBjYWxsYmFjayByZXR1cm5pbmcgYSBzdHJlYW0uIFdoZW4gYSBGaWxlIG9iamVjdCBtYWRlIHVzaW5nIGNyZWF0ZUZpbGUgaXNcbiAqICAgICAgICAgICAgICAgICAgcGFzc2VkIGluIGEgcmVxdWVzdCdzIGZvcm0gZGF0YSBtYXAsIHRoZSBzdHJlYW0gd2lsbCBub3QgYmUgcmVhZCBpbnRvIG1lbW9yeVxuICogICAgICAgICAgICAgICAgICBhbmQgaW5zdGVhZCB3aWxsIGJlIHN0cmVhbWVkIHdoZW4gdGhlIHJlcXVlc3QgaXMgbWFkZS4gSW4gdGhlIGV2ZW50IG9mIGEgcmV0cnksIHRoZVxuICogICAgICAgICAgICAgICAgICBzdHJlYW0gbmVlZHMgdG8gYmUgcmVhZCBhZ2Fpbiwgc28gdGhpcyBjYWxsYmFjayBTSE9VTEQgcmV0dXJuIGEgZnJlc2ggc3RyZWFtIGlmIHBvc3NpYmxlLlxuICogQHBhcmFtIG5hbWUgLSB0aGUgbmFtZSBvZiB0aGUgZmlsZS5cbiAqIEBwYXJhbSBvcHRpb25zIC0gb3B0aW9uYWwgbWV0YWRhdGEgYWJvdXQgdGhlIGZpbGUsIGUuZy4gZmlsZSBuYW1lLCBmaWxlIHNpemUsIE1JTUUgdHlwZS5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGNyZWF0ZUZpbGVGcm9tU3RyZWFtKHN0cmVhbSwgbmFtZSwgb3B0aW9ucyA9IHt9KSB7XG4gICAgdmFyIF9hLCBfYiwgX2MsIF9kO1xuICAgIHJldHVybiBPYmplY3QuYXNzaWduKE9iamVjdC5hc3NpZ24oe30sIHVuaW1wbGVtZW50ZWRNZXRob2RzKSwgeyB0eXBlOiAoX2EgPSBvcHRpb25zLnR5cGUpICE9PSBudWxsICYmIF9hICE9PSB2b2lkIDAgPyBfYSA6IFwiXCIsIGxhc3RNb2RpZmllZDogKF9iID0gb3B0aW9ucy5sYXN0TW9kaWZpZWQpICE9PSBudWxsICYmIF9iICE9PSB2b2lkIDAgPyBfYiA6IG5ldyBEYXRlKCkuZ2V0VGltZSgpLCB3ZWJraXRSZWxhdGl2ZVBhdGg6IChfYyA9IG9wdGlvbnMud2Via2l0UmVsYXRpdmVQYXRoKSAhPT0gbnVsbCAmJiBfYyAhPT0gdm9pZCAwID8gX2MgOiBcIlwiLCBzaXplOiAoX2QgPSBvcHRpb25zLnNpemUpICE9PSBudWxsICYmIF9kICE9PSB2b2lkIDAgPyBfZCA6IC0xLCBuYW1lLCBzdHJlYW06ICgpID0+IHtcbiAgICAgICAgICAgIGNvbnN0IHMgPSBzdHJlYW0oKTtcbiAgICAgICAgICAgIGlmIChpc05vZGVSZWFkYWJsZVN0cmVhbShzKSkge1xuICAgICAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihcIk5vdCBzdXBwb3J0ZWQ6IGEgTm9kZSBzdHJlYW0gd2FzIHByb3ZpZGVkIGFzIGlucHV0IHRvIGNyZWF0ZUZpbGVGcm9tU3RyZWFtLlwiKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJldHVybiBzO1xuICAgICAgICB9LCBbcmF3Q29udGVudF06IHN0cmVhbSB9KTtcbn1cbi8qKlxuICogQ3JlYXRlIGFuIG9iamVjdCB0aGF0IGltcGxlbWVudHMgdGhlIEZpbGUgaW50ZXJmYWNlLiBUaGlzIG9iamVjdCBpcyBpbnRlbmRlZCB0byBiZVxuICogcGFzc2VkIGludG8gUmVxdWVzdEJvZHlUeXBlLmZvcm1EYXRhLCBhbmQgaXMgbm90IGd1YXJhbnRlZWQgdG8gd29yayBhcyBleHBlY3RlZCBpblxuICogb3RoZXIgc2l0dWF0aW9ucy5cbiAqXG4gKiBVc2UgdGhpcyBmdW5jdGlvbiBjcmVhdGUgYSBGaWxlIG9iamVjdCBmb3IgdXNlIGluIFJlcXVlc3RCb2R5VHlwZS5mb3JtRGF0YSBpbiBlbnZpcm9ubWVudHMgd2hlcmUgdGhlIGdsb2JhbCBGaWxlIG9iamVjdCBpcyB1bmF2YWlsYWJsZS5cbiAqXG4gKiBAcGFyYW0gY29udGVudCAtIHRoZSBjb250ZW50IG9mIHRoZSBmaWxlIGFzIGEgVWludDhBcnJheSBpbiBtZW1vcnkuXG4gKiBAcGFyYW0gbmFtZSAtIHRoZSBuYW1lIG9mIHRoZSBmaWxlLlxuICogQHBhcmFtIG9wdGlvbnMgLSBvcHRpb25hbCBtZXRhZGF0YSBhYm91dCB0aGUgZmlsZSwgZS5nLiBmaWxlIG5hbWUsIGZpbGUgc2l6ZSwgTUlNRSB0eXBlLlxuICovXG5leHBvcnQgZnVuY3Rpb24gY3JlYXRlRmlsZShjb250ZW50LCBuYW1lLCBvcHRpb25zID0ge30pIHtcbiAgICB2YXIgX2EsIF9iLCBfYztcbiAgICBpZiAoaXNOb2RlTGlrZSkge1xuICAgICAgICByZXR1cm4gT2JqZWN0LmFzc2lnbihPYmplY3QuYXNzaWduKHt9LCB1bmltcGxlbWVudGVkTWV0aG9kcyksIHsgdHlwZTogKF9hID0gb3B0aW9ucy50eXBlKSAhPT0gbnVsbCAmJiBfYSAhPT0gdm9pZCAwID8gX2EgOiBcIlwiLCBsYXN0TW9kaWZpZWQ6IChfYiA9IG9wdGlvbnMubGFzdE1vZGlmaWVkKSAhPT0gbnVsbCAmJiBfYiAhPT0gdm9pZCAwID8gX2IgOiBuZXcgRGF0ZSgpLmdldFRpbWUoKSwgd2Via2l0UmVsYXRpdmVQYXRoOiAoX2MgPSBvcHRpb25zLndlYmtpdFJlbGF0aXZlUGF0aCkgIT09IG51bGwgJiYgX2MgIT09IHZvaWQgMCA/IF9jIDogXCJcIiwgc2l6ZTogY29udGVudC5ieXRlTGVuZ3RoLCBuYW1lLCBhcnJheUJ1ZmZlcjogYXN5bmMgKCkgPT4gY29udGVudC5idWZmZXIsIHN0cmVhbTogKCkgPT4gbmV3IEJsb2IoW2NvbnRlbnRdKS5zdHJlYW0oKSwgW3Jhd0NvbnRlbnRdOiAoKSA9PiBjb250ZW50IH0pO1xuICAgIH1cbiAgICBlbHNlIHtcbiAgICAgICAgcmV0dXJuIG5ldyBGaWxlKFtjb250ZW50XSwgbmFtZSwgb3B0aW9ucyk7XG4gICAgfVxufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZmlsZS5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/core-rest-pipeline/dist/esm/util/file.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/core-rest-pipeline/dist/esm/util/helpers.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@azure/core-rest-pipeline/dist/esm/util/helpers.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   delay: () => (/* binding */ delay),\n/* harmony export */   parseHeaderValueAsNumber: () => (/* binding */ parseHeaderValueAsNumber)\n/* harmony export */ });\n/* harmony import */ var _azure_abort_controller__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @azure/abort-controller */ \"(rsc)/./node_modules/@azure/abort-controller/dist/esm/index.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nconst StandardAbortMessage = \"The operation was aborted.\";\n/**\n * A wrapper for setTimeout that resolves a promise after delayInMs milliseconds.\n * @param delayInMs - The number of milliseconds to be delayed.\n * @param value - The value to be resolved with after a timeout of t milliseconds.\n * @param options - The options for delay - currently abort options\n *                  - abortSignal - The abortSignal associated with containing operation.\n *                  - abortErrorMsg - The abort error message associated with containing operation.\n * @returns Resolved promise\n */\nfunction delay(delayInMs, value, options) {\n    return new Promise((resolve, reject) => {\n        let timer = undefined;\n        let onAborted = undefined;\n        const rejectOnAbort = () => {\n            return reject(new _azure_abort_controller__WEBPACK_IMPORTED_MODULE_0__.AbortError((options === null || options === void 0 ? void 0 : options.abortErrorMsg) ? options === null || options === void 0 ? void 0 : options.abortErrorMsg : StandardAbortMessage));\n        };\n        const removeListeners = () => {\n            if ((options === null || options === void 0 ? void 0 : options.abortSignal) && onAborted) {\n                options.abortSignal.removeEventListener(\"abort\", onAborted);\n            }\n        };\n        onAborted = () => {\n            if (timer) {\n                clearTimeout(timer);\n            }\n            removeListeners();\n            return rejectOnAbort();\n        };\n        if ((options === null || options === void 0 ? void 0 : options.abortSignal) && options.abortSignal.aborted) {\n            return rejectOnAbort();\n        }\n        timer = setTimeout(() => {\n            removeListeners();\n            resolve(value);\n        }, delayInMs);\n        if (options === null || options === void 0 ? void 0 : options.abortSignal) {\n            options.abortSignal.addEventListener(\"abort\", onAborted);\n        }\n    });\n}\n/**\n * @internal\n * @returns the parsed value or undefined if the parsed value is invalid.\n */\nfunction parseHeaderValueAsNumber(response, headerName) {\n    const value = response.headers.get(headerName);\n    if (!value)\n        return;\n    const valueAsNum = Number(value);\n    if (Number.isNaN(valueAsNum))\n        return;\n    return valueAsNum;\n}\n//# sourceMappingURL=helpers.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2NvcmUtcmVzdC1waXBlbGluZS9kaXN0L2VzbS91dGlsL2hlbHBlcnMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUE7QUFDQTtBQUNxRDtBQUNyRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQSw4QkFBOEIsK0RBQVU7QUFDeEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2RhbmllbDMtdnAyLy4vbm9kZV9tb2R1bGVzL0BhenVyZS9jb3JlLXJlc3QtcGlwZWxpbmUvZGlzdC9lc20vdXRpbC9oZWxwZXJzLmpzPzJmMDQiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uXG4vLyBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UuXG5pbXBvcnQgeyBBYm9ydEVycm9yIH0gZnJvbSBcIkBhenVyZS9hYm9ydC1jb250cm9sbGVyXCI7XG5jb25zdCBTdGFuZGFyZEFib3J0TWVzc2FnZSA9IFwiVGhlIG9wZXJhdGlvbiB3YXMgYWJvcnRlZC5cIjtcbi8qKlxuICogQSB3cmFwcGVyIGZvciBzZXRUaW1lb3V0IHRoYXQgcmVzb2x2ZXMgYSBwcm9taXNlIGFmdGVyIGRlbGF5SW5NcyBtaWxsaXNlY29uZHMuXG4gKiBAcGFyYW0gZGVsYXlJbk1zIC0gVGhlIG51bWJlciBvZiBtaWxsaXNlY29uZHMgdG8gYmUgZGVsYXllZC5cbiAqIEBwYXJhbSB2YWx1ZSAtIFRoZSB2YWx1ZSB0byBiZSByZXNvbHZlZCB3aXRoIGFmdGVyIGEgdGltZW91dCBvZiB0IG1pbGxpc2Vjb25kcy5cbiAqIEBwYXJhbSBvcHRpb25zIC0gVGhlIG9wdGlvbnMgZm9yIGRlbGF5IC0gY3VycmVudGx5IGFib3J0IG9wdGlvbnNcbiAqICAgICAgICAgICAgICAgICAgLSBhYm9ydFNpZ25hbCAtIFRoZSBhYm9ydFNpZ25hbCBhc3NvY2lhdGVkIHdpdGggY29udGFpbmluZyBvcGVyYXRpb24uXG4gKiAgICAgICAgICAgICAgICAgIC0gYWJvcnRFcnJvck1zZyAtIFRoZSBhYm9ydCBlcnJvciBtZXNzYWdlIGFzc29jaWF0ZWQgd2l0aCBjb250YWluaW5nIG9wZXJhdGlvbi5cbiAqIEByZXR1cm5zIFJlc29sdmVkIHByb21pc2VcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGRlbGF5KGRlbGF5SW5NcywgdmFsdWUsIG9wdGlvbnMpIHtcbiAgICByZXR1cm4gbmV3IFByb21pc2UoKHJlc29sdmUsIHJlamVjdCkgPT4ge1xuICAgICAgICBsZXQgdGltZXIgPSB1bmRlZmluZWQ7XG4gICAgICAgIGxldCBvbkFib3J0ZWQgPSB1bmRlZmluZWQ7XG4gICAgICAgIGNvbnN0IHJlamVjdE9uQWJvcnQgPSAoKSA9PiB7XG4gICAgICAgICAgICByZXR1cm4gcmVqZWN0KG5ldyBBYm9ydEVycm9yKChvcHRpb25zID09PSBudWxsIHx8IG9wdGlvbnMgPT09IHZvaWQgMCA/IHZvaWQgMCA6IG9wdGlvbnMuYWJvcnRFcnJvck1zZykgPyBvcHRpb25zID09PSBudWxsIHx8IG9wdGlvbnMgPT09IHZvaWQgMCA/IHZvaWQgMCA6IG9wdGlvbnMuYWJvcnRFcnJvck1zZyA6IFN0YW5kYXJkQWJvcnRNZXNzYWdlKSk7XG4gICAgICAgIH07XG4gICAgICAgIGNvbnN0IHJlbW92ZUxpc3RlbmVycyA9ICgpID0+IHtcbiAgICAgICAgICAgIGlmICgob3B0aW9ucyA9PT0gbnVsbCB8fCBvcHRpb25zID09PSB2b2lkIDAgPyB2b2lkIDAgOiBvcHRpb25zLmFib3J0U2lnbmFsKSAmJiBvbkFib3J0ZWQpIHtcbiAgICAgICAgICAgICAgICBvcHRpb25zLmFib3J0U2lnbmFsLnJlbW92ZUV2ZW50TGlzdGVuZXIoXCJhYm9ydFwiLCBvbkFib3J0ZWQpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9O1xuICAgICAgICBvbkFib3J0ZWQgPSAoKSA9PiB7XG4gICAgICAgICAgICBpZiAodGltZXIpIHtcbiAgICAgICAgICAgICAgICBjbGVhclRpbWVvdXQodGltZXIpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcmVtb3ZlTGlzdGVuZXJzKCk7XG4gICAgICAgICAgICByZXR1cm4gcmVqZWN0T25BYm9ydCgpO1xuICAgICAgICB9O1xuICAgICAgICBpZiAoKG9wdGlvbnMgPT09IG51bGwgfHwgb3B0aW9ucyA9PT0gdm9pZCAwID8gdm9pZCAwIDogb3B0aW9ucy5hYm9ydFNpZ25hbCkgJiYgb3B0aW9ucy5hYm9ydFNpZ25hbC5hYm9ydGVkKSB7XG4gICAgICAgICAgICByZXR1cm4gcmVqZWN0T25BYm9ydCgpO1xuICAgICAgICB9XG4gICAgICAgIHRpbWVyID0gc2V0VGltZW91dCgoKSA9PiB7XG4gICAgICAgICAgICByZW1vdmVMaXN0ZW5lcnMoKTtcbiAgICAgICAgICAgIHJlc29sdmUodmFsdWUpO1xuICAgICAgICB9LCBkZWxheUluTXMpO1xuICAgICAgICBpZiAob3B0aW9ucyA9PT0gbnVsbCB8fCBvcHRpb25zID09PSB2b2lkIDAgPyB2b2lkIDAgOiBvcHRpb25zLmFib3J0U2lnbmFsKSB7XG4gICAgICAgICAgICBvcHRpb25zLmFib3J0U2lnbmFsLmFkZEV2ZW50TGlzdGVuZXIoXCJhYm9ydFwiLCBvbkFib3J0ZWQpO1xuICAgICAgICB9XG4gICAgfSk7XG59XG4vKipcbiAqIEBpbnRlcm5hbFxuICogQHJldHVybnMgdGhlIHBhcnNlZCB2YWx1ZSBvciB1bmRlZmluZWQgaWYgdGhlIHBhcnNlZCB2YWx1ZSBpcyBpbnZhbGlkLlxuICovXG5leHBvcnQgZnVuY3Rpb24gcGFyc2VIZWFkZXJWYWx1ZUFzTnVtYmVyKHJlc3BvbnNlLCBoZWFkZXJOYW1lKSB7XG4gICAgY29uc3QgdmFsdWUgPSByZXNwb25zZS5oZWFkZXJzLmdldChoZWFkZXJOYW1lKTtcbiAgICBpZiAoIXZhbHVlKVxuICAgICAgICByZXR1cm47XG4gICAgY29uc3QgdmFsdWVBc051bSA9IE51bWJlcih2YWx1ZSk7XG4gICAgaWYgKE51bWJlci5pc05hTih2YWx1ZUFzTnVtKSlcbiAgICAgICAgcmV0dXJuO1xuICAgIHJldHVybiB2YWx1ZUFzTnVtO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aGVscGVycy5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/core-rest-pipeline/dist/esm/util/helpers.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/core-rest-pipeline/dist/esm/util/inspect.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@azure/core-rest-pipeline/dist/esm/util/inspect.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   custom: () => (/* binding */ custom)\n/* harmony export */ });\n/* harmony import */ var node_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! node:util */ \"node:util\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nconst custom = node_util__WEBPACK_IMPORTED_MODULE_0__.inspect.custom;\n//# sourceMappingURL=inspect.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2NvcmUtcmVzdC1waXBlbGluZS9kaXN0L2VzbS91dGlsL2luc3BlY3QuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQTtBQUNBO0FBQ29DO0FBQzdCLGVBQWUsOENBQU87QUFDN0IiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9kYW5pZWwzLXZwMi8uL25vZGVfbW9kdWxlcy9AYXp1cmUvY29yZS1yZXN0LXBpcGVsaW5lL2Rpc3QvZXNtL3V0aWwvaW5zcGVjdC5qcz85MWVjIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLlxuLy8gTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlLlxuaW1wb3J0IHsgaW5zcGVjdCB9IGZyb20gXCJub2RlOnV0aWxcIjtcbmV4cG9ydCBjb25zdCBjdXN0b20gPSBpbnNwZWN0LmN1c3RvbTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWluc3BlY3QuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/core-rest-pipeline/dist/esm/util/inspect.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/core-rest-pipeline/dist/esm/util/sanitizer.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@azure/core-rest-pipeline/dist/esm/util/sanitizer.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Sanitizer: () => (/* binding */ Sanitizer)\n/* harmony export */ });\n/* harmony import */ var _azure_core_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @azure/core-util */ \"(rsc)/./node_modules/@azure/core-util/dist/esm/index.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nconst RedactedString = \"REDACTED\";\n// Make sure this list is up-to-date with the one under core/logger/Readme#Keyconcepts\nconst defaultAllowedHeaderNames = [\n    \"x-ms-client-request-id\",\n    \"x-ms-return-client-request-id\",\n    \"x-ms-useragent\",\n    \"x-ms-correlation-request-id\",\n    \"x-ms-request-id\",\n    \"client-request-id\",\n    \"ms-cv\",\n    \"return-client-request-id\",\n    \"traceparent\",\n    \"Access-Control-Allow-Credentials\",\n    \"Access-Control-Allow-Headers\",\n    \"Access-Control-Allow-Methods\",\n    \"Access-Control-Allow-Origin\",\n    \"Access-Control-Expose-Headers\",\n    \"Access-Control-Max-Age\",\n    \"Access-Control-Request-Headers\",\n    \"Access-Control-Request-Method\",\n    \"Origin\",\n    \"Accept\",\n    \"Accept-Encoding\",\n    \"Cache-Control\",\n    \"Connection\",\n    \"Content-Length\",\n    \"Content-Type\",\n    \"Date\",\n    \"ETag\",\n    \"Expires\",\n    \"If-Match\",\n    \"If-Modified-Since\",\n    \"If-None-Match\",\n    \"If-Unmodified-Since\",\n    \"Last-Modified\",\n    \"Pragma\",\n    \"Request-Id\",\n    \"Retry-After\",\n    \"Server\",\n    \"Transfer-Encoding\",\n    \"User-Agent\",\n    \"WWW-Authenticate\",\n];\nconst defaultAllowedQueryParameters = [\"api-version\"];\n/**\n * @internal\n */\nclass Sanitizer {\n    constructor({ additionalAllowedHeaderNames: allowedHeaderNames = [], additionalAllowedQueryParameters: allowedQueryParameters = [], } = {}) {\n        allowedHeaderNames = defaultAllowedHeaderNames.concat(allowedHeaderNames);\n        allowedQueryParameters = defaultAllowedQueryParameters.concat(allowedQueryParameters);\n        this.allowedHeaderNames = new Set(allowedHeaderNames.map((n) => n.toLowerCase()));\n        this.allowedQueryParameters = new Set(allowedQueryParameters.map((p) => p.toLowerCase()));\n    }\n    sanitize(obj) {\n        const seen = new Set();\n        return JSON.stringify(obj, (key, value) => {\n            // Ensure Errors include their interesting non-enumerable members\n            if (value instanceof Error) {\n                return Object.assign(Object.assign({}, value), { name: value.name, message: value.message });\n            }\n            if (key === \"headers\") {\n                return this.sanitizeHeaders(value);\n            }\n            else if (key === \"url\") {\n                return this.sanitizeUrl(value);\n            }\n            else if (key === \"query\") {\n                return this.sanitizeQuery(value);\n            }\n            else if (key === \"body\") {\n                // Don't log the request body\n                return undefined;\n            }\n            else if (key === \"response\") {\n                // Don't log response again\n                return undefined;\n            }\n            else if (key === \"operationSpec\") {\n                // When using sendOperationRequest, the request carries a massive\n                // field with the autorest spec. No need to log it.\n                return undefined;\n            }\n            else if (Array.isArray(value) || (0,_azure_core_util__WEBPACK_IMPORTED_MODULE_0__.isObject)(value)) {\n                if (seen.has(value)) {\n                    return \"[Circular]\";\n                }\n                seen.add(value);\n            }\n            return value;\n        }, 2);\n    }\n    sanitizeUrl(value) {\n        if (typeof value !== \"string\" || value === null || value === \"\") {\n            return value;\n        }\n        const url = new URL(value);\n        if (!url.search) {\n            return value;\n        }\n        for (const [key] of url.searchParams) {\n            if (!this.allowedQueryParameters.has(key.toLowerCase())) {\n                url.searchParams.set(key, RedactedString);\n            }\n        }\n        return url.toString();\n    }\n    sanitizeHeaders(obj) {\n        const sanitized = {};\n        for (const key of Object.keys(obj)) {\n            if (this.allowedHeaderNames.has(key.toLowerCase())) {\n                sanitized[key] = obj[key];\n            }\n            else {\n                sanitized[key] = RedactedString;\n            }\n        }\n        return sanitized;\n    }\n    sanitizeQuery(value) {\n        if (typeof value !== \"object\" || value === null) {\n            return value;\n        }\n        const sanitized = {};\n        for (const k of Object.keys(value)) {\n            if (this.allowedQueryParameters.has(k.toLowerCase())) {\n                sanitized[k] = value[k];\n            }\n            else {\n                sanitized[k] = RedactedString;\n            }\n        }\n        return sanitized;\n    }\n}\n//# sourceMappingURL=sanitizer.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2NvcmUtcmVzdC1waXBlbGluZS9kaXN0L2VzbS91dGlsL3Nhbml0aXplci5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFBO0FBQ0E7QUFDNEM7QUFDNUM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1Asa0JBQWtCLHdIQUF3SCxJQUFJO0FBQzlJO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EscURBQXFELFlBQVksMENBQTBDO0FBQzNHO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw2Q0FBNkMsMERBQVE7QUFDckQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2RhbmllbDMtdnAyLy4vbm9kZV9tb2R1bGVzL0BhenVyZS9jb3JlLXJlc3QtcGlwZWxpbmUvZGlzdC9lc20vdXRpbC9zYW5pdGl6ZXIuanM/YTVjMSJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi5cbi8vIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZS5cbmltcG9ydCB7IGlzT2JqZWN0IH0gZnJvbSBcIkBhenVyZS9jb3JlLXV0aWxcIjtcbmNvbnN0IFJlZGFjdGVkU3RyaW5nID0gXCJSRURBQ1RFRFwiO1xuLy8gTWFrZSBzdXJlIHRoaXMgbGlzdCBpcyB1cC10by1kYXRlIHdpdGggdGhlIG9uZSB1bmRlciBjb3JlL2xvZ2dlci9SZWFkbWUjS2V5Y29uY2VwdHNcbmNvbnN0IGRlZmF1bHRBbGxvd2VkSGVhZGVyTmFtZXMgPSBbXG4gICAgXCJ4LW1zLWNsaWVudC1yZXF1ZXN0LWlkXCIsXG4gICAgXCJ4LW1zLXJldHVybi1jbGllbnQtcmVxdWVzdC1pZFwiLFxuICAgIFwieC1tcy11c2VyYWdlbnRcIixcbiAgICBcIngtbXMtY29ycmVsYXRpb24tcmVxdWVzdC1pZFwiLFxuICAgIFwieC1tcy1yZXF1ZXN0LWlkXCIsXG4gICAgXCJjbGllbnQtcmVxdWVzdC1pZFwiLFxuICAgIFwibXMtY3ZcIixcbiAgICBcInJldHVybi1jbGllbnQtcmVxdWVzdC1pZFwiLFxuICAgIFwidHJhY2VwYXJlbnRcIixcbiAgICBcIkFjY2Vzcy1Db250cm9sLUFsbG93LUNyZWRlbnRpYWxzXCIsXG4gICAgXCJBY2Nlc3MtQ29udHJvbC1BbGxvdy1IZWFkZXJzXCIsXG4gICAgXCJBY2Nlc3MtQ29udHJvbC1BbGxvdy1NZXRob2RzXCIsXG4gICAgXCJBY2Nlc3MtQ29udHJvbC1BbGxvdy1PcmlnaW5cIixcbiAgICBcIkFjY2Vzcy1Db250cm9sLUV4cG9zZS1IZWFkZXJzXCIsXG4gICAgXCJBY2Nlc3MtQ29udHJvbC1NYXgtQWdlXCIsXG4gICAgXCJBY2Nlc3MtQ29udHJvbC1SZXF1ZXN0LUhlYWRlcnNcIixcbiAgICBcIkFjY2Vzcy1Db250cm9sLVJlcXVlc3QtTWV0aG9kXCIsXG4gICAgXCJPcmlnaW5cIixcbiAgICBcIkFjY2VwdFwiLFxuICAgIFwiQWNjZXB0LUVuY29kaW5nXCIsXG4gICAgXCJDYWNoZS1Db250cm9sXCIsXG4gICAgXCJDb25uZWN0aW9uXCIsXG4gICAgXCJDb250ZW50LUxlbmd0aFwiLFxuICAgIFwiQ29udGVudC1UeXBlXCIsXG4gICAgXCJEYXRlXCIsXG4gICAgXCJFVGFnXCIsXG4gICAgXCJFeHBpcmVzXCIsXG4gICAgXCJJZi1NYXRjaFwiLFxuICAgIFwiSWYtTW9kaWZpZWQtU2luY2VcIixcbiAgICBcIklmLU5vbmUtTWF0Y2hcIixcbiAgICBcIklmLVVubW9kaWZpZWQtU2luY2VcIixcbiAgICBcIkxhc3QtTW9kaWZpZWRcIixcbiAgICBcIlByYWdtYVwiLFxuICAgIFwiUmVxdWVzdC1JZFwiLFxuICAgIFwiUmV0cnktQWZ0ZXJcIixcbiAgICBcIlNlcnZlclwiLFxuICAgIFwiVHJhbnNmZXItRW5jb2RpbmdcIixcbiAgICBcIlVzZXItQWdlbnRcIixcbiAgICBcIldXVy1BdXRoZW50aWNhdGVcIixcbl07XG5jb25zdCBkZWZhdWx0QWxsb3dlZFF1ZXJ5UGFyYW1ldGVycyA9IFtcImFwaS12ZXJzaW9uXCJdO1xuLyoqXG4gKiBAaW50ZXJuYWxcbiAqL1xuZXhwb3J0IGNsYXNzIFNhbml0aXplciB7XG4gICAgY29uc3RydWN0b3IoeyBhZGRpdGlvbmFsQWxsb3dlZEhlYWRlck5hbWVzOiBhbGxvd2VkSGVhZGVyTmFtZXMgPSBbXSwgYWRkaXRpb25hbEFsbG93ZWRRdWVyeVBhcmFtZXRlcnM6IGFsbG93ZWRRdWVyeVBhcmFtZXRlcnMgPSBbXSwgfSA9IHt9KSB7XG4gICAgICAgIGFsbG93ZWRIZWFkZXJOYW1lcyA9IGRlZmF1bHRBbGxvd2VkSGVhZGVyTmFtZXMuY29uY2F0KGFsbG93ZWRIZWFkZXJOYW1lcyk7XG4gICAgICAgIGFsbG93ZWRRdWVyeVBhcmFtZXRlcnMgPSBkZWZhdWx0QWxsb3dlZFF1ZXJ5UGFyYW1ldGVycy5jb25jYXQoYWxsb3dlZFF1ZXJ5UGFyYW1ldGVycyk7XG4gICAgICAgIHRoaXMuYWxsb3dlZEhlYWRlck5hbWVzID0gbmV3IFNldChhbGxvd2VkSGVhZGVyTmFtZXMubWFwKChuKSA9PiBuLnRvTG93ZXJDYXNlKCkpKTtcbiAgICAgICAgdGhpcy5hbGxvd2VkUXVlcnlQYXJhbWV0ZXJzID0gbmV3IFNldChhbGxvd2VkUXVlcnlQYXJhbWV0ZXJzLm1hcCgocCkgPT4gcC50b0xvd2VyQ2FzZSgpKSk7XG4gICAgfVxuICAgIHNhbml0aXplKG9iaikge1xuICAgICAgICBjb25zdCBzZWVuID0gbmV3IFNldCgpO1xuICAgICAgICByZXR1cm4gSlNPTi5zdHJpbmdpZnkob2JqLCAoa2V5LCB2YWx1ZSkgPT4ge1xuICAgICAgICAgICAgLy8gRW5zdXJlIEVycm9ycyBpbmNsdWRlIHRoZWlyIGludGVyZXN0aW5nIG5vbi1lbnVtZXJhYmxlIG1lbWJlcnNcbiAgICAgICAgICAgIGlmICh2YWx1ZSBpbnN0YW5jZW9mIEVycm9yKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIE9iamVjdC5hc3NpZ24oT2JqZWN0LmFzc2lnbih7fSwgdmFsdWUpLCB7IG5hbWU6IHZhbHVlLm5hbWUsIG1lc3NhZ2U6IHZhbHVlLm1lc3NhZ2UgfSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAoa2V5ID09PSBcImhlYWRlcnNcIikge1xuICAgICAgICAgICAgICAgIHJldHVybiB0aGlzLnNhbml0aXplSGVhZGVycyh2YWx1ZSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIGlmIChrZXkgPT09IFwidXJsXCIpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gdGhpcy5zYW5pdGl6ZVVybCh2YWx1ZSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIGlmIChrZXkgPT09IFwicXVlcnlcIikge1xuICAgICAgICAgICAgICAgIHJldHVybiB0aGlzLnNhbml0aXplUXVlcnkodmFsdWUpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSBpZiAoa2V5ID09PSBcImJvZHlcIikge1xuICAgICAgICAgICAgICAgIC8vIERvbid0IGxvZyB0aGUgcmVxdWVzdCBib2R5XG4gICAgICAgICAgICAgICAgcmV0dXJuIHVuZGVmaW5lZDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2UgaWYgKGtleSA9PT0gXCJyZXNwb25zZVwiKSB7XG4gICAgICAgICAgICAgICAgLy8gRG9uJ3QgbG9nIHJlc3BvbnNlIGFnYWluXG4gICAgICAgICAgICAgICAgcmV0dXJuIHVuZGVmaW5lZDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2UgaWYgKGtleSA9PT0gXCJvcGVyYXRpb25TcGVjXCIpIHtcbiAgICAgICAgICAgICAgICAvLyBXaGVuIHVzaW5nIHNlbmRPcGVyYXRpb25SZXF1ZXN0LCB0aGUgcmVxdWVzdCBjYXJyaWVzIGEgbWFzc2l2ZVxuICAgICAgICAgICAgICAgIC8vIGZpZWxkIHdpdGggdGhlIGF1dG9yZXN0IHNwZWMuIE5vIG5lZWQgdG8gbG9nIGl0LlxuICAgICAgICAgICAgICAgIHJldHVybiB1bmRlZmluZWQ7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIGlmIChBcnJheS5pc0FycmF5KHZhbHVlKSB8fCBpc09iamVjdCh2YWx1ZSkpIHtcbiAgICAgICAgICAgICAgICBpZiAoc2Vlbi5oYXModmFsdWUpKSB7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBcIltDaXJjdWxhcl1cIjtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgc2Vlbi5hZGQodmFsdWUpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcmV0dXJuIHZhbHVlO1xuICAgICAgICB9LCAyKTtcbiAgICB9XG4gICAgc2FuaXRpemVVcmwodmFsdWUpIHtcbiAgICAgICAgaWYgKHR5cGVvZiB2YWx1ZSAhPT0gXCJzdHJpbmdcIiB8fCB2YWx1ZSA9PT0gbnVsbCB8fCB2YWx1ZSA9PT0gXCJcIikge1xuICAgICAgICAgICAgcmV0dXJuIHZhbHVlO1xuICAgICAgICB9XG4gICAgICAgIGNvbnN0IHVybCA9IG5ldyBVUkwodmFsdWUpO1xuICAgICAgICBpZiAoIXVybC5zZWFyY2gpIHtcbiAgICAgICAgICAgIHJldHVybiB2YWx1ZTtcbiAgICAgICAgfVxuICAgICAgICBmb3IgKGNvbnN0IFtrZXldIG9mIHVybC5zZWFyY2hQYXJhbXMpIHtcbiAgICAgICAgICAgIGlmICghdGhpcy5hbGxvd2VkUXVlcnlQYXJhbWV0ZXJzLmhhcyhrZXkudG9Mb3dlckNhc2UoKSkpIHtcbiAgICAgICAgICAgICAgICB1cmwuc2VhcmNoUGFyYW1zLnNldChrZXksIFJlZGFjdGVkU3RyaW5nKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gdXJsLnRvU3RyaW5nKCk7XG4gICAgfVxuICAgIHNhbml0aXplSGVhZGVycyhvYmopIHtcbiAgICAgICAgY29uc3Qgc2FuaXRpemVkID0ge307XG4gICAgICAgIGZvciAoY29uc3Qga2V5IG9mIE9iamVjdC5rZXlzKG9iaikpIHtcbiAgICAgICAgICAgIGlmICh0aGlzLmFsbG93ZWRIZWFkZXJOYW1lcy5oYXMoa2V5LnRvTG93ZXJDYXNlKCkpKSB7XG4gICAgICAgICAgICAgICAgc2FuaXRpemVkW2tleV0gPSBvYmpba2V5XTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgIHNhbml0aXplZFtrZXldID0gUmVkYWN0ZWRTdHJpbmc7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHNhbml0aXplZDtcbiAgICB9XG4gICAgc2FuaXRpemVRdWVyeSh2YWx1ZSkge1xuICAgICAgICBpZiAodHlwZW9mIHZhbHVlICE9PSBcIm9iamVjdFwiIHx8IHZhbHVlID09PSBudWxsKSB7XG4gICAgICAgICAgICByZXR1cm4gdmFsdWU7XG4gICAgICAgIH1cbiAgICAgICAgY29uc3Qgc2FuaXRpemVkID0ge307XG4gICAgICAgIGZvciAoY29uc3QgayBvZiBPYmplY3Qua2V5cyh2YWx1ZSkpIHtcbiAgICAgICAgICAgIGlmICh0aGlzLmFsbG93ZWRRdWVyeVBhcmFtZXRlcnMuaGFzKGsudG9Mb3dlckNhc2UoKSkpIHtcbiAgICAgICAgICAgICAgICBzYW5pdGl6ZWRba10gPSB2YWx1ZVtrXTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgIHNhbml0aXplZFtrXSA9IFJlZGFjdGVkU3RyaW5nO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIHJldHVybiBzYW5pdGl6ZWQ7XG4gICAgfVxufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9c2FuaXRpemVyLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/core-rest-pipeline/dist/esm/util/sanitizer.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/core-rest-pipeline/dist/esm/util/tokenCycler.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@azure/core-rest-pipeline/dist/esm/util/tokenCycler.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DEFAULT_CYCLER_OPTIONS: () => (/* binding */ DEFAULT_CYCLER_OPTIONS),\n/* harmony export */   createTokenCycler: () => (/* binding */ createTokenCycler)\n/* harmony export */ });\n/* harmony import */ var _helpers_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./helpers.js */ \"(rsc)/./node_modules/@azure/core-rest-pipeline/dist/esm/util/helpers.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\n// Default options for the cycler if none are provided\nconst DEFAULT_CYCLER_OPTIONS = {\n    forcedRefreshWindowInMs: 1000, // Force waiting for a refresh 1s before the token expires\n    retryIntervalInMs: 3000, // Allow refresh attempts every 3s\n    refreshWindowInMs: 1000 * 60 * 2, // Start refreshing 2m before expiry\n};\n/**\n * Converts an an unreliable access token getter (which may resolve with null)\n * into an AccessTokenGetter by retrying the unreliable getter in a regular\n * interval.\n *\n * @param getAccessToken - A function that produces a promise of an access token that may fail by returning null.\n * @param retryIntervalInMs - The time (in milliseconds) to wait between retry attempts.\n * @param refreshTimeout - The timestamp after which the refresh attempt will fail, throwing an exception.\n * @returns - A promise that, if it resolves, will resolve with an access token.\n */\nasync function beginRefresh(getAccessToken, retryIntervalInMs, refreshTimeout) {\n    // This wrapper handles exceptions gracefully as long as we haven't exceeded\n    // the timeout.\n    async function tryGetAccessToken() {\n        if (Date.now() < refreshTimeout) {\n            try {\n                return await getAccessToken();\n            }\n            catch (_a) {\n                return null;\n            }\n        }\n        else {\n            const finalToken = await getAccessToken();\n            // Timeout is up, so throw if it's still null\n            if (finalToken === null) {\n                throw new Error(\"Failed to refresh access token.\");\n            }\n            return finalToken;\n        }\n    }\n    let token = await tryGetAccessToken();\n    while (token === null) {\n        await (0,_helpers_js__WEBPACK_IMPORTED_MODULE_0__.delay)(retryIntervalInMs);\n        token = await tryGetAccessToken();\n    }\n    return token;\n}\n/**\n * Creates a token cycler from a credential, scopes, and optional settings.\n *\n * A token cycler represents a way to reliably retrieve a valid access token\n * from a TokenCredential. It will handle initializing the token, refreshing it\n * when it nears expiration, and synchronizes refresh attempts to avoid\n * concurrency hazards.\n *\n * @param credential - the underlying TokenCredential that provides the access\n * token\n * @param tokenCyclerOptions - optionally override default settings for the cycler\n *\n * @returns - a function that reliably produces a valid access token\n */\nfunction createTokenCycler(credential, tokenCyclerOptions) {\n    let refreshWorker = null;\n    let token = null;\n    let tenantId;\n    const options = Object.assign(Object.assign({}, DEFAULT_CYCLER_OPTIONS), tokenCyclerOptions);\n    /**\n     * This little holder defines several predicates that we use to construct\n     * the rules of refreshing the token.\n     */\n    const cycler = {\n        /**\n         * Produces true if a refresh job is currently in progress.\n         */\n        get isRefreshing() {\n            return refreshWorker !== null;\n        },\n        /**\n         * Produces true if the cycler SHOULD refresh (we are within the refresh\n         * window and not already refreshing)\n         */\n        get shouldRefresh() {\n            var _a;\n            return (!cycler.isRefreshing &&\n                ((_a = token === null || token === void 0 ? void 0 : token.expiresOnTimestamp) !== null && _a !== void 0 ? _a : 0) - options.refreshWindowInMs < Date.now());\n        },\n        /**\n         * Produces true if the cycler MUST refresh (null or nearly-expired\n         * token).\n         */\n        get mustRefresh() {\n            return (token === null || token.expiresOnTimestamp - options.forcedRefreshWindowInMs < Date.now());\n        },\n    };\n    /**\n     * Starts a refresh job or returns the existing job if one is already\n     * running.\n     */\n    function refresh(scopes, getTokenOptions) {\n        var _a;\n        if (!cycler.isRefreshing) {\n            // We bind `scopes` here to avoid passing it around a lot\n            const tryGetAccessToken = () => credential.getToken(scopes, getTokenOptions);\n            // Take advantage of promise chaining to insert an assignment to `token`\n            // before the refresh can be considered done.\n            refreshWorker = beginRefresh(tryGetAccessToken, options.retryIntervalInMs, \n            // If we don't have a token, then we should timeout immediately\n            (_a = token === null || token === void 0 ? void 0 : token.expiresOnTimestamp) !== null && _a !== void 0 ? _a : Date.now())\n                .then((_token) => {\n                refreshWorker = null;\n                token = _token;\n                tenantId = getTokenOptions.tenantId;\n                return token;\n            })\n                .catch((reason) => {\n                // We also should reset the refresher if we enter a failed state.  All\n                // existing awaiters will throw, but subsequent requests will start a\n                // new retry chain.\n                refreshWorker = null;\n                token = null;\n                tenantId = undefined;\n                throw reason;\n            });\n        }\n        return refreshWorker;\n    }\n    return async (scopes, tokenOptions) => {\n        //\n        // Simple rules:\n        // - If we MUST refresh, then return the refresh task, blocking\n        //   the pipeline until a token is available.\n        // - If we SHOULD refresh, then run refresh but don't return it\n        //   (we can still use the cached token).\n        // - Return the token, since it's fine if we didn't return in\n        //   step 1.\n        //\n        const hasClaimChallenge = Boolean(tokenOptions.claims);\n        const tenantIdChanged = tenantId !== tokenOptions.tenantId;\n        if (hasClaimChallenge) {\n            // If we've received a claim, we know the existing token isn't valid\n            // We want to clear it so that that refresh worker won't use the old expiration time as a timeout\n            token = null;\n        }\n        // If the tenantId passed in token options is different to the one we have\n        // Or if we are in claim challenge and the token was rejected and a new access token need to be issued, we need to\n        // refresh the token with the new tenantId or token.\n        const mustRefresh = tenantIdChanged || hasClaimChallenge || cycler.mustRefresh;\n        if (mustRefresh) {\n            return refresh(scopes, tokenOptions);\n        }\n        if (cycler.shouldRefresh) {\n            refresh(scopes, tokenOptions);\n        }\n        return token;\n    };\n}\n//# sourceMappingURL=tokenCycler.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/core-rest-pipeline/dist/esm/util/tokenCycler.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/core-rest-pipeline/dist/esm/util/typeGuards.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@azure/core-rest-pipeline/dist/esm/util/typeGuards.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   isBlob: () => (/* binding */ isBlob),\n/* harmony export */   isNodeReadableStream: () => (/* binding */ isNodeReadableStream),\n/* harmony export */   isReadableStream: () => (/* binding */ isReadableStream),\n/* harmony export */   isWebReadableStream: () => (/* binding */ isWebReadableStream)\n/* harmony export */ });\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\nfunction isNodeReadableStream(x) {\n    return Boolean(x && typeof x[\"pipe\"] === \"function\");\n}\nfunction isWebReadableStream(x) {\n    return Boolean(x &&\n        typeof x.getReader === \"function\" &&\n        typeof x.tee === \"function\");\n}\nfunction isReadableStream(x) {\n    return isNodeReadableStream(x) || isWebReadableStream(x);\n}\nfunction isBlob(x) {\n    return typeof x.stream === \"function\";\n}\n//# sourceMappingURL=typeGuards.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2NvcmUtcmVzdC1waXBlbGluZS9kaXN0L2VzbS91dGlsL3R5cGVHdWFyZHMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9kYW5pZWwzLXZwMi8uL25vZGVfbW9kdWxlcy9AYXp1cmUvY29yZS1yZXN0LXBpcGVsaW5lL2Rpc3QvZXNtL3V0aWwvdHlwZUd1YXJkcy5qcz9lYTljIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLlxuLy8gTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlLlxuZXhwb3J0IGZ1bmN0aW9uIGlzTm9kZVJlYWRhYmxlU3RyZWFtKHgpIHtcbiAgICByZXR1cm4gQm9vbGVhbih4ICYmIHR5cGVvZiB4W1wicGlwZVwiXSA9PT0gXCJmdW5jdGlvblwiKTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBpc1dlYlJlYWRhYmxlU3RyZWFtKHgpIHtcbiAgICByZXR1cm4gQm9vbGVhbih4ICYmXG4gICAgICAgIHR5cGVvZiB4LmdldFJlYWRlciA9PT0gXCJmdW5jdGlvblwiICYmXG4gICAgICAgIHR5cGVvZiB4LnRlZSA9PT0gXCJmdW5jdGlvblwiKTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBpc1JlYWRhYmxlU3RyZWFtKHgpIHtcbiAgICByZXR1cm4gaXNOb2RlUmVhZGFibGVTdHJlYW0oeCkgfHwgaXNXZWJSZWFkYWJsZVN0cmVhbSh4KTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBpc0Jsb2IoeCkge1xuICAgIHJldHVybiB0eXBlb2YgeC5zdHJlYW0gPT09IFwiZnVuY3Rpb25cIjtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXR5cGVHdWFyZHMuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/core-rest-pipeline/dist/esm/util/typeGuards.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/core-rest-pipeline/dist/esm/util/userAgent.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@azure/core-rest-pipeline/dist/esm/util/userAgent.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getUserAgentHeaderName: () => (/* binding */ getUserAgentHeaderName),\n/* harmony export */   getUserAgentValue: () => (/* binding */ getUserAgentValue)\n/* harmony export */ });\n/* harmony import */ var _userAgentPlatform_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./userAgentPlatform.js */ \"(rsc)/./node_modules/@azure/core-rest-pipeline/dist/esm/util/userAgentPlatform.js\");\n/* harmony import */ var _constants_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../constants.js */ \"(rsc)/./node_modules/@azure/core-rest-pipeline/dist/esm/constants.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\n\nfunction getUserAgentString(telemetryInfo) {\n    const parts = [];\n    for (const [key, value] of telemetryInfo) {\n        const token = value ? `${key}/${value}` : key;\n        parts.push(token);\n    }\n    return parts.join(\" \");\n}\n/**\n * @internal\n */\nfunction getUserAgentHeaderName() {\n    return (0,_userAgentPlatform_js__WEBPACK_IMPORTED_MODULE_0__.getHeaderName)();\n}\n/**\n * @internal\n */\nasync function getUserAgentValue(prefix) {\n    const runtimeInfo = new Map();\n    runtimeInfo.set(\"core-rest-pipeline\", _constants_js__WEBPACK_IMPORTED_MODULE_1__.SDK_VERSION);\n    await (0,_userAgentPlatform_js__WEBPACK_IMPORTED_MODULE_0__.setPlatformSpecificData)(runtimeInfo);\n    const defaultAgent = getUserAgentString(runtimeInfo);\n    const userAgentValue = prefix ? `${prefix} ${defaultAgent}` : defaultAgent;\n    return userAgentValue;\n}\n//# sourceMappingURL=userAgent.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2NvcmUtcmVzdC1waXBlbGluZS9kaXN0L2VzbS91dGlsL3VzZXJBZ2VudC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7QUFDQTtBQUNnRjtBQUNsQztBQUM5QztBQUNBO0FBQ0E7QUFDQSxpQ0FBaUMsSUFBSSxHQUFHLE1BQU07QUFDOUM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQLFdBQVcsb0VBQWE7QUFDeEI7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0EsMENBQTBDLHNEQUFXO0FBQ3JELFVBQVUsOEVBQXVCO0FBQ2pDO0FBQ0EsdUNBQXVDLFFBQVEsRUFBRSxhQUFhO0FBQzlEO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2RhbmllbDMtdnAyLy4vbm9kZV9tb2R1bGVzL0BhenVyZS9jb3JlLXJlc3QtcGlwZWxpbmUvZGlzdC9lc20vdXRpbC91c2VyQWdlbnQuanM/NWQ4NiJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi5cbi8vIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZS5cbmltcG9ydCB7IGdldEhlYWRlck5hbWUsIHNldFBsYXRmb3JtU3BlY2lmaWNEYXRhIH0gZnJvbSBcIi4vdXNlckFnZW50UGxhdGZvcm0uanNcIjtcbmltcG9ydCB7IFNES19WRVJTSU9OIH0gZnJvbSBcIi4uL2NvbnN0YW50cy5qc1wiO1xuZnVuY3Rpb24gZ2V0VXNlckFnZW50U3RyaW5nKHRlbGVtZXRyeUluZm8pIHtcbiAgICBjb25zdCBwYXJ0cyA9IFtdO1xuICAgIGZvciAoY29uc3QgW2tleSwgdmFsdWVdIG9mIHRlbGVtZXRyeUluZm8pIHtcbiAgICAgICAgY29uc3QgdG9rZW4gPSB2YWx1ZSA/IGAke2tleX0vJHt2YWx1ZX1gIDoga2V5O1xuICAgICAgICBwYXJ0cy5wdXNoKHRva2VuKTtcbiAgICB9XG4gICAgcmV0dXJuIHBhcnRzLmpvaW4oXCIgXCIpO1xufVxuLyoqXG4gKiBAaW50ZXJuYWxcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGdldFVzZXJBZ2VudEhlYWRlck5hbWUoKSB7XG4gICAgcmV0dXJuIGdldEhlYWRlck5hbWUoKTtcbn1cbi8qKlxuICogQGludGVybmFsXG4gKi9cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBnZXRVc2VyQWdlbnRWYWx1ZShwcmVmaXgpIHtcbiAgICBjb25zdCBydW50aW1lSW5mbyA9IG5ldyBNYXAoKTtcbiAgICBydW50aW1lSW5mby5zZXQoXCJjb3JlLXJlc3QtcGlwZWxpbmVcIiwgU0RLX1ZFUlNJT04pO1xuICAgIGF3YWl0IHNldFBsYXRmb3JtU3BlY2lmaWNEYXRhKHJ1bnRpbWVJbmZvKTtcbiAgICBjb25zdCBkZWZhdWx0QWdlbnQgPSBnZXRVc2VyQWdlbnRTdHJpbmcocnVudGltZUluZm8pO1xuICAgIGNvbnN0IHVzZXJBZ2VudFZhbHVlID0gcHJlZml4ID8gYCR7cHJlZml4fSAke2RlZmF1bHRBZ2VudH1gIDogZGVmYXVsdEFnZW50O1xuICAgIHJldHVybiB1c2VyQWdlbnRWYWx1ZTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXVzZXJBZ2VudC5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/core-rest-pipeline/dist/esm/util/userAgent.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/core-rest-pipeline/dist/esm/util/userAgentPlatform.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/@azure/core-rest-pipeline/dist/esm/util/userAgentPlatform.js ***!
  \***********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("var node_process__WEBPACK_IMPORTED_MODULE_1___namespace_cache;\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getHeaderName: () => (/* binding */ getHeaderName),\n/* harmony export */   setPlatformSpecificData: () => (/* binding */ setPlatformSpecificData)\n/* harmony export */ });\n/* harmony import */ var node_os__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! node:os */ \"node:os\");\n/* harmony import */ var node_process__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! node:process */ \"node:process\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\n\n/**\n * @internal\n */\nfunction getHeaderName() {\n    return \"User-Agent\";\n}\n/**\n * @internal\n */\nasync function setPlatformSpecificData(map) {\n    if (/*#__PURE__*/ (node_process__WEBPACK_IMPORTED_MODULE_1___namespace_cache || (node_process__WEBPACK_IMPORTED_MODULE_1___namespace_cache = __webpack_require__.t(node_process__WEBPACK_IMPORTED_MODULE_1__, 2))) && node_process__WEBPACK_IMPORTED_MODULE_1__.versions) {\n        const versions = node_process__WEBPACK_IMPORTED_MODULE_1__.versions;\n        if (versions.bun) {\n            map.set(\"Bun\", versions.bun);\n        }\n        else if (versions.deno) {\n            map.set(\"Deno\", versions.deno);\n        }\n        else if (versions.node) {\n            map.set(\"Node\", versions.node);\n        }\n    }\n    map.set(\"OS\", `(${node_os__WEBPACK_IMPORTED_MODULE_0__.arch()}-${node_os__WEBPACK_IMPORTED_MODULE_0__.type()}-${node_os__WEBPACK_IMPORTED_MODULE_0__.release()})`);\n}\n//# sourceMappingURL=userAgentPlatform.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2NvcmUtcmVzdC1waXBlbGluZS9kaXN0L2VzbS91dGlsL3VzZXJBZ2VudFBsYXRmb3JtLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQUE7QUFDQTtBQUM4QjtBQUNVO0FBQ3hDO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1AsUUFBUSw4TUFBTyxJQUFJLGtEQUFnQjtBQUNuQyx5QkFBeUIsa0RBQWdCO0FBQ3pDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esc0JBQXNCLHlDQUFPLEdBQUcsR0FBRyx5Q0FBTyxHQUFHLEdBQUcsNENBQVUsR0FBRztBQUM3RDtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZGFuaWVsMy12cDIvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2NvcmUtcmVzdC1waXBlbGluZS9kaXN0L2VzbS91dGlsL3VzZXJBZ2VudFBsYXRmb3JtLmpzPzIxYWUiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uXG4vLyBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UuXG5pbXBvcnQgKiBhcyBvcyBmcm9tIFwibm9kZTpvc1wiO1xuaW1wb3J0ICogYXMgcHJvY2VzcyBmcm9tIFwibm9kZTpwcm9jZXNzXCI7XG4vKipcbiAqIEBpbnRlcm5hbFxuICovXG5leHBvcnQgZnVuY3Rpb24gZ2V0SGVhZGVyTmFtZSgpIHtcbiAgICByZXR1cm4gXCJVc2VyLUFnZW50XCI7XG59XG4vKipcbiAqIEBpbnRlcm5hbFxuICovXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gc2V0UGxhdGZvcm1TcGVjaWZpY0RhdGEobWFwKSB7XG4gICAgaWYgKHByb2Nlc3MgJiYgcHJvY2Vzcy52ZXJzaW9ucykge1xuICAgICAgICBjb25zdCB2ZXJzaW9ucyA9IHByb2Nlc3MudmVyc2lvbnM7XG4gICAgICAgIGlmICh2ZXJzaW9ucy5idW4pIHtcbiAgICAgICAgICAgIG1hcC5zZXQoXCJCdW5cIiwgdmVyc2lvbnMuYnVuKTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIGlmICh2ZXJzaW9ucy5kZW5vKSB7XG4gICAgICAgICAgICBtYXAuc2V0KFwiRGVub1wiLCB2ZXJzaW9ucy5kZW5vKTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIGlmICh2ZXJzaW9ucy5ub2RlKSB7XG4gICAgICAgICAgICBtYXAuc2V0KFwiTm9kZVwiLCB2ZXJzaW9ucy5ub2RlKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBtYXAuc2V0KFwiT1NcIiwgYCgke29zLmFyY2goKX0tJHtvcy50eXBlKCl9LSR7b3MucmVsZWFzZSgpfSlgKTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXVzZXJBZ2VudFBsYXRmb3JtLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/core-rest-pipeline/dist/esm/util/userAgentPlatform.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/core-tracing/dist/esm/index.js":
/*!************************************************************!*\
  !*** ./node_modules/@azure/core-tracing/dist/esm/index.js ***!
  \************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createTracingClient: () => (/* reexport safe */ _tracingClient_js__WEBPACK_IMPORTED_MODULE_1__.createTracingClient),\n/* harmony export */   useInstrumenter: () => (/* reexport safe */ _instrumenter_js__WEBPACK_IMPORTED_MODULE_0__.useInstrumenter)\n/* harmony export */ });\n/* harmony import */ var _instrumenter_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./instrumenter.js */ \"(rsc)/./node_modules/@azure/core-tracing/dist/esm/instrumenter.js\");\n/* harmony import */ var _tracingClient_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./tracingClient.js */ \"(rsc)/./node_modules/@azure/core-tracing/dist/esm/tracingClient.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\n\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2NvcmUtdHJhY2luZy9kaXN0L2VzbS9pbmRleC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7QUFDQTtBQUNvRDtBQUNLO0FBQ3pEIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZGFuaWVsMy12cDIvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2NvcmUtdHJhY2luZy9kaXN0L2VzbS9pbmRleC5qcz81ZmFjIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLlxuLy8gTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlLlxuZXhwb3J0IHsgdXNlSW5zdHJ1bWVudGVyIH0gZnJvbSBcIi4vaW5zdHJ1bWVudGVyLmpzXCI7XG5leHBvcnQgeyBjcmVhdGVUcmFjaW5nQ2xpZW50IH0gZnJvbSBcIi4vdHJhY2luZ0NsaWVudC5qc1wiO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW5kZXguanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/core-tracing/dist/esm/index.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/core-tracing/dist/esm/instrumenter.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@azure/core-tracing/dist/esm/instrumenter.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createDefaultInstrumenter: () => (/* binding */ createDefaultInstrumenter),\n/* harmony export */   createDefaultTracingSpan: () => (/* binding */ createDefaultTracingSpan),\n/* harmony export */   getInstrumenter: () => (/* binding */ getInstrumenter),\n/* harmony export */   useInstrumenter: () => (/* binding */ useInstrumenter)\n/* harmony export */ });\n/* harmony import */ var _tracingContext_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./tracingContext.js */ \"(rsc)/./node_modules/@azure/core-tracing/dist/esm/tracingContext.js\");\n/* harmony import */ var _state_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./state.js */ \"(rsc)/./node_modules/@azure/core-tracing/dist/esm/state.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\n\nfunction createDefaultTracingSpan() {\n    return {\n        end: () => {\n            // noop\n        },\n        isRecording: () => false,\n        recordException: () => {\n            // noop\n        },\n        setAttribute: () => {\n            // noop\n        },\n        setStatus: () => {\n            // noop\n        },\n    };\n}\nfunction createDefaultInstrumenter() {\n    return {\n        createRequestHeaders: () => {\n            return {};\n        },\n        parseTraceparentHeader: () => {\n            return undefined;\n        },\n        startSpan: (_name, spanOptions) => {\n            return {\n                span: createDefaultTracingSpan(),\n                tracingContext: (0,_tracingContext_js__WEBPACK_IMPORTED_MODULE_0__.createTracingContext)({ parentContext: spanOptions.tracingContext }),\n            };\n        },\n        withContext(_context, callback, ...callbackArgs) {\n            return callback(...callbackArgs);\n        },\n    };\n}\n/**\n * Extends the Azure SDK with support for a given instrumenter implementation.\n *\n * @param instrumenter - The instrumenter implementation to use.\n */\nfunction useInstrumenter(instrumenter) {\n    _state_js__WEBPACK_IMPORTED_MODULE_1__.state.instrumenterImplementation = instrumenter;\n}\n/**\n * Gets the currently set instrumenter, a No-Op instrumenter by default.\n *\n * @returns The currently set instrumenter\n */\nfunction getInstrumenter() {\n    if (!_state_js__WEBPACK_IMPORTED_MODULE_1__.state.instrumenterImplementation) {\n        _state_js__WEBPACK_IMPORTED_MODULE_1__.state.instrumenterImplementation = createDefaultInstrumenter();\n    }\n    return _state_js__WEBPACK_IMPORTED_MODULE_1__.state.instrumenterImplementation;\n}\n//# sourceMappingURL=instrumenter.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2NvcmUtdHJhY2luZy9kaXN0L2VzbS9pbnN0cnVtZW50ZXIuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQUE7QUFDQTtBQUMyRDtBQUN4QjtBQUM1QjtBQUNQO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBLGdDQUFnQyx3RUFBb0IsR0FBRywyQ0FBMkM7QUFDbEc7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1AsSUFBSSw0Q0FBSztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1AsU0FBUyw0Q0FBSztBQUNkLFFBQVEsNENBQUs7QUFDYjtBQUNBLFdBQVcsNENBQUs7QUFDaEI7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2RhbmllbDMtdnAyLy4vbm9kZV9tb2R1bGVzL0BhenVyZS9jb3JlLXRyYWNpbmcvZGlzdC9lc20vaW5zdHJ1bWVudGVyLmpzPzIxMTEiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uXG4vLyBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UuXG5pbXBvcnQgeyBjcmVhdGVUcmFjaW5nQ29udGV4dCB9IGZyb20gXCIuL3RyYWNpbmdDb250ZXh0LmpzXCI7XG5pbXBvcnQgeyBzdGF0ZSB9IGZyb20gXCIuL3N0YXRlLmpzXCI7XG5leHBvcnQgZnVuY3Rpb24gY3JlYXRlRGVmYXVsdFRyYWNpbmdTcGFuKCkge1xuICAgIHJldHVybiB7XG4gICAgICAgIGVuZDogKCkgPT4ge1xuICAgICAgICAgICAgLy8gbm9vcFxuICAgICAgICB9LFxuICAgICAgICBpc1JlY29yZGluZzogKCkgPT4gZmFsc2UsXG4gICAgICAgIHJlY29yZEV4Y2VwdGlvbjogKCkgPT4ge1xuICAgICAgICAgICAgLy8gbm9vcFxuICAgICAgICB9LFxuICAgICAgICBzZXRBdHRyaWJ1dGU6ICgpID0+IHtcbiAgICAgICAgICAgIC8vIG5vb3BcbiAgICAgICAgfSxcbiAgICAgICAgc2V0U3RhdHVzOiAoKSA9PiB7XG4gICAgICAgICAgICAvLyBub29wXG4gICAgICAgIH0sXG4gICAgfTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBjcmVhdGVEZWZhdWx0SW5zdHJ1bWVudGVyKCkge1xuICAgIHJldHVybiB7XG4gICAgICAgIGNyZWF0ZVJlcXVlc3RIZWFkZXJzOiAoKSA9PiB7XG4gICAgICAgICAgICByZXR1cm4ge307XG4gICAgICAgIH0sXG4gICAgICAgIHBhcnNlVHJhY2VwYXJlbnRIZWFkZXI6ICgpID0+IHtcbiAgICAgICAgICAgIHJldHVybiB1bmRlZmluZWQ7XG4gICAgICAgIH0sXG4gICAgICAgIHN0YXJ0U3BhbjogKF9uYW1lLCBzcGFuT3B0aW9ucykgPT4ge1xuICAgICAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgICAgICBzcGFuOiBjcmVhdGVEZWZhdWx0VHJhY2luZ1NwYW4oKSxcbiAgICAgICAgICAgICAgICB0cmFjaW5nQ29udGV4dDogY3JlYXRlVHJhY2luZ0NvbnRleHQoeyBwYXJlbnRDb250ZXh0OiBzcGFuT3B0aW9ucy50cmFjaW5nQ29udGV4dCB9KSxcbiAgICAgICAgICAgIH07XG4gICAgICAgIH0sXG4gICAgICAgIHdpdGhDb250ZXh0KF9jb250ZXh0LCBjYWxsYmFjaywgLi4uY2FsbGJhY2tBcmdzKSB7XG4gICAgICAgICAgICByZXR1cm4gY2FsbGJhY2soLi4uY2FsbGJhY2tBcmdzKTtcbiAgICAgICAgfSxcbiAgICB9O1xufVxuLyoqXG4gKiBFeHRlbmRzIHRoZSBBenVyZSBTREsgd2l0aCBzdXBwb3J0IGZvciBhIGdpdmVuIGluc3RydW1lbnRlciBpbXBsZW1lbnRhdGlvbi5cbiAqXG4gKiBAcGFyYW0gaW5zdHJ1bWVudGVyIC0gVGhlIGluc3RydW1lbnRlciBpbXBsZW1lbnRhdGlvbiB0byB1c2UuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiB1c2VJbnN0cnVtZW50ZXIoaW5zdHJ1bWVudGVyKSB7XG4gICAgc3RhdGUuaW5zdHJ1bWVudGVySW1wbGVtZW50YXRpb24gPSBpbnN0cnVtZW50ZXI7XG59XG4vKipcbiAqIEdldHMgdGhlIGN1cnJlbnRseSBzZXQgaW5zdHJ1bWVudGVyLCBhIE5vLU9wIGluc3RydW1lbnRlciBieSBkZWZhdWx0LlxuICpcbiAqIEByZXR1cm5zIFRoZSBjdXJyZW50bHkgc2V0IGluc3RydW1lbnRlclxuICovXG5leHBvcnQgZnVuY3Rpb24gZ2V0SW5zdHJ1bWVudGVyKCkge1xuICAgIGlmICghc3RhdGUuaW5zdHJ1bWVudGVySW1wbGVtZW50YXRpb24pIHtcbiAgICAgICAgc3RhdGUuaW5zdHJ1bWVudGVySW1wbGVtZW50YXRpb24gPSBjcmVhdGVEZWZhdWx0SW5zdHJ1bWVudGVyKCk7XG4gICAgfVxuICAgIHJldHVybiBzdGF0ZS5pbnN0cnVtZW50ZXJJbXBsZW1lbnRhdGlvbjtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWluc3RydW1lbnRlci5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/core-tracing/dist/esm/instrumenter.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/core-tracing/dist/esm/state.js":
/*!************************************************************!*\
  !*** ./node_modules/@azure/core-tracing/dist/esm/state.js ***!
  \************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   state: () => (/* binding */ state)\n/* harmony export */ });\n/* harmony import */ var _commonjs_state_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../commonjs/state.js */ \"(rsc)/./node_modules/@azure/core-tracing/dist/commonjs/state.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n// @ts-expect-error The recommended approach to sharing module state between ESM and CJS.\n// See https://github.com/isaacs/tshy/blob/main/README.md#module-local-state for additional information.\n\n/**\n * Defines the shared state between CJS and ESM by re-exporting the CJS state.\n */\nconst state = _commonjs_state_js__WEBPACK_IMPORTED_MODULE_0__.state;\n//# sourceMappingURL=state.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2NvcmUtdHJhY2luZy9kaXN0L2VzbS9zdGF0ZS5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ3lEO0FBQ3pEO0FBQ0E7QUFDQTtBQUNPLGNBQWMscURBQVE7QUFDN0IiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9kYW5pZWwzLXZwMi8uL25vZGVfbW9kdWxlcy9AYXp1cmUvY29yZS10cmFjaW5nL2Rpc3QvZXNtL3N0YXRlLmpzPzE4MWQiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uXG4vLyBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UuXG4vLyBAdHMtZXhwZWN0LWVycm9yIFRoZSByZWNvbW1lbmRlZCBhcHByb2FjaCB0byBzaGFyaW5nIG1vZHVsZSBzdGF0ZSBiZXR3ZWVuIEVTTSBhbmQgQ0pTLlxuLy8gU2VlIGh0dHBzOi8vZ2l0aHViLmNvbS9pc2FhY3MvdHNoeS9ibG9iL21haW4vUkVBRE1FLm1kI21vZHVsZS1sb2NhbC1zdGF0ZSBmb3IgYWRkaXRpb25hbCBpbmZvcm1hdGlvbi5cbmltcG9ydCB7IHN0YXRlIGFzIGNqc1N0YXRlIH0gZnJvbSBcIi4uL2NvbW1vbmpzL3N0YXRlLmpzXCI7XG4vKipcbiAqIERlZmluZXMgdGhlIHNoYXJlZCBzdGF0ZSBiZXR3ZWVuIENKUyBhbmQgRVNNIGJ5IHJlLWV4cG9ydGluZyB0aGUgQ0pTIHN0YXRlLlxuICovXG5leHBvcnQgY29uc3Qgc3RhdGUgPSBjanNTdGF0ZTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXN0YXRlLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/core-tracing/dist/esm/state.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/core-tracing/dist/esm/tracingClient.js":
/*!********************************************************************!*\
  !*** ./node_modules/@azure/core-tracing/dist/esm/tracingClient.js ***!
  \********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createTracingClient: () => (/* binding */ createTracingClient)\n/* harmony export */ });\n/* harmony import */ var _instrumenter_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./instrumenter.js */ \"(rsc)/./node_modules/@azure/core-tracing/dist/esm/instrumenter.js\");\n/* harmony import */ var _tracingContext_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./tracingContext.js */ \"(rsc)/./node_modules/@azure/core-tracing/dist/esm/tracingContext.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\n\n/**\n * Creates a new tracing client.\n *\n * @param options - Options used to configure the tracing client.\n * @returns - An instance of {@link TracingClient}.\n */\nfunction createTracingClient(options) {\n    const { namespace, packageName, packageVersion } = options;\n    function startSpan(name, operationOptions, spanOptions) {\n        var _a;\n        const startSpanResult = (0,_instrumenter_js__WEBPACK_IMPORTED_MODULE_0__.getInstrumenter)().startSpan(name, Object.assign(Object.assign({}, spanOptions), { packageName: packageName, packageVersion: packageVersion, tracingContext: (_a = operationOptions === null || operationOptions === void 0 ? void 0 : operationOptions.tracingOptions) === null || _a === void 0 ? void 0 : _a.tracingContext }));\n        let tracingContext = startSpanResult.tracingContext;\n        const span = startSpanResult.span;\n        if (!tracingContext.getValue(_tracingContext_js__WEBPACK_IMPORTED_MODULE_1__.knownContextKeys.namespace)) {\n            tracingContext = tracingContext.setValue(_tracingContext_js__WEBPACK_IMPORTED_MODULE_1__.knownContextKeys.namespace, namespace);\n        }\n        span.setAttribute(\"az.namespace\", tracingContext.getValue(_tracingContext_js__WEBPACK_IMPORTED_MODULE_1__.knownContextKeys.namespace));\n        const updatedOptions = Object.assign({}, operationOptions, {\n            tracingOptions: Object.assign(Object.assign({}, operationOptions === null || operationOptions === void 0 ? void 0 : operationOptions.tracingOptions), { tracingContext }),\n        });\n        return {\n            span,\n            updatedOptions,\n        };\n    }\n    async function withSpan(name, operationOptions, callback, spanOptions) {\n        const { span, updatedOptions } = startSpan(name, operationOptions, spanOptions);\n        try {\n            const result = await withContext(updatedOptions.tracingOptions.tracingContext, () => Promise.resolve(callback(updatedOptions, span)));\n            span.setStatus({ status: \"success\" });\n            return result;\n        }\n        catch (err) {\n            span.setStatus({ status: \"error\", error: err });\n            throw err;\n        }\n        finally {\n            span.end();\n        }\n    }\n    function withContext(context, callback, ...callbackArgs) {\n        return (0,_instrumenter_js__WEBPACK_IMPORTED_MODULE_0__.getInstrumenter)().withContext(context, callback, ...callbackArgs);\n    }\n    /**\n     * Parses a traceparent header value into a span identifier.\n     *\n     * @param traceparentHeader - The traceparent header to parse.\n     * @returns An implementation-specific identifier for the span.\n     */\n    function parseTraceparentHeader(traceparentHeader) {\n        return (0,_instrumenter_js__WEBPACK_IMPORTED_MODULE_0__.getInstrumenter)().parseTraceparentHeader(traceparentHeader);\n    }\n    /**\n     * Creates a set of request headers to propagate tracing information to a backend.\n     *\n     * @param tracingContext - The context containing the span to serialize.\n     * @returns The set of headers to add to a request.\n     */\n    function createRequestHeaders(tracingContext) {\n        return (0,_instrumenter_js__WEBPACK_IMPORTED_MODULE_0__.getInstrumenter)().createRequestHeaders(tracingContext);\n    }\n    return {\n        startSpan,\n        withSpan,\n        withContext,\n        parseTraceparentHeader,\n        createRequestHeaders,\n    };\n}\n//# sourceMappingURL=tracingClient.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2NvcmUtdHJhY2luZy9kaXN0L2VzbS90cmFjaW5nQ2xpZW50LmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFBO0FBQ0E7QUFDb0Q7QUFDRztBQUN2RDtBQUNBO0FBQ0E7QUFDQTtBQUNBLDhCQUE4QixvQkFBb0I7QUFDbEQ7QUFDTztBQUNQLFlBQVkseUNBQXlDO0FBQ3JEO0FBQ0E7QUFDQSxnQ0FBZ0MsaUVBQWUsaURBQWlELGtCQUFrQiw2T0FBNk87QUFDL1Y7QUFDQTtBQUNBLHFDQUFxQyxnRUFBZ0I7QUFDckQscURBQXFELGdFQUFnQjtBQUNyRTtBQUNBLGtFQUFrRSxnRUFBZ0I7QUFDbEYsK0NBQStDO0FBQy9DLDBEQUEwRCwwR0FBMEcsZ0JBQWdCO0FBQ3BMLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnQkFBZ0IsdUJBQXVCO0FBQ3ZDO0FBQ0E7QUFDQSw2QkFBNkIsbUJBQW1CO0FBQ2hEO0FBQ0E7QUFDQTtBQUNBLDZCQUE2Qiw2QkFBNkI7QUFDMUQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxlQUFlLGlFQUFlO0FBQzlCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxlQUFlLGlFQUFlO0FBQzlCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxlQUFlLGlFQUFlO0FBQzlCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZGFuaWVsMy12cDIvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2NvcmUtdHJhY2luZy9kaXN0L2VzbS90cmFjaW5nQ2xpZW50LmpzPzZhYWYiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uXG4vLyBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UuXG5pbXBvcnQgeyBnZXRJbnN0cnVtZW50ZXIgfSBmcm9tIFwiLi9pbnN0cnVtZW50ZXIuanNcIjtcbmltcG9ydCB7IGtub3duQ29udGV4dEtleXMgfSBmcm9tIFwiLi90cmFjaW5nQ29udGV4dC5qc1wiO1xuLyoqXG4gKiBDcmVhdGVzIGEgbmV3IHRyYWNpbmcgY2xpZW50LlxuICpcbiAqIEBwYXJhbSBvcHRpb25zIC0gT3B0aW9ucyB1c2VkIHRvIGNvbmZpZ3VyZSB0aGUgdHJhY2luZyBjbGllbnQuXG4gKiBAcmV0dXJucyAtIEFuIGluc3RhbmNlIG9mIHtAbGluayBUcmFjaW5nQ2xpZW50fS5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGNyZWF0ZVRyYWNpbmdDbGllbnQob3B0aW9ucykge1xuICAgIGNvbnN0IHsgbmFtZXNwYWNlLCBwYWNrYWdlTmFtZSwgcGFja2FnZVZlcnNpb24gfSA9IG9wdGlvbnM7XG4gICAgZnVuY3Rpb24gc3RhcnRTcGFuKG5hbWUsIG9wZXJhdGlvbk9wdGlvbnMsIHNwYW5PcHRpb25zKSB7XG4gICAgICAgIHZhciBfYTtcbiAgICAgICAgY29uc3Qgc3RhcnRTcGFuUmVzdWx0ID0gZ2V0SW5zdHJ1bWVudGVyKCkuc3RhcnRTcGFuKG5hbWUsIE9iamVjdC5hc3NpZ24oT2JqZWN0LmFzc2lnbih7fSwgc3Bhbk9wdGlvbnMpLCB7IHBhY2thZ2VOYW1lOiBwYWNrYWdlTmFtZSwgcGFja2FnZVZlcnNpb246IHBhY2thZ2VWZXJzaW9uLCB0cmFjaW5nQ29udGV4dDogKF9hID0gb3BlcmF0aW9uT3B0aW9ucyA9PT0gbnVsbCB8fCBvcGVyYXRpb25PcHRpb25zID09PSB2b2lkIDAgPyB2b2lkIDAgOiBvcGVyYXRpb25PcHRpb25zLnRyYWNpbmdPcHRpb25zKSA9PT0gbnVsbCB8fCBfYSA9PT0gdm9pZCAwID8gdm9pZCAwIDogX2EudHJhY2luZ0NvbnRleHQgfSkpO1xuICAgICAgICBsZXQgdHJhY2luZ0NvbnRleHQgPSBzdGFydFNwYW5SZXN1bHQudHJhY2luZ0NvbnRleHQ7XG4gICAgICAgIGNvbnN0IHNwYW4gPSBzdGFydFNwYW5SZXN1bHQuc3BhbjtcbiAgICAgICAgaWYgKCF0cmFjaW5nQ29udGV4dC5nZXRWYWx1ZShrbm93bkNvbnRleHRLZXlzLm5hbWVzcGFjZSkpIHtcbiAgICAgICAgICAgIHRyYWNpbmdDb250ZXh0ID0gdHJhY2luZ0NvbnRleHQuc2V0VmFsdWUoa25vd25Db250ZXh0S2V5cy5uYW1lc3BhY2UsIG5hbWVzcGFjZSk7XG4gICAgICAgIH1cbiAgICAgICAgc3Bhbi5zZXRBdHRyaWJ1dGUoXCJhei5uYW1lc3BhY2VcIiwgdHJhY2luZ0NvbnRleHQuZ2V0VmFsdWUoa25vd25Db250ZXh0S2V5cy5uYW1lc3BhY2UpKTtcbiAgICAgICAgY29uc3QgdXBkYXRlZE9wdGlvbnMgPSBPYmplY3QuYXNzaWduKHt9LCBvcGVyYXRpb25PcHRpb25zLCB7XG4gICAgICAgICAgICB0cmFjaW5nT3B0aW9uczogT2JqZWN0LmFzc2lnbihPYmplY3QuYXNzaWduKHt9LCBvcGVyYXRpb25PcHRpb25zID09PSBudWxsIHx8IG9wZXJhdGlvbk9wdGlvbnMgPT09IHZvaWQgMCA/IHZvaWQgMCA6IG9wZXJhdGlvbk9wdGlvbnMudHJhY2luZ09wdGlvbnMpLCB7IHRyYWNpbmdDb250ZXh0IH0pLFxuICAgICAgICB9KTtcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgIHNwYW4sXG4gICAgICAgICAgICB1cGRhdGVkT3B0aW9ucyxcbiAgICAgICAgfTtcbiAgICB9XG4gICAgYXN5bmMgZnVuY3Rpb24gd2l0aFNwYW4obmFtZSwgb3BlcmF0aW9uT3B0aW9ucywgY2FsbGJhY2ssIHNwYW5PcHRpb25zKSB7XG4gICAgICAgIGNvbnN0IHsgc3BhbiwgdXBkYXRlZE9wdGlvbnMgfSA9IHN0YXJ0U3BhbihuYW1lLCBvcGVyYXRpb25PcHRpb25zLCBzcGFuT3B0aW9ucyk7XG4gICAgICAgIHRyeSB7XG4gICAgICAgICAgICBjb25zdCByZXN1bHQgPSBhd2FpdCB3aXRoQ29udGV4dCh1cGRhdGVkT3B0aW9ucy50cmFjaW5nT3B0aW9ucy50cmFjaW5nQ29udGV4dCwgKCkgPT4gUHJvbWlzZS5yZXNvbHZlKGNhbGxiYWNrKHVwZGF0ZWRPcHRpb25zLCBzcGFuKSkpO1xuICAgICAgICAgICAgc3Bhbi5zZXRTdGF0dXMoeyBzdGF0dXM6IFwic3VjY2Vzc1wiIH0pO1xuICAgICAgICAgICAgcmV0dXJuIHJlc3VsdDtcbiAgICAgICAgfVxuICAgICAgICBjYXRjaCAoZXJyKSB7XG4gICAgICAgICAgICBzcGFuLnNldFN0YXR1cyh7IHN0YXR1czogXCJlcnJvclwiLCBlcnJvcjogZXJyIH0pO1xuICAgICAgICAgICAgdGhyb3cgZXJyO1xuICAgICAgICB9XG4gICAgICAgIGZpbmFsbHkge1xuICAgICAgICAgICAgc3Bhbi5lbmQoKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBmdW5jdGlvbiB3aXRoQ29udGV4dChjb250ZXh0LCBjYWxsYmFjaywgLi4uY2FsbGJhY2tBcmdzKSB7XG4gICAgICAgIHJldHVybiBnZXRJbnN0cnVtZW50ZXIoKS53aXRoQ29udGV4dChjb250ZXh0LCBjYWxsYmFjaywgLi4uY2FsbGJhY2tBcmdzKTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogUGFyc2VzIGEgdHJhY2VwYXJlbnQgaGVhZGVyIHZhbHVlIGludG8gYSBzcGFuIGlkZW50aWZpZXIuXG4gICAgICpcbiAgICAgKiBAcGFyYW0gdHJhY2VwYXJlbnRIZWFkZXIgLSBUaGUgdHJhY2VwYXJlbnQgaGVhZGVyIHRvIHBhcnNlLlxuICAgICAqIEByZXR1cm5zIEFuIGltcGxlbWVudGF0aW9uLXNwZWNpZmljIGlkZW50aWZpZXIgZm9yIHRoZSBzcGFuLlxuICAgICAqL1xuICAgIGZ1bmN0aW9uIHBhcnNlVHJhY2VwYXJlbnRIZWFkZXIodHJhY2VwYXJlbnRIZWFkZXIpIHtcbiAgICAgICAgcmV0dXJuIGdldEluc3RydW1lbnRlcigpLnBhcnNlVHJhY2VwYXJlbnRIZWFkZXIodHJhY2VwYXJlbnRIZWFkZXIpO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBDcmVhdGVzIGEgc2V0IG9mIHJlcXVlc3QgaGVhZGVycyB0byBwcm9wYWdhdGUgdHJhY2luZyBpbmZvcm1hdGlvbiB0byBhIGJhY2tlbmQuXG4gICAgICpcbiAgICAgKiBAcGFyYW0gdHJhY2luZ0NvbnRleHQgLSBUaGUgY29udGV4dCBjb250YWluaW5nIHRoZSBzcGFuIHRvIHNlcmlhbGl6ZS5cbiAgICAgKiBAcmV0dXJucyBUaGUgc2V0IG9mIGhlYWRlcnMgdG8gYWRkIHRvIGEgcmVxdWVzdC5cbiAgICAgKi9cbiAgICBmdW5jdGlvbiBjcmVhdGVSZXF1ZXN0SGVhZGVycyh0cmFjaW5nQ29udGV4dCkge1xuICAgICAgICByZXR1cm4gZ2V0SW5zdHJ1bWVudGVyKCkuY3JlYXRlUmVxdWVzdEhlYWRlcnModHJhY2luZ0NvbnRleHQpO1xuICAgIH1cbiAgICByZXR1cm4ge1xuICAgICAgICBzdGFydFNwYW4sXG4gICAgICAgIHdpdGhTcGFuLFxuICAgICAgICB3aXRoQ29udGV4dCxcbiAgICAgICAgcGFyc2VUcmFjZXBhcmVudEhlYWRlcixcbiAgICAgICAgY3JlYXRlUmVxdWVzdEhlYWRlcnMsXG4gICAgfTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXRyYWNpbmdDbGllbnQuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/core-tracing/dist/esm/tracingClient.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/core-tracing/dist/esm/tracingContext.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@azure/core-tracing/dist/esm/tracingContext.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   TracingContextImpl: () => (/* binding */ TracingContextImpl),\n/* harmony export */   createTracingContext: () => (/* binding */ createTracingContext),\n/* harmony export */   knownContextKeys: () => (/* binding */ knownContextKeys)\n/* harmony export */ });\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n/** @internal */\nconst knownContextKeys = {\n    span: Symbol.for(\"@azure/core-tracing span\"),\n    namespace: Symbol.for(\"@azure/core-tracing namespace\"),\n};\n/**\n * Creates a new {@link TracingContext} with the given options.\n * @param options - A set of known keys that may be set on the context.\n * @returns A new {@link TracingContext} with the given options.\n *\n * @internal\n */\nfunction createTracingContext(options = {}) {\n    let context = new TracingContextImpl(options.parentContext);\n    if (options.span) {\n        context = context.setValue(knownContextKeys.span, options.span);\n    }\n    if (options.namespace) {\n        context = context.setValue(knownContextKeys.namespace, options.namespace);\n    }\n    return context;\n}\n/** @internal */\nclass TracingContextImpl {\n    constructor(initialContext) {\n        this._contextMap =\n            initialContext instanceof TracingContextImpl\n                ? new Map(initialContext._contextMap)\n                : new Map();\n    }\n    setValue(key, value) {\n        const newContext = new TracingContextImpl(this);\n        newContext._contextMap.set(key, value);\n        return newContext;\n    }\n    getValue(key) {\n        return this._contextMap.get(key);\n    }\n    deleteValue(key) {\n        const newContext = new TracingContextImpl(this);\n        newContext._contextMap.delete(key);\n        return newContext;\n    }\n}\n//# sourceMappingURL=tracingContext.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2NvcmUtdHJhY2luZy9kaXN0L2VzbS90cmFjaW5nQ29udGV4dC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0JBQWtCLHNCQUFzQjtBQUN4QztBQUNBLG1CQUFtQixzQkFBc0I7QUFDekM7QUFDQTtBQUNBO0FBQ08sMENBQTBDO0FBQ2pEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9kYW5pZWwzLXZwMi8uL25vZGVfbW9kdWxlcy9AYXp1cmUvY29yZS10cmFjaW5nL2Rpc3QvZXNtL3RyYWNpbmdDb250ZXh0LmpzPzJlZTEiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uXG4vLyBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UuXG4vKiogQGludGVybmFsICovXG5leHBvcnQgY29uc3Qga25vd25Db250ZXh0S2V5cyA9IHtcbiAgICBzcGFuOiBTeW1ib2wuZm9yKFwiQGF6dXJlL2NvcmUtdHJhY2luZyBzcGFuXCIpLFxuICAgIG5hbWVzcGFjZTogU3ltYm9sLmZvcihcIkBhenVyZS9jb3JlLXRyYWNpbmcgbmFtZXNwYWNlXCIpLFxufTtcbi8qKlxuICogQ3JlYXRlcyBhIG5ldyB7QGxpbmsgVHJhY2luZ0NvbnRleHR9IHdpdGggdGhlIGdpdmVuIG9wdGlvbnMuXG4gKiBAcGFyYW0gb3B0aW9ucyAtIEEgc2V0IG9mIGtub3duIGtleXMgdGhhdCBtYXkgYmUgc2V0IG9uIHRoZSBjb250ZXh0LlxuICogQHJldHVybnMgQSBuZXcge0BsaW5rIFRyYWNpbmdDb250ZXh0fSB3aXRoIHRoZSBnaXZlbiBvcHRpb25zLlxuICpcbiAqIEBpbnRlcm5hbFxuICovXG5leHBvcnQgZnVuY3Rpb24gY3JlYXRlVHJhY2luZ0NvbnRleHQob3B0aW9ucyA9IHt9KSB7XG4gICAgbGV0IGNvbnRleHQgPSBuZXcgVHJhY2luZ0NvbnRleHRJbXBsKG9wdGlvbnMucGFyZW50Q29udGV4dCk7XG4gICAgaWYgKG9wdGlvbnMuc3Bhbikge1xuICAgICAgICBjb250ZXh0ID0gY29udGV4dC5zZXRWYWx1ZShrbm93bkNvbnRleHRLZXlzLnNwYW4sIG9wdGlvbnMuc3Bhbik7XG4gICAgfVxuICAgIGlmIChvcHRpb25zLm5hbWVzcGFjZSkge1xuICAgICAgICBjb250ZXh0ID0gY29udGV4dC5zZXRWYWx1ZShrbm93bkNvbnRleHRLZXlzLm5hbWVzcGFjZSwgb3B0aW9ucy5uYW1lc3BhY2UpO1xuICAgIH1cbiAgICByZXR1cm4gY29udGV4dDtcbn1cbi8qKiBAaW50ZXJuYWwgKi9cbmV4cG9ydCBjbGFzcyBUcmFjaW5nQ29udGV4dEltcGwge1xuICAgIGNvbnN0cnVjdG9yKGluaXRpYWxDb250ZXh0KSB7XG4gICAgICAgIHRoaXMuX2NvbnRleHRNYXAgPVxuICAgICAgICAgICAgaW5pdGlhbENvbnRleHQgaW5zdGFuY2VvZiBUcmFjaW5nQ29udGV4dEltcGxcbiAgICAgICAgICAgICAgICA/IG5ldyBNYXAoaW5pdGlhbENvbnRleHQuX2NvbnRleHRNYXApXG4gICAgICAgICAgICAgICAgOiBuZXcgTWFwKCk7XG4gICAgfVxuICAgIHNldFZhbHVlKGtleSwgdmFsdWUpIHtcbiAgICAgICAgY29uc3QgbmV3Q29udGV4dCA9IG5ldyBUcmFjaW5nQ29udGV4dEltcGwodGhpcyk7XG4gICAgICAgIG5ld0NvbnRleHQuX2NvbnRleHRNYXAuc2V0KGtleSwgdmFsdWUpO1xuICAgICAgICByZXR1cm4gbmV3Q29udGV4dDtcbiAgICB9XG4gICAgZ2V0VmFsdWUoa2V5KSB7XG4gICAgICAgIHJldHVybiB0aGlzLl9jb250ZXh0TWFwLmdldChrZXkpO1xuICAgIH1cbiAgICBkZWxldGVWYWx1ZShrZXkpIHtcbiAgICAgICAgY29uc3QgbmV3Q29udGV4dCA9IG5ldyBUcmFjaW5nQ29udGV4dEltcGwodGhpcyk7XG4gICAgICAgIG5ld0NvbnRleHQuX2NvbnRleHRNYXAuZGVsZXRlKGtleSk7XG4gICAgICAgIHJldHVybiBuZXdDb250ZXh0O1xuICAgIH1cbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXRyYWNpbmdDb250ZXh0LmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/core-tracing/dist/esm/tracingContext.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/core-util/dist/esm/aborterUtils.js":
/*!****************************************************************!*\
  !*** ./node_modules/@azure/core-util/dist/esm/aborterUtils.js ***!
  \****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   cancelablePromiseRace: () => (/* binding */ cancelablePromiseRace)\n/* harmony export */ });\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n/**\n * promise.race() wrapper that aborts rest of promises as soon as the first promise settles.\n */\nasync function cancelablePromiseRace(abortablePromiseBuilders, options) {\n    var _a, _b;\n    const aborter = new AbortController();\n    function abortHandler() {\n        aborter.abort();\n    }\n    (_a = options === null || options === void 0 ? void 0 : options.abortSignal) === null || _a === void 0 ? void 0 : _a.addEventListener(\"abort\", abortHandler);\n    try {\n        return await Promise.race(abortablePromiseBuilders.map((p) => p({ abortSignal: aborter.signal })));\n    }\n    finally {\n        aborter.abort();\n        (_b = options === null || options === void 0 ? void 0 : options.abortSignal) === null || _b === void 0 ? void 0 : _b.removeEventListener(\"abort\", abortHandler);\n    }\n}\n//# sourceMappingURL=aborterUtils.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2NvcmUtdXRpbC9kaXN0L2VzbS9hYm9ydGVyVXRpbHMuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMEVBQTBFLDZCQUE2QjtBQUN2RztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2RhbmllbDMtdnAyLy4vbm9kZV9tb2R1bGVzL0BhenVyZS9jb3JlLXV0aWwvZGlzdC9lc20vYWJvcnRlclV0aWxzLmpzP2VkNTAiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uXG4vLyBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UuXG4vKipcbiAqIHByb21pc2UucmFjZSgpIHdyYXBwZXIgdGhhdCBhYm9ydHMgcmVzdCBvZiBwcm9taXNlcyBhcyBzb29uIGFzIHRoZSBmaXJzdCBwcm9taXNlIHNldHRsZXMuXG4gKi9cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBjYW5jZWxhYmxlUHJvbWlzZVJhY2UoYWJvcnRhYmxlUHJvbWlzZUJ1aWxkZXJzLCBvcHRpb25zKSB7XG4gICAgdmFyIF9hLCBfYjtcbiAgICBjb25zdCBhYm9ydGVyID0gbmV3IEFib3J0Q29udHJvbGxlcigpO1xuICAgIGZ1bmN0aW9uIGFib3J0SGFuZGxlcigpIHtcbiAgICAgICAgYWJvcnRlci5hYm9ydCgpO1xuICAgIH1cbiAgICAoX2EgPSBvcHRpb25zID09PSBudWxsIHx8IG9wdGlvbnMgPT09IHZvaWQgMCA/IHZvaWQgMCA6IG9wdGlvbnMuYWJvcnRTaWduYWwpID09PSBudWxsIHx8IF9hID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfYS5hZGRFdmVudExpc3RlbmVyKFwiYWJvcnRcIiwgYWJvcnRIYW5kbGVyKTtcbiAgICB0cnkge1xuICAgICAgICByZXR1cm4gYXdhaXQgUHJvbWlzZS5yYWNlKGFib3J0YWJsZVByb21pc2VCdWlsZGVycy5tYXAoKHApID0+IHAoeyBhYm9ydFNpZ25hbDogYWJvcnRlci5zaWduYWwgfSkpKTtcbiAgICB9XG4gICAgZmluYWxseSB7XG4gICAgICAgIGFib3J0ZXIuYWJvcnQoKTtcbiAgICAgICAgKF9iID0gb3B0aW9ucyA9PT0gbnVsbCB8fCBvcHRpb25zID09PSB2b2lkIDAgPyB2b2lkIDAgOiBvcHRpb25zLmFib3J0U2lnbmFsKSA9PT0gbnVsbCB8fCBfYiA9PT0gdm9pZCAwID8gdm9pZCAwIDogX2IucmVtb3ZlRXZlbnRMaXN0ZW5lcihcImFib3J0XCIsIGFib3J0SGFuZGxlcik7XG4gICAgfVxufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9YWJvcnRlclV0aWxzLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/core-util/dist/esm/aborterUtils.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/core-util/dist/esm/bytesEncoding.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@azure/core-util/dist/esm/bytesEncoding.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   stringToUint8Array: () => (/* binding */ stringToUint8Array),\n/* harmony export */   uint8ArrayToString: () => (/* binding */ uint8ArrayToString)\n/* harmony export */ });\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n/**\n * The helper that transforms bytes with specific character encoding into string\n * @param bytes - the uint8array bytes\n * @param format - the format we use to encode the byte\n * @returns a string of the encoded string\n */\nfunction uint8ArrayToString(bytes, format) {\n    return Buffer.from(bytes).toString(format);\n}\n/**\n * The helper that transforms string to specific character encoded bytes array.\n * @param value - the string to be converted\n * @param format - the format we use to decode the value\n * @returns a uint8array\n */\nfunction stringToUint8Array(value, format) {\n    return Buffer.from(value, format);\n}\n//# sourceMappingURL=bytesEncoding.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2NvcmUtdXRpbC9kaXN0L2VzbS9ieXRlc0VuY29kaW5nLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZGFuaWVsMy12cDIvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2NvcmUtdXRpbC9kaXN0L2VzbS9ieXRlc0VuY29kaW5nLmpzP2JiODYiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uXG4vLyBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UuXG4vKipcbiAqIFRoZSBoZWxwZXIgdGhhdCB0cmFuc2Zvcm1zIGJ5dGVzIHdpdGggc3BlY2lmaWMgY2hhcmFjdGVyIGVuY29kaW5nIGludG8gc3RyaW5nXG4gKiBAcGFyYW0gYnl0ZXMgLSB0aGUgdWludDhhcnJheSBieXRlc1xuICogQHBhcmFtIGZvcm1hdCAtIHRoZSBmb3JtYXQgd2UgdXNlIHRvIGVuY29kZSB0aGUgYnl0ZVxuICogQHJldHVybnMgYSBzdHJpbmcgb2YgdGhlIGVuY29kZWQgc3RyaW5nXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiB1aW50OEFycmF5VG9TdHJpbmcoYnl0ZXMsIGZvcm1hdCkge1xuICAgIHJldHVybiBCdWZmZXIuZnJvbShieXRlcykudG9TdHJpbmcoZm9ybWF0KTtcbn1cbi8qKlxuICogVGhlIGhlbHBlciB0aGF0IHRyYW5zZm9ybXMgc3RyaW5nIHRvIHNwZWNpZmljIGNoYXJhY3RlciBlbmNvZGVkIGJ5dGVzIGFycmF5LlxuICogQHBhcmFtIHZhbHVlIC0gdGhlIHN0cmluZyB0byBiZSBjb252ZXJ0ZWRcbiAqIEBwYXJhbSBmb3JtYXQgLSB0aGUgZm9ybWF0IHdlIHVzZSB0byBkZWNvZGUgdGhlIHZhbHVlXG4gKiBAcmV0dXJucyBhIHVpbnQ4YXJyYXlcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIHN0cmluZ1RvVWludDhBcnJheSh2YWx1ZSwgZm9ybWF0KSB7XG4gICAgcmV0dXJuIEJ1ZmZlci5mcm9tKHZhbHVlLCBmb3JtYXQpO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Ynl0ZXNFbmNvZGluZy5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/core-util/dist/esm/bytesEncoding.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/core-util/dist/esm/checkEnvironment.js":
/*!********************************************************************!*\
  !*** ./node_modules/@azure/core-util/dist/esm/checkEnvironment.js ***!
  \********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   isBrowser: () => (/* binding */ isBrowser),\n/* harmony export */   isBun: () => (/* binding */ isBun),\n/* harmony export */   isDeno: () => (/* binding */ isDeno),\n/* harmony export */   isNode: () => (/* binding */ isNode),\n/* harmony export */   isNodeLike: () => (/* binding */ isNodeLike),\n/* harmony export */   isNodeRuntime: () => (/* binding */ isNodeRuntime),\n/* harmony export */   isReactNative: () => (/* binding */ isReactNative),\n/* harmony export */   isWebWorker: () => (/* binding */ isWebWorker)\n/* harmony export */ });\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\nvar _a, _b, _c, _d;\n/**\n * A constant that indicates whether the environment the code is running is a Web Browser.\n */\n// eslint-disable-next-line @azure/azure-sdk/ts-no-window\nconst isBrowser = typeof window !== \"undefined\" && typeof window.document !== \"undefined\";\n/**\n * A constant that indicates whether the environment the code is running is a Web Worker.\n */\nconst isWebWorker = typeof self === \"object\" &&\n    typeof (self === null || self === void 0 ? void 0 : self.importScripts) === \"function\" &&\n    (((_a = self.constructor) === null || _a === void 0 ? void 0 : _a.name) === \"DedicatedWorkerGlobalScope\" ||\n        ((_b = self.constructor) === null || _b === void 0 ? void 0 : _b.name) === \"ServiceWorkerGlobalScope\" ||\n        ((_c = self.constructor) === null || _c === void 0 ? void 0 : _c.name) === \"SharedWorkerGlobalScope\");\n/**\n * A constant that indicates whether the environment the code is running is Deno.\n */\nconst isDeno = typeof Deno !== \"undefined\" &&\n    typeof Deno.version !== \"undefined\" &&\n    typeof Deno.version.deno !== \"undefined\";\n/**\n * A constant that indicates whether the environment the code is running is Bun.sh.\n */\nconst isBun = typeof Bun !== \"undefined\" && typeof Bun.version !== \"undefined\";\n/**\n * A constant that indicates whether the environment the code is running is a Node.js compatible environment.\n */\nconst isNodeLike = typeof globalThis.process !== \"undefined\" &&\n    Boolean(globalThis.process.version) &&\n    Boolean((_d = globalThis.process.versions) === null || _d === void 0 ? void 0 : _d.node);\n/**\n * A constant that indicates whether the environment the code is running is a Node.js compatible environment.\n * @deprecated Use `isNodeLike` instead.\n */\nconst isNode = isNodeLike;\n/**\n * A constant that indicates whether the environment the code is running is Node.JS.\n */\nconst isNodeRuntime = isNodeLike && !isBun && !isDeno;\n/**\n * A constant that indicates whether the environment the code is running is in React-Native.\n */\n// https://github.com/facebook/react-native/blob/main/packages/react-native/Libraries/Core/setUpNavigator.js\nconst isReactNative = typeof navigator !== \"undefined\" && (navigator === null || navigator === void 0 ? void 0 : navigator.product) === \"ReactNative\";\n//# sourceMappingURL=checkEnvironment.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2NvcmUtdXRpbC9kaXN0L2VzbS9jaGVja0Vudmlyb25tZW50LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUCIsInNvdXJjZXMiOlsid2VicGFjazovL2RhbmllbDMtdnAyLy4vbm9kZV9tb2R1bGVzL0BhenVyZS9jb3JlLXV0aWwvZGlzdC9lc20vY2hlY2tFbnZpcm9ubWVudC5qcz9jZWNiIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLlxuLy8gTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlLlxudmFyIF9hLCBfYiwgX2MsIF9kO1xuLyoqXG4gKiBBIGNvbnN0YW50IHRoYXQgaW5kaWNhdGVzIHdoZXRoZXIgdGhlIGVudmlyb25tZW50IHRoZSBjb2RlIGlzIHJ1bm5pbmcgaXMgYSBXZWIgQnJvd3Nlci5cbiAqL1xuLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIEBhenVyZS9henVyZS1zZGsvdHMtbm8td2luZG93XG5leHBvcnQgY29uc3QgaXNCcm93c2VyID0gdHlwZW9mIHdpbmRvdyAhPT0gXCJ1bmRlZmluZWRcIiAmJiB0eXBlb2Ygd2luZG93LmRvY3VtZW50ICE9PSBcInVuZGVmaW5lZFwiO1xuLyoqXG4gKiBBIGNvbnN0YW50IHRoYXQgaW5kaWNhdGVzIHdoZXRoZXIgdGhlIGVudmlyb25tZW50IHRoZSBjb2RlIGlzIHJ1bm5pbmcgaXMgYSBXZWIgV29ya2VyLlxuICovXG5leHBvcnQgY29uc3QgaXNXZWJXb3JrZXIgPSB0eXBlb2Ygc2VsZiA9PT0gXCJvYmplY3RcIiAmJlxuICAgIHR5cGVvZiAoc2VsZiA9PT0gbnVsbCB8fCBzZWxmID09PSB2b2lkIDAgPyB2b2lkIDAgOiBzZWxmLmltcG9ydFNjcmlwdHMpID09PSBcImZ1bmN0aW9uXCIgJiZcbiAgICAoKChfYSA9IHNlbGYuY29uc3RydWN0b3IpID09PSBudWxsIHx8IF9hID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfYS5uYW1lKSA9PT0gXCJEZWRpY2F0ZWRXb3JrZXJHbG9iYWxTY29wZVwiIHx8XG4gICAgICAgICgoX2IgPSBzZWxmLmNvbnN0cnVjdG9yKSA9PT0gbnVsbCB8fCBfYiA9PT0gdm9pZCAwID8gdm9pZCAwIDogX2IubmFtZSkgPT09IFwiU2VydmljZVdvcmtlckdsb2JhbFNjb3BlXCIgfHxcbiAgICAgICAgKChfYyA9IHNlbGYuY29uc3RydWN0b3IpID09PSBudWxsIHx8IF9jID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfYy5uYW1lKSA9PT0gXCJTaGFyZWRXb3JrZXJHbG9iYWxTY29wZVwiKTtcbi8qKlxuICogQSBjb25zdGFudCB0aGF0IGluZGljYXRlcyB3aGV0aGVyIHRoZSBlbnZpcm9ubWVudCB0aGUgY29kZSBpcyBydW5uaW5nIGlzIERlbm8uXG4gKi9cbmV4cG9ydCBjb25zdCBpc0Rlbm8gPSB0eXBlb2YgRGVubyAhPT0gXCJ1bmRlZmluZWRcIiAmJlxuICAgIHR5cGVvZiBEZW5vLnZlcnNpb24gIT09IFwidW5kZWZpbmVkXCIgJiZcbiAgICB0eXBlb2YgRGVuby52ZXJzaW9uLmRlbm8gIT09IFwidW5kZWZpbmVkXCI7XG4vKipcbiAqIEEgY29uc3RhbnQgdGhhdCBpbmRpY2F0ZXMgd2hldGhlciB0aGUgZW52aXJvbm1lbnQgdGhlIGNvZGUgaXMgcnVubmluZyBpcyBCdW4uc2guXG4gKi9cbmV4cG9ydCBjb25zdCBpc0J1biA9IHR5cGVvZiBCdW4gIT09IFwidW5kZWZpbmVkXCIgJiYgdHlwZW9mIEJ1bi52ZXJzaW9uICE9PSBcInVuZGVmaW5lZFwiO1xuLyoqXG4gKiBBIGNvbnN0YW50IHRoYXQgaW5kaWNhdGVzIHdoZXRoZXIgdGhlIGVudmlyb25tZW50IHRoZSBjb2RlIGlzIHJ1bm5pbmcgaXMgYSBOb2RlLmpzIGNvbXBhdGlibGUgZW52aXJvbm1lbnQuXG4gKi9cbmV4cG9ydCBjb25zdCBpc05vZGVMaWtlID0gdHlwZW9mIGdsb2JhbFRoaXMucHJvY2VzcyAhPT0gXCJ1bmRlZmluZWRcIiAmJlxuICAgIEJvb2xlYW4oZ2xvYmFsVGhpcy5wcm9jZXNzLnZlcnNpb24pICYmXG4gICAgQm9vbGVhbigoX2QgPSBnbG9iYWxUaGlzLnByb2Nlc3MudmVyc2lvbnMpID09PSBudWxsIHx8IF9kID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfZC5ub2RlKTtcbi8qKlxuICogQSBjb25zdGFudCB0aGF0IGluZGljYXRlcyB3aGV0aGVyIHRoZSBlbnZpcm9ubWVudCB0aGUgY29kZSBpcyBydW5uaW5nIGlzIGEgTm9kZS5qcyBjb21wYXRpYmxlIGVudmlyb25tZW50LlxuICogQGRlcHJlY2F0ZWQgVXNlIGBpc05vZGVMaWtlYCBpbnN0ZWFkLlxuICovXG5leHBvcnQgY29uc3QgaXNOb2RlID0gaXNOb2RlTGlrZTtcbi8qKlxuICogQSBjb25zdGFudCB0aGF0IGluZGljYXRlcyB3aGV0aGVyIHRoZSBlbnZpcm9ubWVudCB0aGUgY29kZSBpcyBydW5uaW5nIGlzIE5vZGUuSlMuXG4gKi9cbmV4cG9ydCBjb25zdCBpc05vZGVSdW50aW1lID0gaXNOb2RlTGlrZSAmJiAhaXNCdW4gJiYgIWlzRGVubztcbi8qKlxuICogQSBjb25zdGFudCB0aGF0IGluZGljYXRlcyB3aGV0aGVyIHRoZSBlbnZpcm9ubWVudCB0aGUgY29kZSBpcyBydW5uaW5nIGlzIGluIFJlYWN0LU5hdGl2ZS5cbiAqL1xuLy8gaHR0cHM6Ly9naXRodWIuY29tL2ZhY2Vib29rL3JlYWN0LW5hdGl2ZS9ibG9iL21haW4vcGFja2FnZXMvcmVhY3QtbmF0aXZlL0xpYnJhcmllcy9Db3JlL3NldFVwTmF2aWdhdG9yLmpzXG5leHBvcnQgY29uc3QgaXNSZWFjdE5hdGl2ZSA9IHR5cGVvZiBuYXZpZ2F0b3IgIT09IFwidW5kZWZpbmVkXCIgJiYgKG5hdmlnYXRvciA9PT0gbnVsbCB8fCBuYXZpZ2F0b3IgPT09IHZvaWQgMCA/IHZvaWQgMCA6IG5hdmlnYXRvci5wcm9kdWN0KSA9PT0gXCJSZWFjdE5hdGl2ZVwiO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Y2hlY2tFbnZpcm9ubWVudC5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/core-util/dist/esm/checkEnvironment.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/core-util/dist/esm/createAbortablePromise.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@azure/core-util/dist/esm/createAbortablePromise.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createAbortablePromise: () => (/* binding */ createAbortablePromise)\n/* harmony export */ });\n/* harmony import */ var _azure_abort_controller__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @azure/abort-controller */ \"(rsc)/./node_modules/@azure/abort-controller/dist/esm/index.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\n/**\n * Creates an abortable promise.\n * @param buildPromise - A function that takes the resolve and reject functions as parameters.\n * @param options - The options for the abortable promise.\n * @returns A promise that can be aborted.\n */\nfunction createAbortablePromise(buildPromise, options) {\n    const { cleanupBeforeAbort, abortSignal, abortErrorMsg } = options !== null && options !== void 0 ? options : {};\n    return new Promise((resolve, reject) => {\n        function rejectOnAbort() {\n            reject(new _azure_abort_controller__WEBPACK_IMPORTED_MODULE_0__.AbortError(abortErrorMsg !== null && abortErrorMsg !== void 0 ? abortErrorMsg : \"The operation was aborted.\"));\n        }\n        function removeListeners() {\n            abortSignal === null || abortSignal === void 0 ? void 0 : abortSignal.removeEventListener(\"abort\", onAbort);\n        }\n        function onAbort() {\n            cleanupBeforeAbort === null || cleanupBeforeAbort === void 0 ? void 0 : cleanupBeforeAbort();\n            removeListeners();\n            rejectOnAbort();\n        }\n        if (abortSignal === null || abortSignal === void 0 ? void 0 : abortSignal.aborted) {\n            return rejectOnAbort();\n        }\n        try {\n            buildPromise((x) => {\n                removeListeners();\n                resolve(x);\n            }, (x) => {\n                removeListeners();\n                reject(x);\n            });\n        }\n        catch (err) {\n            reject(err);\n        }\n        abortSignal === null || abortSignal === void 0 ? void 0 : abortSignal.addEventListener(\"abort\", onAbort);\n    });\n}\n//# sourceMappingURL=createAbortablePromise.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2NvcmUtdXRpbC9kaXN0L2VzbS9jcmVhdGVBYm9ydGFibGVQcm9taXNlLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQUE7QUFDQTtBQUNxRDtBQUNyRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQLFlBQVksaURBQWlEO0FBQzdEO0FBQ0E7QUFDQSx1QkFBdUIsK0RBQVU7QUFDakM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9kYW5pZWwzLXZwMi8uL25vZGVfbW9kdWxlcy9AYXp1cmUvY29yZS11dGlsL2Rpc3QvZXNtL2NyZWF0ZUFib3J0YWJsZVByb21pc2UuanM/MmNkYSJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi5cbi8vIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZS5cbmltcG9ydCB7IEFib3J0RXJyb3IgfSBmcm9tIFwiQGF6dXJlL2Fib3J0LWNvbnRyb2xsZXJcIjtcbi8qKlxuICogQ3JlYXRlcyBhbiBhYm9ydGFibGUgcHJvbWlzZS5cbiAqIEBwYXJhbSBidWlsZFByb21pc2UgLSBBIGZ1bmN0aW9uIHRoYXQgdGFrZXMgdGhlIHJlc29sdmUgYW5kIHJlamVjdCBmdW5jdGlvbnMgYXMgcGFyYW1ldGVycy5cbiAqIEBwYXJhbSBvcHRpb25zIC0gVGhlIG9wdGlvbnMgZm9yIHRoZSBhYm9ydGFibGUgcHJvbWlzZS5cbiAqIEByZXR1cm5zIEEgcHJvbWlzZSB0aGF0IGNhbiBiZSBhYm9ydGVkLlxuICovXG5leHBvcnQgZnVuY3Rpb24gY3JlYXRlQWJvcnRhYmxlUHJvbWlzZShidWlsZFByb21pc2UsIG9wdGlvbnMpIHtcbiAgICBjb25zdCB7IGNsZWFudXBCZWZvcmVBYm9ydCwgYWJvcnRTaWduYWwsIGFib3J0RXJyb3JNc2cgfSA9IG9wdGlvbnMgIT09IG51bGwgJiYgb3B0aW9ucyAhPT0gdm9pZCAwID8gb3B0aW9ucyA6IHt9O1xuICAgIHJldHVybiBuZXcgUHJvbWlzZSgocmVzb2x2ZSwgcmVqZWN0KSA9PiB7XG4gICAgICAgIGZ1bmN0aW9uIHJlamVjdE9uQWJvcnQoKSB7XG4gICAgICAgICAgICByZWplY3QobmV3IEFib3J0RXJyb3IoYWJvcnRFcnJvck1zZyAhPT0gbnVsbCAmJiBhYm9ydEVycm9yTXNnICE9PSB2b2lkIDAgPyBhYm9ydEVycm9yTXNnIDogXCJUaGUgb3BlcmF0aW9uIHdhcyBhYm9ydGVkLlwiKSk7XG4gICAgICAgIH1cbiAgICAgICAgZnVuY3Rpb24gcmVtb3ZlTGlzdGVuZXJzKCkge1xuICAgICAgICAgICAgYWJvcnRTaWduYWwgPT09IG51bGwgfHwgYWJvcnRTaWduYWwgPT09IHZvaWQgMCA/IHZvaWQgMCA6IGFib3J0U2lnbmFsLnJlbW92ZUV2ZW50TGlzdGVuZXIoXCJhYm9ydFwiLCBvbkFib3J0KTtcbiAgICAgICAgfVxuICAgICAgICBmdW5jdGlvbiBvbkFib3J0KCkge1xuICAgICAgICAgICAgY2xlYW51cEJlZm9yZUFib3J0ID09PSBudWxsIHx8IGNsZWFudXBCZWZvcmVBYm9ydCA9PT0gdm9pZCAwID8gdm9pZCAwIDogY2xlYW51cEJlZm9yZUFib3J0KCk7XG4gICAgICAgICAgICByZW1vdmVMaXN0ZW5lcnMoKTtcbiAgICAgICAgICAgIHJlamVjdE9uQWJvcnQoKTtcbiAgICAgICAgfVxuICAgICAgICBpZiAoYWJvcnRTaWduYWwgPT09IG51bGwgfHwgYWJvcnRTaWduYWwgPT09IHZvaWQgMCA/IHZvaWQgMCA6IGFib3J0U2lnbmFsLmFib3J0ZWQpIHtcbiAgICAgICAgICAgIHJldHVybiByZWplY3RPbkFib3J0KCk7XG4gICAgICAgIH1cbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgIGJ1aWxkUHJvbWlzZSgoeCkgPT4ge1xuICAgICAgICAgICAgICAgIHJlbW92ZUxpc3RlbmVycygpO1xuICAgICAgICAgICAgICAgIHJlc29sdmUoeCk7XG4gICAgICAgICAgICB9LCAoeCkgPT4ge1xuICAgICAgICAgICAgICAgIHJlbW92ZUxpc3RlbmVycygpO1xuICAgICAgICAgICAgICAgIHJlamVjdCh4KTtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9XG4gICAgICAgIGNhdGNoIChlcnIpIHtcbiAgICAgICAgICAgIHJlamVjdChlcnIpO1xuICAgICAgICB9XG4gICAgICAgIGFib3J0U2lnbmFsID09PSBudWxsIHx8IGFib3J0U2lnbmFsID09PSB2b2lkIDAgPyB2b2lkIDAgOiBhYm9ydFNpZ25hbC5hZGRFdmVudExpc3RlbmVyKFwiYWJvcnRcIiwgb25BYm9ydCk7XG4gICAgfSk7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1jcmVhdGVBYm9ydGFibGVQcm9taXNlLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/core-util/dist/esm/createAbortablePromise.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/core-util/dist/esm/delay.js":
/*!*********************************************************!*\
  !*** ./node_modules/@azure/core-util/dist/esm/delay.js ***!
  \*********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   delay: () => (/* binding */ delay)\n/* harmony export */ });\n/* harmony import */ var _createAbortablePromise_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./createAbortablePromise.js */ \"(rsc)/./node_modules/@azure/core-util/dist/esm/createAbortablePromise.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nconst StandardAbortMessage = \"The delay was aborted.\";\n/**\n * A wrapper for setTimeout that resolves a promise after timeInMs milliseconds.\n * @param timeInMs - The number of milliseconds to be delayed.\n * @param options - The options for delay - currently abort options\n * @returns Promise that is resolved after timeInMs\n */\nfunction delay(timeInMs, options) {\n    let token;\n    const { abortSignal, abortErrorMsg } = options !== null && options !== void 0 ? options : {};\n    return (0,_createAbortablePromise_js__WEBPACK_IMPORTED_MODULE_0__.createAbortablePromise)((resolve) => {\n        token = setTimeout(resolve, timeInMs);\n    }, {\n        cleanupBeforeAbort: () => clearTimeout(token),\n        abortSignal,\n        abortErrorMsg: abortErrorMsg !== null && abortErrorMsg !== void 0 ? abortErrorMsg : StandardAbortMessage,\n    });\n}\n//# sourceMappingURL=delay.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2NvcmUtdXRpbC9kaXN0L2VzbS9kZWxheS5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFBO0FBQ0E7QUFDcUU7QUFDckU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0EsWUFBWSw2QkFBNkI7QUFDekMsV0FBVyxrRkFBc0I7QUFDakM7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9kYW5pZWwzLXZwMi8uL25vZGVfbW9kdWxlcy9AYXp1cmUvY29yZS11dGlsL2Rpc3QvZXNtL2RlbGF5LmpzPzk0N2EiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uXG4vLyBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UuXG5pbXBvcnQgeyBjcmVhdGVBYm9ydGFibGVQcm9taXNlIH0gZnJvbSBcIi4vY3JlYXRlQWJvcnRhYmxlUHJvbWlzZS5qc1wiO1xuY29uc3QgU3RhbmRhcmRBYm9ydE1lc3NhZ2UgPSBcIlRoZSBkZWxheSB3YXMgYWJvcnRlZC5cIjtcbi8qKlxuICogQSB3cmFwcGVyIGZvciBzZXRUaW1lb3V0IHRoYXQgcmVzb2x2ZXMgYSBwcm9taXNlIGFmdGVyIHRpbWVJbk1zIG1pbGxpc2Vjb25kcy5cbiAqIEBwYXJhbSB0aW1lSW5NcyAtIFRoZSBudW1iZXIgb2YgbWlsbGlzZWNvbmRzIHRvIGJlIGRlbGF5ZWQuXG4gKiBAcGFyYW0gb3B0aW9ucyAtIFRoZSBvcHRpb25zIGZvciBkZWxheSAtIGN1cnJlbnRseSBhYm9ydCBvcHRpb25zXG4gKiBAcmV0dXJucyBQcm9taXNlIHRoYXQgaXMgcmVzb2x2ZWQgYWZ0ZXIgdGltZUluTXNcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGRlbGF5KHRpbWVJbk1zLCBvcHRpb25zKSB7XG4gICAgbGV0IHRva2VuO1xuICAgIGNvbnN0IHsgYWJvcnRTaWduYWwsIGFib3J0RXJyb3JNc2cgfSA9IG9wdGlvbnMgIT09IG51bGwgJiYgb3B0aW9ucyAhPT0gdm9pZCAwID8gb3B0aW9ucyA6IHt9O1xuICAgIHJldHVybiBjcmVhdGVBYm9ydGFibGVQcm9taXNlKChyZXNvbHZlKSA9PiB7XG4gICAgICAgIHRva2VuID0gc2V0VGltZW91dChyZXNvbHZlLCB0aW1lSW5Ncyk7XG4gICAgfSwge1xuICAgICAgICBjbGVhbnVwQmVmb3JlQWJvcnQ6ICgpID0+IGNsZWFyVGltZW91dCh0b2tlbiksXG4gICAgICAgIGFib3J0U2lnbmFsLFxuICAgICAgICBhYm9ydEVycm9yTXNnOiBhYm9ydEVycm9yTXNnICE9PSBudWxsICYmIGFib3J0RXJyb3JNc2cgIT09IHZvaWQgMCA/IGFib3J0RXJyb3JNc2cgOiBTdGFuZGFyZEFib3J0TWVzc2FnZSxcbiAgICB9KTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWRlbGF5LmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/core-util/dist/esm/delay.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/core-util/dist/esm/error.js":
/*!*********************************************************!*\
  !*** ./node_modules/@azure/core-util/dist/esm/error.js ***!
  \*********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getErrorMessage: () => (/* binding */ getErrorMessage),\n/* harmony export */   isError: () => (/* binding */ isError)\n/* harmony export */ });\n/* harmony import */ var _object_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./object.js */ \"(rsc)/./node_modules/@azure/core-util/dist/esm/object.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\n/**\n * Typeguard for an error object shape (has name and message)\n * @param e - Something caught by a catch clause.\n */\nfunction isError(e) {\n    if ((0,_object_js__WEBPACK_IMPORTED_MODULE_0__.isObject)(e)) {\n        const hasName = typeof e.name === \"string\";\n        const hasMessage = typeof e.message === \"string\";\n        return hasName && hasMessage;\n    }\n    return false;\n}\n/**\n * Given what is thought to be an error object, return the message if possible.\n * If the message is missing, returns a stringified version of the input.\n * @param e - Something thrown from a try block\n * @returns The error message or a string of the input\n */\nfunction getErrorMessage(e) {\n    if (isError(e)) {\n        return e.message;\n    }\n    else {\n        let stringified;\n        try {\n            if (typeof e === \"object\" && e) {\n                stringified = JSON.stringify(e);\n            }\n            else {\n                stringified = String(e);\n            }\n        }\n        catch (err) {\n            stringified = \"[unable to stringify input]\";\n        }\n        return `Unknown error ${stringified}`;\n    }\n}\n//# sourceMappingURL=error.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2NvcmUtdXRpbC9kaXN0L2VzbS9lcnJvci5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBQTtBQUNBO0FBQ3VDO0FBQ3ZDO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUCxRQUFRLG9EQUFRO0FBQ2hCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnQ0FBZ0MsWUFBWTtBQUM1QztBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9kYW5pZWwzLXZwMi8uL25vZGVfbW9kdWxlcy9AYXp1cmUvY29yZS11dGlsL2Rpc3QvZXNtL2Vycm9yLmpzPzQyNTgiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uXG4vLyBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UuXG5pbXBvcnQgeyBpc09iamVjdCB9IGZyb20gXCIuL29iamVjdC5qc1wiO1xuLyoqXG4gKiBUeXBlZ3VhcmQgZm9yIGFuIGVycm9yIG9iamVjdCBzaGFwZSAoaGFzIG5hbWUgYW5kIG1lc3NhZ2UpXG4gKiBAcGFyYW0gZSAtIFNvbWV0aGluZyBjYXVnaHQgYnkgYSBjYXRjaCBjbGF1c2UuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBpc0Vycm9yKGUpIHtcbiAgICBpZiAoaXNPYmplY3QoZSkpIHtcbiAgICAgICAgY29uc3QgaGFzTmFtZSA9IHR5cGVvZiBlLm5hbWUgPT09IFwic3RyaW5nXCI7XG4gICAgICAgIGNvbnN0IGhhc01lc3NhZ2UgPSB0eXBlb2YgZS5tZXNzYWdlID09PSBcInN0cmluZ1wiO1xuICAgICAgICByZXR1cm4gaGFzTmFtZSAmJiBoYXNNZXNzYWdlO1xuICAgIH1cbiAgICByZXR1cm4gZmFsc2U7XG59XG4vKipcbiAqIEdpdmVuIHdoYXQgaXMgdGhvdWdodCB0byBiZSBhbiBlcnJvciBvYmplY3QsIHJldHVybiB0aGUgbWVzc2FnZSBpZiBwb3NzaWJsZS5cbiAqIElmIHRoZSBtZXNzYWdlIGlzIG1pc3NpbmcsIHJldHVybnMgYSBzdHJpbmdpZmllZCB2ZXJzaW9uIG9mIHRoZSBpbnB1dC5cbiAqIEBwYXJhbSBlIC0gU29tZXRoaW5nIHRocm93biBmcm9tIGEgdHJ5IGJsb2NrXG4gKiBAcmV0dXJucyBUaGUgZXJyb3IgbWVzc2FnZSBvciBhIHN0cmluZyBvZiB0aGUgaW5wdXRcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGdldEVycm9yTWVzc2FnZShlKSB7XG4gICAgaWYgKGlzRXJyb3IoZSkpIHtcbiAgICAgICAgcmV0dXJuIGUubWVzc2FnZTtcbiAgICB9XG4gICAgZWxzZSB7XG4gICAgICAgIGxldCBzdHJpbmdpZmllZDtcbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgIGlmICh0eXBlb2YgZSA9PT0gXCJvYmplY3RcIiAmJiBlKSB7XG4gICAgICAgICAgICAgICAgc3RyaW5naWZpZWQgPSBKU09OLnN0cmluZ2lmeShlKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgIHN0cmluZ2lmaWVkID0gU3RyaW5nKGUpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIGNhdGNoIChlcnIpIHtcbiAgICAgICAgICAgIHN0cmluZ2lmaWVkID0gXCJbdW5hYmxlIHRvIHN0cmluZ2lmeSBpbnB1dF1cIjtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gYFVua25vd24gZXJyb3IgJHtzdHJpbmdpZmllZH1gO1xuICAgIH1cbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWVycm9yLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/core-util/dist/esm/error.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/core-util/dist/esm/index.js":
/*!*********************************************************!*\
  !*** ./node_modules/@azure/core-util/dist/esm/index.js ***!
  \*********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   cancelablePromiseRace: () => (/* reexport safe */ _aborterUtils_js__WEBPACK_IMPORTED_MODULE_1__.cancelablePromiseRace),\n/* harmony export */   computeSha256Hash: () => (/* reexport safe */ _sha256_js__WEBPACK_IMPORTED_MODULE_6__.computeSha256Hash),\n/* harmony export */   computeSha256Hmac: () => (/* reexport safe */ _sha256_js__WEBPACK_IMPORTED_MODULE_6__.computeSha256Hmac),\n/* harmony export */   createAbortablePromise: () => (/* reexport safe */ _createAbortablePromise_js__WEBPACK_IMPORTED_MODULE_2__.createAbortablePromise),\n/* harmony export */   delay: () => (/* reexport safe */ _delay_js__WEBPACK_IMPORTED_MODULE_0__.delay),\n/* harmony export */   getErrorMessage: () => (/* reexport safe */ _error_js__WEBPACK_IMPORTED_MODULE_5__.getErrorMessage),\n/* harmony export */   getRandomIntegerInclusive: () => (/* reexport safe */ _random_js__WEBPACK_IMPORTED_MODULE_3__.getRandomIntegerInclusive),\n/* harmony export */   isBrowser: () => (/* reexport safe */ _checkEnvironment_js__WEBPACK_IMPORTED_MODULE_9__.isBrowser),\n/* harmony export */   isBun: () => (/* reexport safe */ _checkEnvironment_js__WEBPACK_IMPORTED_MODULE_9__.isBun),\n/* harmony export */   isDefined: () => (/* reexport safe */ _typeGuards_js__WEBPACK_IMPORTED_MODULE_7__.isDefined),\n/* harmony export */   isDeno: () => (/* reexport safe */ _checkEnvironment_js__WEBPACK_IMPORTED_MODULE_9__.isDeno),\n/* harmony export */   isError: () => (/* reexport safe */ _error_js__WEBPACK_IMPORTED_MODULE_5__.isError),\n/* harmony export */   isNode: () => (/* reexport safe */ _checkEnvironment_js__WEBPACK_IMPORTED_MODULE_9__.isNode),\n/* harmony export */   isNodeLike: () => (/* reexport safe */ _checkEnvironment_js__WEBPACK_IMPORTED_MODULE_9__.isNodeLike),\n/* harmony export */   isNodeRuntime: () => (/* reexport safe */ _checkEnvironment_js__WEBPACK_IMPORTED_MODULE_9__.isNodeRuntime),\n/* harmony export */   isObject: () => (/* reexport safe */ _object_js__WEBPACK_IMPORTED_MODULE_4__.isObject),\n/* harmony export */   isObjectWithProperties: () => (/* reexport safe */ _typeGuards_js__WEBPACK_IMPORTED_MODULE_7__.isObjectWithProperties),\n/* harmony export */   isReactNative: () => (/* reexport safe */ _checkEnvironment_js__WEBPACK_IMPORTED_MODULE_9__.isReactNative),\n/* harmony export */   isWebWorker: () => (/* reexport safe */ _checkEnvironment_js__WEBPACK_IMPORTED_MODULE_9__.isWebWorker),\n/* harmony export */   objectHasProperty: () => (/* reexport safe */ _typeGuards_js__WEBPACK_IMPORTED_MODULE_7__.objectHasProperty),\n/* harmony export */   randomUUID: () => (/* reexport safe */ _uuidUtils_js__WEBPACK_IMPORTED_MODULE_8__.randomUUID),\n/* harmony export */   stringToUint8Array: () => (/* reexport safe */ _bytesEncoding_js__WEBPACK_IMPORTED_MODULE_10__.stringToUint8Array),\n/* harmony export */   uint8ArrayToString: () => (/* reexport safe */ _bytesEncoding_js__WEBPACK_IMPORTED_MODULE_10__.uint8ArrayToString)\n/* harmony export */ });\n/* harmony import */ var _delay_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./delay.js */ \"(rsc)/./node_modules/@azure/core-util/dist/esm/delay.js\");\n/* harmony import */ var _aborterUtils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./aborterUtils.js */ \"(rsc)/./node_modules/@azure/core-util/dist/esm/aborterUtils.js\");\n/* harmony import */ var _createAbortablePromise_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./createAbortablePromise.js */ \"(rsc)/./node_modules/@azure/core-util/dist/esm/createAbortablePromise.js\");\n/* harmony import */ var _random_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./random.js */ \"(rsc)/./node_modules/@azure/core-util/dist/esm/random.js\");\n/* harmony import */ var _object_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./object.js */ \"(rsc)/./node_modules/@azure/core-util/dist/esm/object.js\");\n/* harmony import */ var _error_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./error.js */ \"(rsc)/./node_modules/@azure/core-util/dist/esm/error.js\");\n/* harmony import */ var _sha256_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./sha256.js */ \"(rsc)/./node_modules/@azure/core-util/dist/esm/sha256.js\");\n/* harmony import */ var _typeGuards_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./typeGuards.js */ \"(rsc)/./node_modules/@azure/core-util/dist/esm/typeGuards.js\");\n/* harmony import */ var _uuidUtils_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./uuidUtils.js */ \"(rsc)/./node_modules/@azure/core-util/dist/esm/uuidUtils.js\");\n/* harmony import */ var _checkEnvironment_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./checkEnvironment.js */ \"(rsc)/./node_modules/@azure/core-util/dist/esm/checkEnvironment.js\");\n/* harmony import */ var _bytesEncoding_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./bytesEncoding.js */ \"(rsc)/./node_modules/@azure/core-util/dist/esm/bytesEncoding.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\n\n\n\n\n\n\n\n\n\n\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2NvcmUtdXRpbC9kaXN0L2VzbS9pbmRleC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQUE7QUFDQTtBQUNtQztBQUN3QjtBQUNXO0FBQ2Q7QUFDakI7QUFDZTtBQUNhO0FBQ29CO0FBQzNDO0FBQ3FGO0FBQ3JEO0FBQzVFIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZGFuaWVsMy12cDIvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2NvcmUtdXRpbC9kaXN0L2VzbS9pbmRleC5qcz81ZWIzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLlxuLy8gTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlLlxuZXhwb3J0IHsgZGVsYXkgfSBmcm9tIFwiLi9kZWxheS5qc1wiO1xuZXhwb3J0IHsgY2FuY2VsYWJsZVByb21pc2VSYWNlLCB9IGZyb20gXCIuL2Fib3J0ZXJVdGlscy5qc1wiO1xuZXhwb3J0IHsgY3JlYXRlQWJvcnRhYmxlUHJvbWlzZSwgfSBmcm9tIFwiLi9jcmVhdGVBYm9ydGFibGVQcm9taXNlLmpzXCI7XG5leHBvcnQgeyBnZXRSYW5kb21JbnRlZ2VySW5jbHVzaXZlIH0gZnJvbSBcIi4vcmFuZG9tLmpzXCI7XG5leHBvcnQgeyBpc09iamVjdCB9IGZyb20gXCIuL29iamVjdC5qc1wiO1xuZXhwb3J0IHsgaXNFcnJvciwgZ2V0RXJyb3JNZXNzYWdlIH0gZnJvbSBcIi4vZXJyb3IuanNcIjtcbmV4cG9ydCB7IGNvbXB1dGVTaGEyNTZIYXNoLCBjb21wdXRlU2hhMjU2SG1hYyB9IGZyb20gXCIuL3NoYTI1Ni5qc1wiO1xuZXhwb3J0IHsgaXNEZWZpbmVkLCBpc09iamVjdFdpdGhQcm9wZXJ0aWVzLCBvYmplY3RIYXNQcm9wZXJ0eSB9IGZyb20gXCIuL3R5cGVHdWFyZHMuanNcIjtcbmV4cG9ydCB7IHJhbmRvbVVVSUQgfSBmcm9tIFwiLi91dWlkVXRpbHMuanNcIjtcbmV4cG9ydCB7IGlzQnJvd3NlciwgaXNCdW4sIGlzTm9kZSwgaXNOb2RlTGlrZSwgaXNOb2RlUnVudGltZSwgaXNEZW5vLCBpc1JlYWN0TmF0aXZlLCBpc1dlYldvcmtlciwgfSBmcm9tIFwiLi9jaGVja0Vudmlyb25tZW50LmpzXCI7XG5leHBvcnQgeyB1aW50OEFycmF5VG9TdHJpbmcsIHN0cmluZ1RvVWludDhBcnJheSB9IGZyb20gXCIuL2J5dGVzRW5jb2RpbmcuanNcIjtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWluZGV4LmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/core-util/dist/esm/index.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/core-util/dist/esm/object.js":
/*!**********************************************************!*\
  !*** ./node_modules/@azure/core-util/dist/esm/object.js ***!
  \**********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   isObject: () => (/* binding */ isObject)\n/* harmony export */ });\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n/**\n * Helper to determine when an input is a generic JS object.\n * @returns true when input is an object type that is not null, Array, RegExp, or Date.\n */\nfunction isObject(input) {\n    return (typeof input === \"object\" &&\n        input !== null &&\n        !Array.isArray(input) &&\n        !(input instanceof RegExp) &&\n        !(input instanceof Date));\n}\n//# sourceMappingURL=object.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2NvcmUtdXRpbC9kaXN0L2VzbS9vYmplY3QuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9kYW5pZWwzLXZwMi8uL25vZGVfbW9kdWxlcy9AYXp1cmUvY29yZS11dGlsL2Rpc3QvZXNtL29iamVjdC5qcz9lYWM0Il0sInNvdXJjZXNDb250ZW50IjpbIi8vIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLlxuLy8gTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlLlxuLyoqXG4gKiBIZWxwZXIgdG8gZGV0ZXJtaW5lIHdoZW4gYW4gaW5wdXQgaXMgYSBnZW5lcmljIEpTIG9iamVjdC5cbiAqIEByZXR1cm5zIHRydWUgd2hlbiBpbnB1dCBpcyBhbiBvYmplY3QgdHlwZSB0aGF0IGlzIG5vdCBudWxsLCBBcnJheSwgUmVnRXhwLCBvciBEYXRlLlxuICovXG5leHBvcnQgZnVuY3Rpb24gaXNPYmplY3QoaW5wdXQpIHtcbiAgICByZXR1cm4gKHR5cGVvZiBpbnB1dCA9PT0gXCJvYmplY3RcIiAmJlxuICAgICAgICBpbnB1dCAhPT0gbnVsbCAmJlxuICAgICAgICAhQXJyYXkuaXNBcnJheShpbnB1dCkgJiZcbiAgICAgICAgIShpbnB1dCBpbnN0YW5jZW9mIFJlZ0V4cCkgJiZcbiAgICAgICAgIShpbnB1dCBpbnN0YW5jZW9mIERhdGUpKTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPW9iamVjdC5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/core-util/dist/esm/object.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/core-util/dist/esm/random.js":
/*!**********************************************************!*\
  !*** ./node_modules/@azure/core-util/dist/esm/random.js ***!
  \**********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getRandomIntegerInclusive: () => (/* binding */ getRandomIntegerInclusive)\n/* harmony export */ });\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n/**\n * Returns a random integer value between a lower and upper bound,\n * inclusive of both bounds.\n * Note that this uses Math.random and isn't secure. If you need to use\n * this for any kind of security purpose, find a better source of random.\n * @param min - The smallest integer value allowed.\n * @param max - The largest integer value allowed.\n */\nfunction getRandomIntegerInclusive(min, max) {\n    // Make sure inputs are integers.\n    min = Math.ceil(min);\n    max = Math.floor(max);\n    // Pick a random offset from zero to the size of the range.\n    // Since Math.random() can never return 1, we have to make the range one larger\n    // in order to be inclusive of the maximum value after we take the floor.\n    const offset = Math.floor(Math.random() * (max - min + 1));\n    return offset + min;\n}\n//# sourceMappingURL=random.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2NvcmUtdXRpbC9kaXN0L2VzbS9yYW5kb20uanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2RhbmllbDMtdnAyLy4vbm9kZV9tb2R1bGVzL0BhenVyZS9jb3JlLXV0aWwvZGlzdC9lc20vcmFuZG9tLmpzPzY0ZWMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uXG4vLyBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UuXG4vKipcbiAqIFJldHVybnMgYSByYW5kb20gaW50ZWdlciB2YWx1ZSBiZXR3ZWVuIGEgbG93ZXIgYW5kIHVwcGVyIGJvdW5kLFxuICogaW5jbHVzaXZlIG9mIGJvdGggYm91bmRzLlxuICogTm90ZSB0aGF0IHRoaXMgdXNlcyBNYXRoLnJhbmRvbSBhbmQgaXNuJ3Qgc2VjdXJlLiBJZiB5b3UgbmVlZCB0byB1c2VcbiAqIHRoaXMgZm9yIGFueSBraW5kIG9mIHNlY3VyaXR5IHB1cnBvc2UsIGZpbmQgYSBiZXR0ZXIgc291cmNlIG9mIHJhbmRvbS5cbiAqIEBwYXJhbSBtaW4gLSBUaGUgc21hbGxlc3QgaW50ZWdlciB2YWx1ZSBhbGxvd2VkLlxuICogQHBhcmFtIG1heCAtIFRoZSBsYXJnZXN0IGludGVnZXIgdmFsdWUgYWxsb3dlZC5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGdldFJhbmRvbUludGVnZXJJbmNsdXNpdmUobWluLCBtYXgpIHtcbiAgICAvLyBNYWtlIHN1cmUgaW5wdXRzIGFyZSBpbnRlZ2Vycy5cbiAgICBtaW4gPSBNYXRoLmNlaWwobWluKTtcbiAgICBtYXggPSBNYXRoLmZsb29yKG1heCk7XG4gICAgLy8gUGljayBhIHJhbmRvbSBvZmZzZXQgZnJvbSB6ZXJvIHRvIHRoZSBzaXplIG9mIHRoZSByYW5nZS5cbiAgICAvLyBTaW5jZSBNYXRoLnJhbmRvbSgpIGNhbiBuZXZlciByZXR1cm4gMSwgd2UgaGF2ZSB0byBtYWtlIHRoZSByYW5nZSBvbmUgbGFyZ2VyXG4gICAgLy8gaW4gb3JkZXIgdG8gYmUgaW5jbHVzaXZlIG9mIHRoZSBtYXhpbXVtIHZhbHVlIGFmdGVyIHdlIHRha2UgdGhlIGZsb29yLlxuICAgIGNvbnN0IG9mZnNldCA9IE1hdGguZmxvb3IoTWF0aC5yYW5kb20oKSAqIChtYXggLSBtaW4gKyAxKSk7XG4gICAgcmV0dXJuIG9mZnNldCArIG1pbjtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXJhbmRvbS5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/core-util/dist/esm/random.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/core-util/dist/esm/sha256.js":
/*!**********************************************************!*\
  !*** ./node_modules/@azure/core-util/dist/esm/sha256.js ***!
  \**********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   computeSha256Hash: () => (/* binding */ computeSha256Hash),\n/* harmony export */   computeSha256Hmac: () => (/* binding */ computeSha256Hmac)\n/* harmony export */ });\n/* harmony import */ var crypto__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! crypto */ \"crypto\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\n/**\n * Generates a SHA-256 HMAC signature.\n * @param key - The HMAC key represented as a base64 string, used to generate the cryptographic HMAC hash.\n * @param stringToSign - The data to be signed.\n * @param encoding - The textual encoding to use for the returned HMAC digest.\n */\nasync function computeSha256Hmac(key, stringToSign, encoding) {\n    const decodedKey = Buffer.from(key, \"base64\");\n    return (0,crypto__WEBPACK_IMPORTED_MODULE_0__.createHmac)(\"sha256\", decodedKey).update(stringToSign).digest(encoding);\n}\n/**\n * Generates a SHA-256 hash.\n * @param content - The data to be included in the hash.\n * @param encoding - The textual encoding to use for the returned hash.\n */\nasync function computeSha256Hash(content, encoding) {\n    return (0,crypto__WEBPACK_IMPORTED_MODULE_0__.createHash)(\"sha256\").update(content).digest(encoding);\n}\n//# sourceMappingURL=sha256.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2NvcmUtdXRpbC9kaXN0L2VzbS9zaGEyNTYuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUE7QUFDQTtBQUNnRDtBQUNoRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0EsV0FBVyxrREFBVTtBQUNyQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQLFdBQVcsa0RBQVU7QUFDckI7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2RhbmllbDMtdnAyLy4vbm9kZV9tb2R1bGVzL0BhenVyZS9jb3JlLXV0aWwvZGlzdC9lc20vc2hhMjU2LmpzPzA2MzciXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uXG4vLyBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UuXG5pbXBvcnQgeyBjcmVhdGVIYXNoLCBjcmVhdGVIbWFjIH0gZnJvbSBcImNyeXB0b1wiO1xuLyoqXG4gKiBHZW5lcmF0ZXMgYSBTSEEtMjU2IEhNQUMgc2lnbmF0dXJlLlxuICogQHBhcmFtIGtleSAtIFRoZSBITUFDIGtleSByZXByZXNlbnRlZCBhcyBhIGJhc2U2NCBzdHJpbmcsIHVzZWQgdG8gZ2VuZXJhdGUgdGhlIGNyeXB0b2dyYXBoaWMgSE1BQyBoYXNoLlxuICogQHBhcmFtIHN0cmluZ1RvU2lnbiAtIFRoZSBkYXRhIHRvIGJlIHNpZ25lZC5cbiAqIEBwYXJhbSBlbmNvZGluZyAtIFRoZSB0ZXh0dWFsIGVuY29kaW5nIHRvIHVzZSBmb3IgdGhlIHJldHVybmVkIEhNQUMgZGlnZXN0LlxuICovXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gY29tcHV0ZVNoYTI1NkhtYWMoa2V5LCBzdHJpbmdUb1NpZ24sIGVuY29kaW5nKSB7XG4gICAgY29uc3QgZGVjb2RlZEtleSA9IEJ1ZmZlci5mcm9tKGtleSwgXCJiYXNlNjRcIik7XG4gICAgcmV0dXJuIGNyZWF0ZUhtYWMoXCJzaGEyNTZcIiwgZGVjb2RlZEtleSkudXBkYXRlKHN0cmluZ1RvU2lnbikuZGlnZXN0KGVuY29kaW5nKTtcbn1cbi8qKlxuICogR2VuZXJhdGVzIGEgU0hBLTI1NiBoYXNoLlxuICogQHBhcmFtIGNvbnRlbnQgLSBUaGUgZGF0YSB0byBiZSBpbmNsdWRlZCBpbiB0aGUgaGFzaC5cbiAqIEBwYXJhbSBlbmNvZGluZyAtIFRoZSB0ZXh0dWFsIGVuY29kaW5nIHRvIHVzZSBmb3IgdGhlIHJldHVybmVkIGhhc2guXG4gKi9cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBjb21wdXRlU2hhMjU2SGFzaChjb250ZW50LCBlbmNvZGluZykge1xuICAgIHJldHVybiBjcmVhdGVIYXNoKFwic2hhMjU2XCIpLnVwZGF0ZShjb250ZW50KS5kaWdlc3QoZW5jb2RpbmcpO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9c2hhMjU2LmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/core-util/dist/esm/sha256.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/core-util/dist/esm/typeGuards.js":
/*!**************************************************************!*\
  !*** ./node_modules/@azure/core-util/dist/esm/typeGuards.js ***!
  \**************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   isDefined: () => (/* binding */ isDefined),\n/* harmony export */   isObjectWithProperties: () => (/* binding */ isObjectWithProperties),\n/* harmony export */   objectHasProperty: () => (/* binding */ objectHasProperty)\n/* harmony export */ });\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n/**\n * Helper TypeGuard that checks if something is defined or not.\n * @param thing - Anything\n */\nfunction isDefined(thing) {\n    return typeof thing !== \"undefined\" && thing !== null;\n}\n/**\n * Helper TypeGuard that checks if the input is an object with the specified properties.\n * @param thing - Anything.\n * @param properties - The name of the properties that should appear in the object.\n */\nfunction isObjectWithProperties(thing, properties) {\n    if (!isDefined(thing) || typeof thing !== \"object\") {\n        return false;\n    }\n    for (const property of properties) {\n        if (!objectHasProperty(thing, property)) {\n            return false;\n        }\n    }\n    return true;\n}\n/**\n * Helper TypeGuard that checks if the input is an object with the specified property.\n * @param thing - Any object.\n * @param property - The name of the property that should appear in the object.\n */\nfunction objectHasProperty(thing, property) {\n    return (isDefined(thing) && typeof thing === \"object\" && property in thing);\n}\n//# sourceMappingURL=typeGuards.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2NvcmUtdXRpbC9kaXN0L2VzbS90eXBlR3VhcmRzLmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZGFuaWVsMy12cDIvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2NvcmUtdXRpbC9kaXN0L2VzbS90eXBlR3VhcmRzLmpzPzRlMmMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uXG4vLyBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UuXG4vKipcbiAqIEhlbHBlciBUeXBlR3VhcmQgdGhhdCBjaGVja3MgaWYgc29tZXRoaW5nIGlzIGRlZmluZWQgb3Igbm90LlxuICogQHBhcmFtIHRoaW5nIC0gQW55dGhpbmdcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGlzRGVmaW5lZCh0aGluZykge1xuICAgIHJldHVybiB0eXBlb2YgdGhpbmcgIT09IFwidW5kZWZpbmVkXCIgJiYgdGhpbmcgIT09IG51bGw7XG59XG4vKipcbiAqIEhlbHBlciBUeXBlR3VhcmQgdGhhdCBjaGVja3MgaWYgdGhlIGlucHV0IGlzIGFuIG9iamVjdCB3aXRoIHRoZSBzcGVjaWZpZWQgcHJvcGVydGllcy5cbiAqIEBwYXJhbSB0aGluZyAtIEFueXRoaW5nLlxuICogQHBhcmFtIHByb3BlcnRpZXMgLSBUaGUgbmFtZSBvZiB0aGUgcHJvcGVydGllcyB0aGF0IHNob3VsZCBhcHBlYXIgaW4gdGhlIG9iamVjdC5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGlzT2JqZWN0V2l0aFByb3BlcnRpZXModGhpbmcsIHByb3BlcnRpZXMpIHtcbiAgICBpZiAoIWlzRGVmaW5lZCh0aGluZykgfHwgdHlwZW9mIHRoaW5nICE9PSBcIm9iamVjdFwiKSB7XG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG4gICAgZm9yIChjb25zdCBwcm9wZXJ0eSBvZiBwcm9wZXJ0aWVzKSB7XG4gICAgICAgIGlmICghb2JqZWN0SGFzUHJvcGVydHkodGhpbmcsIHByb3BlcnR5KSkge1xuICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICB9XG4gICAgfVxuICAgIHJldHVybiB0cnVlO1xufVxuLyoqXG4gKiBIZWxwZXIgVHlwZUd1YXJkIHRoYXQgY2hlY2tzIGlmIHRoZSBpbnB1dCBpcyBhbiBvYmplY3Qgd2l0aCB0aGUgc3BlY2lmaWVkIHByb3BlcnR5LlxuICogQHBhcmFtIHRoaW5nIC0gQW55IG9iamVjdC5cbiAqIEBwYXJhbSBwcm9wZXJ0eSAtIFRoZSBuYW1lIG9mIHRoZSBwcm9wZXJ0eSB0aGF0IHNob3VsZCBhcHBlYXIgaW4gdGhlIG9iamVjdC5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIG9iamVjdEhhc1Byb3BlcnR5KHRoaW5nLCBwcm9wZXJ0eSkge1xuICAgIHJldHVybiAoaXNEZWZpbmVkKHRoaW5nKSAmJiB0eXBlb2YgdGhpbmcgPT09IFwib2JqZWN0XCIgJiYgcHJvcGVydHkgaW4gdGhpbmcpO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9dHlwZUd1YXJkcy5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/core-util/dist/esm/typeGuards.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/core-util/dist/esm/uuidUtils.js":
/*!*************************************************************!*\
  !*** ./node_modules/@azure/core-util/dist/esm/uuidUtils.js ***!
  \*************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   randomUUID: () => (/* binding */ randomUUID)\n/* harmony export */ });\n/* harmony import */ var crypto__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! crypto */ \"crypto\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\nvar _a;\n\n// NOTE: This is a workaround until we can use `globalThis.crypto.randomUUID` in Node.js 19+.\nconst uuidFunction = typeof ((_a = globalThis === null || globalThis === void 0 ? void 0 : globalThis.crypto) === null || _a === void 0 ? void 0 : _a.randomUUID) === \"function\"\n    ? globalThis.crypto.randomUUID.bind(globalThis.crypto)\n    : crypto__WEBPACK_IMPORTED_MODULE_0__.randomUUID;\n/**\n * Generated Universally Unique Identifier\n *\n * @returns RFC4122 v4 UUID.\n */\nfunction randomUUID() {\n    return uuidFunction();\n}\n//# sourceMappingURL=uuidUtils.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2NvcmUtdXRpbC9kaXN0L2VzbS91dWlkVXRpbHMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDb0Q7QUFDcEQ7QUFDQTtBQUNBO0FBQ0EsTUFBTSw4Q0FBWTtBQUNsQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9kYW5pZWwzLXZwMi8uL25vZGVfbW9kdWxlcy9AYXp1cmUvY29yZS11dGlsL2Rpc3QvZXNtL3V1aWRVdGlscy5qcz8yZGQ1Il0sInNvdXJjZXNDb250ZW50IjpbIi8vIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLlxuLy8gTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlLlxudmFyIF9hO1xuaW1wb3J0IHsgcmFuZG9tVVVJRCBhcyB2NFJhbmRvbVVVSUQgfSBmcm9tIFwiY3J5cHRvXCI7XG4vLyBOT1RFOiBUaGlzIGlzIGEgd29ya2Fyb3VuZCB1bnRpbCB3ZSBjYW4gdXNlIGBnbG9iYWxUaGlzLmNyeXB0by5yYW5kb21VVUlEYCBpbiBOb2RlLmpzIDE5Ky5cbmNvbnN0IHV1aWRGdW5jdGlvbiA9IHR5cGVvZiAoKF9hID0gZ2xvYmFsVGhpcyA9PT0gbnVsbCB8fCBnbG9iYWxUaGlzID09PSB2b2lkIDAgPyB2b2lkIDAgOiBnbG9iYWxUaGlzLmNyeXB0bykgPT09IG51bGwgfHwgX2EgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9hLnJhbmRvbVVVSUQpID09PSBcImZ1bmN0aW9uXCJcbiAgICA/IGdsb2JhbFRoaXMuY3J5cHRvLnJhbmRvbVVVSUQuYmluZChnbG9iYWxUaGlzLmNyeXB0bylcbiAgICA6IHY0UmFuZG9tVVVJRDtcbi8qKlxuICogR2VuZXJhdGVkIFVuaXZlcnNhbGx5IFVuaXF1ZSBJZGVudGlmaWVyXG4gKlxuICogQHJldHVybnMgUkZDNDEyMiB2NCBVVUlELlxuICovXG5leHBvcnQgZnVuY3Rpb24gcmFuZG9tVVVJRCgpIHtcbiAgICByZXR1cm4gdXVpZEZ1bmN0aW9uKCk7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD11dWlkVXRpbHMuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/core-util/dist/esm/uuidUtils.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/logger/dist/esm/debug.js":
/*!******************************************************!*\
  !*** ./node_modules/@azure/logger/dist/esm/debug.js ***!
  \******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _log_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./log.js */ \"(rsc)/./node_modules/@azure/logger/dist/esm/log.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nconst debugEnvVariable = (typeof process !== \"undefined\" && process.env && process.env.DEBUG) || undefined;\nlet enabledString;\nlet enabledNamespaces = [];\nlet skippedNamespaces = [];\nconst debuggers = [];\nif (debugEnvVariable) {\n    enable(debugEnvVariable);\n}\nconst debugObj = Object.assign((namespace) => {\n    return createDebugger(namespace);\n}, {\n    enable,\n    enabled,\n    disable,\n    log: _log_js__WEBPACK_IMPORTED_MODULE_0__.log,\n});\nfunction enable(namespaces) {\n    enabledString = namespaces;\n    enabledNamespaces = [];\n    skippedNamespaces = [];\n    const wildcard = /\\*/g;\n    const namespaceList = namespaces.split(\",\").map((ns) => ns.trim().replace(wildcard, \".*?\"));\n    for (const ns of namespaceList) {\n        if (ns.startsWith(\"-\")) {\n            skippedNamespaces.push(new RegExp(`^${ns.substr(1)}$`));\n        }\n        else {\n            enabledNamespaces.push(new RegExp(`^${ns}$`));\n        }\n    }\n    for (const instance of debuggers) {\n        instance.enabled = enabled(instance.namespace);\n    }\n}\nfunction enabled(namespace) {\n    if (namespace.endsWith(\"*\")) {\n        return true;\n    }\n    for (const skipped of skippedNamespaces) {\n        if (skipped.test(namespace)) {\n            return false;\n        }\n    }\n    for (const enabledNamespace of enabledNamespaces) {\n        if (enabledNamespace.test(namespace)) {\n            return true;\n        }\n    }\n    return false;\n}\nfunction disable() {\n    const result = enabledString || \"\";\n    enable(\"\");\n    return result;\n}\nfunction createDebugger(namespace) {\n    const newDebugger = Object.assign(debug, {\n        enabled: enabled(namespace),\n        destroy,\n        log: debugObj.log,\n        namespace,\n        extend,\n    });\n    function debug(...args) {\n        if (!newDebugger.enabled) {\n            return;\n        }\n        if (args.length > 0) {\n            args[0] = `${namespace} ${args[0]}`;\n        }\n        newDebugger.log(...args);\n    }\n    debuggers.push(newDebugger);\n    return newDebugger;\n}\nfunction destroy() {\n    const index = debuggers.indexOf(this);\n    if (index >= 0) {\n        debuggers.splice(index, 1);\n        return true;\n    }\n    return false;\n}\nfunction extend(namespace) {\n    const newDebugger = createDebugger(`${this.namespace}:${namespace}`);\n    newDebugger.log = this.log;\n    return newDebugger;\n}\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (debugObj);\n//# sourceMappingURL=debug.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2xvZ2dlci9kaXN0L2VzbS9kZWJ1Zy5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFBO0FBQ0E7QUFDK0I7QUFDL0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDO0FBQ0Q7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQLENBQUM7QUFDRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0RBQWtELGFBQWE7QUFDL0Q7QUFDQTtBQUNBLGtEQUFrRCxHQUFHO0FBQ3JEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx5QkFBeUIsV0FBVyxFQUFFLFFBQVE7QUFDOUM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMENBQTBDLGVBQWUsR0FBRyxVQUFVO0FBQ3RFO0FBQ0E7QUFDQTtBQUNBLGlFQUFlLFFBQVEsRUFBQztBQUN4QiIsInNvdXJjZXMiOlsid2VicGFjazovL2RhbmllbDMtdnAyLy4vbm9kZV9tb2R1bGVzL0BhenVyZS9sb2dnZXIvZGlzdC9lc20vZGVidWcuanM/MTU2NSJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi5cbi8vIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZS5cbmltcG9ydCB7IGxvZyB9IGZyb20gXCIuL2xvZy5qc1wiO1xuY29uc3QgZGVidWdFbnZWYXJpYWJsZSA9ICh0eXBlb2YgcHJvY2VzcyAhPT0gXCJ1bmRlZmluZWRcIiAmJiBwcm9jZXNzLmVudiAmJiBwcm9jZXNzLmVudi5ERUJVRykgfHwgdW5kZWZpbmVkO1xubGV0IGVuYWJsZWRTdHJpbmc7XG5sZXQgZW5hYmxlZE5hbWVzcGFjZXMgPSBbXTtcbmxldCBza2lwcGVkTmFtZXNwYWNlcyA9IFtdO1xuY29uc3QgZGVidWdnZXJzID0gW107XG5pZiAoZGVidWdFbnZWYXJpYWJsZSkge1xuICAgIGVuYWJsZShkZWJ1Z0VudlZhcmlhYmxlKTtcbn1cbmNvbnN0IGRlYnVnT2JqID0gT2JqZWN0LmFzc2lnbigobmFtZXNwYWNlKSA9PiB7XG4gICAgcmV0dXJuIGNyZWF0ZURlYnVnZ2VyKG5hbWVzcGFjZSk7XG59LCB7XG4gICAgZW5hYmxlLFxuICAgIGVuYWJsZWQsXG4gICAgZGlzYWJsZSxcbiAgICBsb2csXG59KTtcbmZ1bmN0aW9uIGVuYWJsZShuYW1lc3BhY2VzKSB7XG4gICAgZW5hYmxlZFN0cmluZyA9IG5hbWVzcGFjZXM7XG4gICAgZW5hYmxlZE5hbWVzcGFjZXMgPSBbXTtcbiAgICBza2lwcGVkTmFtZXNwYWNlcyA9IFtdO1xuICAgIGNvbnN0IHdpbGRjYXJkID0gL1xcKi9nO1xuICAgIGNvbnN0IG5hbWVzcGFjZUxpc3QgPSBuYW1lc3BhY2VzLnNwbGl0KFwiLFwiKS5tYXAoKG5zKSA9PiBucy50cmltKCkucmVwbGFjZSh3aWxkY2FyZCwgXCIuKj9cIikpO1xuICAgIGZvciAoY29uc3QgbnMgb2YgbmFtZXNwYWNlTGlzdCkge1xuICAgICAgICBpZiAobnMuc3RhcnRzV2l0aChcIi1cIikpIHtcbiAgICAgICAgICAgIHNraXBwZWROYW1lc3BhY2VzLnB1c2gobmV3IFJlZ0V4cChgXiR7bnMuc3Vic3RyKDEpfSRgKSk7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICBlbmFibGVkTmFtZXNwYWNlcy5wdXNoKG5ldyBSZWdFeHAoYF4ke25zfSRgKSk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgZm9yIChjb25zdCBpbnN0YW5jZSBvZiBkZWJ1Z2dlcnMpIHtcbiAgICAgICAgaW5zdGFuY2UuZW5hYmxlZCA9IGVuYWJsZWQoaW5zdGFuY2UubmFtZXNwYWNlKTtcbiAgICB9XG59XG5mdW5jdGlvbiBlbmFibGVkKG5hbWVzcGFjZSkge1xuICAgIGlmIChuYW1lc3BhY2UuZW5kc1dpdGgoXCIqXCIpKSB7XG4gICAgICAgIHJldHVybiB0cnVlO1xuICAgIH1cbiAgICBmb3IgKGNvbnN0IHNraXBwZWQgb2Ygc2tpcHBlZE5hbWVzcGFjZXMpIHtcbiAgICAgICAgaWYgKHNraXBwZWQudGVzdChuYW1lc3BhY2UpKSB7XG4gICAgICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICAgIH1cbiAgICB9XG4gICAgZm9yIChjb25zdCBlbmFibGVkTmFtZXNwYWNlIG9mIGVuYWJsZWROYW1lc3BhY2VzKSB7XG4gICAgICAgIGlmIChlbmFibGVkTmFtZXNwYWNlLnRlc3QobmFtZXNwYWNlKSkge1xuICAgICAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIGZhbHNlO1xufVxuZnVuY3Rpb24gZGlzYWJsZSgpIHtcbiAgICBjb25zdCByZXN1bHQgPSBlbmFibGVkU3RyaW5nIHx8IFwiXCI7XG4gICAgZW5hYmxlKFwiXCIpO1xuICAgIHJldHVybiByZXN1bHQ7XG59XG5mdW5jdGlvbiBjcmVhdGVEZWJ1Z2dlcihuYW1lc3BhY2UpIHtcbiAgICBjb25zdCBuZXdEZWJ1Z2dlciA9IE9iamVjdC5hc3NpZ24oZGVidWcsIHtcbiAgICAgICAgZW5hYmxlZDogZW5hYmxlZChuYW1lc3BhY2UpLFxuICAgICAgICBkZXN0cm95LFxuICAgICAgICBsb2c6IGRlYnVnT2JqLmxvZyxcbiAgICAgICAgbmFtZXNwYWNlLFxuICAgICAgICBleHRlbmQsXG4gICAgfSk7XG4gICAgZnVuY3Rpb24gZGVidWcoLi4uYXJncykge1xuICAgICAgICBpZiAoIW5ld0RlYnVnZ2VyLmVuYWJsZWQpIHtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuICAgICAgICBpZiAoYXJncy5sZW5ndGggPiAwKSB7XG4gICAgICAgICAgICBhcmdzWzBdID0gYCR7bmFtZXNwYWNlfSAke2FyZ3NbMF19YDtcbiAgICAgICAgfVxuICAgICAgICBuZXdEZWJ1Z2dlci5sb2coLi4uYXJncyk7XG4gICAgfVxuICAgIGRlYnVnZ2Vycy5wdXNoKG5ld0RlYnVnZ2VyKTtcbiAgICByZXR1cm4gbmV3RGVidWdnZXI7XG59XG5mdW5jdGlvbiBkZXN0cm95KCkge1xuICAgIGNvbnN0IGluZGV4ID0gZGVidWdnZXJzLmluZGV4T2YodGhpcyk7XG4gICAgaWYgKGluZGV4ID49IDApIHtcbiAgICAgICAgZGVidWdnZXJzLnNwbGljZShpbmRleCwgMSk7XG4gICAgICAgIHJldHVybiB0cnVlO1xuICAgIH1cbiAgICByZXR1cm4gZmFsc2U7XG59XG5mdW5jdGlvbiBleHRlbmQobmFtZXNwYWNlKSB7XG4gICAgY29uc3QgbmV3RGVidWdnZXIgPSBjcmVhdGVEZWJ1Z2dlcihgJHt0aGlzLm5hbWVzcGFjZX06JHtuYW1lc3BhY2V9YCk7XG4gICAgbmV3RGVidWdnZXIubG9nID0gdGhpcy5sb2c7XG4gICAgcmV0dXJuIG5ld0RlYnVnZ2VyO1xufVxuZXhwb3J0IGRlZmF1bHQgZGVidWdPYmo7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1kZWJ1Zy5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/logger/dist/esm/debug.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/logger/dist/esm/index.js":
/*!******************************************************!*\
  !*** ./node_modules/@azure/logger/dist/esm/index.js ***!
  \******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AzureLogger: () => (/* binding */ AzureLogger),\n/* harmony export */   createClientLogger: () => (/* binding */ createClientLogger),\n/* harmony export */   getLogLevel: () => (/* binding */ getLogLevel),\n/* harmony export */   setLogLevel: () => (/* binding */ setLogLevel)\n/* harmony export */ });\n/* harmony import */ var _debug_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./debug.js */ \"(rsc)/./node_modules/@azure/logger/dist/esm/debug.js\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nconst registeredLoggers = new Set();\nconst logLevelFromEnv = (typeof process !== \"undefined\" && process.env && process.env.AZURE_LOG_LEVEL) || undefined;\nlet azureLogLevel;\n/**\n * The AzureLogger provides a mechanism for overriding where logs are output to.\n * By default, logs are sent to stderr.\n * Override the `log` method to redirect logs to another location.\n */\nconst AzureLogger = (0,_debug_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(\"azure\");\nAzureLogger.log = (...args) => {\n    _debug_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].log(...args);\n};\nconst AZURE_LOG_LEVELS = [\"verbose\", \"info\", \"warning\", \"error\"];\nif (logLevelFromEnv) {\n    // avoid calling setLogLevel because we don't want a mis-set environment variable to crash\n    if (isAzureLogLevel(logLevelFromEnv)) {\n        setLogLevel(logLevelFromEnv);\n    }\n    else {\n        console.error(`AZURE_LOG_LEVEL set to unknown log level '${logLevelFromEnv}'; logging is not enabled. Acceptable values: ${AZURE_LOG_LEVELS.join(\", \")}.`);\n    }\n}\n/**\n * Immediately enables logging at the specified log level. If no level is specified, logging is disabled.\n * @param level - The log level to enable for logging.\n * Options from most verbose to least verbose are:\n * - verbose\n * - info\n * - warning\n * - error\n */\nfunction setLogLevel(level) {\n    if (level && !isAzureLogLevel(level)) {\n        throw new Error(`Unknown log level '${level}'. Acceptable values: ${AZURE_LOG_LEVELS.join(\",\")}`);\n    }\n    azureLogLevel = level;\n    const enabledNamespaces = [];\n    for (const logger of registeredLoggers) {\n        if (shouldEnable(logger)) {\n            enabledNamespaces.push(logger.namespace);\n        }\n    }\n    _debug_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].enable(enabledNamespaces.join(\",\"));\n}\n/**\n * Retrieves the currently specified log level.\n */\nfunction getLogLevel() {\n    return azureLogLevel;\n}\nconst levelMap = {\n    verbose: 400,\n    info: 300,\n    warning: 200,\n    error: 100,\n};\n/**\n * Creates a logger for use by the Azure SDKs that inherits from `AzureLogger`.\n * @param namespace - The name of the SDK package.\n * @hidden\n */\nfunction createClientLogger(namespace) {\n    const clientRootLogger = AzureLogger.extend(namespace);\n    patchLogMethod(AzureLogger, clientRootLogger);\n    return {\n        error: createLogger(clientRootLogger, \"error\"),\n        warning: createLogger(clientRootLogger, \"warning\"),\n        info: createLogger(clientRootLogger, \"info\"),\n        verbose: createLogger(clientRootLogger, \"verbose\"),\n    };\n}\nfunction patchLogMethod(parent, child) {\n    child.log = (...args) => {\n        parent.log(...args);\n    };\n}\nfunction createLogger(parent, level) {\n    const logger = Object.assign(parent.extend(level), {\n        level,\n    });\n    patchLogMethod(parent, logger);\n    if (shouldEnable(logger)) {\n        const enabledNamespaces = _debug_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].disable();\n        _debug_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].enable(enabledNamespaces + \",\" + logger.namespace);\n    }\n    registeredLoggers.add(logger);\n    return logger;\n}\nfunction shouldEnable(logger) {\n    return Boolean(azureLogLevel && levelMap[logger.level] <= levelMap[azureLogLevel]);\n}\nfunction isAzureLogLevel(logLevel) {\n    return AZURE_LOG_LEVELS.includes(logLevel);\n}\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2xvZ2dlci9kaXN0L2VzbS9pbmRleC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUFBO0FBQ0E7QUFDK0I7QUFDL0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPLG9CQUFvQixxREFBSztBQUNoQztBQUNBLElBQUksaURBQUs7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbUVBQW1FLGdCQUFnQixHQUFHLDZDQUE2Qyw0QkFBNEI7QUFDL0o7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQSw4Q0FBOEMsTUFBTSx3QkFBd0IsMkJBQTJCO0FBQ3ZHO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxJQUFJLGlEQUFLO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQSxrQ0FBa0MsaURBQUs7QUFDdkMsUUFBUSxpREFBSztBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9kYW5pZWwzLXZwMi8uL25vZGVfbW9kdWxlcy9AYXp1cmUvbG9nZ2VyL2Rpc3QvZXNtL2luZGV4LmpzPzMzNjUiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uXG4vLyBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UuXG5pbXBvcnQgZGVidWcgZnJvbSBcIi4vZGVidWcuanNcIjtcbmNvbnN0IHJlZ2lzdGVyZWRMb2dnZXJzID0gbmV3IFNldCgpO1xuY29uc3QgbG9nTGV2ZWxGcm9tRW52ID0gKHR5cGVvZiBwcm9jZXNzICE9PSBcInVuZGVmaW5lZFwiICYmIHByb2Nlc3MuZW52ICYmIHByb2Nlc3MuZW52LkFaVVJFX0xPR19MRVZFTCkgfHwgdW5kZWZpbmVkO1xubGV0IGF6dXJlTG9nTGV2ZWw7XG4vKipcbiAqIFRoZSBBenVyZUxvZ2dlciBwcm92aWRlcyBhIG1lY2hhbmlzbSBmb3Igb3ZlcnJpZGluZyB3aGVyZSBsb2dzIGFyZSBvdXRwdXQgdG8uXG4gKiBCeSBkZWZhdWx0LCBsb2dzIGFyZSBzZW50IHRvIHN0ZGVyci5cbiAqIE92ZXJyaWRlIHRoZSBgbG9nYCBtZXRob2QgdG8gcmVkaXJlY3QgbG9ncyB0byBhbm90aGVyIGxvY2F0aW9uLlxuICovXG5leHBvcnQgY29uc3QgQXp1cmVMb2dnZXIgPSBkZWJ1ZyhcImF6dXJlXCIpO1xuQXp1cmVMb2dnZXIubG9nID0gKC4uLmFyZ3MpID0+IHtcbiAgICBkZWJ1Zy5sb2coLi4uYXJncyk7XG59O1xuY29uc3QgQVpVUkVfTE9HX0xFVkVMUyA9IFtcInZlcmJvc2VcIiwgXCJpbmZvXCIsIFwid2FybmluZ1wiLCBcImVycm9yXCJdO1xuaWYgKGxvZ0xldmVsRnJvbUVudikge1xuICAgIC8vIGF2b2lkIGNhbGxpbmcgc2V0TG9nTGV2ZWwgYmVjYXVzZSB3ZSBkb24ndCB3YW50IGEgbWlzLXNldCBlbnZpcm9ubWVudCB2YXJpYWJsZSB0byBjcmFzaFxuICAgIGlmIChpc0F6dXJlTG9nTGV2ZWwobG9nTGV2ZWxGcm9tRW52KSkge1xuICAgICAgICBzZXRMb2dMZXZlbChsb2dMZXZlbEZyb21FbnYpO1xuICAgIH1cbiAgICBlbHNlIHtcbiAgICAgICAgY29uc29sZS5lcnJvcihgQVpVUkVfTE9HX0xFVkVMIHNldCB0byB1bmtub3duIGxvZyBsZXZlbCAnJHtsb2dMZXZlbEZyb21FbnZ9JzsgbG9nZ2luZyBpcyBub3QgZW5hYmxlZC4gQWNjZXB0YWJsZSB2YWx1ZXM6ICR7QVpVUkVfTE9HX0xFVkVMUy5qb2luKFwiLCBcIil9LmApO1xuICAgIH1cbn1cbi8qKlxuICogSW1tZWRpYXRlbHkgZW5hYmxlcyBsb2dnaW5nIGF0IHRoZSBzcGVjaWZpZWQgbG9nIGxldmVsLiBJZiBubyBsZXZlbCBpcyBzcGVjaWZpZWQsIGxvZ2dpbmcgaXMgZGlzYWJsZWQuXG4gKiBAcGFyYW0gbGV2ZWwgLSBUaGUgbG9nIGxldmVsIHRvIGVuYWJsZSBmb3IgbG9nZ2luZy5cbiAqIE9wdGlvbnMgZnJvbSBtb3N0IHZlcmJvc2UgdG8gbGVhc3QgdmVyYm9zZSBhcmU6XG4gKiAtIHZlcmJvc2VcbiAqIC0gaW5mb1xuICogLSB3YXJuaW5nXG4gKiAtIGVycm9yXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBzZXRMb2dMZXZlbChsZXZlbCkge1xuICAgIGlmIChsZXZlbCAmJiAhaXNBenVyZUxvZ0xldmVsKGxldmVsKSkge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYFVua25vd24gbG9nIGxldmVsICcke2xldmVsfScuIEFjY2VwdGFibGUgdmFsdWVzOiAke0FaVVJFX0xPR19MRVZFTFMuam9pbihcIixcIil9YCk7XG4gICAgfVxuICAgIGF6dXJlTG9nTGV2ZWwgPSBsZXZlbDtcbiAgICBjb25zdCBlbmFibGVkTmFtZXNwYWNlcyA9IFtdO1xuICAgIGZvciAoY29uc3QgbG9nZ2VyIG9mIHJlZ2lzdGVyZWRMb2dnZXJzKSB7XG4gICAgICAgIGlmIChzaG91bGRFbmFibGUobG9nZ2VyKSkge1xuICAgICAgICAgICAgZW5hYmxlZE5hbWVzcGFjZXMucHVzaChsb2dnZXIubmFtZXNwYWNlKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBkZWJ1Zy5lbmFibGUoZW5hYmxlZE5hbWVzcGFjZXMuam9pbihcIixcIikpO1xufVxuLyoqXG4gKiBSZXRyaWV2ZXMgdGhlIGN1cnJlbnRseSBzcGVjaWZpZWQgbG9nIGxldmVsLlxuICovXG5leHBvcnQgZnVuY3Rpb24gZ2V0TG9nTGV2ZWwoKSB7XG4gICAgcmV0dXJuIGF6dXJlTG9nTGV2ZWw7XG59XG5jb25zdCBsZXZlbE1hcCA9IHtcbiAgICB2ZXJib3NlOiA0MDAsXG4gICAgaW5mbzogMzAwLFxuICAgIHdhcm5pbmc6IDIwMCxcbiAgICBlcnJvcjogMTAwLFxufTtcbi8qKlxuICogQ3JlYXRlcyBhIGxvZ2dlciBmb3IgdXNlIGJ5IHRoZSBBenVyZSBTREtzIHRoYXQgaW5oZXJpdHMgZnJvbSBgQXp1cmVMb2dnZXJgLlxuICogQHBhcmFtIG5hbWVzcGFjZSAtIFRoZSBuYW1lIG9mIHRoZSBTREsgcGFja2FnZS5cbiAqIEBoaWRkZW5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGNyZWF0ZUNsaWVudExvZ2dlcihuYW1lc3BhY2UpIHtcbiAgICBjb25zdCBjbGllbnRSb290TG9nZ2VyID0gQXp1cmVMb2dnZXIuZXh0ZW5kKG5hbWVzcGFjZSk7XG4gICAgcGF0Y2hMb2dNZXRob2QoQXp1cmVMb2dnZXIsIGNsaWVudFJvb3RMb2dnZXIpO1xuICAgIHJldHVybiB7XG4gICAgICAgIGVycm9yOiBjcmVhdGVMb2dnZXIoY2xpZW50Um9vdExvZ2dlciwgXCJlcnJvclwiKSxcbiAgICAgICAgd2FybmluZzogY3JlYXRlTG9nZ2VyKGNsaWVudFJvb3RMb2dnZXIsIFwid2FybmluZ1wiKSxcbiAgICAgICAgaW5mbzogY3JlYXRlTG9nZ2VyKGNsaWVudFJvb3RMb2dnZXIsIFwiaW5mb1wiKSxcbiAgICAgICAgdmVyYm9zZTogY3JlYXRlTG9nZ2VyKGNsaWVudFJvb3RMb2dnZXIsIFwidmVyYm9zZVwiKSxcbiAgICB9O1xufVxuZnVuY3Rpb24gcGF0Y2hMb2dNZXRob2QocGFyZW50LCBjaGlsZCkge1xuICAgIGNoaWxkLmxvZyA9ICguLi5hcmdzKSA9PiB7XG4gICAgICAgIHBhcmVudC5sb2coLi4uYXJncyk7XG4gICAgfTtcbn1cbmZ1bmN0aW9uIGNyZWF0ZUxvZ2dlcihwYXJlbnQsIGxldmVsKSB7XG4gICAgY29uc3QgbG9nZ2VyID0gT2JqZWN0LmFzc2lnbihwYXJlbnQuZXh0ZW5kKGxldmVsKSwge1xuICAgICAgICBsZXZlbCxcbiAgICB9KTtcbiAgICBwYXRjaExvZ01ldGhvZChwYXJlbnQsIGxvZ2dlcik7XG4gICAgaWYgKHNob3VsZEVuYWJsZShsb2dnZXIpKSB7XG4gICAgICAgIGNvbnN0IGVuYWJsZWROYW1lc3BhY2VzID0gZGVidWcuZGlzYWJsZSgpO1xuICAgICAgICBkZWJ1Zy5lbmFibGUoZW5hYmxlZE5hbWVzcGFjZXMgKyBcIixcIiArIGxvZ2dlci5uYW1lc3BhY2UpO1xuICAgIH1cbiAgICByZWdpc3RlcmVkTG9nZ2Vycy5hZGQobG9nZ2VyKTtcbiAgICByZXR1cm4gbG9nZ2VyO1xufVxuZnVuY3Rpb24gc2hvdWxkRW5hYmxlKGxvZ2dlcikge1xuICAgIHJldHVybiBCb29sZWFuKGF6dXJlTG9nTGV2ZWwgJiYgbGV2ZWxNYXBbbG9nZ2VyLmxldmVsXSA8PSBsZXZlbE1hcFthenVyZUxvZ0xldmVsXSk7XG59XG5mdW5jdGlvbiBpc0F6dXJlTG9nTGV2ZWwobG9nTGV2ZWwpIHtcbiAgICByZXR1cm4gQVpVUkVfTE9HX0xFVkVMUy5pbmNsdWRlcyhsb2dMZXZlbCk7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbmRleC5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/logger/dist/esm/index.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/logger/dist/esm/log.js":
/*!****************************************************!*\
  !*** ./node_modules/@azure/logger/dist/esm/log.js ***!
  \****************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   log: () => (/* binding */ log)\n/* harmony export */ });\n/* harmony import */ var node_os__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! node:os */ \"node:os\");\n/* harmony import */ var node_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! node:util */ \"node:util\");\n/* harmony import */ var node_process__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! node:process */ \"node:process\");\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\n\n\nfunction log(message, ...args) {\n    node_process__WEBPACK_IMPORTED_MODULE_2__.stderr.write(`${node_util__WEBPACK_IMPORTED_MODULE_1__.format(message, ...args)}${node_os__WEBPACK_IMPORTED_MODULE_0__.EOL}`);\n}\n//# sourceMappingURL=log.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL2xvZ2dlci9kaXN0L2VzbS9sb2cuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBO0FBQ0E7QUFDOEI7QUFDRDtBQUNXO0FBQ2pDO0FBQ1AsSUFBSSxnREFBYyxVQUFVLDZDQUFXLG1CQUFtQixFQUFFLHdDQUFHLENBQUM7QUFDaEU7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2RhbmllbDMtdnAyLy4vbm9kZV9tb2R1bGVzL0BhenVyZS9sb2dnZXIvZGlzdC9lc20vbG9nLmpzPzRlN2MiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uXG4vLyBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UuXG5pbXBvcnQgeyBFT0wgfSBmcm9tIFwibm9kZTpvc1wiO1xuaW1wb3J0IHV0aWwgZnJvbSBcIm5vZGU6dXRpbFwiO1xuaW1wb3J0ICogYXMgcHJvY2VzcyBmcm9tIFwibm9kZTpwcm9jZXNzXCI7XG5leHBvcnQgZnVuY3Rpb24gbG9nKG1lc3NhZ2UsIC4uLmFyZ3MpIHtcbiAgICBwcm9jZXNzLnN0ZGVyci53cml0ZShgJHt1dGlsLmZvcm1hdChtZXNzYWdlLCAuLi5hcmdzKX0ke0VPTH1gKTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWxvZy5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/logger/dist/esm/log.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/msal-common/dist/account/AccountInfo.mjs":
/*!**********************************************************************!*\
  !*** ./node_modules/@azure/msal-common/dist/account/AccountInfo.mjs ***!
  \**********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   buildTenantProfile: () => (/* binding */ buildTenantProfile),\n/* harmony export */   tenantIdMatchesHomeTenant: () => (/* binding */ tenantIdMatchesHomeTenant),\n/* harmony export */   updateAccountTenantProfileData: () => (/* binding */ updateAccountTenantProfileData)\n/* harmony export */ });\n/*! @azure/msal-common v14.14.0 2024-07-23 */\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n/**\n * Returns true if tenantId matches the utid portion of homeAccountId\n * @param tenantId\n * @param homeAccountId\n * @returns\n */\nfunction tenantIdMatchesHomeTenant(tenantId, homeAccountId) {\n    return (!!tenantId &&\n        !!homeAccountId &&\n        tenantId === homeAccountId.split(\".\")[1]);\n}\n/**\n * Build tenant profile\n * @param homeAccountId - Home account identifier for this account object\n * @param localAccountId - Local account identifer for this account object\n * @param tenantId - Full tenant or organizational id that this account belongs to\n * @param idTokenClaims - Claims from the ID token\n * @returns\n */\nfunction buildTenantProfile(homeAccountId, localAccountId, tenantId, idTokenClaims) {\n    if (idTokenClaims) {\n        const { oid, sub, tid, name, tfp, acr } = idTokenClaims;\n        /**\n         * Since there is no way to determine if the authority is AAD or B2C, we exhaust all the possible claims that can serve as tenant ID with the following precedence:\n         * tid - TenantID claim that identifies the tenant that issued the token in AAD. Expected in all AAD ID tokens, not present in B2C ID Tokens.\n         * tfp - Trust Framework Policy claim that identifies the policy that was used to authenticate the user. Functions as tenant for B2C scenarios.\n         * acr - Authentication Context Class Reference claim used only with older B2C policies. Fallback in case tfp is not present, but likely won't be present anyway.\n         */\n        const tenantId = tid || tfp || acr || \"\";\n        return {\n            tenantId: tenantId,\n            localAccountId: oid || sub || \"\",\n            name: name,\n            isHomeTenant: tenantIdMatchesHomeTenant(tenantId, homeAccountId),\n        };\n    }\n    else {\n        return {\n            tenantId,\n            localAccountId,\n            isHomeTenant: tenantIdMatchesHomeTenant(tenantId, homeAccountId),\n        };\n    }\n}\n/**\n * Replaces account info that varies by tenant profile sourced from the ID token claims passed in with the tenant-specific account info\n * @param baseAccountInfo\n * @param idTokenClaims\n * @returns\n */\nfunction updateAccountTenantProfileData(baseAccountInfo, tenantProfile, idTokenClaims, idTokenSecret) {\n    let updatedAccountInfo = baseAccountInfo;\n    // Tenant Profile overrides passed in account info\n    if (tenantProfile) {\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        const { isHomeTenant, ...tenantProfileOverride } = tenantProfile;\n        updatedAccountInfo = { ...baseAccountInfo, ...tenantProfileOverride };\n    }\n    // ID token claims override passed in account info and tenant profile\n    if (idTokenClaims) {\n        // Ignore isHomeTenant, loginHint, and sid which are part of tenant profile but not base account info\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        const { isHomeTenant, ...claimsSourcedTenantProfile } = buildTenantProfile(baseAccountInfo.homeAccountId, baseAccountInfo.localAccountId, baseAccountInfo.tenantId, idTokenClaims);\n        updatedAccountInfo = {\n            ...updatedAccountInfo,\n            ...claimsSourcedTenantProfile,\n            idTokenClaims: idTokenClaims,\n            idToken: idTokenSecret,\n        };\n        return updatedAccountInfo;\n    }\n    return updatedAccountInfo;\n}\n\n\n//# sourceMappingURL=AccountInfo.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtY29tbW9uL2Rpc3QvYWNjb3VudC9BY2NvdW50SW5mby5tanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUE7QUFDYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0JBQWdCLGdDQUFnQztBQUNoRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnQkFBZ0IseUNBQXlDO0FBQ3pELCtCQUErQjtBQUMvQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0JBQWdCLDhDQUE4QztBQUM5RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFeUY7QUFDekYiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9kYW5pZWwzLXZwMi8uL25vZGVfbW9kdWxlcy9AYXp1cmUvbXNhbC1jb21tb24vZGlzdC9hY2NvdW50L0FjY291bnRJbmZvLm1qcz9lY2RmIl0sInNvdXJjZXNDb250ZW50IjpbIi8qISBAYXp1cmUvbXNhbC1jb21tb24gdjE0LjE0LjAgMjAyNC0wNy0yMyAqL1xuJ3VzZSBzdHJpY3QnO1xuLypcbiAqIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLiBBbGwgcmlnaHRzIHJlc2VydmVkLlxuICogTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBMaWNlbnNlLlxuICovXG4vKipcbiAqIFJldHVybnMgdHJ1ZSBpZiB0ZW5hbnRJZCBtYXRjaGVzIHRoZSB1dGlkIHBvcnRpb24gb2YgaG9tZUFjY291bnRJZFxuICogQHBhcmFtIHRlbmFudElkXG4gKiBAcGFyYW0gaG9tZUFjY291bnRJZFxuICogQHJldHVybnNcbiAqL1xuZnVuY3Rpb24gdGVuYW50SWRNYXRjaGVzSG9tZVRlbmFudCh0ZW5hbnRJZCwgaG9tZUFjY291bnRJZCkge1xuICAgIHJldHVybiAoISF0ZW5hbnRJZCAmJlxuICAgICAgICAhIWhvbWVBY2NvdW50SWQgJiZcbiAgICAgICAgdGVuYW50SWQgPT09IGhvbWVBY2NvdW50SWQuc3BsaXQoXCIuXCIpWzFdKTtcbn1cbi8qKlxuICogQnVpbGQgdGVuYW50IHByb2ZpbGVcbiAqIEBwYXJhbSBob21lQWNjb3VudElkIC0gSG9tZSBhY2NvdW50IGlkZW50aWZpZXIgZm9yIHRoaXMgYWNjb3VudCBvYmplY3RcbiAqIEBwYXJhbSBsb2NhbEFjY291bnRJZCAtIExvY2FsIGFjY291bnQgaWRlbnRpZmVyIGZvciB0aGlzIGFjY291bnQgb2JqZWN0XG4gKiBAcGFyYW0gdGVuYW50SWQgLSBGdWxsIHRlbmFudCBvciBvcmdhbml6YXRpb25hbCBpZCB0aGF0IHRoaXMgYWNjb3VudCBiZWxvbmdzIHRvXG4gKiBAcGFyYW0gaWRUb2tlbkNsYWltcyAtIENsYWltcyBmcm9tIHRoZSBJRCB0b2tlblxuICogQHJldHVybnNcbiAqL1xuZnVuY3Rpb24gYnVpbGRUZW5hbnRQcm9maWxlKGhvbWVBY2NvdW50SWQsIGxvY2FsQWNjb3VudElkLCB0ZW5hbnRJZCwgaWRUb2tlbkNsYWltcykge1xuICAgIGlmIChpZFRva2VuQ2xhaW1zKSB7XG4gICAgICAgIGNvbnN0IHsgb2lkLCBzdWIsIHRpZCwgbmFtZSwgdGZwLCBhY3IgfSA9IGlkVG9rZW5DbGFpbXM7XG4gICAgICAgIC8qKlxuICAgICAgICAgKiBTaW5jZSB0aGVyZSBpcyBubyB3YXkgdG8gZGV0ZXJtaW5lIGlmIHRoZSBhdXRob3JpdHkgaXMgQUFEIG9yIEIyQywgd2UgZXhoYXVzdCBhbGwgdGhlIHBvc3NpYmxlIGNsYWltcyB0aGF0IGNhbiBzZXJ2ZSBhcyB0ZW5hbnQgSUQgd2l0aCB0aGUgZm9sbG93aW5nIHByZWNlZGVuY2U6XG4gICAgICAgICAqIHRpZCAtIFRlbmFudElEIGNsYWltIHRoYXQgaWRlbnRpZmllcyB0aGUgdGVuYW50IHRoYXQgaXNzdWVkIHRoZSB0b2tlbiBpbiBBQUQuIEV4cGVjdGVkIGluIGFsbCBBQUQgSUQgdG9rZW5zLCBub3QgcHJlc2VudCBpbiBCMkMgSUQgVG9rZW5zLlxuICAgICAgICAgKiB0ZnAgLSBUcnVzdCBGcmFtZXdvcmsgUG9saWN5IGNsYWltIHRoYXQgaWRlbnRpZmllcyB0aGUgcG9saWN5IHRoYXQgd2FzIHVzZWQgdG8gYXV0aGVudGljYXRlIHRoZSB1c2VyLiBGdW5jdGlvbnMgYXMgdGVuYW50IGZvciBCMkMgc2NlbmFyaW9zLlxuICAgICAgICAgKiBhY3IgLSBBdXRoZW50aWNhdGlvbiBDb250ZXh0IENsYXNzIFJlZmVyZW5jZSBjbGFpbSB1c2VkIG9ubHkgd2l0aCBvbGRlciBCMkMgcG9saWNpZXMuIEZhbGxiYWNrIGluIGNhc2UgdGZwIGlzIG5vdCBwcmVzZW50LCBidXQgbGlrZWx5IHdvbid0IGJlIHByZXNlbnQgYW55d2F5LlxuICAgICAgICAgKi9cbiAgICAgICAgY29uc3QgdGVuYW50SWQgPSB0aWQgfHwgdGZwIHx8IGFjciB8fCBcIlwiO1xuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgdGVuYW50SWQ6IHRlbmFudElkLFxuICAgICAgICAgICAgbG9jYWxBY2NvdW50SWQ6IG9pZCB8fCBzdWIgfHwgXCJcIixcbiAgICAgICAgICAgIG5hbWU6IG5hbWUsXG4gICAgICAgICAgICBpc0hvbWVUZW5hbnQ6IHRlbmFudElkTWF0Y2hlc0hvbWVUZW5hbnQodGVuYW50SWQsIGhvbWVBY2NvdW50SWQpLFxuICAgICAgICB9O1xuICAgIH1cbiAgICBlbHNlIHtcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgIHRlbmFudElkLFxuICAgICAgICAgICAgbG9jYWxBY2NvdW50SWQsXG4gICAgICAgICAgICBpc0hvbWVUZW5hbnQ6IHRlbmFudElkTWF0Y2hlc0hvbWVUZW5hbnQodGVuYW50SWQsIGhvbWVBY2NvdW50SWQpLFxuICAgICAgICB9O1xuICAgIH1cbn1cbi8qKlxuICogUmVwbGFjZXMgYWNjb3VudCBpbmZvIHRoYXQgdmFyaWVzIGJ5IHRlbmFudCBwcm9maWxlIHNvdXJjZWQgZnJvbSB0aGUgSUQgdG9rZW4gY2xhaW1zIHBhc3NlZCBpbiB3aXRoIHRoZSB0ZW5hbnQtc3BlY2lmaWMgYWNjb3VudCBpbmZvXG4gKiBAcGFyYW0gYmFzZUFjY291bnRJbmZvXG4gKiBAcGFyYW0gaWRUb2tlbkNsYWltc1xuICogQHJldHVybnNcbiAqL1xuZnVuY3Rpb24gdXBkYXRlQWNjb3VudFRlbmFudFByb2ZpbGVEYXRhKGJhc2VBY2NvdW50SW5mbywgdGVuYW50UHJvZmlsZSwgaWRUb2tlbkNsYWltcywgaWRUb2tlblNlY3JldCkge1xuICAgIGxldCB1cGRhdGVkQWNjb3VudEluZm8gPSBiYXNlQWNjb3VudEluZm87XG4gICAgLy8gVGVuYW50IFByb2ZpbGUgb3ZlcnJpZGVzIHBhc3NlZCBpbiBhY2NvdW50IGluZm9cbiAgICBpZiAodGVuYW50UHJvZmlsZSkge1xuICAgICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgQHR5cGVzY3JpcHQtZXNsaW50L25vLXVudXNlZC12YXJzXG4gICAgICAgIGNvbnN0IHsgaXNIb21lVGVuYW50LCAuLi50ZW5hbnRQcm9maWxlT3ZlcnJpZGUgfSA9IHRlbmFudFByb2ZpbGU7XG4gICAgICAgIHVwZGF0ZWRBY2NvdW50SW5mbyA9IHsgLi4uYmFzZUFjY291bnRJbmZvLCAuLi50ZW5hbnRQcm9maWxlT3ZlcnJpZGUgfTtcbiAgICB9XG4gICAgLy8gSUQgdG9rZW4gY2xhaW1zIG92ZXJyaWRlIHBhc3NlZCBpbiBhY2NvdW50IGluZm8gYW5kIHRlbmFudCBwcm9maWxlXG4gICAgaWYgKGlkVG9rZW5DbGFpbXMpIHtcbiAgICAgICAgLy8gSWdub3JlIGlzSG9tZVRlbmFudCwgbG9naW5IaW50LCBhbmQgc2lkIHdoaWNoIGFyZSBwYXJ0IG9mIHRlbmFudCBwcm9maWxlIGJ1dCBub3QgYmFzZSBhY2NvdW50IGluZm9cbiAgICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIEB0eXBlc2NyaXB0LWVzbGludC9uby11bnVzZWQtdmFyc1xuICAgICAgICBjb25zdCB7IGlzSG9tZVRlbmFudCwgLi4uY2xhaW1zU291cmNlZFRlbmFudFByb2ZpbGUgfSA9IGJ1aWxkVGVuYW50UHJvZmlsZShiYXNlQWNjb3VudEluZm8uaG9tZUFjY291bnRJZCwgYmFzZUFjY291bnRJbmZvLmxvY2FsQWNjb3VudElkLCBiYXNlQWNjb3VudEluZm8udGVuYW50SWQsIGlkVG9rZW5DbGFpbXMpO1xuICAgICAgICB1cGRhdGVkQWNjb3VudEluZm8gPSB7XG4gICAgICAgICAgICAuLi51cGRhdGVkQWNjb3VudEluZm8sXG4gICAgICAgICAgICAuLi5jbGFpbXNTb3VyY2VkVGVuYW50UHJvZmlsZSxcbiAgICAgICAgICAgIGlkVG9rZW5DbGFpbXM6IGlkVG9rZW5DbGFpbXMsXG4gICAgICAgICAgICBpZFRva2VuOiBpZFRva2VuU2VjcmV0LFxuICAgICAgICB9O1xuICAgICAgICByZXR1cm4gdXBkYXRlZEFjY291bnRJbmZvO1xuICAgIH1cbiAgICByZXR1cm4gdXBkYXRlZEFjY291bnRJbmZvO1xufVxuXG5leHBvcnQgeyBidWlsZFRlbmFudFByb2ZpbGUsIHRlbmFudElkTWF0Y2hlc0hvbWVUZW5hbnQsIHVwZGF0ZUFjY291bnRUZW5hbnRQcm9maWxlRGF0YSB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9QWNjb3VudEluZm8ubWpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/msal-common/dist/account/AccountInfo.mjs\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/msal-common/dist/account/AuthToken.mjs":
/*!********************************************************************!*\
  !*** ./node_modules/@azure/msal-common/dist/account/AuthToken.mjs ***!
  \********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   checkMaxAge: () => (/* binding */ checkMaxAge),\n/* harmony export */   extractTokenClaims: () => (/* binding */ extractTokenClaims),\n/* harmony export */   getJWSPayload: () => (/* binding */ getJWSPayload)\n/* harmony export */ });\n/* harmony import */ var _error_ClientAuthError_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../error/ClientAuthError.mjs */ \"(rsc)/./node_modules/@azure/msal-common/dist/error/ClientAuthError.mjs\");\n/* harmony import */ var _error_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../error/ClientAuthErrorCodes.mjs */ \"(rsc)/./node_modules/@azure/msal-common/dist/error/ClientAuthErrorCodes.mjs\");\n/*! @azure/msal-common v14.14.0 2024-07-23 */\n\n\n\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n/**\n * Extract token by decoding the rawToken\n *\n * @param encodedToken\n */\nfunction extractTokenClaims(encodedToken, base64Decode) {\n    const jswPayload = getJWSPayload(encodedToken);\n    // token will be decoded to get the username\n    try {\n        // base64Decode() should throw an error if there is an issue\n        const base64Decoded = base64Decode(jswPayload);\n        return JSON.parse(base64Decoded);\n    }\n    catch (err) {\n        throw (0,_error_ClientAuthError_mjs__WEBPACK_IMPORTED_MODULE_0__.createClientAuthError)(_error_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_1__.tokenParsingError);\n    }\n}\n/**\n * decode a JWT\n *\n * @param authToken\n */\nfunction getJWSPayload(authToken) {\n    if (!authToken) {\n        throw (0,_error_ClientAuthError_mjs__WEBPACK_IMPORTED_MODULE_0__.createClientAuthError)(_error_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_1__.nullOrEmptyToken);\n    }\n    const tokenPartsRegex = /^([^\\.\\s]*)\\.([^\\.\\s]+)\\.([^\\.\\s]*)$/;\n    const matches = tokenPartsRegex.exec(authToken);\n    if (!matches || matches.length < 4) {\n        throw (0,_error_ClientAuthError_mjs__WEBPACK_IMPORTED_MODULE_0__.createClientAuthError)(_error_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_1__.tokenParsingError);\n    }\n    /**\n     * const crackedToken = {\n     *  header: matches[1],\n     *  JWSPayload: matches[2],\n     *  JWSSig: matches[3],\n     * };\n     */\n    return matches[2];\n}\n/**\n * Determine if the token's max_age has transpired\n */\nfunction checkMaxAge(authTime, maxAge) {\n    /*\n     * per https://openid.net/specs/openid-connect-core-1_0.html#AuthRequest\n     * To force an immediate re-authentication: If an app requires that a user re-authenticate prior to access,\n     * provide a value of 0 for the max_age parameter and the AS will force a fresh login.\n     */\n    const fiveMinuteSkew = 300000; // five minutes in milliseconds\n    if (maxAge === 0 || Date.now() - fiveMinuteSkew > authTime + maxAge) {\n        throw (0,_error_ClientAuthError_mjs__WEBPACK_IMPORTED_MODULE_0__.createClientAuthError)(_error_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_1__.maxAgeTranspired);\n    }\n}\n\n\n//# sourceMappingURL=AuthToken.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtY29tbW9uL2Rpc3QvYWNjb3VudC9BdXRoVG9rZW4ubWpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQUE7QUFDYTtBQUN3RDtBQUNxQzs7QUFFMUc7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsY0FBYyxpRkFBcUIsQ0FBQyw4RUFBaUI7QUFDckQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsY0FBYyxpRkFBcUIsQ0FBQyw2RUFBZ0I7QUFDcEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQSxjQUFjLGlGQUFxQixDQUFDLDhFQUFpQjtBQUNyRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG1DQUFtQztBQUNuQztBQUNBLGNBQWMsaUZBQXFCLENBQUMsNkVBQWdCO0FBQ3BEO0FBQ0E7O0FBRTBEO0FBQzFEIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZGFuaWVsMy12cDIvLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtY29tbW9uL2Rpc3QvYWNjb3VudC9BdXRoVG9rZW4ubWpzP2MzNzUiXSwic291cmNlc0NvbnRlbnQiOlsiLyohIEBhenVyZS9tc2FsLWNvbW1vbiB2MTQuMTQuMCAyMDI0LTA3LTIzICovXG4ndXNlIHN0cmljdCc7XG5pbXBvcnQgeyBjcmVhdGVDbGllbnRBdXRoRXJyb3IgfSBmcm9tICcuLi9lcnJvci9DbGllbnRBdXRoRXJyb3IubWpzJztcbmltcG9ydCB7IHRva2VuUGFyc2luZ0Vycm9yLCBudWxsT3JFbXB0eVRva2VuLCBtYXhBZ2VUcmFuc3BpcmVkIH0gZnJvbSAnLi4vZXJyb3IvQ2xpZW50QXV0aEVycm9yQ29kZXMubWpzJztcblxuLypcbiAqIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLiBBbGwgcmlnaHRzIHJlc2VydmVkLlxuICogTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBMaWNlbnNlLlxuICovXG4vKipcbiAqIEV4dHJhY3QgdG9rZW4gYnkgZGVjb2RpbmcgdGhlIHJhd1Rva2VuXG4gKlxuICogQHBhcmFtIGVuY29kZWRUb2tlblxuICovXG5mdW5jdGlvbiBleHRyYWN0VG9rZW5DbGFpbXMoZW5jb2RlZFRva2VuLCBiYXNlNjREZWNvZGUpIHtcbiAgICBjb25zdCBqc3dQYXlsb2FkID0gZ2V0SldTUGF5bG9hZChlbmNvZGVkVG9rZW4pO1xuICAgIC8vIHRva2VuIHdpbGwgYmUgZGVjb2RlZCB0byBnZXQgdGhlIHVzZXJuYW1lXG4gICAgdHJ5IHtcbiAgICAgICAgLy8gYmFzZTY0RGVjb2RlKCkgc2hvdWxkIHRocm93IGFuIGVycm9yIGlmIHRoZXJlIGlzIGFuIGlzc3VlXG4gICAgICAgIGNvbnN0IGJhc2U2NERlY29kZWQgPSBiYXNlNjREZWNvZGUoanN3UGF5bG9hZCk7XG4gICAgICAgIHJldHVybiBKU09OLnBhcnNlKGJhc2U2NERlY29kZWQpO1xuICAgIH1cbiAgICBjYXRjaCAoZXJyKSB7XG4gICAgICAgIHRocm93IGNyZWF0ZUNsaWVudEF1dGhFcnJvcih0b2tlblBhcnNpbmdFcnJvcik7XG4gICAgfVxufVxuLyoqXG4gKiBkZWNvZGUgYSBKV1RcbiAqXG4gKiBAcGFyYW0gYXV0aFRva2VuXG4gKi9cbmZ1bmN0aW9uIGdldEpXU1BheWxvYWQoYXV0aFRva2VuKSB7XG4gICAgaWYgKCFhdXRoVG9rZW4pIHtcbiAgICAgICAgdGhyb3cgY3JlYXRlQ2xpZW50QXV0aEVycm9yKG51bGxPckVtcHR5VG9rZW4pO1xuICAgIH1cbiAgICBjb25zdCB0b2tlblBhcnRzUmVnZXggPSAvXihbXlxcLlxcc10qKVxcLihbXlxcLlxcc10rKVxcLihbXlxcLlxcc10qKSQvO1xuICAgIGNvbnN0IG1hdGNoZXMgPSB0b2tlblBhcnRzUmVnZXguZXhlYyhhdXRoVG9rZW4pO1xuICAgIGlmICghbWF0Y2hlcyB8fCBtYXRjaGVzLmxlbmd0aCA8IDQpIHtcbiAgICAgICAgdGhyb3cgY3JlYXRlQ2xpZW50QXV0aEVycm9yKHRva2VuUGFyc2luZ0Vycm9yKTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogY29uc3QgY3JhY2tlZFRva2VuID0ge1xuICAgICAqICBoZWFkZXI6IG1hdGNoZXNbMV0sXG4gICAgICogIEpXU1BheWxvYWQ6IG1hdGNoZXNbMl0sXG4gICAgICogIEpXU1NpZzogbWF0Y2hlc1szXSxcbiAgICAgKiB9O1xuICAgICAqL1xuICAgIHJldHVybiBtYXRjaGVzWzJdO1xufVxuLyoqXG4gKiBEZXRlcm1pbmUgaWYgdGhlIHRva2VuJ3MgbWF4X2FnZSBoYXMgdHJhbnNwaXJlZFxuICovXG5mdW5jdGlvbiBjaGVja01heEFnZShhdXRoVGltZSwgbWF4QWdlKSB7XG4gICAgLypcbiAgICAgKiBwZXIgaHR0cHM6Ly9vcGVuaWQubmV0L3NwZWNzL29wZW5pZC1jb25uZWN0LWNvcmUtMV8wLmh0bWwjQXV0aFJlcXVlc3RcbiAgICAgKiBUbyBmb3JjZSBhbiBpbW1lZGlhdGUgcmUtYXV0aGVudGljYXRpb246IElmIGFuIGFwcCByZXF1aXJlcyB0aGF0IGEgdXNlciByZS1hdXRoZW50aWNhdGUgcHJpb3IgdG8gYWNjZXNzLFxuICAgICAqIHByb3ZpZGUgYSB2YWx1ZSBvZiAwIGZvciB0aGUgbWF4X2FnZSBwYXJhbWV0ZXIgYW5kIHRoZSBBUyB3aWxsIGZvcmNlIGEgZnJlc2ggbG9naW4uXG4gICAgICovXG4gICAgY29uc3QgZml2ZU1pbnV0ZVNrZXcgPSAzMDAwMDA7IC8vIGZpdmUgbWludXRlcyBpbiBtaWxsaXNlY29uZHNcbiAgICBpZiAobWF4QWdlID09PSAwIHx8IERhdGUubm93KCkgLSBmaXZlTWludXRlU2tldyA+IGF1dGhUaW1lICsgbWF4QWdlKSB7XG4gICAgICAgIHRocm93IGNyZWF0ZUNsaWVudEF1dGhFcnJvcihtYXhBZ2VUcmFuc3BpcmVkKTtcbiAgICB9XG59XG5cbmV4cG9ydCB7IGNoZWNrTWF4QWdlLCBleHRyYWN0VG9rZW5DbGFpbXMsIGdldEpXU1BheWxvYWQgfTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPUF1dGhUb2tlbi5tanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/msal-common/dist/account/AuthToken.mjs\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/msal-common/dist/account/CcsCredential.mjs":
/*!************************************************************************!*\
  !*** ./node_modules/@azure/msal-common/dist/account/CcsCredential.mjs ***!
  \************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   CcsCredentialType: () => (/* binding */ CcsCredentialType)\n/* harmony export */ });\n/*! @azure/msal-common v14.14.0 2024-07-23 */\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\nconst CcsCredentialType = {\n    HOME_ACCOUNT_ID: \"home_account_id\",\n    UPN: \"UPN\",\n};\n\n\n//# sourceMappingURL=CcsCredential.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtY29tbW9uL2Rpc3QvYWNjb3VudC9DY3NDcmVkZW50aWFsLm1qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUE7QUFDYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRTZCO0FBQzdCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZGFuaWVsMy12cDIvLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtY29tbW9uL2Rpc3QvYWNjb3VudC9DY3NDcmVkZW50aWFsLm1qcz8yYmRjIl0sInNvdXJjZXNDb250ZW50IjpbIi8qISBAYXp1cmUvbXNhbC1jb21tb24gdjE0LjE0LjAgMjAyNC0wNy0yMyAqL1xuJ3VzZSBzdHJpY3QnO1xuLypcbiAqIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLiBBbGwgcmlnaHRzIHJlc2VydmVkLlxuICogTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBMaWNlbnNlLlxuICovXG5jb25zdCBDY3NDcmVkZW50aWFsVHlwZSA9IHtcbiAgICBIT01FX0FDQ09VTlRfSUQ6IFwiaG9tZV9hY2NvdW50X2lkXCIsXG4gICAgVVBOOiBcIlVQTlwiLFxufTtcblxuZXhwb3J0IHsgQ2NzQ3JlZGVudGlhbFR5cGUgfTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPUNjc0NyZWRlbnRpYWwubWpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/msal-common/dist/account/CcsCredential.mjs\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/msal-common/dist/account/ClientInfo.mjs":
/*!*********************************************************************!*\
  !*** ./node_modules/@azure/msal-common/dist/account/ClientInfo.mjs ***!
  \*********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   buildClientInfo: () => (/* binding */ buildClientInfo),\n/* harmony export */   buildClientInfoFromHomeAccountId: () => (/* binding */ buildClientInfoFromHomeAccountId)\n/* harmony export */ });\n/* harmony import */ var _error_ClientAuthError_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../error/ClientAuthError.mjs */ \"(rsc)/./node_modules/@azure/msal-common/dist/error/ClientAuthError.mjs\");\n/* harmony import */ var _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils/Constants.mjs */ \"(rsc)/./node_modules/@azure/msal-common/dist/utils/Constants.mjs\");\n/* harmony import */ var _error_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../error/ClientAuthErrorCodes.mjs */ \"(rsc)/./node_modules/@azure/msal-common/dist/error/ClientAuthErrorCodes.mjs\");\n/*! @azure/msal-common v14.14.0 2024-07-23 */\n\n\n\n\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n/**\n * Function to build a client info object from server clientInfo string\n * @param rawClientInfo\n * @param crypto\n */\nfunction buildClientInfo(rawClientInfo, base64Decode) {\n    if (!rawClientInfo) {\n        throw (0,_error_ClientAuthError_mjs__WEBPACK_IMPORTED_MODULE_0__.createClientAuthError)(_error_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_1__.clientInfoEmptyError);\n    }\n    try {\n        const decodedClientInfo = base64Decode(rawClientInfo);\n        return JSON.parse(decodedClientInfo);\n    }\n    catch (e) {\n        throw (0,_error_ClientAuthError_mjs__WEBPACK_IMPORTED_MODULE_0__.createClientAuthError)(_error_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_1__.clientInfoDecodingError);\n    }\n}\n/**\n * Function to build a client info object from cached homeAccountId string\n * @param homeAccountId\n */\nfunction buildClientInfoFromHomeAccountId(homeAccountId) {\n    if (!homeAccountId) {\n        throw (0,_error_ClientAuthError_mjs__WEBPACK_IMPORTED_MODULE_0__.createClientAuthError)(_error_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_1__.clientInfoDecodingError);\n    }\n    const clientInfoParts = homeAccountId.split(_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_2__.Separators.CLIENT_INFO_SEPARATOR, 2);\n    return {\n        uid: clientInfoParts[0],\n        utid: clientInfoParts.length < 2\n            ? _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_2__.Constants.EMPTY_STRING\n            : clientInfoParts[1],\n    };\n}\n\n\n//# sourceMappingURL=ClientInfo.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtY29tbW9uL2Rpc3QvYWNjb3VudC9DbGllbnRJbmZvLm1qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUFBO0FBQ2E7QUFDd0Q7QUFDTjtBQUNtQzs7QUFFbEc7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGNBQWMsaUZBQXFCLENBQUMsaUZBQW9CO0FBQ3hEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGNBQWMsaUZBQXFCLENBQUMsb0ZBQXVCO0FBQzNEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxjQUFjLGlGQUFxQixDQUFDLG9GQUF1QjtBQUMzRDtBQUNBLGdEQUFnRCw0REFBVTtBQUMxRDtBQUNBO0FBQ0E7QUFDQSxjQUFjLDJEQUFTO0FBQ3ZCO0FBQ0E7QUFDQTs7QUFFNkQ7QUFDN0QiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9kYW5pZWwzLXZwMi8uL25vZGVfbW9kdWxlcy9AYXp1cmUvbXNhbC1jb21tb24vZGlzdC9hY2NvdW50L0NsaWVudEluZm8ubWpzPzA3NDUiXSwic291cmNlc0NvbnRlbnQiOlsiLyohIEBhenVyZS9tc2FsLWNvbW1vbiB2MTQuMTQuMCAyMDI0LTA3LTIzICovXG4ndXNlIHN0cmljdCc7XG5pbXBvcnQgeyBjcmVhdGVDbGllbnRBdXRoRXJyb3IgfSBmcm9tICcuLi9lcnJvci9DbGllbnRBdXRoRXJyb3IubWpzJztcbmltcG9ydCB7IFNlcGFyYXRvcnMsIENvbnN0YW50cyB9IGZyb20gJy4uL3V0aWxzL0NvbnN0YW50cy5tanMnO1xuaW1wb3J0IHsgY2xpZW50SW5mb0VtcHR5RXJyb3IsIGNsaWVudEluZm9EZWNvZGluZ0Vycm9yIH0gZnJvbSAnLi4vZXJyb3IvQ2xpZW50QXV0aEVycm9yQ29kZXMubWpzJztcblxuLypcbiAqIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLiBBbGwgcmlnaHRzIHJlc2VydmVkLlxuICogTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBMaWNlbnNlLlxuICovXG4vKipcbiAqIEZ1bmN0aW9uIHRvIGJ1aWxkIGEgY2xpZW50IGluZm8gb2JqZWN0IGZyb20gc2VydmVyIGNsaWVudEluZm8gc3RyaW5nXG4gKiBAcGFyYW0gcmF3Q2xpZW50SW5mb1xuICogQHBhcmFtIGNyeXB0b1xuICovXG5mdW5jdGlvbiBidWlsZENsaWVudEluZm8ocmF3Q2xpZW50SW5mbywgYmFzZTY0RGVjb2RlKSB7XG4gICAgaWYgKCFyYXdDbGllbnRJbmZvKSB7XG4gICAgICAgIHRocm93IGNyZWF0ZUNsaWVudEF1dGhFcnJvcihjbGllbnRJbmZvRW1wdHlFcnJvcik7XG4gICAgfVxuICAgIHRyeSB7XG4gICAgICAgIGNvbnN0IGRlY29kZWRDbGllbnRJbmZvID0gYmFzZTY0RGVjb2RlKHJhd0NsaWVudEluZm8pO1xuICAgICAgICByZXR1cm4gSlNPTi5wYXJzZShkZWNvZGVkQ2xpZW50SW5mbyk7XG4gICAgfVxuICAgIGNhdGNoIChlKSB7XG4gICAgICAgIHRocm93IGNyZWF0ZUNsaWVudEF1dGhFcnJvcihjbGllbnRJbmZvRGVjb2RpbmdFcnJvcik7XG4gICAgfVxufVxuLyoqXG4gKiBGdW5jdGlvbiB0byBidWlsZCBhIGNsaWVudCBpbmZvIG9iamVjdCBmcm9tIGNhY2hlZCBob21lQWNjb3VudElkIHN0cmluZ1xuICogQHBhcmFtIGhvbWVBY2NvdW50SWRcbiAqL1xuZnVuY3Rpb24gYnVpbGRDbGllbnRJbmZvRnJvbUhvbWVBY2NvdW50SWQoaG9tZUFjY291bnRJZCkge1xuICAgIGlmICghaG9tZUFjY291bnRJZCkge1xuICAgICAgICB0aHJvdyBjcmVhdGVDbGllbnRBdXRoRXJyb3IoY2xpZW50SW5mb0RlY29kaW5nRXJyb3IpO1xuICAgIH1cbiAgICBjb25zdCBjbGllbnRJbmZvUGFydHMgPSBob21lQWNjb3VudElkLnNwbGl0KFNlcGFyYXRvcnMuQ0xJRU5UX0lORk9fU0VQQVJBVE9SLCAyKTtcbiAgICByZXR1cm4ge1xuICAgICAgICB1aWQ6IGNsaWVudEluZm9QYXJ0c1swXSxcbiAgICAgICAgdXRpZDogY2xpZW50SW5mb1BhcnRzLmxlbmd0aCA8IDJcbiAgICAgICAgICAgID8gQ29uc3RhbnRzLkVNUFRZX1NUUklOR1xuICAgICAgICAgICAgOiBjbGllbnRJbmZvUGFydHNbMV0sXG4gICAgfTtcbn1cblxuZXhwb3J0IHsgYnVpbGRDbGllbnRJbmZvLCBidWlsZENsaWVudEluZm9Gcm9tSG9tZUFjY291bnRJZCB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Q2xpZW50SW5mby5tanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/msal-common/dist/account/ClientInfo.mjs\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/msal-common/dist/account/TokenClaims.mjs":
/*!**********************************************************************!*\
  !*** ./node_modules/@azure/msal-common/dist/account/TokenClaims.mjs ***!
  \**********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getTenantIdFromIdTokenClaims: () => (/* binding */ getTenantIdFromIdTokenClaims)\n/* harmony export */ });\n/*! @azure/msal-common v14.14.0 2024-07-23 */\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n/**\n * Gets tenantId from available ID token claims to set as credential realm with the following precedence:\n * 1. tid - if the token is acquired from an Azure AD tenant tid will be present\n * 2. tfp - if the token is acquired from a modern B2C tenant tfp should be present\n * 3. acr - if the token is acquired from a legacy B2C tenant acr should be present\n * Downcased to match the realm case-insensitive comparison requirements\n * @param idTokenClaims\n * @returns\n */\nfunction getTenantIdFromIdTokenClaims(idTokenClaims) {\n    if (idTokenClaims) {\n        const tenantId = idTokenClaims.tid || idTokenClaims.tfp || idTokenClaims.acr;\n        return tenantId || null;\n    }\n    return null;\n}\n\n\n//# sourceMappingURL=TokenClaims.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtY29tbW9uL2Rpc3QvYWNjb3VudC9Ub2tlbkNsYWltcy5tanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBO0FBQ2E7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUV3QztBQUN4QyIsInNvdXJjZXMiOlsid2VicGFjazovL2RhbmllbDMtdnAyLy4vbm9kZV9tb2R1bGVzL0BhenVyZS9tc2FsLWNvbW1vbi9kaXN0L2FjY291bnQvVG9rZW5DbGFpbXMubWpzPzIwMzkiXSwic291cmNlc0NvbnRlbnQiOlsiLyohIEBhenVyZS9tc2FsLWNvbW1vbiB2MTQuMTQuMCAyMDI0LTA3LTIzICovXG4ndXNlIHN0cmljdCc7XG4vKlxuICogQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uIEFsbCByaWdodHMgcmVzZXJ2ZWQuXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIExpY2Vuc2UuXG4gKi9cbi8qKlxuICogR2V0cyB0ZW5hbnRJZCBmcm9tIGF2YWlsYWJsZSBJRCB0b2tlbiBjbGFpbXMgdG8gc2V0IGFzIGNyZWRlbnRpYWwgcmVhbG0gd2l0aCB0aGUgZm9sbG93aW5nIHByZWNlZGVuY2U6XG4gKiAxLiB0aWQgLSBpZiB0aGUgdG9rZW4gaXMgYWNxdWlyZWQgZnJvbSBhbiBBenVyZSBBRCB0ZW5hbnQgdGlkIHdpbGwgYmUgcHJlc2VudFxuICogMi4gdGZwIC0gaWYgdGhlIHRva2VuIGlzIGFjcXVpcmVkIGZyb20gYSBtb2Rlcm4gQjJDIHRlbmFudCB0ZnAgc2hvdWxkIGJlIHByZXNlbnRcbiAqIDMuIGFjciAtIGlmIHRoZSB0b2tlbiBpcyBhY3F1aXJlZCBmcm9tIGEgbGVnYWN5IEIyQyB0ZW5hbnQgYWNyIHNob3VsZCBiZSBwcmVzZW50XG4gKiBEb3duY2FzZWQgdG8gbWF0Y2ggdGhlIHJlYWxtIGNhc2UtaW5zZW5zaXRpdmUgY29tcGFyaXNvbiByZXF1aXJlbWVudHNcbiAqIEBwYXJhbSBpZFRva2VuQ2xhaW1zXG4gKiBAcmV0dXJuc1xuICovXG5mdW5jdGlvbiBnZXRUZW5hbnRJZEZyb21JZFRva2VuQ2xhaW1zKGlkVG9rZW5DbGFpbXMpIHtcbiAgICBpZiAoaWRUb2tlbkNsYWltcykge1xuICAgICAgICBjb25zdCB0ZW5hbnRJZCA9IGlkVG9rZW5DbGFpbXMudGlkIHx8IGlkVG9rZW5DbGFpbXMudGZwIHx8IGlkVG9rZW5DbGFpbXMuYWNyO1xuICAgICAgICByZXR1cm4gdGVuYW50SWQgfHwgbnVsbDtcbiAgICB9XG4gICAgcmV0dXJuIG51bGw7XG59XG5cbmV4cG9ydCB7IGdldFRlbmFudElkRnJvbUlkVG9rZW5DbGFpbXMgfTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPVRva2VuQ2xhaW1zLm1qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/msal-common/dist/account/TokenClaims.mjs\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/msal-common/dist/authority/Authority.mjs":
/*!**********************************************************************!*\
  !*** ./node_modules/@azure/msal-common/dist/authority/Authority.mjs ***!
  \**********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Authority: () => (/* binding */ Authority),\n/* harmony export */   buildStaticAuthorityOptions: () => (/* binding */ buildStaticAuthorityOptions),\n/* harmony export */   formatAuthorityUri: () => (/* binding */ formatAuthorityUri),\n/* harmony export */   getTenantFromAuthorityString: () => (/* binding */ getTenantFromAuthorityString)\n/* harmony export */ });\n/* harmony import */ var _AuthorityType_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./AuthorityType.mjs */ \"(rsc)/./node_modules/@azure/msal-common/dist/authority/AuthorityType.mjs\");\n/* harmony import */ var _OpenIdConfigResponse_mjs__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./OpenIdConfigResponse.mjs */ \"(rsc)/./node_modules/@azure/msal-common/dist/authority/OpenIdConfigResponse.mjs\");\n/* harmony import */ var _url_UrlString_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../url/UrlString.mjs */ \"(rsc)/./node_modules/@azure/msal-common/dist/url/UrlString.mjs\");\n/* harmony import */ var _error_ClientAuthError_mjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../error/ClientAuthError.mjs */ \"(rsc)/./node_modules/@azure/msal-common/dist/error/ClientAuthError.mjs\");\n/* harmony import */ var _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/Constants.mjs */ \"(rsc)/./node_modules/@azure/msal-common/dist/utils/Constants.mjs\");\n/* harmony import */ var _AuthorityMetadata_mjs__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./AuthorityMetadata.mjs */ \"(rsc)/./node_modules/@azure/msal-common/dist/authority/AuthorityMetadata.mjs\");\n/* harmony import */ var _error_ClientConfigurationError_mjs__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../error/ClientConfigurationError.mjs */ \"(rsc)/./node_modules/@azure/msal-common/dist/error/ClientConfigurationError.mjs\");\n/* harmony import */ var _ProtocolMode_mjs__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./ProtocolMode.mjs */ \"(rsc)/./node_modules/@azure/msal-common/dist/authority/ProtocolMode.mjs\");\n/* harmony import */ var _AuthorityOptions_mjs__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./AuthorityOptions.mjs */ \"(rsc)/./node_modules/@azure/msal-common/dist/authority/AuthorityOptions.mjs\");\n/* harmony import */ var _CloudInstanceDiscoveryResponse_mjs__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./CloudInstanceDiscoveryResponse.mjs */ \"(rsc)/./node_modules/@azure/msal-common/dist/authority/CloudInstanceDiscoveryResponse.mjs\");\n/* harmony import */ var _CloudInstanceDiscoveryErrorResponse_mjs__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./CloudInstanceDiscoveryErrorResponse.mjs */ \"(rsc)/./node_modules/@azure/msal-common/dist/authority/CloudInstanceDiscoveryErrorResponse.mjs\");\n/* harmony import */ var _RegionDiscovery_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./RegionDiscovery.mjs */ \"(rsc)/./node_modules/@azure/msal-common/dist/authority/RegionDiscovery.mjs\");\n/* harmony import */ var _error_AuthError_mjs__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ../error/AuthError.mjs */ \"(rsc)/./node_modules/@azure/msal-common/dist/error/AuthError.mjs\");\n/* harmony import */ var _telemetry_performance_PerformanceEvent_mjs__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../telemetry/performance/PerformanceEvent.mjs */ \"(rsc)/./node_modules/@azure/msal-common/dist/telemetry/performance/PerformanceEvent.mjs\");\n/* harmony import */ var _utils_FunctionWrappers_mjs__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../utils/FunctionWrappers.mjs */ \"(rsc)/./node_modules/@azure/msal-common/dist/utils/FunctionWrappers.mjs\");\n/* harmony import */ var _cache_utils_CacheHelpers_mjs__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../cache/utils/CacheHelpers.mjs */ \"(rsc)/./node_modules/@azure/msal-common/dist/cache/utils/CacheHelpers.mjs\");\n/* harmony import */ var _error_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../error/ClientAuthErrorCodes.mjs */ \"(rsc)/./node_modules/@azure/msal-common/dist/error/ClientAuthErrorCodes.mjs\");\n/* harmony import */ var _error_ClientConfigurationErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../error/ClientConfigurationErrorCodes.mjs */ \"(rsc)/./node_modules/@azure/msal-common/dist/error/ClientConfigurationErrorCodes.mjs\");\n/*! @azure/msal-common v14.14.0 2024-07-23 */\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n/**\n * The authority class validates the authority URIs used by the user, and retrieves the OpenID Configuration Data from the\n * endpoint. It will store the pertinent config data in this object for use during token calls.\n * @internal\n */\nclass Authority {\n    constructor(authority, networkInterface, cacheManager, authorityOptions, logger, correlationId, performanceClient, managedIdentity) {\n        this.canonicalAuthority = authority;\n        this._canonicalAuthority.validateAsUri();\n        this.networkInterface = networkInterface;\n        this.cacheManager = cacheManager;\n        this.authorityOptions = authorityOptions;\n        this.regionDiscoveryMetadata = {\n            region_used: undefined,\n            region_source: undefined,\n            region_outcome: undefined,\n        };\n        this.logger = logger;\n        this.performanceClient = performanceClient;\n        this.correlationId = correlationId;\n        this.managedIdentity = managedIdentity || false;\n        this.regionDiscovery = new _RegionDiscovery_mjs__WEBPACK_IMPORTED_MODULE_0__.RegionDiscovery(networkInterface, this.logger, this.performanceClient, this.correlationId);\n    }\n    /**\n     * Get {@link AuthorityType}\n     * @param authorityUri {@link IUri}\n     * @private\n     */\n    getAuthorityType(authorityUri) {\n        // CIAM auth url pattern is being standardized as: <tenant>.ciamlogin.com\n        if (authorityUri.HostNameAndPort.endsWith(_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_1__.Constants.CIAM_AUTH_URL)) {\n            return _AuthorityType_mjs__WEBPACK_IMPORTED_MODULE_2__.AuthorityType.Ciam;\n        }\n        const pathSegments = authorityUri.PathSegments;\n        if (pathSegments.length) {\n            switch (pathSegments[0].toLowerCase()) {\n                case _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_1__.Constants.ADFS:\n                    return _AuthorityType_mjs__WEBPACK_IMPORTED_MODULE_2__.AuthorityType.Adfs;\n                case _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_1__.Constants.DSTS:\n                    return _AuthorityType_mjs__WEBPACK_IMPORTED_MODULE_2__.AuthorityType.Dsts;\n            }\n        }\n        return _AuthorityType_mjs__WEBPACK_IMPORTED_MODULE_2__.AuthorityType.Default;\n    }\n    // See above for AuthorityType\n    get authorityType() {\n        return this.getAuthorityType(this.canonicalAuthorityUrlComponents);\n    }\n    /**\n     * ProtocolMode enum representing the way endpoints are constructed.\n     */\n    get protocolMode() {\n        return this.authorityOptions.protocolMode;\n    }\n    /**\n     * Returns authorityOptions which can be used to reinstantiate a new authority instance\n     */\n    get options() {\n        return this.authorityOptions;\n    }\n    /**\n     * A URL that is the authority set by the developer\n     */\n    get canonicalAuthority() {\n        return this._canonicalAuthority.urlString;\n    }\n    /**\n     * Sets canonical authority.\n     */\n    set canonicalAuthority(url) {\n        this._canonicalAuthority = new _url_UrlString_mjs__WEBPACK_IMPORTED_MODULE_3__.UrlString(url);\n        this._canonicalAuthority.validateAsUri();\n        this._canonicalAuthorityUrlComponents = null;\n    }\n    /**\n     * Get authority components.\n     */\n    get canonicalAuthorityUrlComponents() {\n        if (!this._canonicalAuthorityUrlComponents) {\n            this._canonicalAuthorityUrlComponents =\n                this._canonicalAuthority.getUrlComponents();\n        }\n        return this._canonicalAuthorityUrlComponents;\n    }\n    /**\n     * Get hostname and port i.e. login.microsoftonline.com\n     */\n    get hostnameAndPort() {\n        return this.canonicalAuthorityUrlComponents.HostNameAndPort.toLowerCase();\n    }\n    /**\n     * Get tenant for authority.\n     */\n    get tenant() {\n        return this.canonicalAuthorityUrlComponents.PathSegments[0];\n    }\n    /**\n     * OAuth /authorize endpoint for requests\n     */\n    get authorizationEndpoint() {\n        if (this.discoveryComplete()) {\n            return this.replacePath(this.metadata.authorization_endpoint);\n        }\n        else {\n            throw (0,_error_ClientAuthError_mjs__WEBPACK_IMPORTED_MODULE_4__.createClientAuthError)(_error_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_5__.endpointResolutionError);\n        }\n    }\n    /**\n     * OAuth /token endpoint for requests\n     */\n    get tokenEndpoint() {\n        if (this.discoveryComplete()) {\n            return this.replacePath(this.metadata.token_endpoint);\n        }\n        else {\n            throw (0,_error_ClientAuthError_mjs__WEBPACK_IMPORTED_MODULE_4__.createClientAuthError)(_error_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_5__.endpointResolutionError);\n        }\n    }\n    get deviceCodeEndpoint() {\n        if (this.discoveryComplete()) {\n            return this.replacePath(this.metadata.token_endpoint.replace(\"/token\", \"/devicecode\"));\n        }\n        else {\n            throw (0,_error_ClientAuthError_mjs__WEBPACK_IMPORTED_MODULE_4__.createClientAuthError)(_error_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_5__.endpointResolutionError);\n        }\n    }\n    /**\n     * OAuth logout endpoint for requests\n     */\n    get endSessionEndpoint() {\n        if (this.discoveryComplete()) {\n            // ROPC policies may not have end_session_endpoint set\n            if (!this.metadata.end_session_endpoint) {\n                throw (0,_error_ClientAuthError_mjs__WEBPACK_IMPORTED_MODULE_4__.createClientAuthError)(_error_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_5__.endSessionEndpointNotSupported);\n            }\n            return this.replacePath(this.metadata.end_session_endpoint);\n        }\n        else {\n            throw (0,_error_ClientAuthError_mjs__WEBPACK_IMPORTED_MODULE_4__.createClientAuthError)(_error_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_5__.endpointResolutionError);\n        }\n    }\n    /**\n     * OAuth issuer for requests\n     */\n    get selfSignedJwtAudience() {\n        if (this.discoveryComplete()) {\n            return this.replacePath(this.metadata.issuer);\n        }\n        else {\n            throw (0,_error_ClientAuthError_mjs__WEBPACK_IMPORTED_MODULE_4__.createClientAuthError)(_error_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_5__.endpointResolutionError);\n        }\n    }\n    /**\n     * Jwks_uri for token signing keys\n     */\n    get jwksUri() {\n        if (this.discoveryComplete()) {\n            return this.replacePath(this.metadata.jwks_uri);\n        }\n        else {\n            throw (0,_error_ClientAuthError_mjs__WEBPACK_IMPORTED_MODULE_4__.createClientAuthError)(_error_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_5__.endpointResolutionError);\n        }\n    }\n    /**\n     * Returns a flag indicating that tenant name can be replaced in authority {@link IUri}\n     * @param authorityUri {@link IUri}\n     * @private\n     */\n    canReplaceTenant(authorityUri) {\n        return (authorityUri.PathSegments.length === 1 &&\n            !Authority.reservedTenantDomains.has(authorityUri.PathSegments[0]) &&\n            this.getAuthorityType(authorityUri) === _AuthorityType_mjs__WEBPACK_IMPORTED_MODULE_2__.AuthorityType.Default &&\n            this.protocolMode === _ProtocolMode_mjs__WEBPACK_IMPORTED_MODULE_6__.ProtocolMode.AAD);\n    }\n    /**\n     * Replaces tenant in url path with current tenant. Defaults to common.\n     * @param urlString\n     */\n    replaceTenant(urlString) {\n        return urlString.replace(/{tenant}|{tenantid}/g, this.tenant);\n    }\n    /**\n     * Replaces path such as tenant or policy with the current tenant or policy.\n     * @param urlString\n     */\n    replacePath(urlString) {\n        let endpoint = urlString;\n        const cachedAuthorityUrl = new _url_UrlString_mjs__WEBPACK_IMPORTED_MODULE_3__.UrlString(this.metadata.canonical_authority);\n        const cachedAuthorityUrlComponents = cachedAuthorityUrl.getUrlComponents();\n        const cachedAuthorityParts = cachedAuthorityUrlComponents.PathSegments;\n        const currentAuthorityParts = this.canonicalAuthorityUrlComponents.PathSegments;\n        currentAuthorityParts.forEach((currentPart, index) => {\n            let cachedPart = cachedAuthorityParts[index];\n            if (index === 0 &&\n                this.canReplaceTenant(cachedAuthorityUrlComponents)) {\n                const tenantId = new _url_UrlString_mjs__WEBPACK_IMPORTED_MODULE_3__.UrlString(this.metadata.authorization_endpoint).getUrlComponents().PathSegments[0];\n                /**\n                 * Check if AAD canonical authority contains tenant domain name, for example \"testdomain.onmicrosoft.com\",\n                 * by comparing its first path segment to the corresponding authorization endpoint path segment, which is\n                 * always resolved with tenant id by OIDC.\n                 */\n                if (cachedPart !== tenantId) {\n                    this.logger.verbose(`Replacing tenant domain name ${cachedPart} with id ${tenantId}`);\n                    cachedPart = tenantId;\n                }\n            }\n            if (currentPart !== cachedPart) {\n                endpoint = endpoint.replace(`/${cachedPart}/`, `/${currentPart}/`);\n            }\n        });\n        return this.replaceTenant(endpoint);\n    }\n    /**\n     * The default open id configuration endpoint for any canonical authority.\n     */\n    get defaultOpenIdConfigurationEndpoint() {\n        const canonicalAuthorityHost = this.hostnameAndPort;\n        if (this.canonicalAuthority.endsWith(\"v2.0/\") ||\n            this.authorityType === _AuthorityType_mjs__WEBPACK_IMPORTED_MODULE_2__.AuthorityType.Adfs ||\n            (this.protocolMode !== _ProtocolMode_mjs__WEBPACK_IMPORTED_MODULE_6__.ProtocolMode.AAD &&\n                !this.isAliasOfKnownMicrosoftAuthority(canonicalAuthorityHost))) {\n            return `${this.canonicalAuthority}.well-known/openid-configuration`;\n        }\n        return `${this.canonicalAuthority}v2.0/.well-known/openid-configuration`;\n    }\n    /**\n     * Boolean that returns whether or not tenant discovery has been completed.\n     */\n    discoveryComplete() {\n        return !!this.metadata;\n    }\n    /**\n     * Perform endpoint discovery to discover aliases, preferred_cache, preferred_network\n     * and the /authorize, /token and logout endpoints.\n     */\n    async resolveEndpointsAsync() {\n        this.performanceClient?.addQueueMeasurement(_telemetry_performance_PerformanceEvent_mjs__WEBPACK_IMPORTED_MODULE_7__.PerformanceEvents.AuthorityResolveEndpointsAsync, this.correlationId);\n        const metadataEntity = this.getCurrentMetadataEntity();\n        const cloudDiscoverySource = await (0,_utils_FunctionWrappers_mjs__WEBPACK_IMPORTED_MODULE_8__.invokeAsync)(this.updateCloudDiscoveryMetadata.bind(this), _telemetry_performance_PerformanceEvent_mjs__WEBPACK_IMPORTED_MODULE_7__.PerformanceEvents.AuthorityUpdateCloudDiscoveryMetadata, this.logger, this.performanceClient, this.correlationId)(metadataEntity);\n        this.canonicalAuthority = this.canonicalAuthority.replace(this.hostnameAndPort, metadataEntity.preferred_network);\n        const endpointSource = await (0,_utils_FunctionWrappers_mjs__WEBPACK_IMPORTED_MODULE_8__.invokeAsync)(this.updateEndpointMetadata.bind(this), _telemetry_performance_PerformanceEvent_mjs__WEBPACK_IMPORTED_MODULE_7__.PerformanceEvents.AuthorityUpdateEndpointMetadata, this.logger, this.performanceClient, this.correlationId)(metadataEntity);\n        this.updateCachedMetadata(metadataEntity, cloudDiscoverySource, {\n            source: endpointSource,\n        });\n        this.performanceClient?.addFields({\n            cloudDiscoverySource: cloudDiscoverySource,\n            authorityEndpointSource: endpointSource,\n        }, this.correlationId);\n    }\n    /**\n     * Returns metadata entity from cache if it exists, otherwiser returns a new metadata entity built\n     * from the configured canonical authority\n     * @returns\n     */\n    getCurrentMetadataEntity() {\n        let metadataEntity = this.cacheManager.getAuthorityMetadataByAlias(this.hostnameAndPort);\n        if (!metadataEntity) {\n            metadataEntity = {\n                aliases: [],\n                preferred_cache: this.hostnameAndPort,\n                preferred_network: this.hostnameAndPort,\n                canonical_authority: this.canonicalAuthority,\n                authorization_endpoint: \"\",\n                token_endpoint: \"\",\n                end_session_endpoint: \"\",\n                issuer: \"\",\n                aliasesFromNetwork: false,\n                endpointsFromNetwork: false,\n                expiresAt: (0,_cache_utils_CacheHelpers_mjs__WEBPACK_IMPORTED_MODULE_9__.generateAuthorityMetadataExpiresAt)(),\n                jwks_uri: \"\",\n            };\n        }\n        return metadataEntity;\n    }\n    /**\n     * Updates cached metadata based on metadata source and sets the instance's metadata\n     * property to the same value\n     * @param metadataEntity\n     * @param cloudDiscoverySource\n     * @param endpointMetadataResult\n     */\n    updateCachedMetadata(metadataEntity, cloudDiscoverySource, endpointMetadataResult) {\n        if (cloudDiscoverySource !== _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_1__.AuthorityMetadataSource.CACHE &&\n            endpointMetadataResult?.source !== _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_1__.AuthorityMetadataSource.CACHE) {\n            // Reset the expiration time unless both values came from a successful cache lookup\n            metadataEntity.expiresAt =\n                (0,_cache_utils_CacheHelpers_mjs__WEBPACK_IMPORTED_MODULE_9__.generateAuthorityMetadataExpiresAt)();\n            metadataEntity.canonical_authority = this.canonicalAuthority;\n        }\n        const cacheKey = this.cacheManager.generateAuthorityMetadataCacheKey(metadataEntity.preferred_cache);\n        this.cacheManager.setAuthorityMetadata(cacheKey, metadataEntity);\n        this.metadata = metadataEntity;\n    }\n    /**\n     * Update AuthorityMetadataEntity with new endpoints and return where the information came from\n     * @param metadataEntity\n     */\n    async updateEndpointMetadata(metadataEntity) {\n        this.performanceClient?.addQueueMeasurement(_telemetry_performance_PerformanceEvent_mjs__WEBPACK_IMPORTED_MODULE_7__.PerformanceEvents.AuthorityUpdateEndpointMetadata, this.correlationId);\n        const localMetadata = this.updateEndpointMetadataFromLocalSources(metadataEntity);\n        // Further update may be required for hardcoded metadata if regional metadata is preferred\n        if (localMetadata) {\n            if (localMetadata.source ===\n                _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_1__.AuthorityMetadataSource.HARDCODED_VALUES) {\n                // If the user prefers to use an azure region replace the global endpoints with regional information.\n                if (this.authorityOptions.azureRegionConfiguration?.azureRegion) {\n                    if (localMetadata.metadata) {\n                        const hardcodedMetadata = await (0,_utils_FunctionWrappers_mjs__WEBPACK_IMPORTED_MODULE_8__.invokeAsync)(this.updateMetadataWithRegionalInformation.bind(this), _telemetry_performance_PerformanceEvent_mjs__WEBPACK_IMPORTED_MODULE_7__.PerformanceEvents.AuthorityUpdateMetadataWithRegionalInformation, this.logger, this.performanceClient, this.correlationId)(localMetadata.metadata);\n                        (0,_cache_utils_CacheHelpers_mjs__WEBPACK_IMPORTED_MODULE_9__.updateAuthorityEndpointMetadata)(metadataEntity, hardcodedMetadata, false);\n                        metadataEntity.canonical_authority =\n                            this.canonicalAuthority;\n                    }\n                }\n            }\n            return localMetadata.source;\n        }\n        // Get metadata from network if local sources aren't available\n        let metadata = await (0,_utils_FunctionWrappers_mjs__WEBPACK_IMPORTED_MODULE_8__.invokeAsync)(this.getEndpointMetadataFromNetwork.bind(this), _telemetry_performance_PerformanceEvent_mjs__WEBPACK_IMPORTED_MODULE_7__.PerformanceEvents.AuthorityGetEndpointMetadataFromNetwork, this.logger, this.performanceClient, this.correlationId)();\n        if (metadata) {\n            // If the user prefers to use an azure region replace the global endpoints with regional information.\n            if (this.authorityOptions.azureRegionConfiguration?.azureRegion) {\n                metadata = await (0,_utils_FunctionWrappers_mjs__WEBPACK_IMPORTED_MODULE_8__.invokeAsync)(this.updateMetadataWithRegionalInformation.bind(this), _telemetry_performance_PerformanceEvent_mjs__WEBPACK_IMPORTED_MODULE_7__.PerformanceEvents.AuthorityUpdateMetadataWithRegionalInformation, this.logger, this.performanceClient, this.correlationId)(metadata);\n            }\n            (0,_cache_utils_CacheHelpers_mjs__WEBPACK_IMPORTED_MODULE_9__.updateAuthorityEndpointMetadata)(metadataEntity, metadata, true);\n            return _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_1__.AuthorityMetadataSource.NETWORK;\n        }\n        else {\n            // Metadata could not be obtained from the config, cache, network or hardcoded values\n            throw (0,_error_ClientAuthError_mjs__WEBPACK_IMPORTED_MODULE_4__.createClientAuthError)(_error_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_5__.openIdConfigError, this.defaultOpenIdConfigurationEndpoint);\n        }\n    }\n    /**\n     * Updates endpoint metadata from local sources and returns where the information was retrieved from and the metadata config\n     * response if the source is hardcoded metadata\n     * @param metadataEntity\n     * @returns\n     */\n    updateEndpointMetadataFromLocalSources(metadataEntity) {\n        this.logger.verbose(\"Attempting to get endpoint metadata from authority configuration\");\n        const configMetadata = this.getEndpointMetadataFromConfig();\n        if (configMetadata) {\n            this.logger.verbose(\"Found endpoint metadata in authority configuration\");\n            (0,_cache_utils_CacheHelpers_mjs__WEBPACK_IMPORTED_MODULE_9__.updateAuthorityEndpointMetadata)(metadataEntity, configMetadata, false);\n            return {\n                source: _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_1__.AuthorityMetadataSource.CONFIG,\n            };\n        }\n        this.logger.verbose(\"Did not find endpoint metadata in the config... Attempting to get endpoint metadata from the hardcoded values.\");\n        // skipAuthorityMetadataCache is used to bypass hardcoded authority metadata and force a network metadata cache lookup and network metadata request if no cached response is available.\n        if (this.authorityOptions.skipAuthorityMetadataCache) {\n            this.logger.verbose(\"Skipping hardcoded metadata cache since skipAuthorityMetadataCache is set to true. Attempting to get endpoint metadata from the network metadata cache.\");\n        }\n        else {\n            const hardcodedMetadata = this.getEndpointMetadataFromHardcodedValues();\n            if (hardcodedMetadata) {\n                (0,_cache_utils_CacheHelpers_mjs__WEBPACK_IMPORTED_MODULE_9__.updateAuthorityEndpointMetadata)(metadataEntity, hardcodedMetadata, false);\n                return {\n                    source: _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_1__.AuthorityMetadataSource.HARDCODED_VALUES,\n                    metadata: hardcodedMetadata,\n                };\n            }\n            else {\n                this.logger.verbose(\"Did not find endpoint metadata in hardcoded values... Attempting to get endpoint metadata from the network metadata cache.\");\n            }\n        }\n        // Check cached metadata entity expiration status\n        const metadataEntityExpired = (0,_cache_utils_CacheHelpers_mjs__WEBPACK_IMPORTED_MODULE_9__.isAuthorityMetadataExpired)(metadataEntity);\n        if (this.isAuthoritySameType(metadataEntity) &&\n            metadataEntity.endpointsFromNetwork &&\n            !metadataEntityExpired) {\n            // No need to update\n            this.logger.verbose(\"Found endpoint metadata in the cache.\");\n            return { source: _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_1__.AuthorityMetadataSource.CACHE };\n        }\n        else if (metadataEntityExpired) {\n            this.logger.verbose(\"The metadata entity is expired.\");\n        }\n        return null;\n    }\n    /**\n     * Compares the number of url components after the domain to determine if the cached\n     * authority metadata can be used for the requested authority. Protects against same domain different\n     * authority such as login.microsoftonline.com/tenant and login.microsoftonline.com/tfp/tenant/policy\n     * @param metadataEntity\n     */\n    isAuthoritySameType(metadataEntity) {\n        const cachedAuthorityUrl = new _url_UrlString_mjs__WEBPACK_IMPORTED_MODULE_3__.UrlString(metadataEntity.canonical_authority);\n        const cachedParts = cachedAuthorityUrl.getUrlComponents().PathSegments;\n        return (cachedParts.length ===\n            this.canonicalAuthorityUrlComponents.PathSegments.length);\n    }\n    /**\n     * Parse authorityMetadata config option\n     */\n    getEndpointMetadataFromConfig() {\n        if (this.authorityOptions.authorityMetadata) {\n            try {\n                return JSON.parse(this.authorityOptions.authorityMetadata);\n            }\n            catch (e) {\n                throw (0,_error_ClientConfigurationError_mjs__WEBPACK_IMPORTED_MODULE_10__.createClientConfigurationError)(_error_ClientConfigurationErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_11__.invalidAuthorityMetadata);\n            }\n        }\n        return null;\n    }\n    /**\n     * Gets OAuth endpoints from the given OpenID configuration endpoint.\n     *\n     * @param hasHardcodedMetadata boolean\n     */\n    async getEndpointMetadataFromNetwork() {\n        this.performanceClient?.addQueueMeasurement(_telemetry_performance_PerformanceEvent_mjs__WEBPACK_IMPORTED_MODULE_7__.PerformanceEvents.AuthorityGetEndpointMetadataFromNetwork, this.correlationId);\n        const options = {};\n        /*\n         * TODO: Add a timeout if the authority exists in our library's\n         * hardcoded list of metadata\n         */\n        const openIdConfigurationEndpoint = this.defaultOpenIdConfigurationEndpoint;\n        this.logger.verbose(`Authority.getEndpointMetadataFromNetwork: attempting to retrieve OAuth endpoints from ${openIdConfigurationEndpoint}`);\n        try {\n            const response = await this.networkInterface.sendGetRequestAsync(openIdConfigurationEndpoint, options);\n            const isValidResponse = (0,_OpenIdConfigResponse_mjs__WEBPACK_IMPORTED_MODULE_12__.isOpenIdConfigResponse)(response.body);\n            if (isValidResponse) {\n                return response.body;\n            }\n            else {\n                this.logger.verbose(`Authority.getEndpointMetadataFromNetwork: could not parse response as OpenID configuration`);\n                return null;\n            }\n        }\n        catch (e) {\n            this.logger.verbose(`Authority.getEndpointMetadataFromNetwork: ${e}`);\n            return null;\n        }\n    }\n    /**\n     * Get OAuth endpoints for common authorities.\n     */\n    getEndpointMetadataFromHardcodedValues() {\n        if (this.hostnameAndPort in _AuthorityMetadata_mjs__WEBPACK_IMPORTED_MODULE_13__.EndpointMetadata) {\n            return _AuthorityMetadata_mjs__WEBPACK_IMPORTED_MODULE_13__.EndpointMetadata[this.hostnameAndPort];\n        }\n        return null;\n    }\n    /**\n     * Update the retrieved metadata with regional information.\n     * User selected Azure region will be used if configured.\n     */\n    async updateMetadataWithRegionalInformation(metadata) {\n        this.performanceClient?.addQueueMeasurement(_telemetry_performance_PerformanceEvent_mjs__WEBPACK_IMPORTED_MODULE_7__.PerformanceEvents.AuthorityUpdateMetadataWithRegionalInformation, this.correlationId);\n        const userConfiguredAzureRegion = this.authorityOptions.azureRegionConfiguration?.azureRegion;\n        if (userConfiguredAzureRegion) {\n            if (userConfiguredAzureRegion !==\n                _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_1__.Constants.AZURE_REGION_AUTO_DISCOVER_FLAG) {\n                this.regionDiscoveryMetadata.region_outcome =\n                    _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_1__.RegionDiscoveryOutcomes.CONFIGURED_NO_AUTO_DETECTION;\n                this.regionDiscoveryMetadata.region_used =\n                    userConfiguredAzureRegion;\n                return Authority.replaceWithRegionalInformation(metadata, userConfiguredAzureRegion);\n            }\n            const autodetectedRegionName = await (0,_utils_FunctionWrappers_mjs__WEBPACK_IMPORTED_MODULE_8__.invokeAsync)(this.regionDiscovery.detectRegion.bind(this.regionDiscovery), _telemetry_performance_PerformanceEvent_mjs__WEBPACK_IMPORTED_MODULE_7__.PerformanceEvents.RegionDiscoveryDetectRegion, this.logger, this.performanceClient, this.correlationId)(this.authorityOptions.azureRegionConfiguration\n                ?.environmentRegion, this.regionDiscoveryMetadata);\n            if (autodetectedRegionName) {\n                this.regionDiscoveryMetadata.region_outcome =\n                    _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_1__.RegionDiscoveryOutcomes.AUTO_DETECTION_REQUESTED_SUCCESSFUL;\n                this.regionDiscoveryMetadata.region_used =\n                    autodetectedRegionName;\n                return Authority.replaceWithRegionalInformation(metadata, autodetectedRegionName);\n            }\n            this.regionDiscoveryMetadata.region_outcome =\n                _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_1__.RegionDiscoveryOutcomes.AUTO_DETECTION_REQUESTED_FAILED;\n        }\n        return metadata;\n    }\n    /**\n     * Updates the AuthorityMetadataEntity with new aliases, preferred_network and preferred_cache\n     * and returns where the information was retrieved from\n     * @param metadataEntity\n     * @returns AuthorityMetadataSource\n     */\n    async updateCloudDiscoveryMetadata(metadataEntity) {\n        this.performanceClient?.addQueueMeasurement(_telemetry_performance_PerformanceEvent_mjs__WEBPACK_IMPORTED_MODULE_7__.PerformanceEvents.AuthorityUpdateCloudDiscoveryMetadata, this.correlationId);\n        const localMetadataSource = this.updateCloudDiscoveryMetadataFromLocalSources(metadataEntity);\n        if (localMetadataSource) {\n            return localMetadataSource;\n        }\n        // Fallback to network as metadata source\n        const metadata = await (0,_utils_FunctionWrappers_mjs__WEBPACK_IMPORTED_MODULE_8__.invokeAsync)(this.getCloudDiscoveryMetadataFromNetwork.bind(this), _telemetry_performance_PerformanceEvent_mjs__WEBPACK_IMPORTED_MODULE_7__.PerformanceEvents.AuthorityGetCloudDiscoveryMetadataFromNetwork, this.logger, this.performanceClient, this.correlationId)();\n        if (metadata) {\n            (0,_cache_utils_CacheHelpers_mjs__WEBPACK_IMPORTED_MODULE_9__.updateCloudDiscoveryMetadata)(metadataEntity, metadata, true);\n            return _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_1__.AuthorityMetadataSource.NETWORK;\n        }\n        // Metadata could not be obtained from the config, cache, network or hardcoded values\n        throw (0,_error_ClientConfigurationError_mjs__WEBPACK_IMPORTED_MODULE_10__.createClientConfigurationError)(_error_ClientConfigurationErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_11__.untrustedAuthority);\n    }\n    updateCloudDiscoveryMetadataFromLocalSources(metadataEntity) {\n        this.logger.verbose(\"Attempting to get cloud discovery metadata  from authority configuration\");\n        this.logger.verbosePii(`Known Authorities: ${this.authorityOptions.knownAuthorities ||\n            _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_1__.Constants.NOT_APPLICABLE}`);\n        this.logger.verbosePii(`Authority Metadata: ${this.authorityOptions.authorityMetadata ||\n            _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_1__.Constants.NOT_APPLICABLE}`);\n        this.logger.verbosePii(`Canonical Authority: ${metadataEntity.canonical_authority || _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_1__.Constants.NOT_APPLICABLE}`);\n        const metadata = this.getCloudDiscoveryMetadataFromConfig();\n        if (metadata) {\n            this.logger.verbose(\"Found cloud discovery metadata in authority configuration\");\n            (0,_cache_utils_CacheHelpers_mjs__WEBPACK_IMPORTED_MODULE_9__.updateCloudDiscoveryMetadata)(metadataEntity, metadata, false);\n            return _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_1__.AuthorityMetadataSource.CONFIG;\n        }\n        // If the cached metadata came from config but that config was not passed to this instance, we must go to hardcoded values\n        this.logger.verbose(\"Did not find cloud discovery metadata in the config... Attempting to get cloud discovery metadata from the hardcoded values.\");\n        if (this.options.skipAuthorityMetadataCache) {\n            this.logger.verbose(\"Skipping hardcoded cloud discovery metadata cache since skipAuthorityMetadataCache is set to true. Attempting to get cloud discovery metadata from the network metadata cache.\");\n        }\n        else {\n            const hardcodedMetadata = (0,_AuthorityMetadata_mjs__WEBPACK_IMPORTED_MODULE_13__.getCloudDiscoveryMetadataFromHardcodedValues)(this.hostnameAndPort);\n            if (hardcodedMetadata) {\n                this.logger.verbose(\"Found cloud discovery metadata from hardcoded values.\");\n                (0,_cache_utils_CacheHelpers_mjs__WEBPACK_IMPORTED_MODULE_9__.updateCloudDiscoveryMetadata)(metadataEntity, hardcodedMetadata, false);\n                return _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_1__.AuthorityMetadataSource.HARDCODED_VALUES;\n            }\n            this.logger.verbose(\"Did not find cloud discovery metadata in hardcoded values... Attempting to get cloud discovery metadata from the network metadata cache.\");\n        }\n        const metadataEntityExpired = (0,_cache_utils_CacheHelpers_mjs__WEBPACK_IMPORTED_MODULE_9__.isAuthorityMetadataExpired)(metadataEntity);\n        if (this.isAuthoritySameType(metadataEntity) &&\n            metadataEntity.aliasesFromNetwork &&\n            !metadataEntityExpired) {\n            this.logger.verbose(\"Found cloud discovery metadata in the cache.\");\n            // No need to update\n            return _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_1__.AuthorityMetadataSource.CACHE;\n        }\n        else if (metadataEntityExpired) {\n            this.logger.verbose(\"The metadata entity is expired.\");\n        }\n        return null;\n    }\n    /**\n     * Parse cloudDiscoveryMetadata config or check knownAuthorities\n     */\n    getCloudDiscoveryMetadataFromConfig() {\n        // CIAM does not support cloud discovery metadata\n        if (this.authorityType === _AuthorityType_mjs__WEBPACK_IMPORTED_MODULE_2__.AuthorityType.Ciam) {\n            this.logger.verbose(\"CIAM authorities do not support cloud discovery metadata, generate the aliases from authority host.\");\n            return Authority.createCloudDiscoveryMetadataFromHost(this.hostnameAndPort);\n        }\n        // Check if network response was provided in config\n        if (this.authorityOptions.cloudDiscoveryMetadata) {\n            this.logger.verbose(\"The cloud discovery metadata has been provided as a network response, in the config.\");\n            try {\n                this.logger.verbose(\"Attempting to parse the cloud discovery metadata.\");\n                const parsedResponse = JSON.parse(this.authorityOptions.cloudDiscoveryMetadata);\n                const metadata = (0,_AuthorityMetadata_mjs__WEBPACK_IMPORTED_MODULE_13__.getCloudDiscoveryMetadataFromNetworkResponse)(parsedResponse.metadata, this.hostnameAndPort);\n                this.logger.verbose(\"Parsed the cloud discovery metadata.\");\n                if (metadata) {\n                    this.logger.verbose(\"There is returnable metadata attached to the parsed cloud discovery metadata.\");\n                    return metadata;\n                }\n                else {\n                    this.logger.verbose(\"There is no metadata attached to the parsed cloud discovery metadata.\");\n                }\n            }\n            catch (e) {\n                this.logger.verbose(\"Unable to parse the cloud discovery metadata. Throwing Invalid Cloud Discovery Metadata Error.\");\n                throw (0,_error_ClientConfigurationError_mjs__WEBPACK_IMPORTED_MODULE_10__.createClientConfigurationError)(_error_ClientConfigurationErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_11__.invalidCloudDiscoveryMetadata);\n            }\n        }\n        // If cloudDiscoveryMetadata is empty or does not contain the host, check knownAuthorities\n        if (this.isInKnownAuthorities()) {\n            this.logger.verbose(\"The host is included in knownAuthorities. Creating new cloud discovery metadata from the host.\");\n            return Authority.createCloudDiscoveryMetadataFromHost(this.hostnameAndPort);\n        }\n        return null;\n    }\n    /**\n     * Called to get metadata from network if CloudDiscoveryMetadata was not populated by config\n     *\n     * @param hasHardcodedMetadata boolean\n     */\n    async getCloudDiscoveryMetadataFromNetwork() {\n        this.performanceClient?.addQueueMeasurement(_telemetry_performance_PerformanceEvent_mjs__WEBPACK_IMPORTED_MODULE_7__.PerformanceEvents.AuthorityGetCloudDiscoveryMetadataFromNetwork, this.correlationId);\n        const instanceDiscoveryEndpoint = `${_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_1__.Constants.AAD_INSTANCE_DISCOVERY_ENDPT}${this.canonicalAuthority}oauth2/v2.0/authorize`;\n        const options = {};\n        /*\n         * TODO: Add a timeout if the authority exists in our library's\n         * hardcoded list of metadata\n         */\n        let match = null;\n        try {\n            const response = await this.networkInterface.sendGetRequestAsync(instanceDiscoveryEndpoint, options);\n            let typedResponseBody;\n            let metadata;\n            if ((0,_CloudInstanceDiscoveryResponse_mjs__WEBPACK_IMPORTED_MODULE_14__.isCloudInstanceDiscoveryResponse)(response.body)) {\n                typedResponseBody =\n                    response.body;\n                metadata = typedResponseBody.metadata;\n                this.logger.verbosePii(`tenant_discovery_endpoint is: ${typedResponseBody.tenant_discovery_endpoint}`);\n            }\n            else if ((0,_CloudInstanceDiscoveryErrorResponse_mjs__WEBPACK_IMPORTED_MODULE_15__.isCloudInstanceDiscoveryErrorResponse)(response.body)) {\n                this.logger.warning(`A CloudInstanceDiscoveryErrorResponse was returned. The cloud instance discovery network request's status code is: ${response.status}`);\n                typedResponseBody =\n                    response.body;\n                if (typedResponseBody.error === _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_1__.Constants.INVALID_INSTANCE) {\n                    this.logger.error(\"The CloudInstanceDiscoveryErrorResponse error is invalid_instance.\");\n                    return null;\n                }\n                this.logger.warning(`The CloudInstanceDiscoveryErrorResponse error is ${typedResponseBody.error}`);\n                this.logger.warning(`The CloudInstanceDiscoveryErrorResponse error description is ${typedResponseBody.error_description}`);\n                this.logger.warning(\"Setting the value of the CloudInstanceDiscoveryMetadata (returned from the network) to []\");\n                metadata = [];\n            }\n            else {\n                this.logger.error(\"AAD did not return a CloudInstanceDiscoveryResponse or CloudInstanceDiscoveryErrorResponse\");\n                return null;\n            }\n            this.logger.verbose(\"Attempting to find a match between the developer's authority and the CloudInstanceDiscoveryMetadata returned from the network request.\");\n            match = (0,_AuthorityMetadata_mjs__WEBPACK_IMPORTED_MODULE_13__.getCloudDiscoveryMetadataFromNetworkResponse)(metadata, this.hostnameAndPort);\n        }\n        catch (error) {\n            if (error instanceof _error_AuthError_mjs__WEBPACK_IMPORTED_MODULE_16__.AuthError) {\n                this.logger.error(`There was a network error while attempting to get the cloud discovery instance metadata.\\nError: ${error.errorCode}\\nError Description: ${error.errorMessage}`);\n            }\n            else {\n                const typedError = error;\n                this.logger.error(`A non-MSALJS error was thrown while attempting to get the cloud instance discovery metadata.\\nError: ${typedError.name}\\nError Description: ${typedError.message}`);\n            }\n            return null;\n        }\n        // Custom Domain scenario, host is trusted because Instance Discovery call succeeded\n        if (!match) {\n            this.logger.warning(\"The developer's authority was not found within the CloudInstanceDiscoveryMetadata returned from the network request.\");\n            this.logger.verbose(\"Creating custom Authority for custom domain scenario.\");\n            match = Authority.createCloudDiscoveryMetadataFromHost(this.hostnameAndPort);\n        }\n        return match;\n    }\n    /**\n     * Helper function to determine if this host is included in the knownAuthorities config option\n     */\n    isInKnownAuthorities() {\n        const matches = this.authorityOptions.knownAuthorities.filter((authority) => {\n            return (authority &&\n                _url_UrlString_mjs__WEBPACK_IMPORTED_MODULE_3__.UrlString.getDomainFromUrl(authority).toLowerCase() ===\n                    this.hostnameAndPort);\n        });\n        return matches.length > 0;\n    }\n    /**\n     * helper function to populate the authority based on azureCloudOptions\n     * @param authorityString\n     * @param azureCloudOptions\n     */\n    static generateAuthority(authorityString, azureCloudOptions) {\n        let authorityAzureCloudInstance;\n        if (azureCloudOptions &&\n            azureCloudOptions.azureCloudInstance !== _AuthorityOptions_mjs__WEBPACK_IMPORTED_MODULE_17__.AzureCloudInstance.None) {\n            const tenant = azureCloudOptions.tenant\n                ? azureCloudOptions.tenant\n                : _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_1__.Constants.DEFAULT_COMMON_TENANT;\n            authorityAzureCloudInstance = `${azureCloudOptions.azureCloudInstance}/${tenant}/`;\n        }\n        return authorityAzureCloudInstance\n            ? authorityAzureCloudInstance\n            : authorityString;\n    }\n    /**\n     * Creates cloud discovery metadata object from a given host\n     * @param host\n     */\n    static createCloudDiscoveryMetadataFromHost(host) {\n        return {\n            preferred_network: host,\n            preferred_cache: host,\n            aliases: [host],\n        };\n    }\n    /**\n     * helper function to generate environment from authority object\n     */\n    getPreferredCache() {\n        if (this.managedIdentity) {\n            return _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_1__.Constants.DEFAULT_AUTHORITY_HOST;\n        }\n        else if (this.discoveryComplete()) {\n            return this.metadata.preferred_cache;\n        }\n        else {\n            throw (0,_error_ClientAuthError_mjs__WEBPACK_IMPORTED_MODULE_4__.createClientAuthError)(_error_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_5__.endpointResolutionError);\n        }\n    }\n    /**\n     * Returns whether or not the provided host is an alias of this authority instance\n     * @param host\n     */\n    isAlias(host) {\n        return this.metadata.aliases.indexOf(host) > -1;\n    }\n    /**\n     * Returns whether or not the provided host is an alias of a known Microsoft authority for purposes of endpoint discovery\n     * @param host\n     */\n    isAliasOfKnownMicrosoftAuthority(host) {\n        return _AuthorityMetadata_mjs__WEBPACK_IMPORTED_MODULE_13__.InstanceDiscoveryMetadataAliases.has(host);\n    }\n    /**\n     * Checks whether the provided host is that of a public cloud authority\n     *\n     * @param authority string\n     * @returns bool\n     */\n    static isPublicCloudAuthority(host) {\n        return _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_1__.Constants.KNOWN_PUBLIC_CLOUDS.indexOf(host) >= 0;\n    }\n    /**\n     * Rebuild the authority string with the region\n     *\n     * @param host string\n     * @param region string\n     */\n    static buildRegionalAuthorityString(host, region, queryString) {\n        // Create and validate a Url string object with the initial authority string\n        const authorityUrlInstance = new _url_UrlString_mjs__WEBPACK_IMPORTED_MODULE_3__.UrlString(host);\n        authorityUrlInstance.validateAsUri();\n        const authorityUrlParts = authorityUrlInstance.getUrlComponents();\n        let hostNameAndPort = `${region}.${authorityUrlParts.HostNameAndPort}`;\n        if (this.isPublicCloudAuthority(authorityUrlParts.HostNameAndPort)) {\n            hostNameAndPort = `${region}.${_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_1__.Constants.REGIONAL_AUTH_PUBLIC_CLOUD_SUFFIX}`;\n        }\n        // Include the query string portion of the url\n        const url = _url_UrlString_mjs__WEBPACK_IMPORTED_MODULE_3__.UrlString.constructAuthorityUriFromObject({\n            ...authorityUrlInstance.getUrlComponents(),\n            HostNameAndPort: hostNameAndPort,\n        }).urlString;\n        // Add the query string if a query string was provided\n        if (queryString)\n            return `${url}?${queryString}`;\n        return url;\n    }\n    /**\n     * Replace the endpoints in the metadata object with their regional equivalents.\n     *\n     * @param metadata OpenIdConfigResponse\n     * @param azureRegion string\n     */\n    static replaceWithRegionalInformation(metadata, azureRegion) {\n        const regionalMetadata = { ...metadata };\n        regionalMetadata.authorization_endpoint =\n            Authority.buildRegionalAuthorityString(regionalMetadata.authorization_endpoint, azureRegion);\n        regionalMetadata.token_endpoint =\n            Authority.buildRegionalAuthorityString(regionalMetadata.token_endpoint, azureRegion);\n        if (regionalMetadata.end_session_endpoint) {\n            regionalMetadata.end_session_endpoint =\n                Authority.buildRegionalAuthorityString(regionalMetadata.end_session_endpoint, azureRegion);\n        }\n        return regionalMetadata;\n    }\n    /**\n     * Transform CIAM_AUTHORIY as per the below rules:\n     * If no path segments found and it is a CIAM authority (hostname ends with .ciamlogin.com), then transform it\n     *\n     * NOTE: The transformation path should go away once STS supports CIAM with the format: `tenantIdorDomain.ciamlogin.com`\n     * `ciamlogin.com` can also change in the future and we should accommodate the same\n     *\n     * @param authority\n     */\n    static transformCIAMAuthority(authority) {\n        let ciamAuthority = authority;\n        const authorityUrl = new _url_UrlString_mjs__WEBPACK_IMPORTED_MODULE_3__.UrlString(authority);\n        const authorityUrlComponents = authorityUrl.getUrlComponents();\n        // check if transformation is needed\n        if (authorityUrlComponents.PathSegments.length === 0 &&\n            authorityUrlComponents.HostNameAndPort.endsWith(_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_1__.Constants.CIAM_AUTH_URL)) {\n            const tenantIdOrDomain = authorityUrlComponents.HostNameAndPort.split(\".\")[0];\n            ciamAuthority = `${ciamAuthority}${tenantIdOrDomain}${_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_1__.Constants.AAD_TENANT_DOMAIN_SUFFIX}`;\n        }\n        return ciamAuthority;\n    }\n}\n// Reserved tenant domain names that will not be replaced with tenant id\nAuthority.reservedTenantDomains = new Set([\n    \"{tenant}\",\n    \"{tenantid}\",\n    _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_1__.AADAuthorityConstants.COMMON,\n    _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_1__.AADAuthorityConstants.CONSUMERS,\n    _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_1__.AADAuthorityConstants.ORGANIZATIONS,\n]);\n/**\n * Extract tenantId from authority\n */\nfunction getTenantFromAuthorityString(authority) {\n    const authorityUrl = new _url_UrlString_mjs__WEBPACK_IMPORTED_MODULE_3__.UrlString(authority);\n    const authorityUrlComponents = authorityUrl.getUrlComponents();\n    /**\n     * For credential matching purposes, tenantId is the last path segment of the authority URL:\n     *  AAD Authority - domain/tenantId -> Credentials are cached with realm = tenantId\n     *  B2C Authority - domain/{tenantId}?/.../policy -> Credentials are cached with realm = policy\n     *  tenantId is downcased because B2C policies can have mixed case but tfp claim is downcased\n     *\n     * Note that we may not have any path segments in certain OIDC scenarios.\n     */\n    const tenantId = authorityUrlComponents.PathSegments.slice(-1)[0]?.toLowerCase();\n    switch (tenantId) {\n        case _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_1__.AADAuthorityConstants.COMMON:\n        case _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_1__.AADAuthorityConstants.ORGANIZATIONS:\n        case _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_1__.AADAuthorityConstants.CONSUMERS:\n            return undefined;\n        default:\n            return tenantId;\n    }\n}\nfunction formatAuthorityUri(authorityUri) {\n    return authorityUri.endsWith(_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_1__.Constants.FORWARD_SLASH)\n        ? authorityUri\n        : `${authorityUri}${_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_1__.Constants.FORWARD_SLASH}`;\n}\nfunction buildStaticAuthorityOptions(authOptions) {\n    const rawCloudDiscoveryMetadata = authOptions.cloudDiscoveryMetadata;\n    let cloudDiscoveryMetadata = undefined;\n    if (rawCloudDiscoveryMetadata) {\n        try {\n            cloudDiscoveryMetadata = JSON.parse(rawCloudDiscoveryMetadata);\n        }\n        catch (e) {\n            throw (0,_error_ClientConfigurationError_mjs__WEBPACK_IMPORTED_MODULE_10__.createClientConfigurationError)(_error_ClientConfigurationErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_11__.invalidCloudDiscoveryMetadata);\n        }\n    }\n    return {\n        canonicalAuthority: authOptions.authority\n            ? formatAuthorityUri(authOptions.authority)\n            : undefined,\n        knownAuthorities: authOptions.knownAuthorities,\n        cloudDiscoveryMetadata: cloudDiscoveryMetadata,\n    };\n}\n\n\n//# sourceMappingURL=Authority.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/msal-common/dist/authority/Authority.mjs\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/msal-common/dist/authority/AuthorityFactory.mjs":
/*!*****************************************************************************!*\
  !*** ./node_modules/@azure/msal-common/dist/authority/AuthorityFactory.mjs ***!
  \*****************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createDiscoveredInstance: () => (/* binding */ createDiscoveredInstance)\n/* harmony export */ });\n/* harmony import */ var _Authority_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Authority.mjs */ \"(rsc)/./node_modules/@azure/msal-common/dist/authority/Authority.mjs\");\n/* harmony import */ var _error_ClientAuthError_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../error/ClientAuthError.mjs */ \"(rsc)/./node_modules/@azure/msal-common/dist/error/ClientAuthError.mjs\");\n/* harmony import */ var _telemetry_performance_PerformanceEvent_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../telemetry/performance/PerformanceEvent.mjs */ \"(rsc)/./node_modules/@azure/msal-common/dist/telemetry/performance/PerformanceEvent.mjs\");\n/* harmony import */ var _utils_FunctionWrappers_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils/FunctionWrappers.mjs */ \"(rsc)/./node_modules/@azure/msal-common/dist/utils/FunctionWrappers.mjs\");\n/* harmony import */ var _error_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../error/ClientAuthErrorCodes.mjs */ \"(rsc)/./node_modules/@azure/msal-common/dist/error/ClientAuthErrorCodes.mjs\");\n/*! @azure/msal-common v14.14.0 2024-07-23 */\n\n\n\n\n\n\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n/**\n * Create an authority object of the correct type based on the url\n * Performs basic authority validation - checks to see if the authority is of a valid type (i.e. aad, b2c, adfs)\n *\n * Also performs endpoint discovery.\n *\n * @param authorityUri\n * @param networkClient\n * @param protocolMode\n * @internal\n */\nasync function createDiscoveredInstance(authorityUri, networkClient, cacheManager, authorityOptions, logger, correlationId, performanceClient) {\n    performanceClient?.addQueueMeasurement(_telemetry_performance_PerformanceEvent_mjs__WEBPACK_IMPORTED_MODULE_0__.PerformanceEvents.AuthorityFactoryCreateDiscoveredInstance, correlationId);\n    const authorityUriFinal = _Authority_mjs__WEBPACK_IMPORTED_MODULE_1__.Authority.transformCIAMAuthority((0,_Authority_mjs__WEBPACK_IMPORTED_MODULE_1__.formatAuthorityUri)(authorityUri));\n    // Initialize authority and perform discovery endpoint check.\n    const acquireTokenAuthority = new _Authority_mjs__WEBPACK_IMPORTED_MODULE_1__.Authority(authorityUriFinal, networkClient, cacheManager, authorityOptions, logger, correlationId, performanceClient);\n    try {\n        await (0,_utils_FunctionWrappers_mjs__WEBPACK_IMPORTED_MODULE_2__.invokeAsync)(acquireTokenAuthority.resolveEndpointsAsync.bind(acquireTokenAuthority), _telemetry_performance_PerformanceEvent_mjs__WEBPACK_IMPORTED_MODULE_0__.PerformanceEvents.AuthorityResolveEndpointsAsync, logger, performanceClient, correlationId)();\n        return acquireTokenAuthority;\n    }\n    catch (e) {\n        throw (0,_error_ClientAuthError_mjs__WEBPACK_IMPORTED_MODULE_3__.createClientAuthError)(_error_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_4__.endpointResolutionError);\n    }\n}\n\n\n//# sourceMappingURL=AuthorityFactory.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtY29tbW9uL2Rpc3QvYXV0aG9yaXR5L0F1dGhvcml0eUZhY3RvcnkubWpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUFBO0FBQ2E7QUFDbUQ7QUFDSztBQUNhO0FBQ3RCO0FBQ2dCOztBQUU1RTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDJDQUEyQywwRkFBaUI7QUFDNUQsOEJBQThCLHFEQUFTLHdCQUF3QixrRUFBa0I7QUFDakY7QUFDQSxzQ0FBc0MscURBQVM7QUFDL0M7QUFDQSxjQUFjLHdFQUFXLDBFQUEwRSwwRkFBaUI7QUFDcEg7QUFDQTtBQUNBO0FBQ0EsY0FBYyxpRkFBcUIsQ0FBQyxvRkFBdUI7QUFDM0Q7QUFDQTs7QUFFb0M7QUFDcEMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9kYW5pZWwzLXZwMi8uL25vZGVfbW9kdWxlcy9AYXp1cmUvbXNhbC1jb21tb24vZGlzdC9hdXRob3JpdHkvQXV0aG9yaXR5RmFjdG9yeS5tanM/NGI1NiJdLCJzb3VyY2VzQ29udGVudCI6WyIvKiEgQGF6dXJlL21zYWwtY29tbW9uIHYxNC4xNC4wIDIwMjQtMDctMjMgKi9cbid1c2Ugc3RyaWN0JztcbmltcG9ydCB7IEF1dGhvcml0eSwgZm9ybWF0QXV0aG9yaXR5VXJpIH0gZnJvbSAnLi9BdXRob3JpdHkubWpzJztcbmltcG9ydCB7IGNyZWF0ZUNsaWVudEF1dGhFcnJvciB9IGZyb20gJy4uL2Vycm9yL0NsaWVudEF1dGhFcnJvci5tanMnO1xuaW1wb3J0IHsgUGVyZm9ybWFuY2VFdmVudHMgfSBmcm9tICcuLi90ZWxlbWV0cnkvcGVyZm9ybWFuY2UvUGVyZm9ybWFuY2VFdmVudC5tanMnO1xuaW1wb3J0IHsgaW52b2tlQXN5bmMgfSBmcm9tICcuLi91dGlscy9GdW5jdGlvbldyYXBwZXJzLm1qcyc7XG5pbXBvcnQgeyBlbmRwb2ludFJlc29sdXRpb25FcnJvciB9IGZyb20gJy4uL2Vycm9yL0NsaWVudEF1dGhFcnJvckNvZGVzLm1qcyc7XG5cbi8qXG4gKiBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi4gQWxsIHJpZ2h0cyByZXNlcnZlZC5cbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgTGljZW5zZS5cbiAqL1xuLyoqXG4gKiBDcmVhdGUgYW4gYXV0aG9yaXR5IG9iamVjdCBvZiB0aGUgY29ycmVjdCB0eXBlIGJhc2VkIG9uIHRoZSB1cmxcbiAqIFBlcmZvcm1zIGJhc2ljIGF1dGhvcml0eSB2YWxpZGF0aW9uIC0gY2hlY2tzIHRvIHNlZSBpZiB0aGUgYXV0aG9yaXR5IGlzIG9mIGEgdmFsaWQgdHlwZSAoaS5lLiBhYWQsIGIyYywgYWRmcylcbiAqXG4gKiBBbHNvIHBlcmZvcm1zIGVuZHBvaW50IGRpc2NvdmVyeS5cbiAqXG4gKiBAcGFyYW0gYXV0aG9yaXR5VXJpXG4gKiBAcGFyYW0gbmV0d29ya0NsaWVudFxuICogQHBhcmFtIHByb3RvY29sTW9kZVxuICogQGludGVybmFsXG4gKi9cbmFzeW5jIGZ1bmN0aW9uIGNyZWF0ZURpc2NvdmVyZWRJbnN0YW5jZShhdXRob3JpdHlVcmksIG5ldHdvcmtDbGllbnQsIGNhY2hlTWFuYWdlciwgYXV0aG9yaXR5T3B0aW9ucywgbG9nZ2VyLCBjb3JyZWxhdGlvbklkLCBwZXJmb3JtYW5jZUNsaWVudCkge1xuICAgIHBlcmZvcm1hbmNlQ2xpZW50Py5hZGRRdWV1ZU1lYXN1cmVtZW50KFBlcmZvcm1hbmNlRXZlbnRzLkF1dGhvcml0eUZhY3RvcnlDcmVhdGVEaXNjb3ZlcmVkSW5zdGFuY2UsIGNvcnJlbGF0aW9uSWQpO1xuICAgIGNvbnN0IGF1dGhvcml0eVVyaUZpbmFsID0gQXV0aG9yaXR5LnRyYW5zZm9ybUNJQU1BdXRob3JpdHkoZm9ybWF0QXV0aG9yaXR5VXJpKGF1dGhvcml0eVVyaSkpO1xuICAgIC8vIEluaXRpYWxpemUgYXV0aG9yaXR5IGFuZCBwZXJmb3JtIGRpc2NvdmVyeSBlbmRwb2ludCBjaGVjay5cbiAgICBjb25zdCBhY3F1aXJlVG9rZW5BdXRob3JpdHkgPSBuZXcgQXV0aG9yaXR5KGF1dGhvcml0eVVyaUZpbmFsLCBuZXR3b3JrQ2xpZW50LCBjYWNoZU1hbmFnZXIsIGF1dGhvcml0eU9wdGlvbnMsIGxvZ2dlciwgY29ycmVsYXRpb25JZCwgcGVyZm9ybWFuY2VDbGllbnQpO1xuICAgIHRyeSB7XG4gICAgICAgIGF3YWl0IGludm9rZUFzeW5jKGFjcXVpcmVUb2tlbkF1dGhvcml0eS5yZXNvbHZlRW5kcG9pbnRzQXN5bmMuYmluZChhY3F1aXJlVG9rZW5BdXRob3JpdHkpLCBQZXJmb3JtYW5jZUV2ZW50cy5BdXRob3JpdHlSZXNvbHZlRW5kcG9pbnRzQXN5bmMsIGxvZ2dlciwgcGVyZm9ybWFuY2VDbGllbnQsIGNvcnJlbGF0aW9uSWQpKCk7XG4gICAgICAgIHJldHVybiBhY3F1aXJlVG9rZW5BdXRob3JpdHk7XG4gICAgfVxuICAgIGNhdGNoIChlKSB7XG4gICAgICAgIHRocm93IGNyZWF0ZUNsaWVudEF1dGhFcnJvcihlbmRwb2ludFJlc29sdXRpb25FcnJvcik7XG4gICAgfVxufVxuXG5leHBvcnQgeyBjcmVhdGVEaXNjb3ZlcmVkSW5zdGFuY2UgfTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPUF1dGhvcml0eUZhY3RvcnkubWpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/msal-common/dist/authority/AuthorityFactory.mjs\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/msal-common/dist/authority/AuthorityMetadata.mjs":
/*!******************************************************************************!*\
  !*** ./node_modules/@azure/msal-common/dist/authority/AuthorityMetadata.mjs ***!
  \******************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   EndpointMetadata: () => (/* binding */ EndpointMetadata),\n/* harmony export */   InstanceDiscoveryMetadata: () => (/* binding */ InstanceDiscoveryMetadata),\n/* harmony export */   InstanceDiscoveryMetadataAliases: () => (/* binding */ InstanceDiscoveryMetadataAliases),\n/* harmony export */   getAliasesFromMetadata: () => (/* binding */ getAliasesFromMetadata),\n/* harmony export */   getAliasesFromStaticSources: () => (/* binding */ getAliasesFromStaticSources),\n/* harmony export */   getCloudDiscoveryMetadataFromHardcodedValues: () => (/* binding */ getCloudDiscoveryMetadataFromHardcodedValues),\n/* harmony export */   getCloudDiscoveryMetadataFromNetworkResponse: () => (/* binding */ getCloudDiscoveryMetadataFromNetworkResponse),\n/* harmony export */   rawMetdataJSON: () => (/* binding */ rawMetdataJSON)\n/* harmony export */ });\n/* harmony import */ var _url_UrlString_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../url/UrlString.mjs */ \"(rsc)/./node_modules/@azure/msal-common/dist/url/UrlString.mjs\");\n/* harmony import */ var _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/Constants.mjs */ \"(rsc)/./node_modules/@azure/msal-common/dist/utils/Constants.mjs\");\n/*! @azure/msal-common v14.14.0 2024-07-23 */\n\n\n\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\nconst rawMetdataJSON = {\n    endpointMetadata: {\n        \"login.microsoftonline.com\": {\n            token_endpoint: \"https://login.microsoftonline.com/{tenantid}/oauth2/v2.0/token\",\n            jwks_uri: \"https://login.microsoftonline.com/{tenantid}/discovery/v2.0/keys\",\n            issuer: \"https://login.microsoftonline.com/{tenantid}/v2.0\",\n            authorization_endpoint: \"https://login.microsoftonline.com/{tenantid}/oauth2/v2.0/authorize\",\n            end_session_endpoint: \"https://login.microsoftonline.com/{tenantid}/oauth2/v2.0/logout\",\n        },\n        \"login.chinacloudapi.cn\": {\n            token_endpoint: \"https://login.chinacloudapi.cn/{tenantid}/oauth2/v2.0/token\",\n            jwks_uri: \"https://login.chinacloudapi.cn/{tenantid}/discovery/v2.0/keys\",\n            issuer: \"https://login.partner.microsoftonline.cn/{tenantid}/v2.0\",\n            authorization_endpoint: \"https://login.chinacloudapi.cn/{tenantid}/oauth2/v2.0/authorize\",\n            end_session_endpoint: \"https://login.chinacloudapi.cn/{tenantid}/oauth2/v2.0/logout\",\n        },\n        \"login.microsoftonline.us\": {\n            token_endpoint: \"https://login.microsoftonline.us/{tenantid}/oauth2/v2.0/token\",\n            jwks_uri: \"https://login.microsoftonline.us/{tenantid}/discovery/v2.0/keys\",\n            issuer: \"https://login.microsoftonline.us/{tenantid}/v2.0\",\n            authorization_endpoint: \"https://login.microsoftonline.us/{tenantid}/oauth2/v2.0/authorize\",\n            end_session_endpoint: \"https://login.microsoftonline.us/{tenantid}/oauth2/v2.0/logout\",\n        },\n    },\n    instanceDiscoveryMetadata: {\n        tenant_discovery_endpoint: \"https://{canonicalAuthority}/v2.0/.well-known/openid-configuration\",\n        metadata: [\n            {\n                preferred_network: \"login.microsoftonline.com\",\n                preferred_cache: \"login.windows.net\",\n                aliases: [\n                    \"login.microsoftonline.com\",\n                    \"login.windows.net\",\n                    \"login.microsoft.com\",\n                    \"sts.windows.net\",\n                ],\n            },\n            {\n                preferred_network: \"login.partner.microsoftonline.cn\",\n                preferred_cache: \"login.partner.microsoftonline.cn\",\n                aliases: [\n                    \"login.partner.microsoftonline.cn\",\n                    \"login.chinacloudapi.cn\",\n                ],\n            },\n            {\n                preferred_network: \"login.microsoftonline.de\",\n                preferred_cache: \"login.microsoftonline.de\",\n                aliases: [\"login.microsoftonline.de\"],\n            },\n            {\n                preferred_network: \"login.microsoftonline.us\",\n                preferred_cache: \"login.microsoftonline.us\",\n                aliases: [\n                    \"login.microsoftonline.us\",\n                    \"login.usgovcloudapi.net\",\n                ],\n            },\n            {\n                preferred_network: \"login-us.microsoftonline.com\",\n                preferred_cache: \"login-us.microsoftonline.com\",\n                aliases: [\"login-us.microsoftonline.com\"],\n            },\n        ],\n    },\n};\nconst EndpointMetadata = rawMetdataJSON.endpointMetadata;\nconst InstanceDiscoveryMetadata = rawMetdataJSON.instanceDiscoveryMetadata;\nconst InstanceDiscoveryMetadataAliases = new Set();\nInstanceDiscoveryMetadata.metadata.forEach((metadataEntry) => {\n    metadataEntry.aliases.forEach((alias) => {\n        InstanceDiscoveryMetadataAliases.add(alias);\n    });\n});\n/**\n * Attempts to get an aliases array from the static authority metadata sources based on the canonical authority host\n * @param staticAuthorityOptions\n * @param logger\n * @returns\n */\nfunction getAliasesFromStaticSources(staticAuthorityOptions, logger) {\n    let staticAliases;\n    const canonicalAuthority = staticAuthorityOptions.canonicalAuthority;\n    if (canonicalAuthority) {\n        const authorityHost = new _url_UrlString_mjs__WEBPACK_IMPORTED_MODULE_0__.UrlString(canonicalAuthority).getUrlComponents().HostNameAndPort;\n        staticAliases =\n            getAliasesFromMetadata(authorityHost, staticAuthorityOptions.cloudDiscoveryMetadata?.metadata, _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_1__.AuthorityMetadataSource.CONFIG, logger) ||\n                getAliasesFromMetadata(authorityHost, InstanceDiscoveryMetadata.metadata, _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_1__.AuthorityMetadataSource.HARDCODED_VALUES, logger) ||\n                staticAuthorityOptions.knownAuthorities;\n    }\n    return staticAliases || [];\n}\n/**\n * Returns aliases for from the raw cloud discovery metadata passed in\n * @param authorityHost\n * @param rawCloudDiscoveryMetadata\n * @returns\n */\nfunction getAliasesFromMetadata(authorityHost, cloudDiscoveryMetadata, source, logger) {\n    logger?.trace(`getAliasesFromMetadata called with source: ${source}`);\n    if (authorityHost && cloudDiscoveryMetadata) {\n        const metadata = getCloudDiscoveryMetadataFromNetworkResponse(cloudDiscoveryMetadata, authorityHost);\n        if (metadata) {\n            logger?.trace(`getAliasesFromMetadata: found cloud discovery metadata in ${source}, returning aliases`);\n            return metadata.aliases;\n        }\n        else {\n            logger?.trace(`getAliasesFromMetadata: did not find cloud discovery metadata in ${source}`);\n        }\n    }\n    return null;\n}\n/**\n * Get cloud discovery metadata for common authorities\n */\nfunction getCloudDiscoveryMetadataFromHardcodedValues(authorityHost) {\n    const metadata = getCloudDiscoveryMetadataFromNetworkResponse(InstanceDiscoveryMetadata.metadata, authorityHost);\n    return metadata;\n}\n/**\n * Searches instance discovery network response for the entry that contains the host in the aliases list\n * @param response\n * @param authority\n */\nfunction getCloudDiscoveryMetadataFromNetworkResponse(response, authorityHost) {\n    for (let i = 0; i < response.length; i++) {\n        const metadata = response[i];\n        if (metadata.aliases.includes(authorityHost)) {\n            return metadata;\n        }\n    }\n    return null;\n}\n\n\n//# sourceMappingURL=AuthorityMetadata.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/msal-common/dist/authority/AuthorityMetadata.mjs\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/msal-common/dist/authority/AuthorityOptions.mjs":
/*!*****************************************************************************!*\
  !*** ./node_modules/@azure/msal-common/dist/authority/AuthorityOptions.mjs ***!
  \*****************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AzureCloudInstance: () => (/* binding */ AzureCloudInstance)\n/* harmony export */ });\n/*! @azure/msal-common v14.14.0 2024-07-23 */\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\nconst AzureCloudInstance = {\n    // AzureCloudInstance is not specified.\n    None: \"none\",\n    // Microsoft Azure public cloud\n    AzurePublic: \"https://login.microsoftonline.com\",\n    // Microsoft PPE\n    AzurePpe: \"https://login.windows-ppe.net\",\n    // Microsoft Chinese national/regional cloud\n    AzureChina: \"https://login.chinacloudapi.cn\",\n    // Microsoft German national/regional cloud (\"Black Forest\")\n    AzureGermany: \"https://login.microsoftonline.de\",\n    // US Government cloud\n    AzureUsGovernment: \"https://login.microsoftonline.us\",\n};\n\n\n//# sourceMappingURL=AuthorityOptions.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtY29tbW9uL2Rpc3QvYXV0aG9yaXR5L0F1dGhvcml0eU9wdGlvbnMubWpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQTtBQUNhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUU4QjtBQUM5QiIsInNvdXJjZXMiOlsid2VicGFjazovL2RhbmllbDMtdnAyLy4vbm9kZV9tb2R1bGVzL0BhenVyZS9tc2FsLWNvbW1vbi9kaXN0L2F1dGhvcml0eS9BdXRob3JpdHlPcHRpb25zLm1qcz8yZTk0Il0sInNvdXJjZXNDb250ZW50IjpbIi8qISBAYXp1cmUvbXNhbC1jb21tb24gdjE0LjE0LjAgMjAyNC0wNy0yMyAqL1xuJ3VzZSBzdHJpY3QnO1xuLypcbiAqIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLiBBbGwgcmlnaHRzIHJlc2VydmVkLlxuICogTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBMaWNlbnNlLlxuICovXG5jb25zdCBBenVyZUNsb3VkSW5zdGFuY2UgPSB7XG4gICAgLy8gQXp1cmVDbG91ZEluc3RhbmNlIGlzIG5vdCBzcGVjaWZpZWQuXG4gICAgTm9uZTogXCJub25lXCIsXG4gICAgLy8gTWljcm9zb2Z0IEF6dXJlIHB1YmxpYyBjbG91ZFxuICAgIEF6dXJlUHVibGljOiBcImh0dHBzOi8vbG9naW4ubWljcm9zb2Z0b25saW5lLmNvbVwiLFxuICAgIC8vIE1pY3Jvc29mdCBQUEVcbiAgICBBenVyZVBwZTogXCJodHRwczovL2xvZ2luLndpbmRvd3MtcHBlLm5ldFwiLFxuICAgIC8vIE1pY3Jvc29mdCBDaGluZXNlIG5hdGlvbmFsL3JlZ2lvbmFsIGNsb3VkXG4gICAgQXp1cmVDaGluYTogXCJodHRwczovL2xvZ2luLmNoaW5hY2xvdWRhcGkuY25cIixcbiAgICAvLyBNaWNyb3NvZnQgR2VybWFuIG5hdGlvbmFsL3JlZ2lvbmFsIGNsb3VkIChcIkJsYWNrIEZvcmVzdFwiKVxuICAgIEF6dXJlR2VybWFueTogXCJodHRwczovL2xvZ2luLm1pY3Jvc29mdG9ubGluZS5kZVwiLFxuICAgIC8vIFVTIEdvdmVybm1lbnQgY2xvdWRcbiAgICBBenVyZVVzR292ZXJubWVudDogXCJodHRwczovL2xvZ2luLm1pY3Jvc29mdG9ubGluZS51c1wiLFxufTtcblxuZXhwb3J0IHsgQXp1cmVDbG91ZEluc3RhbmNlIH07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1BdXRob3JpdHlPcHRpb25zLm1qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/msal-common/dist/authority/AuthorityOptions.mjs\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/msal-common/dist/authority/AuthorityType.mjs":
/*!**************************************************************************!*\
  !*** ./node_modules/@azure/msal-common/dist/authority/AuthorityType.mjs ***!
  \**************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AuthorityType: () => (/* binding */ AuthorityType)\n/* harmony export */ });\n/*! @azure/msal-common v14.14.0 2024-07-23 */\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n/**\n * Authority types supported by MSAL.\n */\nconst AuthorityType = {\n    Default: 0,\n    Adfs: 1,\n    Dsts: 2,\n    Ciam: 3,\n};\n\n\n//# sourceMappingURL=AuthorityType.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtY29tbW9uL2Rpc3QvYXV0aG9yaXR5L0F1dGhvcml0eVR5cGUubWpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQTtBQUNhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRXlCO0FBQ3pCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZGFuaWVsMy12cDIvLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtY29tbW9uL2Rpc3QvYXV0aG9yaXR5L0F1dGhvcml0eVR5cGUubWpzPzc4Y2EiXSwic291cmNlc0NvbnRlbnQiOlsiLyohIEBhenVyZS9tc2FsLWNvbW1vbiB2MTQuMTQuMCAyMDI0LTA3LTIzICovXG4ndXNlIHN0cmljdCc7XG4vKlxuICogQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uIEFsbCByaWdodHMgcmVzZXJ2ZWQuXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIExpY2Vuc2UuXG4gKi9cbi8qKlxuICogQXV0aG9yaXR5IHR5cGVzIHN1cHBvcnRlZCBieSBNU0FMLlxuICovXG5jb25zdCBBdXRob3JpdHlUeXBlID0ge1xuICAgIERlZmF1bHQ6IDAsXG4gICAgQWRmczogMSxcbiAgICBEc3RzOiAyLFxuICAgIENpYW06IDMsXG59O1xuXG5leHBvcnQgeyBBdXRob3JpdHlUeXBlIH07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1BdXRob3JpdHlUeXBlLm1qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/msal-common/dist/authority/AuthorityType.mjs\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/msal-common/dist/authority/CloudInstanceDiscoveryErrorResponse.mjs":
/*!************************************************************************************************!*\
  !*** ./node_modules/@azure/msal-common/dist/authority/CloudInstanceDiscoveryErrorResponse.mjs ***!
  \************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   isCloudInstanceDiscoveryErrorResponse: () => (/* binding */ isCloudInstanceDiscoveryErrorResponse)\n/* harmony export */ });\n/*! @azure/msal-common v14.14.0 2024-07-23 */\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\nfunction isCloudInstanceDiscoveryErrorResponse(response) {\n    return (response.hasOwnProperty(\"error\") &&\n        response.hasOwnProperty(\"error_description\"));\n}\n\n\n//# sourceMappingURL=CloudInstanceDiscoveryErrorResponse.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtY29tbW9uL2Rpc3QvYXV0aG9yaXR5L0Nsb3VkSW5zdGFuY2VEaXNjb3ZlcnlFcnJvclJlc3BvbnNlLm1qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUE7QUFDYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRWlEO0FBQ2pEIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZGFuaWVsMy12cDIvLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtY29tbW9uL2Rpc3QvYXV0aG9yaXR5L0Nsb3VkSW5zdGFuY2VEaXNjb3ZlcnlFcnJvclJlc3BvbnNlLm1qcz80NGQ1Il0sInNvdXJjZXNDb250ZW50IjpbIi8qISBAYXp1cmUvbXNhbC1jb21tb24gdjE0LjE0LjAgMjAyNC0wNy0yMyAqL1xuJ3VzZSBzdHJpY3QnO1xuLypcbiAqIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLiBBbGwgcmlnaHRzIHJlc2VydmVkLlxuICogTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBMaWNlbnNlLlxuICovXG5mdW5jdGlvbiBpc0Nsb3VkSW5zdGFuY2VEaXNjb3ZlcnlFcnJvclJlc3BvbnNlKHJlc3BvbnNlKSB7XG4gICAgcmV0dXJuIChyZXNwb25zZS5oYXNPd25Qcm9wZXJ0eShcImVycm9yXCIpICYmXG4gICAgICAgIHJlc3BvbnNlLmhhc093blByb3BlcnR5KFwiZXJyb3JfZGVzY3JpcHRpb25cIikpO1xufVxuXG5leHBvcnQgeyBpc0Nsb3VkSW5zdGFuY2VEaXNjb3ZlcnlFcnJvclJlc3BvbnNlIH07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1DbG91ZEluc3RhbmNlRGlzY292ZXJ5RXJyb3JSZXNwb25zZS5tanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/msal-common/dist/authority/CloudInstanceDiscoveryErrorResponse.mjs\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/msal-common/dist/authority/CloudInstanceDiscoveryResponse.mjs":
/*!*******************************************************************************************!*\
  !*** ./node_modules/@azure/msal-common/dist/authority/CloudInstanceDiscoveryResponse.mjs ***!
  \*******************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   isCloudInstanceDiscoveryResponse: () => (/* binding */ isCloudInstanceDiscoveryResponse)\n/* harmony export */ });\n/*! @azure/msal-common v14.14.0 2024-07-23 */\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\nfunction isCloudInstanceDiscoveryResponse(response) {\n    return (response.hasOwnProperty(\"tenant_discovery_endpoint\") &&\n        response.hasOwnProperty(\"metadata\"));\n}\n\n\n//# sourceMappingURL=CloudInstanceDiscoveryResponse.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtY29tbW9uL2Rpc3QvYXV0aG9yaXR5L0Nsb3VkSW5zdGFuY2VEaXNjb3ZlcnlSZXNwb25zZS5tanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBO0FBQ2E7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUU0QztBQUM1QyIsInNvdXJjZXMiOlsid2VicGFjazovL2RhbmllbDMtdnAyLy4vbm9kZV9tb2R1bGVzL0BhenVyZS9tc2FsLWNvbW1vbi9kaXN0L2F1dGhvcml0eS9DbG91ZEluc3RhbmNlRGlzY292ZXJ5UmVzcG9uc2UubWpzP2UxNGQiXSwic291cmNlc0NvbnRlbnQiOlsiLyohIEBhenVyZS9tc2FsLWNvbW1vbiB2MTQuMTQuMCAyMDI0LTA3LTIzICovXG4ndXNlIHN0cmljdCc7XG4vKlxuICogQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uIEFsbCByaWdodHMgcmVzZXJ2ZWQuXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIExpY2Vuc2UuXG4gKi9cbmZ1bmN0aW9uIGlzQ2xvdWRJbnN0YW5jZURpc2NvdmVyeVJlc3BvbnNlKHJlc3BvbnNlKSB7XG4gICAgcmV0dXJuIChyZXNwb25zZS5oYXNPd25Qcm9wZXJ0eShcInRlbmFudF9kaXNjb3ZlcnlfZW5kcG9pbnRcIikgJiZcbiAgICAgICAgcmVzcG9uc2UuaGFzT3duUHJvcGVydHkoXCJtZXRhZGF0YVwiKSk7XG59XG5cbmV4cG9ydCB7IGlzQ2xvdWRJbnN0YW5jZURpc2NvdmVyeVJlc3BvbnNlIH07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1DbG91ZEluc3RhbmNlRGlzY292ZXJ5UmVzcG9uc2UubWpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/msal-common/dist/authority/CloudInstanceDiscoveryResponse.mjs\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/msal-common/dist/authority/OpenIdConfigResponse.mjs":
/*!*********************************************************************************!*\
  !*** ./node_modules/@azure/msal-common/dist/authority/OpenIdConfigResponse.mjs ***!
  \*********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   isOpenIdConfigResponse: () => (/* binding */ isOpenIdConfigResponse)\n/* harmony export */ });\n/*! @azure/msal-common v14.14.0 2024-07-23 */\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\nfunction isOpenIdConfigResponse(response) {\n    return (response.hasOwnProperty(\"authorization_endpoint\") &&\n        response.hasOwnProperty(\"token_endpoint\") &&\n        response.hasOwnProperty(\"issuer\") &&\n        response.hasOwnProperty(\"jwks_uri\"));\n}\n\n\n//# sourceMappingURL=OpenIdConfigResponse.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtY29tbW9uL2Rpc3QvYXV0aG9yaXR5L09wZW5JZENvbmZpZ1Jlc3BvbnNlLm1qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUE7QUFDYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVrQztBQUNsQyIsInNvdXJjZXMiOlsid2VicGFjazovL2RhbmllbDMtdnAyLy4vbm9kZV9tb2R1bGVzL0BhenVyZS9tc2FsLWNvbW1vbi9kaXN0L2F1dGhvcml0eS9PcGVuSWRDb25maWdSZXNwb25zZS5tanM/YWNjYSJdLCJzb3VyY2VzQ29udGVudCI6WyIvKiEgQGF6dXJlL21zYWwtY29tbW9uIHYxNC4xNC4wIDIwMjQtMDctMjMgKi9cbid1c2Ugc3RyaWN0Jztcbi8qXG4gKiBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi4gQWxsIHJpZ2h0cyByZXNlcnZlZC5cbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgTGljZW5zZS5cbiAqL1xuZnVuY3Rpb24gaXNPcGVuSWRDb25maWdSZXNwb25zZShyZXNwb25zZSkge1xuICAgIHJldHVybiAocmVzcG9uc2UuaGFzT3duUHJvcGVydHkoXCJhdXRob3JpemF0aW9uX2VuZHBvaW50XCIpICYmXG4gICAgICAgIHJlc3BvbnNlLmhhc093blByb3BlcnR5KFwidG9rZW5fZW5kcG9pbnRcIikgJiZcbiAgICAgICAgcmVzcG9uc2UuaGFzT3duUHJvcGVydHkoXCJpc3N1ZXJcIikgJiZcbiAgICAgICAgcmVzcG9uc2UuaGFzT3duUHJvcGVydHkoXCJqd2tzX3VyaVwiKSk7XG59XG5cbmV4cG9ydCB7IGlzT3BlbklkQ29uZmlnUmVzcG9uc2UgfTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPU9wZW5JZENvbmZpZ1Jlc3BvbnNlLm1qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/msal-common/dist/authority/OpenIdConfigResponse.mjs\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/msal-common/dist/authority/ProtocolMode.mjs":
/*!*************************************************************************!*\
  !*** ./node_modules/@azure/msal-common/dist/authority/ProtocolMode.mjs ***!
  \*************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ProtocolMode: () => (/* binding */ ProtocolMode)\n/* harmony export */ });\n/*! @azure/msal-common v14.14.0 2024-07-23 */\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n/**\n * Protocol modes supported by MSAL.\n */\nconst ProtocolMode = {\n    AAD: \"AAD\",\n    OIDC: \"OIDC\",\n};\n\n\n//# sourceMappingURL=ProtocolMode.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtY29tbW9uL2Rpc3QvYXV0aG9yaXR5L1Byb3RvY29sTW9kZS5tanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBO0FBQ2E7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUV3QjtBQUN4QiIsInNvdXJjZXMiOlsid2VicGFjazovL2RhbmllbDMtdnAyLy4vbm9kZV9tb2R1bGVzL0BhenVyZS9tc2FsLWNvbW1vbi9kaXN0L2F1dGhvcml0eS9Qcm90b2NvbE1vZGUubWpzP2QzY2EiXSwic291cmNlc0NvbnRlbnQiOlsiLyohIEBhenVyZS9tc2FsLWNvbW1vbiB2MTQuMTQuMCAyMDI0LTA3LTIzICovXG4ndXNlIHN0cmljdCc7XG4vKlxuICogQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uIEFsbCByaWdodHMgcmVzZXJ2ZWQuXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIExpY2Vuc2UuXG4gKi9cbi8qKlxuICogUHJvdG9jb2wgbW9kZXMgc3VwcG9ydGVkIGJ5IE1TQUwuXG4gKi9cbmNvbnN0IFByb3RvY29sTW9kZSA9IHtcbiAgICBBQUQ6IFwiQUFEXCIsXG4gICAgT0lEQzogXCJPSURDXCIsXG59O1xuXG5leHBvcnQgeyBQcm90b2NvbE1vZGUgfTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPVByb3RvY29sTW9kZS5tanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/msal-common/dist/authority/ProtocolMode.mjs\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/msal-common/dist/authority/RegionDiscovery.mjs":
/*!****************************************************************************!*\
  !*** ./node_modules/@azure/msal-common/dist/authority/RegionDiscovery.mjs ***!
  \****************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   RegionDiscovery: () => (/* binding */ RegionDiscovery)\n/* harmony export */ });\n/* harmony import */ var _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils/Constants.mjs */ \"(rsc)/./node_modules/@azure/msal-common/dist/utils/Constants.mjs\");\n/* harmony import */ var _telemetry_performance_PerformanceEvent_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../telemetry/performance/PerformanceEvent.mjs */ \"(rsc)/./node_modules/@azure/msal-common/dist/telemetry/performance/PerformanceEvent.mjs\");\n/* harmony import */ var _utils_FunctionWrappers_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/FunctionWrappers.mjs */ \"(rsc)/./node_modules/@azure/msal-common/dist/utils/FunctionWrappers.mjs\");\n/*! @azure/msal-common v14.14.0 2024-07-23 */\n\n\n\n\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\nclass RegionDiscovery {\n    constructor(networkInterface, logger, performanceClient, correlationId) {\n        this.networkInterface = networkInterface;\n        this.logger = logger;\n        this.performanceClient = performanceClient;\n        this.correlationId = correlationId;\n    }\n    /**\n     * Detect the region from the application's environment.\n     *\n     * @returns Promise<string | null>\n     */\n    async detectRegion(environmentRegion, regionDiscoveryMetadata) {\n        this.performanceClient?.addQueueMeasurement(_telemetry_performance_PerformanceEvent_mjs__WEBPACK_IMPORTED_MODULE_0__.PerformanceEvents.RegionDiscoveryDetectRegion, this.correlationId);\n        // Initialize auto detected region with the region from the envrionment\n        let autodetectedRegionName = environmentRegion;\n        // Check if a region was detected from the environment, if not, attempt to get the region from IMDS\n        if (!autodetectedRegionName) {\n            const options = RegionDiscovery.IMDS_OPTIONS;\n            try {\n                const localIMDSVersionResponse = await (0,_utils_FunctionWrappers_mjs__WEBPACK_IMPORTED_MODULE_1__.invokeAsync)(this.getRegionFromIMDS.bind(this), _telemetry_performance_PerformanceEvent_mjs__WEBPACK_IMPORTED_MODULE_0__.PerformanceEvents.RegionDiscoveryGetRegionFromIMDS, this.logger, this.performanceClient, this.correlationId)(_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_2__.Constants.IMDS_VERSION, options);\n                if (localIMDSVersionResponse.status ===\n                    _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_2__.ResponseCodes.httpSuccess) {\n                    autodetectedRegionName = localIMDSVersionResponse.body;\n                    regionDiscoveryMetadata.region_source =\n                        _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_2__.RegionDiscoverySources.IMDS;\n                }\n                // If the response using the local IMDS version failed, try to fetch the current version of IMDS and retry.\n                if (localIMDSVersionResponse.status ===\n                    _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_2__.ResponseCodes.httpBadRequest) {\n                    const currentIMDSVersion = await (0,_utils_FunctionWrappers_mjs__WEBPACK_IMPORTED_MODULE_1__.invokeAsync)(this.getCurrentVersion.bind(this), _telemetry_performance_PerformanceEvent_mjs__WEBPACK_IMPORTED_MODULE_0__.PerformanceEvents.RegionDiscoveryGetCurrentVersion, this.logger, this.performanceClient, this.correlationId)(options);\n                    if (!currentIMDSVersion) {\n                        regionDiscoveryMetadata.region_source =\n                            _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_2__.RegionDiscoverySources.FAILED_AUTO_DETECTION;\n                        return null;\n                    }\n                    const currentIMDSVersionResponse = await (0,_utils_FunctionWrappers_mjs__WEBPACK_IMPORTED_MODULE_1__.invokeAsync)(this.getRegionFromIMDS.bind(this), _telemetry_performance_PerformanceEvent_mjs__WEBPACK_IMPORTED_MODULE_0__.PerformanceEvents.RegionDiscoveryGetRegionFromIMDS, this.logger, this.performanceClient, this.correlationId)(currentIMDSVersion, options);\n                    if (currentIMDSVersionResponse.status ===\n                        _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_2__.ResponseCodes.httpSuccess) {\n                        autodetectedRegionName =\n                            currentIMDSVersionResponse.body;\n                        regionDiscoveryMetadata.region_source =\n                            _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_2__.RegionDiscoverySources.IMDS;\n                    }\n                }\n            }\n            catch (e) {\n                regionDiscoveryMetadata.region_source =\n                    _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_2__.RegionDiscoverySources.FAILED_AUTO_DETECTION;\n                return null;\n            }\n        }\n        else {\n            regionDiscoveryMetadata.region_source =\n                _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_2__.RegionDiscoverySources.ENVIRONMENT_VARIABLE;\n        }\n        // If no region was auto detected from the environment or from the IMDS endpoint, mark the attempt as a FAILED_AUTO_DETECTION\n        if (!autodetectedRegionName) {\n            regionDiscoveryMetadata.region_source =\n                _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_2__.RegionDiscoverySources.FAILED_AUTO_DETECTION;\n        }\n        return autodetectedRegionName || null;\n    }\n    /**\n     * Make the call to the IMDS endpoint\n     *\n     * @param imdsEndpointUrl\n     * @returns Promise<NetworkResponse<string>>\n     */\n    async getRegionFromIMDS(version, options) {\n        this.performanceClient?.addQueueMeasurement(_telemetry_performance_PerformanceEvent_mjs__WEBPACK_IMPORTED_MODULE_0__.PerformanceEvents.RegionDiscoveryGetRegionFromIMDS, this.correlationId);\n        return this.networkInterface.sendGetRequestAsync(`${_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_2__.Constants.IMDS_ENDPOINT}?api-version=${version}&format=text`, options, _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_2__.Constants.IMDS_TIMEOUT);\n    }\n    /**\n     * Get the most recent version of the IMDS endpoint available\n     *\n     * @returns Promise<string | null>\n     */\n    async getCurrentVersion(options) {\n        this.performanceClient?.addQueueMeasurement(_telemetry_performance_PerformanceEvent_mjs__WEBPACK_IMPORTED_MODULE_0__.PerformanceEvents.RegionDiscoveryGetCurrentVersion, this.correlationId);\n        try {\n            const response = await this.networkInterface.sendGetRequestAsync(`${_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_2__.Constants.IMDS_ENDPOINT}?format=json`, options);\n            // When IMDS endpoint is called without the api version query param, bad request response comes back with latest version.\n            if (response.status === _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_2__.ResponseCodes.httpBadRequest &&\n                response.body &&\n                response.body[\"newest-versions\"] &&\n                response.body[\"newest-versions\"].length > 0) {\n                return response.body[\"newest-versions\"][0];\n            }\n            return null;\n        }\n        catch (e) {\n            return null;\n        }\n    }\n}\n// Options for the IMDS endpoint request\nRegionDiscovery.IMDS_OPTIONS = {\n    headers: {\n        Metadata: \"true\",\n    },\n};\n\n\n//# sourceMappingURL=RegionDiscovery.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtY29tbW9uL2Rpc3QvYXV0aG9yaXR5L1JlZ2lvbkRpc2NvdmVyeS5tanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBO0FBQ2E7QUFDNkU7QUFDUjtBQUN0Qjs7QUFFNUQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG9EQUFvRCwwRkFBaUI7QUFDckU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsdURBQXVELHdFQUFXLG9DQUFvQywwRkFBaUIsNEZBQTRGLDJEQUFTO0FBQzVOO0FBQ0Esb0JBQW9CLCtEQUFhO0FBQ2pDO0FBQ0E7QUFDQSx3QkFBd0Isd0VBQXNCO0FBQzlDO0FBQ0E7QUFDQTtBQUNBLG9CQUFvQiwrREFBYTtBQUNqQyxxREFBcUQsd0VBQVcsb0NBQW9DLDBGQUFpQjtBQUNySDtBQUNBO0FBQ0EsNEJBQTRCLHdFQUFzQjtBQUNsRDtBQUNBO0FBQ0EsNkRBQTZELHdFQUFXLG9DQUFvQywwRkFBaUI7QUFDN0g7QUFDQSx3QkFBd0IsK0RBQWE7QUFDckM7QUFDQTtBQUNBO0FBQ0EsNEJBQTRCLHdFQUFzQjtBQUNsRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esb0JBQW9CLHdFQUFzQjtBQUMxQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0JBQWdCLHdFQUFzQjtBQUN0QztBQUNBO0FBQ0E7QUFDQTtBQUNBLGdCQUFnQix3RUFBc0I7QUFDdEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxvREFBb0QsMEZBQWlCO0FBQ3JFLDREQUE0RCwyREFBUyxlQUFlLGVBQWUsUUFBUSx3QkFBd0IsMkRBQVM7QUFDNUk7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxvREFBb0QsMEZBQWlCO0FBQ3JFO0FBQ0EsZ0ZBQWdGLDJEQUFTLGVBQWU7QUFDeEc7QUFDQSxvQ0FBb0MsK0RBQWE7QUFDakQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7O0FBRTJCO0FBQzNCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZGFuaWVsMy12cDIvLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtY29tbW9uL2Rpc3QvYXV0aG9yaXR5L1JlZ2lvbkRpc2NvdmVyeS5tanM/ZDUzZCJdLCJzb3VyY2VzQ29udGVudCI6WyIvKiEgQGF6dXJlL21zYWwtY29tbW9uIHYxNC4xNC4wIDIwMjQtMDctMjMgKi9cbid1c2Ugc3RyaWN0JztcbmltcG9ydCB7IENvbnN0YW50cywgUmVzcG9uc2VDb2RlcywgUmVnaW9uRGlzY292ZXJ5U291cmNlcyB9IGZyb20gJy4uL3V0aWxzL0NvbnN0YW50cy5tanMnO1xuaW1wb3J0IHsgUGVyZm9ybWFuY2VFdmVudHMgfSBmcm9tICcuLi90ZWxlbWV0cnkvcGVyZm9ybWFuY2UvUGVyZm9ybWFuY2VFdmVudC5tanMnO1xuaW1wb3J0IHsgaW52b2tlQXN5bmMgfSBmcm9tICcuLi91dGlscy9GdW5jdGlvbldyYXBwZXJzLm1qcyc7XG5cbi8qXG4gKiBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi4gQWxsIHJpZ2h0cyByZXNlcnZlZC5cbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgTGljZW5zZS5cbiAqL1xuY2xhc3MgUmVnaW9uRGlzY292ZXJ5IHtcbiAgICBjb25zdHJ1Y3RvcihuZXR3b3JrSW50ZXJmYWNlLCBsb2dnZXIsIHBlcmZvcm1hbmNlQ2xpZW50LCBjb3JyZWxhdGlvbklkKSB7XG4gICAgICAgIHRoaXMubmV0d29ya0ludGVyZmFjZSA9IG5ldHdvcmtJbnRlcmZhY2U7XG4gICAgICAgIHRoaXMubG9nZ2VyID0gbG9nZ2VyO1xuICAgICAgICB0aGlzLnBlcmZvcm1hbmNlQ2xpZW50ID0gcGVyZm9ybWFuY2VDbGllbnQ7XG4gICAgICAgIHRoaXMuY29ycmVsYXRpb25JZCA9IGNvcnJlbGF0aW9uSWQ7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIERldGVjdCB0aGUgcmVnaW9uIGZyb20gdGhlIGFwcGxpY2F0aW9uJ3MgZW52aXJvbm1lbnQuXG4gICAgICpcbiAgICAgKiBAcmV0dXJucyBQcm9taXNlPHN0cmluZyB8IG51bGw+XG4gICAgICovXG4gICAgYXN5bmMgZGV0ZWN0UmVnaW9uKGVudmlyb25tZW50UmVnaW9uLCByZWdpb25EaXNjb3ZlcnlNZXRhZGF0YSkge1xuICAgICAgICB0aGlzLnBlcmZvcm1hbmNlQ2xpZW50Py5hZGRRdWV1ZU1lYXN1cmVtZW50KFBlcmZvcm1hbmNlRXZlbnRzLlJlZ2lvbkRpc2NvdmVyeURldGVjdFJlZ2lvbiwgdGhpcy5jb3JyZWxhdGlvbklkKTtcbiAgICAgICAgLy8gSW5pdGlhbGl6ZSBhdXRvIGRldGVjdGVkIHJlZ2lvbiB3aXRoIHRoZSByZWdpb24gZnJvbSB0aGUgZW52cmlvbm1lbnRcbiAgICAgICAgbGV0IGF1dG9kZXRlY3RlZFJlZ2lvbk5hbWUgPSBlbnZpcm9ubWVudFJlZ2lvbjtcbiAgICAgICAgLy8gQ2hlY2sgaWYgYSByZWdpb24gd2FzIGRldGVjdGVkIGZyb20gdGhlIGVudmlyb25tZW50LCBpZiBub3QsIGF0dGVtcHQgdG8gZ2V0IHRoZSByZWdpb24gZnJvbSBJTURTXG4gICAgICAgIGlmICghYXV0b2RldGVjdGVkUmVnaW9uTmFtZSkge1xuICAgICAgICAgICAgY29uc3Qgb3B0aW9ucyA9IFJlZ2lvbkRpc2NvdmVyeS5JTURTX09QVElPTlM7XG4gICAgICAgICAgICB0cnkge1xuICAgICAgICAgICAgICAgIGNvbnN0IGxvY2FsSU1EU1ZlcnNpb25SZXNwb25zZSA9IGF3YWl0IGludm9rZUFzeW5jKHRoaXMuZ2V0UmVnaW9uRnJvbUlNRFMuYmluZCh0aGlzKSwgUGVyZm9ybWFuY2VFdmVudHMuUmVnaW9uRGlzY292ZXJ5R2V0UmVnaW9uRnJvbUlNRFMsIHRoaXMubG9nZ2VyLCB0aGlzLnBlcmZvcm1hbmNlQ2xpZW50LCB0aGlzLmNvcnJlbGF0aW9uSWQpKENvbnN0YW50cy5JTURTX1ZFUlNJT04sIG9wdGlvbnMpO1xuICAgICAgICAgICAgICAgIGlmIChsb2NhbElNRFNWZXJzaW9uUmVzcG9uc2Uuc3RhdHVzID09PVxuICAgICAgICAgICAgICAgICAgICBSZXNwb25zZUNvZGVzLmh0dHBTdWNjZXNzKSB7XG4gICAgICAgICAgICAgICAgICAgIGF1dG9kZXRlY3RlZFJlZ2lvbk5hbWUgPSBsb2NhbElNRFNWZXJzaW9uUmVzcG9uc2UuYm9keTtcbiAgICAgICAgICAgICAgICAgICAgcmVnaW9uRGlzY292ZXJ5TWV0YWRhdGEucmVnaW9uX3NvdXJjZSA9XG4gICAgICAgICAgICAgICAgICAgICAgICBSZWdpb25EaXNjb3ZlcnlTb3VyY2VzLklNRFM7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIC8vIElmIHRoZSByZXNwb25zZSB1c2luZyB0aGUgbG9jYWwgSU1EUyB2ZXJzaW9uIGZhaWxlZCwgdHJ5IHRvIGZldGNoIHRoZSBjdXJyZW50IHZlcnNpb24gb2YgSU1EUyBhbmQgcmV0cnkuXG4gICAgICAgICAgICAgICAgaWYgKGxvY2FsSU1EU1ZlcnNpb25SZXNwb25zZS5zdGF0dXMgPT09XG4gICAgICAgICAgICAgICAgICAgIFJlc3BvbnNlQ29kZXMuaHR0cEJhZFJlcXVlc3QpIHtcbiAgICAgICAgICAgICAgICAgICAgY29uc3QgY3VycmVudElNRFNWZXJzaW9uID0gYXdhaXQgaW52b2tlQXN5bmModGhpcy5nZXRDdXJyZW50VmVyc2lvbi5iaW5kKHRoaXMpLCBQZXJmb3JtYW5jZUV2ZW50cy5SZWdpb25EaXNjb3ZlcnlHZXRDdXJyZW50VmVyc2lvbiwgdGhpcy5sb2dnZXIsIHRoaXMucGVyZm9ybWFuY2VDbGllbnQsIHRoaXMuY29ycmVsYXRpb25JZCkob3B0aW9ucyk7XG4gICAgICAgICAgICAgICAgICAgIGlmICghY3VycmVudElNRFNWZXJzaW9uKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICByZWdpb25EaXNjb3ZlcnlNZXRhZGF0YS5yZWdpb25fc291cmNlID1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBSZWdpb25EaXNjb3ZlcnlTb3VyY2VzLkZBSUxFRF9BVVRPX0RFVEVDVElPTjtcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBudWxsO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIGNvbnN0IGN1cnJlbnRJTURTVmVyc2lvblJlc3BvbnNlID0gYXdhaXQgaW52b2tlQXN5bmModGhpcy5nZXRSZWdpb25Gcm9tSU1EUy5iaW5kKHRoaXMpLCBQZXJmb3JtYW5jZUV2ZW50cy5SZWdpb25EaXNjb3ZlcnlHZXRSZWdpb25Gcm9tSU1EUywgdGhpcy5sb2dnZXIsIHRoaXMucGVyZm9ybWFuY2VDbGllbnQsIHRoaXMuY29ycmVsYXRpb25JZCkoY3VycmVudElNRFNWZXJzaW9uLCBvcHRpb25zKTtcbiAgICAgICAgICAgICAgICAgICAgaWYgKGN1cnJlbnRJTURTVmVyc2lvblJlc3BvbnNlLnN0YXR1cyA9PT1cbiAgICAgICAgICAgICAgICAgICAgICAgIFJlc3BvbnNlQ29kZXMuaHR0cFN1Y2Nlc3MpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGF1dG9kZXRlY3RlZFJlZ2lvbk5hbWUgPVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGN1cnJlbnRJTURTVmVyc2lvblJlc3BvbnNlLmJvZHk7XG4gICAgICAgICAgICAgICAgICAgICAgICByZWdpb25EaXNjb3ZlcnlNZXRhZGF0YS5yZWdpb25fc291cmNlID1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBSZWdpb25EaXNjb3ZlcnlTb3VyY2VzLklNRFM7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBjYXRjaCAoZSkge1xuICAgICAgICAgICAgICAgIHJlZ2lvbkRpc2NvdmVyeU1ldGFkYXRhLnJlZ2lvbl9zb3VyY2UgPVxuICAgICAgICAgICAgICAgICAgICBSZWdpb25EaXNjb3ZlcnlTb3VyY2VzLkZBSUxFRF9BVVRPX0RFVEVDVElPTjtcbiAgICAgICAgICAgICAgICByZXR1cm4gbnVsbDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIHJlZ2lvbkRpc2NvdmVyeU1ldGFkYXRhLnJlZ2lvbl9zb3VyY2UgPVxuICAgICAgICAgICAgICAgIFJlZ2lvbkRpc2NvdmVyeVNvdXJjZXMuRU5WSVJPTk1FTlRfVkFSSUFCTEU7XG4gICAgICAgIH1cbiAgICAgICAgLy8gSWYgbm8gcmVnaW9uIHdhcyBhdXRvIGRldGVjdGVkIGZyb20gdGhlIGVudmlyb25tZW50IG9yIGZyb20gdGhlIElNRFMgZW5kcG9pbnQsIG1hcmsgdGhlIGF0dGVtcHQgYXMgYSBGQUlMRURfQVVUT19ERVRFQ1RJT05cbiAgICAgICAgaWYgKCFhdXRvZGV0ZWN0ZWRSZWdpb25OYW1lKSB7XG4gICAgICAgICAgICByZWdpb25EaXNjb3ZlcnlNZXRhZGF0YS5yZWdpb25fc291cmNlID1cbiAgICAgICAgICAgICAgICBSZWdpb25EaXNjb3ZlcnlTb3VyY2VzLkZBSUxFRF9BVVRPX0RFVEVDVElPTjtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gYXV0b2RldGVjdGVkUmVnaW9uTmFtZSB8fCBudWxsO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBNYWtlIHRoZSBjYWxsIHRvIHRoZSBJTURTIGVuZHBvaW50XG4gICAgICpcbiAgICAgKiBAcGFyYW0gaW1kc0VuZHBvaW50VXJsXG4gICAgICogQHJldHVybnMgUHJvbWlzZTxOZXR3b3JrUmVzcG9uc2U8c3RyaW5nPj5cbiAgICAgKi9cbiAgICBhc3luYyBnZXRSZWdpb25Gcm9tSU1EUyh2ZXJzaW9uLCBvcHRpb25zKSB7XG4gICAgICAgIHRoaXMucGVyZm9ybWFuY2VDbGllbnQ/LmFkZFF1ZXVlTWVhc3VyZW1lbnQoUGVyZm9ybWFuY2VFdmVudHMuUmVnaW9uRGlzY292ZXJ5R2V0UmVnaW9uRnJvbUlNRFMsIHRoaXMuY29ycmVsYXRpb25JZCk7XG4gICAgICAgIHJldHVybiB0aGlzLm5ldHdvcmtJbnRlcmZhY2Uuc2VuZEdldFJlcXVlc3RBc3luYyhgJHtDb25zdGFudHMuSU1EU19FTkRQT0lOVH0/YXBpLXZlcnNpb249JHt2ZXJzaW9ufSZmb3JtYXQ9dGV4dGAsIG9wdGlvbnMsIENvbnN0YW50cy5JTURTX1RJTUVPVVQpO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBHZXQgdGhlIG1vc3QgcmVjZW50IHZlcnNpb24gb2YgdGhlIElNRFMgZW5kcG9pbnQgYXZhaWxhYmxlXG4gICAgICpcbiAgICAgKiBAcmV0dXJucyBQcm9taXNlPHN0cmluZyB8IG51bGw+XG4gICAgICovXG4gICAgYXN5bmMgZ2V0Q3VycmVudFZlcnNpb24ob3B0aW9ucykge1xuICAgICAgICB0aGlzLnBlcmZvcm1hbmNlQ2xpZW50Py5hZGRRdWV1ZU1lYXN1cmVtZW50KFBlcmZvcm1hbmNlRXZlbnRzLlJlZ2lvbkRpc2NvdmVyeUdldEN1cnJlbnRWZXJzaW9uLCB0aGlzLmNvcnJlbGF0aW9uSWQpO1xuICAgICAgICB0cnkge1xuICAgICAgICAgICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCB0aGlzLm5ldHdvcmtJbnRlcmZhY2Uuc2VuZEdldFJlcXVlc3RBc3luYyhgJHtDb25zdGFudHMuSU1EU19FTkRQT0lOVH0/Zm9ybWF0PWpzb25gLCBvcHRpb25zKTtcbiAgICAgICAgICAgIC8vIFdoZW4gSU1EUyBlbmRwb2ludCBpcyBjYWxsZWQgd2l0aG91dCB0aGUgYXBpIHZlcnNpb24gcXVlcnkgcGFyYW0sIGJhZCByZXF1ZXN0IHJlc3BvbnNlIGNvbWVzIGJhY2sgd2l0aCBsYXRlc3QgdmVyc2lvbi5cbiAgICAgICAgICAgIGlmIChyZXNwb25zZS5zdGF0dXMgPT09IFJlc3BvbnNlQ29kZXMuaHR0cEJhZFJlcXVlc3QgJiZcbiAgICAgICAgICAgICAgICByZXNwb25zZS5ib2R5ICYmXG4gICAgICAgICAgICAgICAgcmVzcG9uc2UuYm9keVtcIm5ld2VzdC12ZXJzaW9uc1wiXSAmJlxuICAgICAgICAgICAgICAgIHJlc3BvbnNlLmJvZHlbXCJuZXdlc3QtdmVyc2lvbnNcIl0ubGVuZ3RoID4gMCkge1xuICAgICAgICAgICAgICAgIHJldHVybiByZXNwb25zZS5ib2R5W1wibmV3ZXN0LXZlcnNpb25zXCJdWzBdO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcmV0dXJuIG51bGw7XG4gICAgICAgIH1cbiAgICAgICAgY2F0Y2ggKGUpIHtcbiAgICAgICAgICAgIHJldHVybiBudWxsO1xuICAgICAgICB9XG4gICAgfVxufVxuLy8gT3B0aW9ucyBmb3IgdGhlIElNRFMgZW5kcG9pbnQgcmVxdWVzdFxuUmVnaW9uRGlzY292ZXJ5LklNRFNfT1BUSU9OUyA9IHtcbiAgICBoZWFkZXJzOiB7XG4gICAgICAgIE1ldGFkYXRhOiBcInRydWVcIixcbiAgICB9LFxufTtcblxuZXhwb3J0IHsgUmVnaW9uRGlzY292ZXJ5IH07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1SZWdpb25EaXNjb3ZlcnkubWpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/msal-common/dist/authority/RegionDiscovery.mjs\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/msal-common/dist/cache/CacheManager.mjs":
/*!*********************************************************************!*\
  !*** ./node_modules/@azure/msal-common/dist/cache/CacheManager.mjs ***!
  \*********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   CacheManager: () => (/* binding */ CacheManager),\n/* harmony export */   DefaultStorageClass: () => (/* binding */ DefaultStorageClass)\n/* harmony export */ });\n/* harmony import */ var _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../utils/Constants.mjs */ \"(rsc)/./node_modules/@azure/msal-common/dist/utils/Constants.mjs\");\n/* harmony import */ var _utils_CacheHelpers_mjs__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./utils/CacheHelpers.mjs */ \"(rsc)/./node_modules/@azure/msal-common/dist/cache/utils/CacheHelpers.mjs\");\n/* harmony import */ var _request_ScopeSet_mjs__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../request/ScopeSet.mjs */ \"(rsc)/./node_modules/@azure/msal-common/dist/request/ScopeSet.mjs\");\n/* harmony import */ var _entities_AccountEntity_mjs__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./entities/AccountEntity.mjs */ \"(rsc)/./node_modules/@azure/msal-common/dist/cache/entities/AccountEntity.mjs\");\n/* harmony import */ var _error_ClientAuthError_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../error/ClientAuthError.mjs */ \"(rsc)/./node_modules/@azure/msal-common/dist/error/ClientAuthError.mjs\");\n/* harmony import */ var _account_AccountInfo_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../account/AccountInfo.mjs */ \"(rsc)/./node_modules/@azure/msal-common/dist/account/AccountInfo.mjs\");\n/* harmony import */ var _account_AuthToken_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../account/AuthToken.mjs */ \"(rsc)/./node_modules/@azure/msal-common/dist/account/AuthToken.mjs\");\n/* harmony import */ var _packageMetadata_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../packageMetadata.mjs */ \"(rsc)/./node_modules/@azure/msal-common/dist/packageMetadata.mjs\");\n/* harmony import */ var _authority_AuthorityMetadata_mjs__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../authority/AuthorityMetadata.mjs */ \"(rsc)/./node_modules/@azure/msal-common/dist/authority/AuthorityMetadata.mjs\");\n/* harmony import */ var _error_CacheError_mjs__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../error/CacheError.mjs */ \"(rsc)/./node_modules/@azure/msal-common/dist/error/CacheError.mjs\");\n/* harmony import */ var _error_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../error/ClientAuthErrorCodes.mjs */ \"(rsc)/./node_modules/@azure/msal-common/dist/error/ClientAuthErrorCodes.mjs\");\n/* harmony import */ var _error_CacheErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../error/CacheErrorCodes.mjs */ \"(rsc)/./node_modules/@azure/msal-common/dist/error/CacheErrorCodes.mjs\");\n/*! @azure/msal-common v14.14.0 2024-07-23 */\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n/**\n * Interface class which implement cache storage functions used by MSAL to perform validity checks, and store tokens.\n * @internal\n */\nclass CacheManager {\n    constructor(clientId, cryptoImpl, logger, staticAuthorityOptions) {\n        this.clientId = clientId;\n        this.cryptoImpl = cryptoImpl;\n        this.commonLogger = logger.clone(_packageMetadata_mjs__WEBPACK_IMPORTED_MODULE_0__.name, _packageMetadata_mjs__WEBPACK_IMPORTED_MODULE_0__.version);\n        this.staticAuthorityOptions = staticAuthorityOptions;\n    }\n    /**\n     * Returns all the accounts in the cache that match the optional filter. If no filter is provided, all accounts are returned.\n     * @param accountFilter - (Optional) filter to narrow down the accounts returned\n     * @returns Array of AccountInfo objects in cache\n     */\n    getAllAccounts(accountFilter) {\n        return this.buildTenantProfiles(this.getAccountsFilteredBy(accountFilter || {}), accountFilter);\n    }\n    /**\n     * Gets first tenanted AccountInfo object found based on provided filters\n     */\n    getAccountInfoFilteredBy(accountFilter) {\n        const allAccounts = this.getAllAccounts(accountFilter);\n        if (allAccounts.length > 1) {\n            // If one or more accounts are found, prioritize accounts that have an ID token\n            const sortedAccounts = allAccounts.sort((account) => {\n                return account.idTokenClaims ? -1 : 1;\n            });\n            return sortedAccounts[0];\n        }\n        else if (allAccounts.length === 1) {\n            // If only one account is found, return it regardless of whether a matching ID token was found\n            return allAccounts[0];\n        }\n        else {\n            return null;\n        }\n    }\n    /**\n     * Returns a single matching\n     * @param accountFilter\n     * @returns\n     */\n    getBaseAccountInfo(accountFilter) {\n        const accountEntities = this.getAccountsFilteredBy(accountFilter);\n        if (accountEntities.length > 0) {\n            return accountEntities[0].getAccountInfo();\n        }\n        else {\n            return null;\n        }\n    }\n    /**\n     * Matches filtered account entities with cached ID tokens that match the tenant profile-specific account filters\n     * and builds the account info objects from the matching ID token's claims\n     * @param cachedAccounts\n     * @param accountFilter\n     * @returns Array of AccountInfo objects that match account and tenant profile filters\n     */\n    buildTenantProfiles(cachedAccounts, accountFilter) {\n        return cachedAccounts.flatMap((accountEntity) => {\n            return this.getTenantProfilesFromAccountEntity(accountEntity, accountFilter?.tenantId, accountFilter);\n        });\n    }\n    getTenantedAccountInfoByFilter(accountInfo, tokenKeys, tenantProfile, tenantProfileFilter) {\n        let tenantedAccountInfo = null;\n        let idTokenClaims;\n        if (tenantProfileFilter) {\n            if (!this.tenantProfileMatchesFilter(tenantProfile, tenantProfileFilter)) {\n                return null;\n            }\n        }\n        const idToken = this.getIdToken(accountInfo, tokenKeys, tenantProfile.tenantId);\n        if (idToken) {\n            idTokenClaims = (0,_account_AuthToken_mjs__WEBPACK_IMPORTED_MODULE_1__.extractTokenClaims)(idToken.secret, this.cryptoImpl.base64Decode);\n            if (!this.idTokenClaimsMatchTenantProfileFilter(idTokenClaims, tenantProfileFilter)) {\n                // ID token sourced claims don't match so this tenant profile is not a match\n                return null;\n            }\n        }\n        // Expand tenant profile into account info based on matching tenant profile and if available matching ID token claims\n        tenantedAccountInfo = (0,_account_AccountInfo_mjs__WEBPACK_IMPORTED_MODULE_2__.updateAccountTenantProfileData)(accountInfo, tenantProfile, idTokenClaims, idToken?.secret);\n        return tenantedAccountInfo;\n    }\n    getTenantProfilesFromAccountEntity(accountEntity, targetTenantId, tenantProfileFilter) {\n        const accountInfo = accountEntity.getAccountInfo();\n        let searchTenantProfiles = accountInfo.tenantProfiles || new Map();\n        const tokenKeys = this.getTokenKeys();\n        // If a tenant ID was provided, only return the tenant profile for that tenant ID if it exists\n        if (targetTenantId) {\n            const tenantProfile = searchTenantProfiles.get(targetTenantId);\n            if (tenantProfile) {\n                // Reduce search field to just this tenant profile\n                searchTenantProfiles = new Map([\n                    [targetTenantId, tenantProfile],\n                ]);\n            }\n            else {\n                // No tenant profile for search tenant ID, return empty array\n                return [];\n            }\n        }\n        const matchingTenantProfiles = [];\n        searchTenantProfiles.forEach((tenantProfile) => {\n            const tenantedAccountInfo = this.getTenantedAccountInfoByFilter(accountInfo, tokenKeys, tenantProfile, tenantProfileFilter);\n            if (tenantedAccountInfo) {\n                matchingTenantProfiles.push(tenantedAccountInfo);\n            }\n        });\n        return matchingTenantProfiles;\n    }\n    tenantProfileMatchesFilter(tenantProfile, tenantProfileFilter) {\n        if (!!tenantProfileFilter.localAccountId &&\n            !this.matchLocalAccountIdFromTenantProfile(tenantProfile, tenantProfileFilter.localAccountId)) {\n            return false;\n        }\n        if (!!tenantProfileFilter.name &&\n            !(tenantProfile.name === tenantProfileFilter.name)) {\n            return false;\n        }\n        if (tenantProfileFilter.isHomeTenant !== undefined &&\n            !(tenantProfile.isHomeTenant === tenantProfileFilter.isHomeTenant)) {\n            return false;\n        }\n        return true;\n    }\n    idTokenClaimsMatchTenantProfileFilter(idTokenClaims, tenantProfileFilter) {\n        // Tenant Profile filtering\n        if (tenantProfileFilter) {\n            if (!!tenantProfileFilter.localAccountId &&\n                !this.matchLocalAccountIdFromTokenClaims(idTokenClaims, tenantProfileFilter.localAccountId)) {\n                return false;\n            }\n            if (!!tenantProfileFilter.loginHint &&\n                !this.matchLoginHintFromTokenClaims(idTokenClaims, tenantProfileFilter.loginHint)) {\n                return false;\n            }\n            if (!!tenantProfileFilter.username &&\n                !this.matchUsername(idTokenClaims.preferred_username, tenantProfileFilter.username)) {\n                return false;\n            }\n            if (!!tenantProfileFilter.name &&\n                !this.matchName(idTokenClaims, tenantProfileFilter.name)) {\n                return false;\n            }\n            if (!!tenantProfileFilter.sid &&\n                !this.matchSid(idTokenClaims, tenantProfileFilter.sid)) {\n                return false;\n            }\n        }\n        return true;\n    }\n    /**\n     * saves a cache record\n     * @param cacheRecord {CacheRecord}\n     * @param storeInCache {?StoreInCache}\n     * @param correlationId {?string} correlation id\n     */\n    async saveCacheRecord(cacheRecord, storeInCache, correlationId) {\n        if (!cacheRecord) {\n            throw (0,_error_ClientAuthError_mjs__WEBPACK_IMPORTED_MODULE_3__.createClientAuthError)(_error_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_4__.invalidCacheRecord);\n        }\n        try {\n            if (!!cacheRecord.account) {\n                this.setAccount(cacheRecord.account);\n            }\n            if (!!cacheRecord.idToken && storeInCache?.idToken !== false) {\n                this.setIdTokenCredential(cacheRecord.idToken);\n            }\n            if (!!cacheRecord.accessToken &&\n                storeInCache?.accessToken !== false) {\n                await this.saveAccessToken(cacheRecord.accessToken);\n            }\n            if (!!cacheRecord.refreshToken &&\n                storeInCache?.refreshToken !== false) {\n                this.setRefreshTokenCredential(cacheRecord.refreshToken);\n            }\n            if (!!cacheRecord.appMetadata) {\n                this.setAppMetadata(cacheRecord.appMetadata);\n            }\n        }\n        catch (e) {\n            this.commonLogger?.error(`CacheManager.saveCacheRecord: failed`);\n            if (e instanceof Error) {\n                this.commonLogger?.errorPii(`CacheManager.saveCacheRecord: ${e.message}`, correlationId);\n                if (e.name === \"QuotaExceededError\" ||\n                    e.name === \"NS_ERROR_DOM_QUOTA_REACHED\" ||\n                    e.message.includes(\"exceeded the quota\")) {\n                    this.commonLogger?.error(`CacheManager.saveCacheRecord: exceeded storage quota`, correlationId);\n                    throw new _error_CacheError_mjs__WEBPACK_IMPORTED_MODULE_5__.CacheError(_error_CacheErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_6__.cacheQuotaExceededErrorCode);\n                }\n                else {\n                    throw new _error_CacheError_mjs__WEBPACK_IMPORTED_MODULE_5__.CacheError(e.name, e.message);\n                }\n            }\n            else {\n                this.commonLogger?.errorPii(`CacheManager.saveCacheRecord: ${e}`, correlationId);\n                throw new _error_CacheError_mjs__WEBPACK_IMPORTED_MODULE_5__.CacheError(_error_CacheErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_6__.cacheUnknownErrorCode);\n            }\n        }\n    }\n    /**\n     * saves access token credential\n     * @param credential\n     */\n    async saveAccessToken(credential) {\n        const accessTokenFilter = {\n            clientId: credential.clientId,\n            credentialType: credential.credentialType,\n            environment: credential.environment,\n            homeAccountId: credential.homeAccountId,\n            realm: credential.realm,\n            tokenType: credential.tokenType,\n            requestedClaimsHash: credential.requestedClaimsHash,\n        };\n        const tokenKeys = this.getTokenKeys();\n        const currentScopes = _request_ScopeSet_mjs__WEBPACK_IMPORTED_MODULE_7__.ScopeSet.fromString(credential.target);\n        const removedAccessTokens = [];\n        tokenKeys.accessToken.forEach((key) => {\n            if (!this.accessTokenKeyMatchesFilter(key, accessTokenFilter, false)) {\n                return;\n            }\n            const tokenEntity = this.getAccessTokenCredential(key);\n            if (tokenEntity &&\n                this.credentialMatchesFilter(tokenEntity, accessTokenFilter)) {\n                const tokenScopeSet = _request_ScopeSet_mjs__WEBPACK_IMPORTED_MODULE_7__.ScopeSet.fromString(tokenEntity.target);\n                if (tokenScopeSet.intersectingScopeSets(currentScopes)) {\n                    removedAccessTokens.push(this.removeAccessToken(key));\n                }\n            }\n        });\n        await Promise.all(removedAccessTokens);\n        this.setAccessTokenCredential(credential);\n    }\n    /**\n     * Retrieve account entities matching all provided tenant-agnostic filters; if no filter is set, get all account entities in the cache\n     * Not checking for casing as keys are all generated in lower case, remember to convert to lower case if object properties are compared\n     * @param accountFilter - An object containing Account properties to filter by\n     */\n    getAccountsFilteredBy(accountFilter) {\n        const allAccountKeys = this.getAccountKeys();\n        const matchingAccounts = [];\n        allAccountKeys.forEach((cacheKey) => {\n            if (!this.isAccountKey(cacheKey, accountFilter.homeAccountId)) {\n                // Don't parse value if the key doesn't match the account filters\n                return;\n            }\n            const entity = this.getAccount(cacheKey, this.commonLogger);\n            // Match base account fields\n            if (!entity) {\n                return;\n            }\n            if (!!accountFilter.homeAccountId &&\n                !this.matchHomeAccountId(entity, accountFilter.homeAccountId)) {\n                return;\n            }\n            if (!!accountFilter.username &&\n                !this.matchUsername(entity.username, accountFilter.username)) {\n                return;\n            }\n            if (!!accountFilter.environment &&\n                !this.matchEnvironment(entity, accountFilter.environment)) {\n                return;\n            }\n            if (!!accountFilter.realm &&\n                !this.matchRealm(entity, accountFilter.realm)) {\n                return;\n            }\n            if (!!accountFilter.nativeAccountId &&\n                !this.matchNativeAccountId(entity, accountFilter.nativeAccountId)) {\n                return;\n            }\n            if (!!accountFilter.authorityType &&\n                !this.matchAuthorityType(entity, accountFilter.authorityType)) {\n                return;\n            }\n            // If at least one tenant profile matches the tenant profile filter, add the account to the list of matching accounts\n            const tenantProfileFilter = {\n                localAccountId: accountFilter?.localAccountId,\n                name: accountFilter?.name,\n            };\n            const matchingTenantProfiles = entity.tenantProfiles?.filter((tenantProfile) => {\n                return this.tenantProfileMatchesFilter(tenantProfile, tenantProfileFilter);\n            });\n            if (matchingTenantProfiles && matchingTenantProfiles.length === 0) {\n                // No tenant profile for this account matches filter, don't add to list of matching accounts\n                return;\n            }\n            matchingAccounts.push(entity);\n        });\n        return matchingAccounts;\n    }\n    /**\n     * Returns true if the given key matches our account key schema. Also matches homeAccountId and/or tenantId if provided\n     * @param key\n     * @param homeAccountId\n     * @param tenantId\n     * @returns\n     */\n    isAccountKey(key, homeAccountId, tenantId) {\n        if (key.split(_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_8__.Separators.CACHE_KEY_SEPARATOR).length < 3) {\n            // Account cache keys contain 3 items separated by '-' (each item may also contain '-')\n            return false;\n        }\n        if (homeAccountId &&\n            !key.toLowerCase().includes(homeAccountId.toLowerCase())) {\n            return false;\n        }\n        if (tenantId && !key.toLowerCase().includes(tenantId.toLowerCase())) {\n            return false;\n        }\n        // Do not check environment as aliasing can cause false negatives\n        return true;\n    }\n    /**\n     * Returns true if the given key matches our credential key schema.\n     * @param key\n     */\n    isCredentialKey(key) {\n        if (key.split(_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_8__.Separators.CACHE_KEY_SEPARATOR).length < 6) {\n            // Credential cache keys contain 6 items separated by '-' (each item may also contain '-')\n            return false;\n        }\n        const lowerCaseKey = key.toLowerCase();\n        // Credential keys must indicate what credential type they represent\n        if (lowerCaseKey.indexOf(_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_8__.CredentialType.ID_TOKEN.toLowerCase()) ===\n            -1 &&\n            lowerCaseKey.indexOf(_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_8__.CredentialType.ACCESS_TOKEN.toLowerCase()) ===\n                -1 &&\n            lowerCaseKey.indexOf(_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_8__.CredentialType.ACCESS_TOKEN_WITH_AUTH_SCHEME.toLowerCase()) === -1 &&\n            lowerCaseKey.indexOf(_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_8__.CredentialType.REFRESH_TOKEN.toLowerCase()) ===\n                -1) {\n            return false;\n        }\n        if (lowerCaseKey.indexOf(_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_8__.CredentialType.REFRESH_TOKEN.toLowerCase()) >\n            -1) {\n            // Refresh tokens must contain the client id or family id\n            const clientIdValidation = `${_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_8__.CredentialType.REFRESH_TOKEN}${_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_8__.Separators.CACHE_KEY_SEPARATOR}${this.clientId}${_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_8__.Separators.CACHE_KEY_SEPARATOR}`;\n            const familyIdValidation = `${_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_8__.CredentialType.REFRESH_TOKEN}${_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_8__.Separators.CACHE_KEY_SEPARATOR}${_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_8__.THE_FAMILY_ID}${_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_8__.Separators.CACHE_KEY_SEPARATOR}`;\n            if (lowerCaseKey.indexOf(clientIdValidation.toLowerCase()) === -1 &&\n                lowerCaseKey.indexOf(familyIdValidation.toLowerCase()) === -1) {\n                return false;\n            }\n        }\n        else if (lowerCaseKey.indexOf(this.clientId.toLowerCase()) === -1) {\n            // Tokens must contain the clientId\n            return false;\n        }\n        return true;\n    }\n    /**\n     * Returns whether or not the given credential entity matches the filter\n     * @param entity\n     * @param filter\n     * @returns\n     */\n    credentialMatchesFilter(entity, filter) {\n        if (!!filter.clientId && !this.matchClientId(entity, filter.clientId)) {\n            return false;\n        }\n        if (!!filter.userAssertionHash &&\n            !this.matchUserAssertionHash(entity, filter.userAssertionHash)) {\n            return false;\n        }\n        /*\n         * homeAccountId can be undefined, and we want to filter out cached items that have a homeAccountId of \"\"\n         * because we don't want a client_credential request to return a cached token that has a homeAccountId\n         */\n        if (typeof filter.homeAccountId === \"string\" &&\n            !this.matchHomeAccountId(entity, filter.homeAccountId)) {\n            return false;\n        }\n        if (!!filter.environment &&\n            !this.matchEnvironment(entity, filter.environment)) {\n            return false;\n        }\n        if (!!filter.realm && !this.matchRealm(entity, filter.realm)) {\n            return false;\n        }\n        if (!!filter.credentialType &&\n            !this.matchCredentialType(entity, filter.credentialType)) {\n            return false;\n        }\n        if (!!filter.familyId && !this.matchFamilyId(entity, filter.familyId)) {\n            return false;\n        }\n        /*\n         * idTokens do not have \"target\", target specific refreshTokens do exist for some types of authentication\n         * Resource specific refresh tokens case will be added when the support is deemed necessary\n         */\n        if (!!filter.target && !this.matchTarget(entity, filter.target)) {\n            return false;\n        }\n        // If request OR cached entity has requested Claims Hash, check if they match\n        if (filter.requestedClaimsHash || entity.requestedClaimsHash) {\n            // Don't match if either is undefined or they are different\n            if (entity.requestedClaimsHash !== filter.requestedClaimsHash) {\n                return false;\n            }\n        }\n        // Access Token with Auth Scheme specific matching\n        if (entity.credentialType ===\n            _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_8__.CredentialType.ACCESS_TOKEN_WITH_AUTH_SCHEME) {\n            if (!!filter.tokenType &&\n                !this.matchTokenType(entity, filter.tokenType)) {\n                return false;\n            }\n            // KeyId (sshKid) in request must match cached SSH certificate keyId because SSH cert is bound to a specific key\n            if (filter.tokenType === _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_8__.AuthenticationScheme.SSH) {\n                if (filter.keyId && !this.matchKeyId(entity, filter.keyId)) {\n                    return false;\n                }\n            }\n        }\n        return true;\n    }\n    /**\n     * retrieve appMetadata matching all provided filters; if no filter is set, get all appMetadata\n     * @param filter\n     */\n    getAppMetadataFilteredBy(filter) {\n        const allCacheKeys = this.getKeys();\n        const matchingAppMetadata = {};\n        allCacheKeys.forEach((cacheKey) => {\n            // don't parse any non-appMetadata type cache entities\n            if (!this.isAppMetadata(cacheKey)) {\n                return;\n            }\n            // Attempt retrieval\n            const entity = this.getAppMetadata(cacheKey);\n            if (!entity) {\n                return;\n            }\n            if (!!filter.environment &&\n                !this.matchEnvironment(entity, filter.environment)) {\n                return;\n            }\n            if (!!filter.clientId &&\n                !this.matchClientId(entity, filter.clientId)) {\n                return;\n            }\n            matchingAppMetadata[cacheKey] = entity;\n        });\n        return matchingAppMetadata;\n    }\n    /**\n     * retrieve authorityMetadata that contains a matching alias\n     * @param filter\n     */\n    getAuthorityMetadataByAlias(host) {\n        const allCacheKeys = this.getAuthorityMetadataKeys();\n        let matchedEntity = null;\n        allCacheKeys.forEach((cacheKey) => {\n            // don't parse any non-authorityMetadata type cache entities\n            if (!this.isAuthorityMetadata(cacheKey) ||\n                cacheKey.indexOf(this.clientId) === -1) {\n                return;\n            }\n            // Attempt retrieval\n            const entity = this.getAuthorityMetadata(cacheKey);\n            if (!entity) {\n                return;\n            }\n            if (entity.aliases.indexOf(host) === -1) {\n                return;\n            }\n            matchedEntity = entity;\n        });\n        return matchedEntity;\n    }\n    /**\n     * Removes all accounts and related tokens from cache.\n     */\n    async removeAllAccounts() {\n        const allAccountKeys = this.getAccountKeys();\n        const removedAccounts = [];\n        allAccountKeys.forEach((cacheKey) => {\n            removedAccounts.push(this.removeAccount(cacheKey));\n        });\n        await Promise.all(removedAccounts);\n    }\n    /**\n     * Removes the account and related tokens for a given account key\n     * @param account\n     */\n    async removeAccount(accountKey) {\n        const account = this.getAccount(accountKey, this.commonLogger);\n        if (!account) {\n            return;\n        }\n        await this.removeAccountContext(account);\n        this.removeItem(accountKey);\n    }\n    /**\n     * Removes credentials associated with the provided account\n     * @param account\n     */\n    async removeAccountContext(account) {\n        const allTokenKeys = this.getTokenKeys();\n        const accountId = account.generateAccountId();\n        const removedCredentials = [];\n        allTokenKeys.idToken.forEach((key) => {\n            if (key.indexOf(accountId) === 0) {\n                this.removeIdToken(key);\n            }\n        });\n        allTokenKeys.accessToken.forEach((key) => {\n            if (key.indexOf(accountId) === 0) {\n                removedCredentials.push(this.removeAccessToken(key));\n            }\n        });\n        allTokenKeys.refreshToken.forEach((key) => {\n            if (key.indexOf(accountId) === 0) {\n                this.removeRefreshToken(key);\n            }\n        });\n        await Promise.all(removedCredentials);\n    }\n    /**\n     * Migrates a single-tenant account and all it's associated alternate cross-tenant account objects in the\n     * cache into a condensed multi-tenant account object with tenant profiles.\n     * @param accountKey\n     * @param accountEntity\n     * @param logger\n     * @returns\n     */\n    updateOutdatedCachedAccount(accountKey, accountEntity, logger) {\n        // Only update if account entity is defined and has no tenantProfiles object (is outdated)\n        if (accountEntity && accountEntity.isSingleTenant()) {\n            this.commonLogger?.verbose(\"updateOutdatedCachedAccount: Found a single-tenant (outdated) account entity in the cache, migrating to multi-tenant account entity\");\n            // Get keys of all accounts belonging to user\n            const matchingAccountKeys = this.getAccountKeys().filter((key) => {\n                return key.startsWith(accountEntity.homeAccountId);\n            });\n            // Get all account entities belonging to user\n            const accountsToMerge = [];\n            matchingAccountKeys.forEach((key) => {\n                const account = this.getCachedAccountEntity(key);\n                if (account) {\n                    accountsToMerge.push(account);\n                }\n            });\n            // Set base account to home account if available, any account if not\n            const baseAccount = accountsToMerge.find((account) => {\n                return (0,_account_AccountInfo_mjs__WEBPACK_IMPORTED_MODULE_2__.tenantIdMatchesHomeTenant)(account.realm, account.homeAccountId);\n            }) || accountsToMerge[0];\n            // Populate tenant profiles built from each account entity belonging to the user\n            baseAccount.tenantProfiles = accountsToMerge.map((account) => {\n                return {\n                    tenantId: account.realm,\n                    localAccountId: account.localAccountId,\n                    name: account.name,\n                    isHomeTenant: (0,_account_AccountInfo_mjs__WEBPACK_IMPORTED_MODULE_2__.tenantIdMatchesHomeTenant)(account.realm, account.homeAccountId),\n                };\n            });\n            const updatedAccount = CacheManager.toObject(new _entities_AccountEntity_mjs__WEBPACK_IMPORTED_MODULE_9__.AccountEntity(), {\n                ...baseAccount,\n            });\n            const newAccountKey = updatedAccount.generateAccountKey();\n            // Clear cache of legacy account objects that have been collpsed into tenant profiles\n            matchingAccountKeys.forEach((key) => {\n                if (key !== newAccountKey) {\n                    this.removeOutdatedAccount(accountKey);\n                }\n            });\n            // Cache updated account object\n            this.setAccount(updatedAccount);\n            logger?.verbose(\"Updated an outdated account entity in the cache\");\n            return updatedAccount;\n        }\n        // No update is necessary\n        return accountEntity;\n    }\n    /**\n     * returns a boolean if the given credential is removed\n     * @param credential\n     */\n    async removeAccessToken(key) {\n        const credential = this.getAccessTokenCredential(key);\n        if (!credential) {\n            return;\n        }\n        // Remove Token Binding Key from key store for PoP Tokens Credentials\n        if (credential.credentialType.toLowerCase() ===\n            _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_8__.CredentialType.ACCESS_TOKEN_WITH_AUTH_SCHEME.toLowerCase()) {\n            if (credential.tokenType === _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_8__.AuthenticationScheme.POP) {\n                const accessTokenWithAuthSchemeEntity = credential;\n                const kid = accessTokenWithAuthSchemeEntity.keyId;\n                if (kid) {\n                    try {\n                        await this.cryptoImpl.removeTokenBindingKey(kid);\n                    }\n                    catch (error) {\n                        throw (0,_error_ClientAuthError_mjs__WEBPACK_IMPORTED_MODULE_3__.createClientAuthError)(_error_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_4__.bindingKeyNotRemoved);\n                    }\n                }\n            }\n        }\n        return this.removeItem(key);\n    }\n    /**\n     * Removes all app metadata objects from cache.\n     */\n    removeAppMetadata() {\n        const allCacheKeys = this.getKeys();\n        allCacheKeys.forEach((cacheKey) => {\n            if (this.isAppMetadata(cacheKey)) {\n                this.removeItem(cacheKey);\n            }\n        });\n        return true;\n    }\n    /**\n     * Retrieve AccountEntity from cache\n     * @param account\n     */\n    readAccountFromCache(account) {\n        const accountKey = _entities_AccountEntity_mjs__WEBPACK_IMPORTED_MODULE_9__.AccountEntity.generateAccountCacheKey(account);\n        return this.getAccount(accountKey, this.commonLogger);\n    }\n    /**\n     * Retrieve IdTokenEntity from cache\n     * @param account {AccountInfo}\n     * @param tokenKeys {?TokenKeys}\n     * @param targetRealm {?string}\n     * @param performanceClient {?IPerformanceClient}\n     * @param correlationId {?string}\n     */\n    getIdToken(account, tokenKeys, targetRealm, performanceClient, correlationId) {\n        this.commonLogger.trace(\"CacheManager - getIdToken called\");\n        const idTokenFilter = {\n            homeAccountId: account.homeAccountId,\n            environment: account.environment,\n            credentialType: _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_8__.CredentialType.ID_TOKEN,\n            clientId: this.clientId,\n            realm: targetRealm,\n        };\n        const idTokenMap = this.getIdTokensByFilter(idTokenFilter, tokenKeys);\n        const numIdTokens = idTokenMap.size;\n        if (numIdTokens < 1) {\n            this.commonLogger.info(\"CacheManager:getIdToken - No token found\");\n            return null;\n        }\n        else if (numIdTokens > 1) {\n            let tokensToBeRemoved = idTokenMap;\n            // Multiple tenant profiles and no tenant specified, pick home account\n            if (!targetRealm) {\n                const homeIdTokenMap = new Map();\n                idTokenMap.forEach((idToken, key) => {\n                    if (idToken.realm === account.tenantId) {\n                        homeIdTokenMap.set(key, idToken);\n                    }\n                });\n                const numHomeIdTokens = homeIdTokenMap.size;\n                if (numHomeIdTokens < 1) {\n                    this.commonLogger.info(\"CacheManager:getIdToken - Multiple ID tokens found for account but none match account entity tenant id, returning first result\");\n                    return idTokenMap.values().next().value;\n                }\n                else if (numHomeIdTokens === 1) {\n                    this.commonLogger.info(\"CacheManager:getIdToken - Multiple ID tokens found for account, defaulting to home tenant profile\");\n                    return homeIdTokenMap.values().next().value;\n                }\n                else {\n                    // Multiple ID tokens for home tenant profile, remove all and return null\n                    tokensToBeRemoved = homeIdTokenMap;\n                }\n            }\n            // Multiple tokens for a single tenant profile, remove all and return null\n            this.commonLogger.info(\"CacheManager:getIdToken - Multiple matching ID tokens found, clearing them\");\n            tokensToBeRemoved.forEach((idToken, key) => {\n                this.removeIdToken(key);\n            });\n            if (performanceClient && correlationId) {\n                performanceClient.addFields({ multiMatchedID: idTokenMap.size }, correlationId);\n            }\n            return null;\n        }\n        this.commonLogger.info(\"CacheManager:getIdToken - Returning ID token\");\n        return idTokenMap.values().next().value;\n    }\n    /**\n     * Gets all idTokens matching the given filter\n     * @param filter\n     * @returns\n     */\n    getIdTokensByFilter(filter, tokenKeys) {\n        const idTokenKeys = (tokenKeys && tokenKeys.idToken) || this.getTokenKeys().idToken;\n        const idTokens = new Map();\n        idTokenKeys.forEach((key) => {\n            if (!this.idTokenKeyMatchesFilter(key, {\n                clientId: this.clientId,\n                ...filter,\n            })) {\n                return;\n            }\n            const idToken = this.getIdTokenCredential(key);\n            if (idToken && this.credentialMatchesFilter(idToken, filter)) {\n                idTokens.set(key, idToken);\n            }\n        });\n        return idTokens;\n    }\n    /**\n     * Validate the cache key against filter before retrieving and parsing cache value\n     * @param key\n     * @param filter\n     * @returns\n     */\n    idTokenKeyMatchesFilter(inputKey, filter) {\n        const key = inputKey.toLowerCase();\n        if (filter.clientId &&\n            key.indexOf(filter.clientId.toLowerCase()) === -1) {\n            return false;\n        }\n        if (filter.homeAccountId &&\n            key.indexOf(filter.homeAccountId.toLowerCase()) === -1) {\n            return false;\n        }\n        return true;\n    }\n    /**\n     * Removes idToken from the cache\n     * @param key\n     */\n    removeIdToken(key) {\n        this.removeItem(key);\n    }\n    /**\n     * Removes refresh token from the cache\n     * @param key\n     */\n    removeRefreshToken(key) {\n        this.removeItem(key);\n    }\n    /**\n     * Retrieve AccessTokenEntity from cache\n     * @param account {AccountInfo}\n     * @param request {BaseAuthRequest}\n     * @param tokenKeys {?TokenKeys}\n     * @param performanceClient {?IPerformanceClient}\n     * @param correlationId {?string}\n     */\n    getAccessToken(account, request, tokenKeys, targetRealm, performanceClient, correlationId) {\n        this.commonLogger.trace(\"CacheManager - getAccessToken called\");\n        const scopes = _request_ScopeSet_mjs__WEBPACK_IMPORTED_MODULE_7__.ScopeSet.createSearchScopes(request.scopes);\n        const authScheme = request.authenticationScheme || _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_8__.AuthenticationScheme.BEARER;\n        /*\n         * Distinguish between Bearer and PoP/SSH token cache types\n         * Cast to lowercase to handle \"bearer\" from ADFS\n         */\n        const credentialType = authScheme &&\n            authScheme.toLowerCase() !==\n                _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_8__.AuthenticationScheme.BEARER.toLowerCase()\n            ? _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_8__.CredentialType.ACCESS_TOKEN_WITH_AUTH_SCHEME\n            : _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_8__.CredentialType.ACCESS_TOKEN;\n        const accessTokenFilter = {\n            homeAccountId: account.homeAccountId,\n            environment: account.environment,\n            credentialType: credentialType,\n            clientId: this.clientId,\n            realm: targetRealm || account.tenantId,\n            target: scopes,\n            tokenType: authScheme,\n            keyId: request.sshKid,\n            requestedClaimsHash: request.requestedClaimsHash,\n        };\n        const accessTokenKeys = (tokenKeys && tokenKeys.accessToken) ||\n            this.getTokenKeys().accessToken;\n        const accessTokens = [];\n        accessTokenKeys.forEach((key) => {\n            // Validate key\n            if (this.accessTokenKeyMatchesFilter(key, accessTokenFilter, true)) {\n                const accessToken = this.getAccessTokenCredential(key);\n                // Validate value\n                if (accessToken &&\n                    this.credentialMatchesFilter(accessToken, accessTokenFilter)) {\n                    accessTokens.push(accessToken);\n                }\n            }\n        });\n        const numAccessTokens = accessTokens.length;\n        if (numAccessTokens < 1) {\n            this.commonLogger.info(\"CacheManager:getAccessToken - No token found\");\n            return null;\n        }\n        else if (numAccessTokens > 1) {\n            this.commonLogger.info(\"CacheManager:getAccessToken - Multiple access tokens found, clearing them\");\n            accessTokens.forEach((accessToken) => {\n                void this.removeAccessToken((0,_utils_CacheHelpers_mjs__WEBPACK_IMPORTED_MODULE_10__.generateCredentialKey)(accessToken));\n            });\n            if (performanceClient && correlationId) {\n                performanceClient.addFields({ multiMatchedAT: accessTokens.length }, correlationId);\n            }\n            return null;\n        }\n        this.commonLogger.info(\"CacheManager:getAccessToken - Returning access token\");\n        return accessTokens[0];\n    }\n    /**\n     * Validate the cache key against filter before retrieving and parsing cache value\n     * @param key\n     * @param filter\n     * @param keyMustContainAllScopes\n     * @returns\n     */\n    accessTokenKeyMatchesFilter(inputKey, filter, keyMustContainAllScopes) {\n        const key = inputKey.toLowerCase();\n        if (filter.clientId &&\n            key.indexOf(filter.clientId.toLowerCase()) === -1) {\n            return false;\n        }\n        if (filter.homeAccountId &&\n            key.indexOf(filter.homeAccountId.toLowerCase()) === -1) {\n            return false;\n        }\n        if (filter.realm && key.indexOf(filter.realm.toLowerCase()) === -1) {\n            return false;\n        }\n        if (filter.requestedClaimsHash &&\n            key.indexOf(filter.requestedClaimsHash.toLowerCase()) === -1) {\n            return false;\n        }\n        if (filter.target) {\n            const scopes = filter.target.asArray();\n            for (let i = 0; i < scopes.length; i++) {\n                if (keyMustContainAllScopes &&\n                    !key.includes(scopes[i].toLowerCase())) {\n                    // When performing a cache lookup a missing scope would be a cache miss\n                    return false;\n                }\n                else if (!keyMustContainAllScopes &&\n                    key.includes(scopes[i].toLowerCase())) {\n                    // When performing a cache write, any token with a subset of requested scopes should be replaced\n                    return true;\n                }\n            }\n        }\n        return true;\n    }\n    /**\n     * Gets all access tokens matching the filter\n     * @param filter\n     * @returns\n     */\n    getAccessTokensByFilter(filter) {\n        const tokenKeys = this.getTokenKeys();\n        const accessTokens = [];\n        tokenKeys.accessToken.forEach((key) => {\n            if (!this.accessTokenKeyMatchesFilter(key, filter, true)) {\n                return;\n            }\n            const accessToken = this.getAccessTokenCredential(key);\n            if (accessToken &&\n                this.credentialMatchesFilter(accessToken, filter)) {\n                accessTokens.push(accessToken);\n            }\n        });\n        return accessTokens;\n    }\n    /**\n     * Helper to retrieve the appropriate refresh token from cache\n     * @param account {AccountInfo}\n     * @param familyRT {boolean}\n     * @param tokenKeys {?TokenKeys}\n     * @param performanceClient {?IPerformanceClient}\n     * @param correlationId {?string}\n     */\n    getRefreshToken(account, familyRT, tokenKeys, performanceClient, correlationId) {\n        this.commonLogger.trace(\"CacheManager - getRefreshToken called\");\n        const id = familyRT ? _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_8__.THE_FAMILY_ID : undefined;\n        const refreshTokenFilter = {\n            homeAccountId: account.homeAccountId,\n            environment: account.environment,\n            credentialType: _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_8__.CredentialType.REFRESH_TOKEN,\n            clientId: this.clientId,\n            familyId: id,\n        };\n        const refreshTokenKeys = (tokenKeys && tokenKeys.refreshToken) ||\n            this.getTokenKeys().refreshToken;\n        const refreshTokens = [];\n        refreshTokenKeys.forEach((key) => {\n            // Validate key\n            if (this.refreshTokenKeyMatchesFilter(key, refreshTokenFilter)) {\n                const refreshToken = this.getRefreshTokenCredential(key);\n                // Validate value\n                if (refreshToken &&\n                    this.credentialMatchesFilter(refreshToken, refreshTokenFilter)) {\n                    refreshTokens.push(refreshToken);\n                }\n            }\n        });\n        const numRefreshTokens = refreshTokens.length;\n        if (numRefreshTokens < 1) {\n            this.commonLogger.info(\"CacheManager:getRefreshToken - No refresh token found.\");\n            return null;\n        }\n        // address the else case after remove functions address environment aliases\n        if (numRefreshTokens > 1 && performanceClient && correlationId) {\n            performanceClient.addFields({ multiMatchedRT: numRefreshTokens }, correlationId);\n        }\n        this.commonLogger.info(\"CacheManager:getRefreshToken - returning refresh token\");\n        return refreshTokens[0];\n    }\n    /**\n     * Validate the cache key against filter before retrieving and parsing cache value\n     * @param key\n     * @param filter\n     */\n    refreshTokenKeyMatchesFilter(inputKey, filter) {\n        const key = inputKey.toLowerCase();\n        if (filter.familyId &&\n            key.indexOf(filter.familyId.toLowerCase()) === -1) {\n            return false;\n        }\n        // If familyId is used, clientId is not in the key\n        if (!filter.familyId &&\n            filter.clientId &&\n            key.indexOf(filter.clientId.toLowerCase()) === -1) {\n            return false;\n        }\n        if (filter.homeAccountId &&\n            key.indexOf(filter.homeAccountId.toLowerCase()) === -1) {\n            return false;\n        }\n        return true;\n    }\n    /**\n     * Retrieve AppMetadataEntity from cache\n     */\n    readAppMetadataFromCache(environment) {\n        const appMetadataFilter = {\n            environment,\n            clientId: this.clientId,\n        };\n        const appMetadata = this.getAppMetadataFilteredBy(appMetadataFilter);\n        const appMetadataEntries = Object.keys(appMetadata).map((key) => appMetadata[key]);\n        const numAppMetadata = appMetadataEntries.length;\n        if (numAppMetadata < 1) {\n            return null;\n        }\n        else if (numAppMetadata > 1) {\n            throw (0,_error_ClientAuthError_mjs__WEBPACK_IMPORTED_MODULE_3__.createClientAuthError)(_error_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_4__.multipleMatchingAppMetadata);\n        }\n        return appMetadataEntries[0];\n    }\n    /**\n     * Return the family_id value associated  with FOCI\n     * @param environment\n     * @param clientId\n     */\n    isAppMetadataFOCI(environment) {\n        const appMetadata = this.readAppMetadataFromCache(environment);\n        return !!(appMetadata && appMetadata.familyId === _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_8__.THE_FAMILY_ID);\n    }\n    /**\n     * helper to match account ids\n     * @param value\n     * @param homeAccountId\n     */\n    matchHomeAccountId(entity, homeAccountId) {\n        return !!(typeof entity.homeAccountId === \"string\" &&\n            homeAccountId === entity.homeAccountId);\n    }\n    /**\n     * helper to match account ids\n     * @param entity\n     * @param localAccountId\n     * @returns\n     */\n    matchLocalAccountIdFromTokenClaims(tokenClaims, localAccountId) {\n        const idTokenLocalAccountId = tokenClaims.oid || tokenClaims.sub;\n        return localAccountId === idTokenLocalAccountId;\n    }\n    matchLocalAccountIdFromTenantProfile(tenantProfile, localAccountId) {\n        return tenantProfile.localAccountId === localAccountId;\n    }\n    /**\n     * helper to match names\n     * @param entity\n     * @param name\n     * @returns true if the downcased name properties are present and match in the filter and the entity\n     */\n    matchName(claims, name) {\n        return !!(name.toLowerCase() === claims.name?.toLowerCase());\n    }\n    /**\n     * helper to match usernames\n     * @param entity\n     * @param username\n     * @returns\n     */\n    matchUsername(cachedUsername, filterUsername) {\n        return !!(cachedUsername &&\n            typeof cachedUsername === \"string\" &&\n            filterUsername?.toLowerCase() === cachedUsername.toLowerCase());\n    }\n    /**\n     * helper to match assertion\n     * @param value\n     * @param oboAssertion\n     */\n    matchUserAssertionHash(entity, userAssertionHash) {\n        return !!(entity.userAssertionHash &&\n            userAssertionHash === entity.userAssertionHash);\n    }\n    /**\n     * helper to match environment\n     * @param value\n     * @param environment\n     */\n    matchEnvironment(entity, environment) {\n        // Check static authority options first for cases where authority metadata has not been resolved and cached yet\n        if (this.staticAuthorityOptions) {\n            const staticAliases = (0,_authority_AuthorityMetadata_mjs__WEBPACK_IMPORTED_MODULE_11__.getAliasesFromStaticSources)(this.staticAuthorityOptions, this.commonLogger);\n            if (staticAliases.includes(environment) &&\n                staticAliases.includes(entity.environment)) {\n                return true;\n            }\n        }\n        // Query metadata cache if no static authority configuration has aliases that match enviroment\n        const cloudMetadata = this.getAuthorityMetadataByAlias(environment);\n        if (cloudMetadata &&\n            cloudMetadata.aliases.indexOf(entity.environment) > -1) {\n            return true;\n        }\n        return false;\n    }\n    /**\n     * helper to match credential type\n     * @param entity\n     * @param credentialType\n     */\n    matchCredentialType(entity, credentialType) {\n        return (entity.credentialType &&\n            credentialType.toLowerCase() === entity.credentialType.toLowerCase());\n    }\n    /**\n     * helper to match client ids\n     * @param entity\n     * @param clientId\n     */\n    matchClientId(entity, clientId) {\n        return !!(entity.clientId && clientId === entity.clientId);\n    }\n    /**\n     * helper to match family ids\n     * @param entity\n     * @param familyId\n     */\n    matchFamilyId(entity, familyId) {\n        return !!(entity.familyId && familyId === entity.familyId);\n    }\n    /**\n     * helper to match realm\n     * @param entity\n     * @param realm\n     */\n    matchRealm(entity, realm) {\n        return !!(entity.realm?.toLowerCase() === realm.toLowerCase());\n    }\n    /**\n     * helper to match nativeAccountId\n     * @param entity\n     * @param nativeAccountId\n     * @returns boolean indicating the match result\n     */\n    matchNativeAccountId(entity, nativeAccountId) {\n        return !!(entity.nativeAccountId && nativeAccountId === entity.nativeAccountId);\n    }\n    /**\n     * helper to match loginHint which can be either:\n     * 1. login_hint ID token claim\n     * 2. username in cached account object\n     * 3. upn in ID token claims\n     * @param entity\n     * @param loginHint\n     * @returns\n     */\n    matchLoginHintFromTokenClaims(tokenClaims, loginHint) {\n        if (tokenClaims.login_hint === loginHint) {\n            return true;\n        }\n        if (tokenClaims.preferred_username === loginHint) {\n            return true;\n        }\n        if (tokenClaims.upn === loginHint) {\n            return true;\n        }\n        return false;\n    }\n    /**\n     * Helper to match sid\n     * @param entity\n     * @param sid\n     * @returns true if the sid claim is present and matches the filter\n     */\n    matchSid(idTokenClaims, sid) {\n        return idTokenClaims.sid === sid;\n    }\n    matchAuthorityType(entity, authorityType) {\n        return !!(entity.authorityType &&\n            authorityType.toLowerCase() === entity.authorityType.toLowerCase());\n    }\n    /**\n     * Returns true if the target scopes are a subset of the current entity's scopes, false otherwise.\n     * @param entity\n     * @param target\n     */\n    matchTarget(entity, target) {\n        const isNotAccessTokenCredential = entity.credentialType !== _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_8__.CredentialType.ACCESS_TOKEN &&\n            entity.credentialType !==\n                _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_8__.CredentialType.ACCESS_TOKEN_WITH_AUTH_SCHEME;\n        if (isNotAccessTokenCredential || !entity.target) {\n            return false;\n        }\n        const entityScopeSet = _request_ScopeSet_mjs__WEBPACK_IMPORTED_MODULE_7__.ScopeSet.fromString(entity.target);\n        return entityScopeSet.containsScopeSet(target);\n    }\n    /**\n     * Returns true if the credential's tokenType or Authentication Scheme matches the one in the request, false otherwise\n     * @param entity\n     * @param tokenType\n     */\n    matchTokenType(entity, tokenType) {\n        return !!(entity.tokenType && entity.tokenType === tokenType);\n    }\n    /**\n     * Returns true if the credential's keyId matches the one in the request, false otherwise\n     * @param entity\n     * @param keyId\n     */\n    matchKeyId(entity, keyId) {\n        return !!(entity.keyId && entity.keyId === keyId);\n    }\n    /**\n     * returns if a given cache entity is of the type appmetadata\n     * @param key\n     */\n    isAppMetadata(key) {\n        return key.indexOf(_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_8__.APP_METADATA) !== -1;\n    }\n    /**\n     * returns if a given cache entity is of the type authoritymetadata\n     * @param key\n     */\n    isAuthorityMetadata(key) {\n        return key.indexOf(_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_8__.AUTHORITY_METADATA_CONSTANTS.CACHE_KEY) !== -1;\n    }\n    /**\n     * returns cache key used for cloud instance metadata\n     */\n    generateAuthorityMetadataCacheKey(authority) {\n        return `${_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_8__.AUTHORITY_METADATA_CONSTANTS.CACHE_KEY}-${this.clientId}-${authority}`;\n    }\n    /**\n     * Helper to convert serialized data to object\n     * @param obj\n     * @param json\n     */\n    static toObject(obj, json) {\n        for (const propertyName in json) {\n            obj[propertyName] = json[propertyName];\n        }\n        return obj;\n    }\n}\n/** @internal */\nclass DefaultStorageClass extends CacheManager {\n    setAccount() {\n        throw (0,_error_ClientAuthError_mjs__WEBPACK_IMPORTED_MODULE_3__.createClientAuthError)(_error_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_4__.methodNotImplemented);\n    }\n    getAccount() {\n        throw (0,_error_ClientAuthError_mjs__WEBPACK_IMPORTED_MODULE_3__.createClientAuthError)(_error_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_4__.methodNotImplemented);\n    }\n    getCachedAccountEntity() {\n        throw (0,_error_ClientAuthError_mjs__WEBPACK_IMPORTED_MODULE_3__.createClientAuthError)(_error_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_4__.methodNotImplemented);\n    }\n    setIdTokenCredential() {\n        throw (0,_error_ClientAuthError_mjs__WEBPACK_IMPORTED_MODULE_3__.createClientAuthError)(_error_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_4__.methodNotImplemented);\n    }\n    getIdTokenCredential() {\n        throw (0,_error_ClientAuthError_mjs__WEBPACK_IMPORTED_MODULE_3__.createClientAuthError)(_error_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_4__.methodNotImplemented);\n    }\n    setAccessTokenCredential() {\n        throw (0,_error_ClientAuthError_mjs__WEBPACK_IMPORTED_MODULE_3__.createClientAuthError)(_error_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_4__.methodNotImplemented);\n    }\n    getAccessTokenCredential() {\n        throw (0,_error_ClientAuthError_mjs__WEBPACK_IMPORTED_MODULE_3__.createClientAuthError)(_error_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_4__.methodNotImplemented);\n    }\n    setRefreshTokenCredential() {\n        throw (0,_error_ClientAuthError_mjs__WEBPACK_IMPORTED_MODULE_3__.createClientAuthError)(_error_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_4__.methodNotImplemented);\n    }\n    getRefreshTokenCredential() {\n        throw (0,_error_ClientAuthError_mjs__WEBPACK_IMPORTED_MODULE_3__.createClientAuthError)(_error_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_4__.methodNotImplemented);\n    }\n    setAppMetadata() {\n        throw (0,_error_ClientAuthError_mjs__WEBPACK_IMPORTED_MODULE_3__.createClientAuthError)(_error_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_4__.methodNotImplemented);\n    }\n    getAppMetadata() {\n        throw (0,_error_ClientAuthError_mjs__WEBPACK_IMPORTED_MODULE_3__.createClientAuthError)(_error_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_4__.methodNotImplemented);\n    }\n    setServerTelemetry() {\n        throw (0,_error_ClientAuthError_mjs__WEBPACK_IMPORTED_MODULE_3__.createClientAuthError)(_error_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_4__.methodNotImplemented);\n    }\n    getServerTelemetry() {\n        throw (0,_error_ClientAuthError_mjs__WEBPACK_IMPORTED_MODULE_3__.createClientAuthError)(_error_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_4__.methodNotImplemented);\n    }\n    setAuthorityMetadata() {\n        throw (0,_error_ClientAuthError_mjs__WEBPACK_IMPORTED_MODULE_3__.createClientAuthError)(_error_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_4__.methodNotImplemented);\n    }\n    getAuthorityMetadata() {\n        throw (0,_error_ClientAuthError_mjs__WEBPACK_IMPORTED_MODULE_3__.createClientAuthError)(_error_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_4__.methodNotImplemented);\n    }\n    getAuthorityMetadataKeys() {\n        throw (0,_error_ClientAuthError_mjs__WEBPACK_IMPORTED_MODULE_3__.createClientAuthError)(_error_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_4__.methodNotImplemented);\n    }\n    setThrottlingCache() {\n        throw (0,_error_ClientAuthError_mjs__WEBPACK_IMPORTED_MODULE_3__.createClientAuthError)(_error_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_4__.methodNotImplemented);\n    }\n    getThrottlingCache() {\n        throw (0,_error_ClientAuthError_mjs__WEBPACK_IMPORTED_MODULE_3__.createClientAuthError)(_error_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_4__.methodNotImplemented);\n    }\n    removeItem() {\n        throw (0,_error_ClientAuthError_mjs__WEBPACK_IMPORTED_MODULE_3__.createClientAuthError)(_error_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_4__.methodNotImplemented);\n    }\n    getKeys() {\n        throw (0,_error_ClientAuthError_mjs__WEBPACK_IMPORTED_MODULE_3__.createClientAuthError)(_error_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_4__.methodNotImplemented);\n    }\n    getAccountKeys() {\n        throw (0,_error_ClientAuthError_mjs__WEBPACK_IMPORTED_MODULE_3__.createClientAuthError)(_error_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_4__.methodNotImplemented);\n    }\n    getTokenKeys() {\n        throw (0,_error_ClientAuthError_mjs__WEBPACK_IMPORTED_MODULE_3__.createClientAuthError)(_error_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_4__.methodNotImplemented);\n    }\n    async clear() {\n        throw (0,_error_ClientAuthError_mjs__WEBPACK_IMPORTED_MODULE_3__.createClientAuthError)(_error_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_4__.methodNotImplemented);\n    }\n    updateCredentialCacheKey() {\n        throw (0,_error_ClientAuthError_mjs__WEBPACK_IMPORTED_MODULE_3__.createClientAuthError)(_error_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_4__.methodNotImplemented);\n    }\n    removeOutdatedAccount() {\n        throw (0,_error_ClientAuthError_mjs__WEBPACK_IMPORTED_MODULE_3__.createClientAuthError)(_error_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_4__.methodNotImplemented);\n    }\n}\n\n\n//# sourceMappingURL=CacheManager.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/msal-common/dist/cache/CacheManager.mjs\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/msal-common/dist/cache/entities/AccountEntity.mjs":
/*!*******************************************************************************!*\
  !*** ./node_modules/@azure/msal-common/dist/cache/entities/AccountEntity.mjs ***!
  \*******************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AccountEntity: () => (/* binding */ AccountEntity)\n/* harmony export */ });\n/* harmony import */ var _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/Constants.mjs */ \"(rsc)/./node_modules/@azure/msal-common/dist/utils/Constants.mjs\");\n/* harmony import */ var _account_ClientInfo_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../account/ClientInfo.mjs */ \"(rsc)/./node_modules/@azure/msal-common/dist/account/ClientInfo.mjs\");\n/* harmony import */ var _account_AccountInfo_mjs__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../account/AccountInfo.mjs */ \"(rsc)/./node_modules/@azure/msal-common/dist/account/AccountInfo.mjs\");\n/* harmony import */ var _error_ClientAuthError_mjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../error/ClientAuthError.mjs */ \"(rsc)/./node_modules/@azure/msal-common/dist/error/ClientAuthError.mjs\");\n/* harmony import */ var _authority_AuthorityType_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../authority/AuthorityType.mjs */ \"(rsc)/./node_modules/@azure/msal-common/dist/authority/AuthorityType.mjs\");\n/* harmony import */ var _account_TokenClaims_mjs__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../account/TokenClaims.mjs */ \"(rsc)/./node_modules/@azure/msal-common/dist/account/TokenClaims.mjs\");\n/* harmony import */ var _authority_ProtocolMode_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../authority/ProtocolMode.mjs */ \"(rsc)/./node_modules/@azure/msal-common/dist/authority/ProtocolMode.mjs\");\n/* harmony import */ var _error_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../error/ClientAuthErrorCodes.mjs */ \"(rsc)/./node_modules/@azure/msal-common/dist/error/ClientAuthErrorCodes.mjs\");\n/*! @azure/msal-common v14.14.0 2024-07-23 */\n\n\n\n\n\n\n\n\n\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n/**\n * Type that defines required and optional parameters for an Account field (based on universal cache schema implemented by all MSALs).\n *\n * Key : Value Schema\n *\n * Key: <home_account_id>-<environment>-<realm*>\n *\n * Value Schema:\n * {\n *      homeAccountId: home account identifier for the auth scheme,\n *      environment: entity that issued the token, represented as a full host\n *      realm: Full tenant or organizational identifier that the account belongs to\n *      localAccountId: Original tenant-specific accountID, usually used for legacy cases\n *      username: primary username that represents the user, usually corresponds to preferred_username in the v2 endpt\n *      authorityType: Accounts authority type as a string\n *      name: Full name for the account, including given name and family name,\n *      lastModificationTime: last time this entity was modified in the cache\n *      lastModificationApp:\n *      nativeAccountId: Account identifier on the native device\n *      tenantProfiles: Array of tenant profile objects for each tenant that the account has authenticated with in the browser\n * }\n * @internal\n */\nclass AccountEntity {\n    /**\n     * Generate Account Id key component as per the schema: <home_account_id>-<environment>\n     */\n    generateAccountId() {\n        const accountId = [this.homeAccountId, this.environment];\n        return accountId.join(_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.Separators.CACHE_KEY_SEPARATOR).toLowerCase();\n    }\n    /**\n     * Generate Account Cache Key as per the schema: <home_account_id>-<environment>-<realm*>\n     */\n    generateAccountKey() {\n        return AccountEntity.generateAccountCacheKey({\n            homeAccountId: this.homeAccountId,\n            environment: this.environment,\n            tenantId: this.realm,\n            username: this.username,\n            localAccountId: this.localAccountId,\n        });\n    }\n    /**\n     * Returns the AccountInfo interface for this account.\n     */\n    getAccountInfo() {\n        return {\n            homeAccountId: this.homeAccountId,\n            environment: this.environment,\n            tenantId: this.realm,\n            username: this.username,\n            localAccountId: this.localAccountId,\n            name: this.name,\n            nativeAccountId: this.nativeAccountId,\n            authorityType: this.authorityType,\n            // Deserialize tenant profiles array into a Map\n            tenantProfiles: new Map((this.tenantProfiles || []).map((tenantProfile) => {\n                return [tenantProfile.tenantId, tenantProfile];\n            })),\n        };\n    }\n    /**\n     * Returns true if the account entity is in single tenant format (outdated), false otherwise\n     */\n    isSingleTenant() {\n        return !this.tenantProfiles;\n    }\n    /**\n     * Generates account key from interface\n     * @param accountInterface\n     */\n    static generateAccountCacheKey(accountInterface) {\n        const homeTenantId = accountInterface.homeAccountId.split(\".\")[1];\n        const accountKey = [\n            accountInterface.homeAccountId,\n            accountInterface.environment || \"\",\n            homeTenantId || accountInterface.tenantId || \"\",\n        ];\n        return accountKey.join(_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.Separators.CACHE_KEY_SEPARATOR).toLowerCase();\n    }\n    /**\n     * Build Account cache from IdToken, clientInfo and authority/policy. Associated with AAD.\n     * @param accountDetails\n     */\n    static createAccount(accountDetails, authority, base64Decode) {\n        const account = new AccountEntity();\n        if (authority.authorityType === _authority_AuthorityType_mjs__WEBPACK_IMPORTED_MODULE_1__.AuthorityType.Adfs) {\n            account.authorityType = _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.CacheAccountType.ADFS_ACCOUNT_TYPE;\n        }\n        else if (authority.protocolMode === _authority_ProtocolMode_mjs__WEBPACK_IMPORTED_MODULE_2__.ProtocolMode.AAD) {\n            account.authorityType = _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.CacheAccountType.MSSTS_ACCOUNT_TYPE;\n        }\n        else {\n            account.authorityType = _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.CacheAccountType.GENERIC_ACCOUNT_TYPE;\n        }\n        let clientInfo;\n        if (accountDetails.clientInfo && base64Decode) {\n            clientInfo = (0,_account_ClientInfo_mjs__WEBPACK_IMPORTED_MODULE_3__.buildClientInfo)(accountDetails.clientInfo, base64Decode);\n        }\n        account.clientInfo = accountDetails.clientInfo;\n        account.homeAccountId = accountDetails.homeAccountId;\n        account.nativeAccountId = accountDetails.nativeAccountId;\n        const env = accountDetails.environment ||\n            (authority && authority.getPreferredCache());\n        if (!env) {\n            throw (0,_error_ClientAuthError_mjs__WEBPACK_IMPORTED_MODULE_4__.createClientAuthError)(_error_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_5__.invalidCacheEnvironment);\n        }\n        account.environment = env;\n        // non AAD scenarios can have empty realm\n        account.realm =\n            clientInfo?.utid ||\n                (0,_account_TokenClaims_mjs__WEBPACK_IMPORTED_MODULE_6__.getTenantIdFromIdTokenClaims)(accountDetails.idTokenClaims) ||\n                \"\";\n        // How do you account for MSA CID here?\n        account.localAccountId =\n            clientInfo?.uid ||\n                accountDetails.idTokenClaims?.oid ||\n                accountDetails.idTokenClaims?.sub ||\n                \"\";\n        /*\n         * In B2C scenarios the emails claim is used instead of preferred_username and it is an array.\n         * In most cases it will contain a single email. This field should not be relied upon if a custom\n         * policy is configured to return more than 1 email.\n         */\n        const preferredUsername = accountDetails.idTokenClaims?.preferred_username ||\n            accountDetails.idTokenClaims?.upn;\n        const email = accountDetails.idTokenClaims?.emails\n            ? accountDetails.idTokenClaims.emails[0]\n            : null;\n        account.username = preferredUsername || email || \"\";\n        account.name = accountDetails.idTokenClaims?.name || \"\";\n        account.cloudGraphHostName = accountDetails.cloudGraphHostName;\n        account.msGraphHost = accountDetails.msGraphHost;\n        if (accountDetails.tenantProfiles) {\n            account.tenantProfiles = accountDetails.tenantProfiles;\n        }\n        else {\n            const tenantProfile = (0,_account_AccountInfo_mjs__WEBPACK_IMPORTED_MODULE_7__.buildTenantProfile)(accountDetails.homeAccountId, account.localAccountId, account.realm, accountDetails.idTokenClaims);\n            account.tenantProfiles = [tenantProfile];\n        }\n        return account;\n    }\n    /**\n     * Creates an AccountEntity object from AccountInfo\n     * @param accountInfo\n     * @param cloudGraphHostName\n     * @param msGraphHost\n     * @returns\n     */\n    static createFromAccountInfo(accountInfo, cloudGraphHostName, msGraphHost) {\n        const account = new AccountEntity();\n        account.authorityType =\n            accountInfo.authorityType || _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.CacheAccountType.GENERIC_ACCOUNT_TYPE;\n        account.homeAccountId = accountInfo.homeAccountId;\n        account.localAccountId = accountInfo.localAccountId;\n        account.nativeAccountId = accountInfo.nativeAccountId;\n        account.realm = accountInfo.tenantId;\n        account.environment = accountInfo.environment;\n        account.username = accountInfo.username;\n        account.name = accountInfo.name;\n        account.cloudGraphHostName = cloudGraphHostName;\n        account.msGraphHost = msGraphHost;\n        // Serialize tenant profiles map into an array\n        account.tenantProfiles = Array.from(accountInfo.tenantProfiles?.values() || []);\n        return account;\n    }\n    /**\n     * Generate HomeAccountId from server response\n     * @param serverClientInfo\n     * @param authType\n     */\n    static generateHomeAccountId(serverClientInfo, authType, logger, cryptoObj, idTokenClaims) {\n        // since ADFS/DSTS do not have tid and does not set client_info\n        if (!(authType === _authority_AuthorityType_mjs__WEBPACK_IMPORTED_MODULE_1__.AuthorityType.Adfs ||\n            authType === _authority_AuthorityType_mjs__WEBPACK_IMPORTED_MODULE_1__.AuthorityType.Dsts)) {\n            // for cases where there is clientInfo\n            if (serverClientInfo) {\n                try {\n                    const clientInfo = (0,_account_ClientInfo_mjs__WEBPACK_IMPORTED_MODULE_3__.buildClientInfo)(serverClientInfo, cryptoObj.base64Decode);\n                    if (clientInfo.uid && clientInfo.utid) {\n                        return `${clientInfo.uid}.${clientInfo.utid}`;\n                    }\n                }\n                catch (e) { }\n            }\n            logger.warning(\"No client info in response\");\n        }\n        // default to \"sub\" claim\n        return idTokenClaims?.sub || \"\";\n    }\n    /**\n     * Validates an entity: checks for all expected params\n     * @param entity\n     */\n    static isAccountEntity(entity) {\n        if (!entity) {\n            return false;\n        }\n        return (entity.hasOwnProperty(\"homeAccountId\") &&\n            entity.hasOwnProperty(\"environment\") &&\n            entity.hasOwnProperty(\"realm\") &&\n            entity.hasOwnProperty(\"localAccountId\") &&\n            entity.hasOwnProperty(\"username\") &&\n            entity.hasOwnProperty(\"authorityType\"));\n    }\n    /**\n     * Helper function to determine whether 2 accountInfo objects represent the same account\n     * @param accountA\n     * @param accountB\n     * @param compareClaims - If set to true idTokenClaims will also be compared to determine account equality\n     */\n    static accountInfoIsEqual(accountA, accountB, compareClaims) {\n        if (!accountA || !accountB) {\n            return false;\n        }\n        let claimsMatch = true; // default to true so as to not fail comparison below if compareClaims: false\n        if (compareClaims) {\n            const accountAClaims = (accountA.idTokenClaims ||\n                {});\n            const accountBClaims = (accountB.idTokenClaims ||\n                {});\n            // issued at timestamp and nonce are expected to change each time a new id token is acquired\n            claimsMatch =\n                accountAClaims.iat === accountBClaims.iat &&\n                    accountAClaims.nonce === accountBClaims.nonce;\n        }\n        return (accountA.homeAccountId === accountB.homeAccountId &&\n            accountA.localAccountId === accountB.localAccountId &&\n            accountA.username === accountB.username &&\n            accountA.tenantId === accountB.tenantId &&\n            accountA.environment === accountB.environment &&\n            accountA.nativeAccountId === accountB.nativeAccountId &&\n            claimsMatch);\n    }\n}\n\n\n//# sourceMappingURL=AccountEntity.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/msal-common/dist/cache/entities/AccountEntity.mjs\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/msal-common/dist/cache/persistence/TokenCacheContext.mjs":
/*!**************************************************************************************!*\
  !*** ./node_modules/@azure/msal-common/dist/cache/persistence/TokenCacheContext.mjs ***!
  \**************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   TokenCacheContext: () => (/* binding */ TokenCacheContext)\n/* harmony export */ });\n/*! @azure/msal-common v14.14.0 2024-07-23 */\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n/**\n * This class instance helps track the memory changes facilitating\n * decisions to read from and write to the persistent cache\n */ class TokenCacheContext {\n    constructor(tokenCache, hasChanged) {\n        this.cache = tokenCache;\n        this.hasChanged = hasChanged;\n    }\n    /**\n     * boolean which indicates the changes in cache\n     */\n    get cacheHasChanged() {\n        return this.hasChanged;\n    }\n    /**\n     * function to retrieve the token cache\n     */\n    get tokenCache() {\n        return this.cache;\n    }\n}\n\n\n//# sourceMappingURL=TokenCacheContext.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtY29tbW9uL2Rpc3QvY2FjaGUvcGVyc2lzdGVuY2UvVG9rZW5DYWNoZUNvbnRleHQubWpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQTtBQUNhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRTZCO0FBQzdCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZGFuaWVsMy12cDIvLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtY29tbW9uL2Rpc3QvY2FjaGUvcGVyc2lzdGVuY2UvVG9rZW5DYWNoZUNvbnRleHQubWpzPzM5MmQiXSwic291cmNlc0NvbnRlbnQiOlsiLyohIEBhenVyZS9tc2FsLWNvbW1vbiB2MTQuMTQuMCAyMDI0LTA3LTIzICovXG4ndXNlIHN0cmljdCc7XG4vKlxuICogQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uIEFsbCByaWdodHMgcmVzZXJ2ZWQuXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIExpY2Vuc2UuXG4gKi9cbi8qKlxuICogVGhpcyBjbGFzcyBpbnN0YW5jZSBoZWxwcyB0cmFjayB0aGUgbWVtb3J5IGNoYW5nZXMgZmFjaWxpdGF0aW5nXG4gKiBkZWNpc2lvbnMgdG8gcmVhZCBmcm9tIGFuZCB3cml0ZSB0byB0aGUgcGVyc2lzdGVudCBjYWNoZVxuICovIGNsYXNzIFRva2VuQ2FjaGVDb250ZXh0IHtcbiAgICBjb25zdHJ1Y3Rvcih0b2tlbkNhY2hlLCBoYXNDaGFuZ2VkKSB7XG4gICAgICAgIHRoaXMuY2FjaGUgPSB0b2tlbkNhY2hlO1xuICAgICAgICB0aGlzLmhhc0NoYW5nZWQgPSBoYXNDaGFuZ2VkO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBib29sZWFuIHdoaWNoIGluZGljYXRlcyB0aGUgY2hhbmdlcyBpbiBjYWNoZVxuICAgICAqL1xuICAgIGdldCBjYWNoZUhhc0NoYW5nZWQoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLmhhc0NoYW5nZWQ7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIGZ1bmN0aW9uIHRvIHJldHJpZXZlIHRoZSB0b2tlbiBjYWNoZVxuICAgICAqL1xuICAgIGdldCB0b2tlbkNhY2hlKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5jYWNoZTtcbiAgICB9XG59XG5cbmV4cG9ydCB7IFRva2VuQ2FjaGVDb250ZXh0IH07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1Ub2tlbkNhY2hlQ29udGV4dC5tanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/msal-common/dist/cache/persistence/TokenCacheContext.mjs\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/msal-common/dist/cache/utils/CacheHelpers.mjs":
/*!***************************************************************************!*\
  !*** ./node_modules/@azure/msal-common/dist/cache/utils/CacheHelpers.mjs ***!
  \***************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createAccessTokenEntity: () => (/* binding */ createAccessTokenEntity),\n/* harmony export */   createIdTokenEntity: () => (/* binding */ createIdTokenEntity),\n/* harmony export */   createRefreshTokenEntity: () => (/* binding */ createRefreshTokenEntity),\n/* harmony export */   generateAppMetadataKey: () => (/* binding */ generateAppMetadataKey),\n/* harmony export */   generateAuthorityMetadataExpiresAt: () => (/* binding */ generateAuthorityMetadataExpiresAt),\n/* harmony export */   generateCredentialKey: () => (/* binding */ generateCredentialKey),\n/* harmony export */   isAccessTokenEntity: () => (/* binding */ isAccessTokenEntity),\n/* harmony export */   isAppMetadataEntity: () => (/* binding */ isAppMetadataEntity),\n/* harmony export */   isAuthorityMetadataEntity: () => (/* binding */ isAuthorityMetadataEntity),\n/* harmony export */   isAuthorityMetadataExpired: () => (/* binding */ isAuthorityMetadataExpired),\n/* harmony export */   isCredentialEntity: () => (/* binding */ isCredentialEntity),\n/* harmony export */   isIdTokenEntity: () => (/* binding */ isIdTokenEntity),\n/* harmony export */   isRefreshTokenEntity: () => (/* binding */ isRefreshTokenEntity),\n/* harmony export */   isServerTelemetryEntity: () => (/* binding */ isServerTelemetryEntity),\n/* harmony export */   isThrottlingEntity: () => (/* binding */ isThrottlingEntity),\n/* harmony export */   updateAuthorityEndpointMetadata: () => (/* binding */ updateAuthorityEndpointMetadata),\n/* harmony export */   updateCloudDiscoveryMetadata: () => (/* binding */ updateCloudDiscoveryMetadata)\n/* harmony export */ });\n/* harmony import */ var _account_AuthToken_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../account/AuthToken.mjs */ \"(rsc)/./node_modules/@azure/msal-common/dist/account/AuthToken.mjs\");\n/* harmony import */ var _error_ClientAuthError_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../error/ClientAuthError.mjs */ \"(rsc)/./node_modules/@azure/msal-common/dist/error/ClientAuthError.mjs\");\n/* harmony import */ var _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/Constants.mjs */ \"(rsc)/./node_modules/@azure/msal-common/dist/utils/Constants.mjs\");\n/* harmony import */ var _utils_TimeUtils_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/TimeUtils.mjs */ \"(rsc)/./node_modules/@azure/msal-common/dist/utils/TimeUtils.mjs\");\n/* harmony import */ var _error_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../error/ClientAuthErrorCodes.mjs */ \"(rsc)/./node_modules/@azure/msal-common/dist/error/ClientAuthErrorCodes.mjs\");\n/*! @azure/msal-common v14.14.0 2024-07-23 */\n\n\n\n\n\n\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n/**\n * Cache Key: <home_account_id>-<environment>-<credential_type>-<client_id or familyId>-<realm>-<scopes>-<claims hash>-<scheme>\n * IdToken Example: uid.utid-login.microsoftonline.com-idtoken-app_client_id-contoso.com\n * AccessToken Example: uid.utid-login.microsoftonline.com-accesstoken-app_client_id-contoso.com-scope1 scope2--pop\n * RefreshToken Example: uid.utid-login.microsoftonline.com-refreshtoken-1-contoso.com\n * @param credentialEntity\n * @returns\n */\nfunction generateCredentialKey(credentialEntity) {\n    const credentialKey = [\n        generateAccountId(credentialEntity),\n        generateCredentialId(credentialEntity),\n        generateTarget(credentialEntity),\n        generateClaimsHash(credentialEntity),\n        generateScheme(credentialEntity),\n    ];\n    return credentialKey.join(_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.Separators.CACHE_KEY_SEPARATOR).toLowerCase();\n}\n/**\n * Create IdTokenEntity\n * @param homeAccountId\n * @param authenticationResult\n * @param clientId\n * @param authority\n */\nfunction createIdTokenEntity(homeAccountId, environment, idToken, clientId, tenantId) {\n    const idTokenEntity = {\n        credentialType: _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.CredentialType.ID_TOKEN,\n        homeAccountId: homeAccountId,\n        environment: environment,\n        clientId: clientId,\n        secret: idToken,\n        realm: tenantId,\n    };\n    return idTokenEntity;\n}\n/**\n * Create AccessTokenEntity\n * @param homeAccountId\n * @param environment\n * @param accessToken\n * @param clientId\n * @param tenantId\n * @param scopes\n * @param expiresOn\n * @param extExpiresOn\n */\nfunction createAccessTokenEntity(homeAccountId, environment, accessToken, clientId, tenantId, scopes, expiresOn, extExpiresOn, base64Decode, refreshOn, tokenType, userAssertionHash, keyId, requestedClaims, requestedClaimsHash) {\n    const atEntity = {\n        homeAccountId: homeAccountId,\n        credentialType: _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.CredentialType.ACCESS_TOKEN,\n        secret: accessToken,\n        cachedAt: (0,_utils_TimeUtils_mjs__WEBPACK_IMPORTED_MODULE_1__.nowSeconds)().toString(),\n        expiresOn: expiresOn.toString(),\n        extendedExpiresOn: extExpiresOn.toString(),\n        environment: environment,\n        clientId: clientId,\n        realm: tenantId,\n        target: scopes,\n        tokenType: tokenType || _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.AuthenticationScheme.BEARER,\n    };\n    if (userAssertionHash) {\n        atEntity.userAssertionHash = userAssertionHash;\n    }\n    if (refreshOn) {\n        atEntity.refreshOn = refreshOn.toString();\n    }\n    if (requestedClaims) {\n        atEntity.requestedClaims = requestedClaims;\n        atEntity.requestedClaimsHash = requestedClaimsHash;\n    }\n    /*\n     * Create Access Token With Auth Scheme instead of regular access token\n     * Cast to lower to handle \"bearer\" from ADFS\n     */\n    if (atEntity.tokenType?.toLowerCase() !==\n        _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.AuthenticationScheme.BEARER.toLowerCase()) {\n        atEntity.credentialType = _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.CredentialType.ACCESS_TOKEN_WITH_AUTH_SCHEME;\n        switch (atEntity.tokenType) {\n            case _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.AuthenticationScheme.POP:\n                // Make sure keyId is present and add it to credential\n                const tokenClaims = (0,_account_AuthToken_mjs__WEBPACK_IMPORTED_MODULE_2__.extractTokenClaims)(accessToken, base64Decode);\n                if (!tokenClaims?.cnf?.kid) {\n                    throw (0,_error_ClientAuthError_mjs__WEBPACK_IMPORTED_MODULE_3__.createClientAuthError)(_error_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_4__.tokenClaimsCnfRequiredForSignedJwt);\n                }\n                atEntity.keyId = tokenClaims.cnf.kid;\n                break;\n            case _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.AuthenticationScheme.SSH:\n                atEntity.keyId = keyId;\n        }\n    }\n    return atEntity;\n}\n/**\n * Create RefreshTokenEntity\n * @param homeAccountId\n * @param authenticationResult\n * @param clientId\n * @param authority\n */\nfunction createRefreshTokenEntity(homeAccountId, environment, refreshToken, clientId, familyId, userAssertionHash, expiresOn) {\n    const rtEntity = {\n        credentialType: _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.CredentialType.REFRESH_TOKEN,\n        homeAccountId: homeAccountId,\n        environment: environment,\n        clientId: clientId,\n        secret: refreshToken,\n    };\n    if (userAssertionHash) {\n        rtEntity.userAssertionHash = userAssertionHash;\n    }\n    if (familyId) {\n        rtEntity.familyId = familyId;\n    }\n    if (expiresOn) {\n        rtEntity.expiresOn = expiresOn.toString();\n    }\n    return rtEntity;\n}\nfunction isCredentialEntity(entity) {\n    return (entity.hasOwnProperty(\"homeAccountId\") &&\n        entity.hasOwnProperty(\"environment\") &&\n        entity.hasOwnProperty(\"credentialType\") &&\n        entity.hasOwnProperty(\"clientId\") &&\n        entity.hasOwnProperty(\"secret\"));\n}\n/**\n * Validates an entity: checks for all expected params\n * @param entity\n */\nfunction isAccessTokenEntity(entity) {\n    if (!entity) {\n        return false;\n    }\n    return (isCredentialEntity(entity) &&\n        entity.hasOwnProperty(\"realm\") &&\n        entity.hasOwnProperty(\"target\") &&\n        (entity[\"credentialType\"] === _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.CredentialType.ACCESS_TOKEN ||\n            entity[\"credentialType\"] ===\n                _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.CredentialType.ACCESS_TOKEN_WITH_AUTH_SCHEME));\n}\n/**\n * Validates an entity: checks for all expected params\n * @param entity\n */\nfunction isIdTokenEntity(entity) {\n    if (!entity) {\n        return false;\n    }\n    return (isCredentialEntity(entity) &&\n        entity.hasOwnProperty(\"realm\") &&\n        entity[\"credentialType\"] === _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.CredentialType.ID_TOKEN);\n}\n/**\n * Validates an entity: checks for all expected params\n * @param entity\n */\nfunction isRefreshTokenEntity(entity) {\n    if (!entity) {\n        return false;\n    }\n    return (isCredentialEntity(entity) &&\n        entity[\"credentialType\"] === _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.CredentialType.REFRESH_TOKEN);\n}\n/**\n * Generate Account Id key component as per the schema: <home_account_id>-<environment>\n */\nfunction generateAccountId(credentialEntity) {\n    const accountId = [\n        credentialEntity.homeAccountId,\n        credentialEntity.environment,\n    ];\n    return accountId.join(_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.Separators.CACHE_KEY_SEPARATOR).toLowerCase();\n}\n/**\n * Generate Credential Id key component as per the schema: <credential_type>-<client_id>-<realm>\n */\nfunction generateCredentialId(credentialEntity) {\n    const clientOrFamilyId = credentialEntity.credentialType === _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.CredentialType.REFRESH_TOKEN\n        ? credentialEntity.familyId || credentialEntity.clientId\n        : credentialEntity.clientId;\n    const credentialId = [\n        credentialEntity.credentialType,\n        clientOrFamilyId,\n        credentialEntity.realm || \"\",\n    ];\n    return credentialId.join(_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.Separators.CACHE_KEY_SEPARATOR).toLowerCase();\n}\n/**\n * Generate target key component as per schema: <target>\n */\nfunction generateTarget(credentialEntity) {\n    return (credentialEntity.target || \"\").toLowerCase();\n}\n/**\n * Generate requested claims key component as per schema: <requestedClaims>\n */\nfunction generateClaimsHash(credentialEntity) {\n    return (credentialEntity.requestedClaimsHash || \"\").toLowerCase();\n}\n/**\n * Generate scheme key componenet as per schema: <scheme>\n */\nfunction generateScheme(credentialEntity) {\n    /*\n     * PoP Tokens and SSH certs include scheme in cache key\n     * Cast to lowercase to handle \"bearer\" from ADFS\n     */\n    return credentialEntity.tokenType &&\n        credentialEntity.tokenType.toLowerCase() !==\n            _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.AuthenticationScheme.BEARER.toLowerCase()\n        ? credentialEntity.tokenType.toLowerCase()\n        : \"\";\n}\n/**\n * validates if a given cache entry is \"Telemetry\", parses <key,value>\n * @param key\n * @param entity\n */\nfunction isServerTelemetryEntity(key, entity) {\n    const validateKey = key.indexOf(_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.SERVER_TELEM_CONSTANTS.CACHE_KEY) === 0;\n    let validateEntity = true;\n    if (entity) {\n        validateEntity =\n            entity.hasOwnProperty(\"failedRequests\") &&\n                entity.hasOwnProperty(\"errors\") &&\n                entity.hasOwnProperty(\"cacheHits\");\n    }\n    return validateKey && validateEntity;\n}\n/**\n * validates if a given cache entry is \"Throttling\", parses <key,value>\n * @param key\n * @param entity\n */\nfunction isThrottlingEntity(key, entity) {\n    let validateKey = false;\n    if (key) {\n        validateKey = key.indexOf(_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.ThrottlingConstants.THROTTLING_PREFIX) === 0;\n    }\n    let validateEntity = true;\n    if (entity) {\n        validateEntity = entity.hasOwnProperty(\"throttleTime\");\n    }\n    return validateKey && validateEntity;\n}\n/**\n * Generate AppMetadata Cache Key as per the schema: appmetadata-<environment>-<client_id>\n */\nfunction generateAppMetadataKey({ environment, clientId, }) {\n    const appMetaDataKeyArray = [\n        _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.APP_METADATA,\n        environment,\n        clientId,\n    ];\n    return appMetaDataKeyArray\n        .join(_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.Separators.CACHE_KEY_SEPARATOR)\n        .toLowerCase();\n}\n/*\n * Validates an entity: checks for all expected params\n * @param entity\n */\nfunction isAppMetadataEntity(key, entity) {\n    if (!entity) {\n        return false;\n    }\n    return (key.indexOf(_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.APP_METADATA) === 0 &&\n        entity.hasOwnProperty(\"clientId\") &&\n        entity.hasOwnProperty(\"environment\"));\n}\n/**\n * Validates an entity: checks for all expected params\n * @param entity\n */\nfunction isAuthorityMetadataEntity(key, entity) {\n    if (!entity) {\n        return false;\n    }\n    return (key.indexOf(_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.AUTHORITY_METADATA_CONSTANTS.CACHE_KEY) === 0 &&\n        entity.hasOwnProperty(\"aliases\") &&\n        entity.hasOwnProperty(\"preferred_cache\") &&\n        entity.hasOwnProperty(\"preferred_network\") &&\n        entity.hasOwnProperty(\"canonical_authority\") &&\n        entity.hasOwnProperty(\"authorization_endpoint\") &&\n        entity.hasOwnProperty(\"token_endpoint\") &&\n        entity.hasOwnProperty(\"issuer\") &&\n        entity.hasOwnProperty(\"aliasesFromNetwork\") &&\n        entity.hasOwnProperty(\"endpointsFromNetwork\") &&\n        entity.hasOwnProperty(\"expiresAt\") &&\n        entity.hasOwnProperty(\"jwks_uri\"));\n}\n/**\n * Reset the exiresAt value\n */\nfunction generateAuthorityMetadataExpiresAt() {\n    return ((0,_utils_TimeUtils_mjs__WEBPACK_IMPORTED_MODULE_1__.nowSeconds)() +\n        _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.AUTHORITY_METADATA_CONSTANTS.REFRESH_TIME_SECONDS);\n}\nfunction updateAuthorityEndpointMetadata(authorityMetadata, updatedValues, fromNetwork) {\n    authorityMetadata.authorization_endpoint =\n        updatedValues.authorization_endpoint;\n    authorityMetadata.token_endpoint = updatedValues.token_endpoint;\n    authorityMetadata.end_session_endpoint = updatedValues.end_session_endpoint;\n    authorityMetadata.issuer = updatedValues.issuer;\n    authorityMetadata.endpointsFromNetwork = fromNetwork;\n    authorityMetadata.jwks_uri = updatedValues.jwks_uri;\n}\nfunction updateCloudDiscoveryMetadata(authorityMetadata, updatedValues, fromNetwork) {\n    authorityMetadata.aliases = updatedValues.aliases;\n    authorityMetadata.preferred_cache = updatedValues.preferred_cache;\n    authorityMetadata.preferred_network = updatedValues.preferred_network;\n    authorityMetadata.aliasesFromNetwork = fromNetwork;\n}\n/**\n * Returns whether or not the data needs to be refreshed\n */\nfunction isAuthorityMetadataExpired(metadata) {\n    return metadata.expiresAt <= (0,_utils_TimeUtils_mjs__WEBPACK_IMPORTED_MODULE_1__.nowSeconds)();\n}\n\n\n//# sourceMappingURL=CacheHelpers.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtY29tbW9uL2Rpc3QvY2FjaGUvdXRpbHMvQ2FjaGVIZWxwZXJzLm1qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQUE7QUFDYTtBQUNvRDtBQUNPO0FBQzhHO0FBQy9IO0FBQ21DOztBQUUxRjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsOEJBQThCLDREQUFVO0FBQ3hDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esd0JBQXdCLGdFQUFjO0FBQ3RDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esd0JBQXdCLGdFQUFjO0FBQ3RDO0FBQ0Esa0JBQWtCLGdFQUFVO0FBQzVCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdDQUFnQyxzRUFBb0I7QUFDcEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxRQUFRLHNFQUFvQjtBQUM1QixrQ0FBa0MsZ0VBQWM7QUFDaEQ7QUFDQSxpQkFBaUIsc0VBQW9CO0FBQ3JDO0FBQ0Esb0NBQW9DLDBFQUFrQjtBQUN0RDtBQUNBLDBCQUEwQixpRkFBcUIsQ0FBQywrRkFBa0M7QUFDbEY7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCLHNFQUFvQjtBQUNyQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esd0JBQXdCLGdFQUFjO0FBQ3RDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esc0NBQXNDLGdFQUFjO0FBQ3BEO0FBQ0EsZ0JBQWdCLGdFQUFjO0FBQzlCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxxQ0FBcUMsZ0VBQWM7QUFDbkQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxxQ0FBcUMsZ0VBQWM7QUFDbkQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMEJBQTBCLDREQUFVO0FBQ3BDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpRUFBaUUsZ0VBQWM7QUFDL0U7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw2QkFBNkIsNERBQVU7QUFDdkM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFlBQVksc0VBQW9CO0FBQ2hDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG9DQUFvQyx3RUFBc0I7QUFDMUQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtDQUFrQyxxRUFBbUI7QUFDckQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrQ0FBa0Msd0JBQXdCO0FBQzFEO0FBQ0EsUUFBUSw4REFBWTtBQUNwQjtBQUNBO0FBQ0E7QUFDQTtBQUNBLGNBQWMsNERBQVU7QUFDeEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx3QkFBd0IsOERBQVk7QUFDcEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHdCQUF3Qiw4RUFBNEI7QUFDcEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxZQUFZLGdFQUFVO0FBQ3RCLFFBQVEsOEVBQTRCO0FBQ3BDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQ0FBaUMsZ0VBQVU7QUFDM0M7O0FBRTZhO0FBQzdhIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZGFuaWVsMy12cDIvLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtY29tbW9uL2Rpc3QvY2FjaGUvdXRpbHMvQ2FjaGVIZWxwZXJzLm1qcz8zNDI2Il0sInNvdXJjZXNDb250ZW50IjpbIi8qISBAYXp1cmUvbXNhbC1jb21tb24gdjE0LjE0LjAgMjAyNC0wNy0yMyAqL1xuJ3VzZSBzdHJpY3QnO1xuaW1wb3J0IHsgZXh0cmFjdFRva2VuQ2xhaW1zIH0gZnJvbSAnLi4vLi4vYWNjb3VudC9BdXRoVG9rZW4ubWpzJztcbmltcG9ydCB7IGNyZWF0ZUNsaWVudEF1dGhFcnJvciB9IGZyb20gJy4uLy4uL2Vycm9yL0NsaWVudEF1dGhFcnJvci5tanMnO1xuaW1wb3J0IHsgU2VwYXJhdG9ycywgQ3JlZGVudGlhbFR5cGUsIEF1dGhlbnRpY2F0aW9uU2NoZW1lLCBTRVJWRVJfVEVMRU1fQ09OU1RBTlRTLCBUaHJvdHRsaW5nQ29uc3RhbnRzLCBBUFBfTUVUQURBVEEsIEFVVEhPUklUWV9NRVRBREFUQV9DT05TVEFOVFMgfSBmcm9tICcuLi8uLi91dGlscy9Db25zdGFudHMubWpzJztcbmltcG9ydCB7IG5vd1NlY29uZHMgfSBmcm9tICcuLi8uLi91dGlscy9UaW1lVXRpbHMubWpzJztcbmltcG9ydCB7IHRva2VuQ2xhaW1zQ25mUmVxdWlyZWRGb3JTaWduZWRKd3QgfSBmcm9tICcuLi8uLi9lcnJvci9DbGllbnRBdXRoRXJyb3JDb2Rlcy5tanMnO1xuXG4vKlxuICogQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uIEFsbCByaWdodHMgcmVzZXJ2ZWQuXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIExpY2Vuc2UuXG4gKi9cbi8qKlxuICogQ2FjaGUgS2V5OiA8aG9tZV9hY2NvdW50X2lkPi08ZW52aXJvbm1lbnQ+LTxjcmVkZW50aWFsX3R5cGU+LTxjbGllbnRfaWQgb3IgZmFtaWx5SWQ+LTxyZWFsbT4tPHNjb3Blcz4tPGNsYWltcyBoYXNoPi08c2NoZW1lPlxuICogSWRUb2tlbiBFeGFtcGxlOiB1aWQudXRpZC1sb2dpbi5taWNyb3NvZnRvbmxpbmUuY29tLWlkdG9rZW4tYXBwX2NsaWVudF9pZC1jb250b3NvLmNvbVxuICogQWNjZXNzVG9rZW4gRXhhbXBsZTogdWlkLnV0aWQtbG9naW4ubWljcm9zb2Z0b25saW5lLmNvbS1hY2Nlc3N0b2tlbi1hcHBfY2xpZW50X2lkLWNvbnRvc28uY29tLXNjb3BlMSBzY29wZTItLXBvcFxuICogUmVmcmVzaFRva2VuIEV4YW1wbGU6IHVpZC51dGlkLWxvZ2luLm1pY3Jvc29mdG9ubGluZS5jb20tcmVmcmVzaHRva2VuLTEtY29udG9zby5jb21cbiAqIEBwYXJhbSBjcmVkZW50aWFsRW50aXR5XG4gKiBAcmV0dXJuc1xuICovXG5mdW5jdGlvbiBnZW5lcmF0ZUNyZWRlbnRpYWxLZXkoY3JlZGVudGlhbEVudGl0eSkge1xuICAgIGNvbnN0IGNyZWRlbnRpYWxLZXkgPSBbXG4gICAgICAgIGdlbmVyYXRlQWNjb3VudElkKGNyZWRlbnRpYWxFbnRpdHkpLFxuICAgICAgICBnZW5lcmF0ZUNyZWRlbnRpYWxJZChjcmVkZW50aWFsRW50aXR5KSxcbiAgICAgICAgZ2VuZXJhdGVUYXJnZXQoY3JlZGVudGlhbEVudGl0eSksXG4gICAgICAgIGdlbmVyYXRlQ2xhaW1zSGFzaChjcmVkZW50aWFsRW50aXR5KSxcbiAgICAgICAgZ2VuZXJhdGVTY2hlbWUoY3JlZGVudGlhbEVudGl0eSksXG4gICAgXTtcbiAgICByZXR1cm4gY3JlZGVudGlhbEtleS5qb2luKFNlcGFyYXRvcnMuQ0FDSEVfS0VZX1NFUEFSQVRPUikudG9Mb3dlckNhc2UoKTtcbn1cbi8qKlxuICogQ3JlYXRlIElkVG9rZW5FbnRpdHlcbiAqIEBwYXJhbSBob21lQWNjb3VudElkXG4gKiBAcGFyYW0gYXV0aGVudGljYXRpb25SZXN1bHRcbiAqIEBwYXJhbSBjbGllbnRJZFxuICogQHBhcmFtIGF1dGhvcml0eVxuICovXG5mdW5jdGlvbiBjcmVhdGVJZFRva2VuRW50aXR5KGhvbWVBY2NvdW50SWQsIGVudmlyb25tZW50LCBpZFRva2VuLCBjbGllbnRJZCwgdGVuYW50SWQpIHtcbiAgICBjb25zdCBpZFRva2VuRW50aXR5ID0ge1xuICAgICAgICBjcmVkZW50aWFsVHlwZTogQ3JlZGVudGlhbFR5cGUuSURfVE9LRU4sXG4gICAgICAgIGhvbWVBY2NvdW50SWQ6IGhvbWVBY2NvdW50SWQsXG4gICAgICAgIGVudmlyb25tZW50OiBlbnZpcm9ubWVudCxcbiAgICAgICAgY2xpZW50SWQ6IGNsaWVudElkLFxuICAgICAgICBzZWNyZXQ6IGlkVG9rZW4sXG4gICAgICAgIHJlYWxtOiB0ZW5hbnRJZCxcbiAgICB9O1xuICAgIHJldHVybiBpZFRva2VuRW50aXR5O1xufVxuLyoqXG4gKiBDcmVhdGUgQWNjZXNzVG9rZW5FbnRpdHlcbiAqIEBwYXJhbSBob21lQWNjb3VudElkXG4gKiBAcGFyYW0gZW52aXJvbm1lbnRcbiAqIEBwYXJhbSBhY2Nlc3NUb2tlblxuICogQHBhcmFtIGNsaWVudElkXG4gKiBAcGFyYW0gdGVuYW50SWRcbiAqIEBwYXJhbSBzY29wZXNcbiAqIEBwYXJhbSBleHBpcmVzT25cbiAqIEBwYXJhbSBleHRFeHBpcmVzT25cbiAqL1xuZnVuY3Rpb24gY3JlYXRlQWNjZXNzVG9rZW5FbnRpdHkoaG9tZUFjY291bnRJZCwgZW52aXJvbm1lbnQsIGFjY2Vzc1Rva2VuLCBjbGllbnRJZCwgdGVuYW50SWQsIHNjb3BlcywgZXhwaXJlc09uLCBleHRFeHBpcmVzT24sIGJhc2U2NERlY29kZSwgcmVmcmVzaE9uLCB0b2tlblR5cGUsIHVzZXJBc3NlcnRpb25IYXNoLCBrZXlJZCwgcmVxdWVzdGVkQ2xhaW1zLCByZXF1ZXN0ZWRDbGFpbXNIYXNoKSB7XG4gICAgY29uc3QgYXRFbnRpdHkgPSB7XG4gICAgICAgIGhvbWVBY2NvdW50SWQ6IGhvbWVBY2NvdW50SWQsXG4gICAgICAgIGNyZWRlbnRpYWxUeXBlOiBDcmVkZW50aWFsVHlwZS5BQ0NFU1NfVE9LRU4sXG4gICAgICAgIHNlY3JldDogYWNjZXNzVG9rZW4sXG4gICAgICAgIGNhY2hlZEF0OiBub3dTZWNvbmRzKCkudG9TdHJpbmcoKSxcbiAgICAgICAgZXhwaXJlc09uOiBleHBpcmVzT24udG9TdHJpbmcoKSxcbiAgICAgICAgZXh0ZW5kZWRFeHBpcmVzT246IGV4dEV4cGlyZXNPbi50b1N0cmluZygpLFxuICAgICAgICBlbnZpcm9ubWVudDogZW52aXJvbm1lbnQsXG4gICAgICAgIGNsaWVudElkOiBjbGllbnRJZCxcbiAgICAgICAgcmVhbG06IHRlbmFudElkLFxuICAgICAgICB0YXJnZXQ6IHNjb3BlcyxcbiAgICAgICAgdG9rZW5UeXBlOiB0b2tlblR5cGUgfHwgQXV0aGVudGljYXRpb25TY2hlbWUuQkVBUkVSLFxuICAgIH07XG4gICAgaWYgKHVzZXJBc3NlcnRpb25IYXNoKSB7XG4gICAgICAgIGF0RW50aXR5LnVzZXJBc3NlcnRpb25IYXNoID0gdXNlckFzc2VydGlvbkhhc2g7XG4gICAgfVxuICAgIGlmIChyZWZyZXNoT24pIHtcbiAgICAgICAgYXRFbnRpdHkucmVmcmVzaE9uID0gcmVmcmVzaE9uLnRvU3RyaW5nKCk7XG4gICAgfVxuICAgIGlmIChyZXF1ZXN0ZWRDbGFpbXMpIHtcbiAgICAgICAgYXRFbnRpdHkucmVxdWVzdGVkQ2xhaW1zID0gcmVxdWVzdGVkQ2xhaW1zO1xuICAgICAgICBhdEVudGl0eS5yZXF1ZXN0ZWRDbGFpbXNIYXNoID0gcmVxdWVzdGVkQ2xhaW1zSGFzaDtcbiAgICB9XG4gICAgLypcbiAgICAgKiBDcmVhdGUgQWNjZXNzIFRva2VuIFdpdGggQXV0aCBTY2hlbWUgaW5zdGVhZCBvZiByZWd1bGFyIGFjY2VzcyB0b2tlblxuICAgICAqIENhc3QgdG8gbG93ZXIgdG8gaGFuZGxlIFwiYmVhcmVyXCIgZnJvbSBBREZTXG4gICAgICovXG4gICAgaWYgKGF0RW50aXR5LnRva2VuVHlwZT8udG9Mb3dlckNhc2UoKSAhPT1cbiAgICAgICAgQXV0aGVudGljYXRpb25TY2hlbWUuQkVBUkVSLnRvTG93ZXJDYXNlKCkpIHtcbiAgICAgICAgYXRFbnRpdHkuY3JlZGVudGlhbFR5cGUgPSBDcmVkZW50aWFsVHlwZS5BQ0NFU1NfVE9LRU5fV0lUSF9BVVRIX1NDSEVNRTtcbiAgICAgICAgc3dpdGNoIChhdEVudGl0eS50b2tlblR5cGUpIHtcbiAgICAgICAgICAgIGNhc2UgQXV0aGVudGljYXRpb25TY2hlbWUuUE9QOlxuICAgICAgICAgICAgICAgIC8vIE1ha2Ugc3VyZSBrZXlJZCBpcyBwcmVzZW50IGFuZCBhZGQgaXQgdG8gY3JlZGVudGlhbFxuICAgICAgICAgICAgICAgIGNvbnN0IHRva2VuQ2xhaW1zID0gZXh0cmFjdFRva2VuQ2xhaW1zKGFjY2Vzc1Rva2VuLCBiYXNlNjREZWNvZGUpO1xuICAgICAgICAgICAgICAgIGlmICghdG9rZW5DbGFpbXM/LmNuZj8ua2lkKSB7XG4gICAgICAgICAgICAgICAgICAgIHRocm93IGNyZWF0ZUNsaWVudEF1dGhFcnJvcih0b2tlbkNsYWltc0NuZlJlcXVpcmVkRm9yU2lnbmVkSnd0KTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgYXRFbnRpdHkua2V5SWQgPSB0b2tlbkNsYWltcy5jbmYua2lkO1xuICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgY2FzZSBBdXRoZW50aWNhdGlvblNjaGVtZS5TU0g6XG4gICAgICAgICAgICAgICAgYXRFbnRpdHkua2V5SWQgPSBrZXlJZDtcbiAgICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gYXRFbnRpdHk7XG59XG4vKipcbiAqIENyZWF0ZSBSZWZyZXNoVG9rZW5FbnRpdHlcbiAqIEBwYXJhbSBob21lQWNjb3VudElkXG4gKiBAcGFyYW0gYXV0aGVudGljYXRpb25SZXN1bHRcbiAqIEBwYXJhbSBjbGllbnRJZFxuICogQHBhcmFtIGF1dGhvcml0eVxuICovXG5mdW5jdGlvbiBjcmVhdGVSZWZyZXNoVG9rZW5FbnRpdHkoaG9tZUFjY291bnRJZCwgZW52aXJvbm1lbnQsIHJlZnJlc2hUb2tlbiwgY2xpZW50SWQsIGZhbWlseUlkLCB1c2VyQXNzZXJ0aW9uSGFzaCwgZXhwaXJlc09uKSB7XG4gICAgY29uc3QgcnRFbnRpdHkgPSB7XG4gICAgICAgIGNyZWRlbnRpYWxUeXBlOiBDcmVkZW50aWFsVHlwZS5SRUZSRVNIX1RPS0VOLFxuICAgICAgICBob21lQWNjb3VudElkOiBob21lQWNjb3VudElkLFxuICAgICAgICBlbnZpcm9ubWVudDogZW52aXJvbm1lbnQsXG4gICAgICAgIGNsaWVudElkOiBjbGllbnRJZCxcbiAgICAgICAgc2VjcmV0OiByZWZyZXNoVG9rZW4sXG4gICAgfTtcbiAgICBpZiAodXNlckFzc2VydGlvbkhhc2gpIHtcbiAgICAgICAgcnRFbnRpdHkudXNlckFzc2VydGlvbkhhc2ggPSB1c2VyQXNzZXJ0aW9uSGFzaDtcbiAgICB9XG4gICAgaWYgKGZhbWlseUlkKSB7XG4gICAgICAgIHJ0RW50aXR5LmZhbWlseUlkID0gZmFtaWx5SWQ7XG4gICAgfVxuICAgIGlmIChleHBpcmVzT24pIHtcbiAgICAgICAgcnRFbnRpdHkuZXhwaXJlc09uID0gZXhwaXJlc09uLnRvU3RyaW5nKCk7XG4gICAgfVxuICAgIHJldHVybiBydEVudGl0eTtcbn1cbmZ1bmN0aW9uIGlzQ3JlZGVudGlhbEVudGl0eShlbnRpdHkpIHtcbiAgICByZXR1cm4gKGVudGl0eS5oYXNPd25Qcm9wZXJ0eShcImhvbWVBY2NvdW50SWRcIikgJiZcbiAgICAgICAgZW50aXR5Lmhhc093blByb3BlcnR5KFwiZW52aXJvbm1lbnRcIikgJiZcbiAgICAgICAgZW50aXR5Lmhhc093blByb3BlcnR5KFwiY3JlZGVudGlhbFR5cGVcIikgJiZcbiAgICAgICAgZW50aXR5Lmhhc093blByb3BlcnR5KFwiY2xpZW50SWRcIikgJiZcbiAgICAgICAgZW50aXR5Lmhhc093blByb3BlcnR5KFwic2VjcmV0XCIpKTtcbn1cbi8qKlxuICogVmFsaWRhdGVzIGFuIGVudGl0eTogY2hlY2tzIGZvciBhbGwgZXhwZWN0ZWQgcGFyYW1zXG4gKiBAcGFyYW0gZW50aXR5XG4gKi9cbmZ1bmN0aW9uIGlzQWNjZXNzVG9rZW5FbnRpdHkoZW50aXR5KSB7XG4gICAgaWYgKCFlbnRpdHkpIHtcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cbiAgICByZXR1cm4gKGlzQ3JlZGVudGlhbEVudGl0eShlbnRpdHkpICYmXG4gICAgICAgIGVudGl0eS5oYXNPd25Qcm9wZXJ0eShcInJlYWxtXCIpICYmXG4gICAgICAgIGVudGl0eS5oYXNPd25Qcm9wZXJ0eShcInRhcmdldFwiKSAmJlxuICAgICAgICAoZW50aXR5W1wiY3JlZGVudGlhbFR5cGVcIl0gPT09IENyZWRlbnRpYWxUeXBlLkFDQ0VTU19UT0tFTiB8fFxuICAgICAgICAgICAgZW50aXR5W1wiY3JlZGVudGlhbFR5cGVcIl0gPT09XG4gICAgICAgICAgICAgICAgQ3JlZGVudGlhbFR5cGUuQUNDRVNTX1RPS0VOX1dJVEhfQVVUSF9TQ0hFTUUpKTtcbn1cbi8qKlxuICogVmFsaWRhdGVzIGFuIGVudGl0eTogY2hlY2tzIGZvciBhbGwgZXhwZWN0ZWQgcGFyYW1zXG4gKiBAcGFyYW0gZW50aXR5XG4gKi9cbmZ1bmN0aW9uIGlzSWRUb2tlbkVudGl0eShlbnRpdHkpIHtcbiAgICBpZiAoIWVudGl0eSkge1xuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxuICAgIHJldHVybiAoaXNDcmVkZW50aWFsRW50aXR5KGVudGl0eSkgJiZcbiAgICAgICAgZW50aXR5Lmhhc093blByb3BlcnR5KFwicmVhbG1cIikgJiZcbiAgICAgICAgZW50aXR5W1wiY3JlZGVudGlhbFR5cGVcIl0gPT09IENyZWRlbnRpYWxUeXBlLklEX1RPS0VOKTtcbn1cbi8qKlxuICogVmFsaWRhdGVzIGFuIGVudGl0eTogY2hlY2tzIGZvciBhbGwgZXhwZWN0ZWQgcGFyYW1zXG4gKiBAcGFyYW0gZW50aXR5XG4gKi9cbmZ1bmN0aW9uIGlzUmVmcmVzaFRva2VuRW50aXR5KGVudGl0eSkge1xuICAgIGlmICghZW50aXR5KSB7XG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG4gICAgcmV0dXJuIChpc0NyZWRlbnRpYWxFbnRpdHkoZW50aXR5KSAmJlxuICAgICAgICBlbnRpdHlbXCJjcmVkZW50aWFsVHlwZVwiXSA9PT0gQ3JlZGVudGlhbFR5cGUuUkVGUkVTSF9UT0tFTik7XG59XG4vKipcbiAqIEdlbmVyYXRlIEFjY291bnQgSWQga2V5IGNvbXBvbmVudCBhcyBwZXIgdGhlIHNjaGVtYTogPGhvbWVfYWNjb3VudF9pZD4tPGVudmlyb25tZW50PlxuICovXG5mdW5jdGlvbiBnZW5lcmF0ZUFjY291bnRJZChjcmVkZW50aWFsRW50aXR5KSB7XG4gICAgY29uc3QgYWNjb3VudElkID0gW1xuICAgICAgICBjcmVkZW50aWFsRW50aXR5LmhvbWVBY2NvdW50SWQsXG4gICAgICAgIGNyZWRlbnRpYWxFbnRpdHkuZW52aXJvbm1lbnQsXG4gICAgXTtcbiAgICByZXR1cm4gYWNjb3VudElkLmpvaW4oU2VwYXJhdG9ycy5DQUNIRV9LRVlfU0VQQVJBVE9SKS50b0xvd2VyQ2FzZSgpO1xufVxuLyoqXG4gKiBHZW5lcmF0ZSBDcmVkZW50aWFsIElkIGtleSBjb21wb25lbnQgYXMgcGVyIHRoZSBzY2hlbWE6IDxjcmVkZW50aWFsX3R5cGU+LTxjbGllbnRfaWQ+LTxyZWFsbT5cbiAqL1xuZnVuY3Rpb24gZ2VuZXJhdGVDcmVkZW50aWFsSWQoY3JlZGVudGlhbEVudGl0eSkge1xuICAgIGNvbnN0IGNsaWVudE9yRmFtaWx5SWQgPSBjcmVkZW50aWFsRW50aXR5LmNyZWRlbnRpYWxUeXBlID09PSBDcmVkZW50aWFsVHlwZS5SRUZSRVNIX1RPS0VOXG4gICAgICAgID8gY3JlZGVudGlhbEVudGl0eS5mYW1pbHlJZCB8fCBjcmVkZW50aWFsRW50aXR5LmNsaWVudElkXG4gICAgICAgIDogY3JlZGVudGlhbEVudGl0eS5jbGllbnRJZDtcbiAgICBjb25zdCBjcmVkZW50aWFsSWQgPSBbXG4gICAgICAgIGNyZWRlbnRpYWxFbnRpdHkuY3JlZGVudGlhbFR5cGUsXG4gICAgICAgIGNsaWVudE9yRmFtaWx5SWQsXG4gICAgICAgIGNyZWRlbnRpYWxFbnRpdHkucmVhbG0gfHwgXCJcIixcbiAgICBdO1xuICAgIHJldHVybiBjcmVkZW50aWFsSWQuam9pbihTZXBhcmF0b3JzLkNBQ0hFX0tFWV9TRVBBUkFUT1IpLnRvTG93ZXJDYXNlKCk7XG59XG4vKipcbiAqIEdlbmVyYXRlIHRhcmdldCBrZXkgY29tcG9uZW50IGFzIHBlciBzY2hlbWE6IDx0YXJnZXQ+XG4gKi9cbmZ1bmN0aW9uIGdlbmVyYXRlVGFyZ2V0KGNyZWRlbnRpYWxFbnRpdHkpIHtcbiAgICByZXR1cm4gKGNyZWRlbnRpYWxFbnRpdHkudGFyZ2V0IHx8IFwiXCIpLnRvTG93ZXJDYXNlKCk7XG59XG4vKipcbiAqIEdlbmVyYXRlIHJlcXVlc3RlZCBjbGFpbXMga2V5IGNvbXBvbmVudCBhcyBwZXIgc2NoZW1hOiA8cmVxdWVzdGVkQ2xhaW1zPlxuICovXG5mdW5jdGlvbiBnZW5lcmF0ZUNsYWltc0hhc2goY3JlZGVudGlhbEVudGl0eSkge1xuICAgIHJldHVybiAoY3JlZGVudGlhbEVudGl0eS5yZXF1ZXN0ZWRDbGFpbXNIYXNoIHx8IFwiXCIpLnRvTG93ZXJDYXNlKCk7XG59XG4vKipcbiAqIEdlbmVyYXRlIHNjaGVtZSBrZXkgY29tcG9uZW5ldCBhcyBwZXIgc2NoZW1hOiA8c2NoZW1lPlxuICovXG5mdW5jdGlvbiBnZW5lcmF0ZVNjaGVtZShjcmVkZW50aWFsRW50aXR5KSB7XG4gICAgLypcbiAgICAgKiBQb1AgVG9rZW5zIGFuZCBTU0ggY2VydHMgaW5jbHVkZSBzY2hlbWUgaW4gY2FjaGUga2V5XG4gICAgICogQ2FzdCB0byBsb3dlcmNhc2UgdG8gaGFuZGxlIFwiYmVhcmVyXCIgZnJvbSBBREZTXG4gICAgICovXG4gICAgcmV0dXJuIGNyZWRlbnRpYWxFbnRpdHkudG9rZW5UeXBlICYmXG4gICAgICAgIGNyZWRlbnRpYWxFbnRpdHkudG9rZW5UeXBlLnRvTG93ZXJDYXNlKCkgIT09XG4gICAgICAgICAgICBBdXRoZW50aWNhdGlvblNjaGVtZS5CRUFSRVIudG9Mb3dlckNhc2UoKVxuICAgICAgICA/IGNyZWRlbnRpYWxFbnRpdHkudG9rZW5UeXBlLnRvTG93ZXJDYXNlKClcbiAgICAgICAgOiBcIlwiO1xufVxuLyoqXG4gKiB2YWxpZGF0ZXMgaWYgYSBnaXZlbiBjYWNoZSBlbnRyeSBpcyBcIlRlbGVtZXRyeVwiLCBwYXJzZXMgPGtleSx2YWx1ZT5cbiAqIEBwYXJhbSBrZXlcbiAqIEBwYXJhbSBlbnRpdHlcbiAqL1xuZnVuY3Rpb24gaXNTZXJ2ZXJUZWxlbWV0cnlFbnRpdHkoa2V5LCBlbnRpdHkpIHtcbiAgICBjb25zdCB2YWxpZGF0ZUtleSA9IGtleS5pbmRleE9mKFNFUlZFUl9URUxFTV9DT05TVEFOVFMuQ0FDSEVfS0VZKSA9PT0gMDtcbiAgICBsZXQgdmFsaWRhdGVFbnRpdHkgPSB0cnVlO1xuICAgIGlmIChlbnRpdHkpIHtcbiAgICAgICAgdmFsaWRhdGVFbnRpdHkgPVxuICAgICAgICAgICAgZW50aXR5Lmhhc093blByb3BlcnR5KFwiZmFpbGVkUmVxdWVzdHNcIikgJiZcbiAgICAgICAgICAgICAgICBlbnRpdHkuaGFzT3duUHJvcGVydHkoXCJlcnJvcnNcIikgJiZcbiAgICAgICAgICAgICAgICBlbnRpdHkuaGFzT3duUHJvcGVydHkoXCJjYWNoZUhpdHNcIik7XG4gICAgfVxuICAgIHJldHVybiB2YWxpZGF0ZUtleSAmJiB2YWxpZGF0ZUVudGl0eTtcbn1cbi8qKlxuICogdmFsaWRhdGVzIGlmIGEgZ2l2ZW4gY2FjaGUgZW50cnkgaXMgXCJUaHJvdHRsaW5nXCIsIHBhcnNlcyA8a2V5LHZhbHVlPlxuICogQHBhcmFtIGtleVxuICogQHBhcmFtIGVudGl0eVxuICovXG5mdW5jdGlvbiBpc1Rocm90dGxpbmdFbnRpdHkoa2V5LCBlbnRpdHkpIHtcbiAgICBsZXQgdmFsaWRhdGVLZXkgPSBmYWxzZTtcbiAgICBpZiAoa2V5KSB7XG4gICAgICAgIHZhbGlkYXRlS2V5ID0ga2V5LmluZGV4T2YoVGhyb3R0bGluZ0NvbnN0YW50cy5USFJPVFRMSU5HX1BSRUZJWCkgPT09IDA7XG4gICAgfVxuICAgIGxldCB2YWxpZGF0ZUVudGl0eSA9IHRydWU7XG4gICAgaWYgKGVudGl0eSkge1xuICAgICAgICB2YWxpZGF0ZUVudGl0eSA9IGVudGl0eS5oYXNPd25Qcm9wZXJ0eShcInRocm90dGxlVGltZVwiKTtcbiAgICB9XG4gICAgcmV0dXJuIHZhbGlkYXRlS2V5ICYmIHZhbGlkYXRlRW50aXR5O1xufVxuLyoqXG4gKiBHZW5lcmF0ZSBBcHBNZXRhZGF0YSBDYWNoZSBLZXkgYXMgcGVyIHRoZSBzY2hlbWE6IGFwcG1ldGFkYXRhLTxlbnZpcm9ubWVudD4tPGNsaWVudF9pZD5cbiAqL1xuZnVuY3Rpb24gZ2VuZXJhdGVBcHBNZXRhZGF0YUtleSh7IGVudmlyb25tZW50LCBjbGllbnRJZCwgfSkge1xuICAgIGNvbnN0IGFwcE1ldGFEYXRhS2V5QXJyYXkgPSBbXG4gICAgICAgIEFQUF9NRVRBREFUQSxcbiAgICAgICAgZW52aXJvbm1lbnQsXG4gICAgICAgIGNsaWVudElkLFxuICAgIF07XG4gICAgcmV0dXJuIGFwcE1ldGFEYXRhS2V5QXJyYXlcbiAgICAgICAgLmpvaW4oU2VwYXJhdG9ycy5DQUNIRV9LRVlfU0VQQVJBVE9SKVxuICAgICAgICAudG9Mb3dlckNhc2UoKTtcbn1cbi8qXG4gKiBWYWxpZGF0ZXMgYW4gZW50aXR5OiBjaGVja3MgZm9yIGFsbCBleHBlY3RlZCBwYXJhbXNcbiAqIEBwYXJhbSBlbnRpdHlcbiAqL1xuZnVuY3Rpb24gaXNBcHBNZXRhZGF0YUVudGl0eShrZXksIGVudGl0eSkge1xuICAgIGlmICghZW50aXR5KSB7XG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG4gICAgcmV0dXJuIChrZXkuaW5kZXhPZihBUFBfTUVUQURBVEEpID09PSAwICYmXG4gICAgICAgIGVudGl0eS5oYXNPd25Qcm9wZXJ0eShcImNsaWVudElkXCIpICYmXG4gICAgICAgIGVudGl0eS5oYXNPd25Qcm9wZXJ0eShcImVudmlyb25tZW50XCIpKTtcbn1cbi8qKlxuICogVmFsaWRhdGVzIGFuIGVudGl0eTogY2hlY2tzIGZvciBhbGwgZXhwZWN0ZWQgcGFyYW1zXG4gKiBAcGFyYW0gZW50aXR5XG4gKi9cbmZ1bmN0aW9uIGlzQXV0aG9yaXR5TWV0YWRhdGFFbnRpdHkoa2V5LCBlbnRpdHkpIHtcbiAgICBpZiAoIWVudGl0eSkge1xuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxuICAgIHJldHVybiAoa2V5LmluZGV4T2YoQVVUSE9SSVRZX01FVEFEQVRBX0NPTlNUQU5UUy5DQUNIRV9LRVkpID09PSAwICYmXG4gICAgICAgIGVudGl0eS5oYXNPd25Qcm9wZXJ0eShcImFsaWFzZXNcIikgJiZcbiAgICAgICAgZW50aXR5Lmhhc093blByb3BlcnR5KFwicHJlZmVycmVkX2NhY2hlXCIpICYmXG4gICAgICAgIGVudGl0eS5oYXNPd25Qcm9wZXJ0eShcInByZWZlcnJlZF9uZXR3b3JrXCIpICYmXG4gICAgICAgIGVudGl0eS5oYXNPd25Qcm9wZXJ0eShcImNhbm9uaWNhbF9hdXRob3JpdHlcIikgJiZcbiAgICAgICAgZW50aXR5Lmhhc093blByb3BlcnR5KFwiYXV0aG9yaXphdGlvbl9lbmRwb2ludFwiKSAmJlxuICAgICAgICBlbnRpdHkuaGFzT3duUHJvcGVydHkoXCJ0b2tlbl9lbmRwb2ludFwiKSAmJlxuICAgICAgICBlbnRpdHkuaGFzT3duUHJvcGVydHkoXCJpc3N1ZXJcIikgJiZcbiAgICAgICAgZW50aXR5Lmhhc093blByb3BlcnR5KFwiYWxpYXNlc0Zyb21OZXR3b3JrXCIpICYmXG4gICAgICAgIGVudGl0eS5oYXNPd25Qcm9wZXJ0eShcImVuZHBvaW50c0Zyb21OZXR3b3JrXCIpICYmXG4gICAgICAgIGVudGl0eS5oYXNPd25Qcm9wZXJ0eShcImV4cGlyZXNBdFwiKSAmJlxuICAgICAgICBlbnRpdHkuaGFzT3duUHJvcGVydHkoXCJqd2tzX3VyaVwiKSk7XG59XG4vKipcbiAqIFJlc2V0IHRoZSBleGlyZXNBdCB2YWx1ZVxuICovXG5mdW5jdGlvbiBnZW5lcmF0ZUF1dGhvcml0eU1ldGFkYXRhRXhwaXJlc0F0KCkge1xuICAgIHJldHVybiAobm93U2Vjb25kcygpICtcbiAgICAgICAgQVVUSE9SSVRZX01FVEFEQVRBX0NPTlNUQU5UUy5SRUZSRVNIX1RJTUVfU0VDT05EUyk7XG59XG5mdW5jdGlvbiB1cGRhdGVBdXRob3JpdHlFbmRwb2ludE1ldGFkYXRhKGF1dGhvcml0eU1ldGFkYXRhLCB1cGRhdGVkVmFsdWVzLCBmcm9tTmV0d29yaykge1xuICAgIGF1dGhvcml0eU1ldGFkYXRhLmF1dGhvcml6YXRpb25fZW5kcG9pbnQgPVxuICAgICAgICB1cGRhdGVkVmFsdWVzLmF1dGhvcml6YXRpb25fZW5kcG9pbnQ7XG4gICAgYXV0aG9yaXR5TWV0YWRhdGEudG9rZW5fZW5kcG9pbnQgPSB1cGRhdGVkVmFsdWVzLnRva2VuX2VuZHBvaW50O1xuICAgIGF1dGhvcml0eU1ldGFkYXRhLmVuZF9zZXNzaW9uX2VuZHBvaW50ID0gdXBkYXRlZFZhbHVlcy5lbmRfc2Vzc2lvbl9lbmRwb2ludDtcbiAgICBhdXRob3JpdHlNZXRhZGF0YS5pc3N1ZXIgPSB1cGRhdGVkVmFsdWVzLmlzc3VlcjtcbiAgICBhdXRob3JpdHlNZXRhZGF0YS5lbmRwb2ludHNGcm9tTmV0d29yayA9IGZyb21OZXR3b3JrO1xuICAgIGF1dGhvcml0eU1ldGFkYXRhLmp3a3NfdXJpID0gdXBkYXRlZFZhbHVlcy5qd2tzX3VyaTtcbn1cbmZ1bmN0aW9uIHVwZGF0ZUNsb3VkRGlzY292ZXJ5TWV0YWRhdGEoYXV0aG9yaXR5TWV0YWRhdGEsIHVwZGF0ZWRWYWx1ZXMsIGZyb21OZXR3b3JrKSB7XG4gICAgYXV0aG9yaXR5TWV0YWRhdGEuYWxpYXNlcyA9IHVwZGF0ZWRWYWx1ZXMuYWxpYXNlcztcbiAgICBhdXRob3JpdHlNZXRhZGF0YS5wcmVmZXJyZWRfY2FjaGUgPSB1cGRhdGVkVmFsdWVzLnByZWZlcnJlZF9jYWNoZTtcbiAgICBhdXRob3JpdHlNZXRhZGF0YS5wcmVmZXJyZWRfbmV0d29yayA9IHVwZGF0ZWRWYWx1ZXMucHJlZmVycmVkX25ldHdvcms7XG4gICAgYXV0aG9yaXR5TWV0YWRhdGEuYWxpYXNlc0Zyb21OZXR3b3JrID0gZnJvbU5ldHdvcms7XG59XG4vKipcbiAqIFJldHVybnMgd2hldGhlciBvciBub3QgdGhlIGRhdGEgbmVlZHMgdG8gYmUgcmVmcmVzaGVkXG4gKi9cbmZ1bmN0aW9uIGlzQXV0aG9yaXR5TWV0YWRhdGFFeHBpcmVkKG1ldGFkYXRhKSB7XG4gICAgcmV0dXJuIG1ldGFkYXRhLmV4cGlyZXNBdCA8PSBub3dTZWNvbmRzKCk7XG59XG5cbmV4cG9ydCB7IGNyZWF0ZUFjY2Vzc1Rva2VuRW50aXR5LCBjcmVhdGVJZFRva2VuRW50aXR5LCBjcmVhdGVSZWZyZXNoVG9rZW5FbnRpdHksIGdlbmVyYXRlQXBwTWV0YWRhdGFLZXksIGdlbmVyYXRlQXV0aG9yaXR5TWV0YWRhdGFFeHBpcmVzQXQsIGdlbmVyYXRlQ3JlZGVudGlhbEtleSwgaXNBY2Nlc3NUb2tlbkVudGl0eSwgaXNBcHBNZXRhZGF0YUVudGl0eSwgaXNBdXRob3JpdHlNZXRhZGF0YUVudGl0eSwgaXNBdXRob3JpdHlNZXRhZGF0YUV4cGlyZWQsIGlzQ3JlZGVudGlhbEVudGl0eSwgaXNJZFRva2VuRW50aXR5LCBpc1JlZnJlc2hUb2tlbkVudGl0eSwgaXNTZXJ2ZXJUZWxlbWV0cnlFbnRpdHksIGlzVGhyb3R0bGluZ0VudGl0eSwgdXBkYXRlQXV0aG9yaXR5RW5kcG9pbnRNZXRhZGF0YSwgdXBkYXRlQ2xvdWREaXNjb3ZlcnlNZXRhZGF0YSB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Q2FjaGVIZWxwZXJzLm1qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/msal-common/dist/cache/utils/CacheHelpers.mjs\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/msal-common/dist/client/AuthorizationCodeClient.mjs":
/*!*********************************************************************************!*\
  !*** ./node_modules/@azure/msal-common/dist/client/AuthorizationCodeClient.mjs ***!
  \*********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AuthorizationCodeClient: () => (/* binding */ AuthorizationCodeClient)\n/* harmony export */ });\n/* harmony import */ var _BaseClient_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./BaseClient.mjs */ \"(rsc)/./node_modules/@azure/msal-common/dist/client/BaseClient.mjs\");\n/* harmony import */ var _request_RequestParameterBuilder_mjs__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../request/RequestParameterBuilder.mjs */ \"(rsc)/./node_modules/@azure/msal-common/dist/request/RequestParameterBuilder.mjs\");\n/* harmony import */ var _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../utils/Constants.mjs */ \"(rsc)/./node_modules/@azure/msal-common/dist/utils/Constants.mjs\");\n/* harmony import */ var _constants_AADServerParamKeys_mjs__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ../constants/AADServerParamKeys.mjs */ \"(rsc)/./node_modules/@azure/msal-common/dist/constants/AADServerParamKeys.mjs\");\n/* harmony import */ var _config_ClientConfiguration_mjs__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ../config/ClientConfiguration.mjs */ \"(rsc)/./node_modules/@azure/msal-common/dist/config/ClientConfiguration.mjs\");\n/* harmony import */ var _response_ResponseHandler_mjs__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../response/ResponseHandler.mjs */ \"(rsc)/./node_modules/@azure/msal-common/dist/response/ResponseHandler.mjs\");\n/* harmony import */ var _utils_StringUtils_mjs__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ../utils/StringUtils.mjs */ \"(rsc)/./node_modules/@azure/msal-common/dist/utils/StringUtils.mjs\");\n/* harmony import */ var _error_ClientAuthError_mjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../error/ClientAuthError.mjs */ \"(rsc)/./node_modules/@azure/msal-common/dist/error/ClientAuthError.mjs\");\n/* harmony import */ var _url_UrlString_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../url/UrlString.mjs */ \"(rsc)/./node_modules/@azure/msal-common/dist/url/UrlString.mjs\");\n/* harmony import */ var _crypto_PopTokenGenerator_mjs__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ../crypto/PopTokenGenerator.mjs */ \"(rsc)/./node_modules/@azure/msal-common/dist/crypto/PopTokenGenerator.mjs\");\n/* harmony import */ var _utils_TimeUtils_mjs__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../utils/TimeUtils.mjs */ \"(rsc)/./node_modules/@azure/msal-common/dist/utils/TimeUtils.mjs\");\n/* harmony import */ var _account_ClientInfo_mjs__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../account/ClientInfo.mjs */ \"(rsc)/./node_modules/@azure/msal-common/dist/account/ClientInfo.mjs\");\n/* harmony import */ var _account_CcsCredential_mjs__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../account/CcsCredential.mjs */ \"(rsc)/./node_modules/@azure/msal-common/dist/account/CcsCredential.mjs\");\n/* harmony import */ var _error_ClientConfigurationError_mjs__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../error/ClientConfigurationError.mjs */ \"(rsc)/./node_modules/@azure/msal-common/dist/error/ClientConfigurationError.mjs\");\n/* harmony import */ var _request_RequestValidator_mjs__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ../request/RequestValidator.mjs */ \"(rsc)/./node_modules/@azure/msal-common/dist/request/RequestValidator.mjs\");\n/* harmony import */ var _telemetry_performance_PerformanceEvent_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../telemetry/performance/PerformanceEvent.mjs */ \"(rsc)/./node_modules/@azure/msal-common/dist/telemetry/performance/PerformanceEvent.mjs\");\n/* harmony import */ var _utils_FunctionWrappers_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils/FunctionWrappers.mjs */ \"(rsc)/./node_modules/@azure/msal-common/dist/utils/FunctionWrappers.mjs\");\n/* harmony import */ var _utils_ClientAssertionUtils_mjs__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ../utils/ClientAssertionUtils.mjs */ \"(rsc)/./node_modules/@azure/msal-common/dist/utils/ClientAssertionUtils.mjs\");\n/* harmony import */ var _error_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../error/ClientAuthErrorCodes.mjs */ \"(rsc)/./node_modules/@azure/msal-common/dist/error/ClientAuthErrorCodes.mjs\");\n/* harmony import */ var _error_ClientConfigurationErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../error/ClientConfigurationErrorCodes.mjs */ \"(rsc)/./node_modules/@azure/msal-common/dist/error/ClientConfigurationErrorCodes.mjs\");\n/*! @azure/msal-common v14.14.0 2024-07-23 */\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n/**\n * Oauth2.0 Authorization Code client\n * @internal\n */\nclass AuthorizationCodeClient extends _BaseClient_mjs__WEBPACK_IMPORTED_MODULE_0__.BaseClient {\n    constructor(configuration, performanceClient) {\n        super(configuration, performanceClient);\n        // Flag to indicate if client is for hybrid spa auth code redemption\n        this.includeRedirectUri = true;\n        this.oidcDefaultScopes =\n            this.config.authOptions.authority.options.OIDCOptions?.defaultScopes;\n    }\n    /**\n     * Creates the URL of the authorization request letting the user input credentials and consent to the\n     * application. The URL target the /authorize endpoint of the authority configured in the\n     * application object.\n     *\n     * Once the user inputs their credentials and consents, the authority will send a response to the redirect URI\n     * sent in the request and should contain an authorization code, which can then be used to acquire tokens via\n     * acquireToken(AuthorizationCodeRequest)\n     * @param request\n     */\n    async getAuthCodeUrl(request) {\n        this.performanceClient?.addQueueMeasurement(_telemetry_performance_PerformanceEvent_mjs__WEBPACK_IMPORTED_MODULE_1__.PerformanceEvents.GetAuthCodeUrl, request.correlationId);\n        const queryString = await (0,_utils_FunctionWrappers_mjs__WEBPACK_IMPORTED_MODULE_2__.invokeAsync)(this.createAuthCodeUrlQueryString.bind(this), _telemetry_performance_PerformanceEvent_mjs__WEBPACK_IMPORTED_MODULE_1__.PerformanceEvents.AuthClientCreateQueryString, this.logger, this.performanceClient, request.correlationId)(request);\n        return _url_UrlString_mjs__WEBPACK_IMPORTED_MODULE_3__.UrlString.appendQueryString(this.authority.authorizationEndpoint, queryString);\n    }\n    /**\n     * API to acquire a token in exchange of 'authorization_code` acquired by the user in the first leg of the\n     * authorization_code_grant\n     * @param request\n     */\n    async acquireToken(request, authCodePayload) {\n        this.performanceClient?.addQueueMeasurement(_telemetry_performance_PerformanceEvent_mjs__WEBPACK_IMPORTED_MODULE_1__.PerformanceEvents.AuthClientAcquireToken, request.correlationId);\n        if (!request.code) {\n            throw (0,_error_ClientAuthError_mjs__WEBPACK_IMPORTED_MODULE_4__.createClientAuthError)(_error_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_5__.requestCannotBeMade);\n        }\n        const reqTimestamp = (0,_utils_TimeUtils_mjs__WEBPACK_IMPORTED_MODULE_6__.nowSeconds)();\n        const response = await (0,_utils_FunctionWrappers_mjs__WEBPACK_IMPORTED_MODULE_2__.invokeAsync)(this.executeTokenRequest.bind(this), _telemetry_performance_PerformanceEvent_mjs__WEBPACK_IMPORTED_MODULE_1__.PerformanceEvents.AuthClientExecuteTokenRequest, this.logger, this.performanceClient, request.correlationId)(this.authority, request);\n        // Retrieve requestId from response headers\n        const requestId = response.headers?.[_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_7__.HeaderNames.X_MS_REQUEST_ID];\n        const responseHandler = new _response_ResponseHandler_mjs__WEBPACK_IMPORTED_MODULE_8__.ResponseHandler(this.config.authOptions.clientId, this.cacheManager, this.cryptoUtils, this.logger, this.config.serializableCache, this.config.persistencePlugin, this.performanceClient);\n        // Validate response. This function throws a server error if an error is returned by the server.\n        responseHandler.validateTokenResponse(response.body);\n        return (0,_utils_FunctionWrappers_mjs__WEBPACK_IMPORTED_MODULE_2__.invokeAsync)(responseHandler.handleServerTokenResponse.bind(responseHandler), _telemetry_performance_PerformanceEvent_mjs__WEBPACK_IMPORTED_MODULE_1__.PerformanceEvents.HandleServerTokenResponse, this.logger, this.performanceClient, request.correlationId)(response.body, this.authority, reqTimestamp, request, authCodePayload, undefined, undefined, undefined, requestId);\n    }\n    /**\n     * Handles the hash fragment response from public client code request. Returns a code response used by\n     * the client to exchange for a token in acquireToken.\n     * @param hashFragment\n     */\n    handleFragmentResponse(serverParams, cachedState) {\n        // Handle responses.\n        const responseHandler = new _response_ResponseHandler_mjs__WEBPACK_IMPORTED_MODULE_8__.ResponseHandler(this.config.authOptions.clientId, this.cacheManager, this.cryptoUtils, this.logger, null, null);\n        // Get code response\n        responseHandler.validateServerAuthorizationCodeResponse(serverParams, cachedState);\n        // throw when there is no auth code in the response\n        if (!serverParams.code) {\n            throw (0,_error_ClientAuthError_mjs__WEBPACK_IMPORTED_MODULE_4__.createClientAuthError)(_error_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_5__.authorizationCodeMissingFromServerResponse);\n        }\n        return serverParams;\n    }\n    /**\n     * Used to log out the current user, and redirect the user to the postLogoutRedirectUri.\n     * Default behaviour is to redirect the user to `window.location.href`.\n     * @param authorityUri\n     */\n    getLogoutUri(logoutRequest) {\n        // Throw error if logoutRequest is null/undefined\n        if (!logoutRequest) {\n            throw (0,_error_ClientConfigurationError_mjs__WEBPACK_IMPORTED_MODULE_9__.createClientConfigurationError)(_error_ClientConfigurationErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_10__.logoutRequestEmpty);\n        }\n        const queryString = this.createLogoutUrlQueryString(logoutRequest);\n        // Construct logout URI\n        return _url_UrlString_mjs__WEBPACK_IMPORTED_MODULE_3__.UrlString.appendQueryString(this.authority.endSessionEndpoint, queryString);\n    }\n    /**\n     * Executes POST request to token endpoint\n     * @param authority\n     * @param request\n     */\n    async executeTokenRequest(authority, request) {\n        this.performanceClient?.addQueueMeasurement(_telemetry_performance_PerformanceEvent_mjs__WEBPACK_IMPORTED_MODULE_1__.PerformanceEvents.AuthClientExecuteTokenRequest, request.correlationId);\n        const queryParametersString = this.createTokenQueryParameters(request);\n        const endpoint = _url_UrlString_mjs__WEBPACK_IMPORTED_MODULE_3__.UrlString.appendQueryString(authority.tokenEndpoint, queryParametersString);\n        const requestBody = await (0,_utils_FunctionWrappers_mjs__WEBPACK_IMPORTED_MODULE_2__.invokeAsync)(this.createTokenRequestBody.bind(this), _telemetry_performance_PerformanceEvent_mjs__WEBPACK_IMPORTED_MODULE_1__.PerformanceEvents.AuthClientCreateTokenRequestBody, this.logger, this.performanceClient, request.correlationId)(request);\n        let ccsCredential = undefined;\n        if (request.clientInfo) {\n            try {\n                const clientInfo = (0,_account_ClientInfo_mjs__WEBPACK_IMPORTED_MODULE_11__.buildClientInfo)(request.clientInfo, this.cryptoUtils.base64Decode);\n                ccsCredential = {\n                    credential: `${clientInfo.uid}${_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_7__.Separators.CLIENT_INFO_SEPARATOR}${clientInfo.utid}`,\n                    type: _account_CcsCredential_mjs__WEBPACK_IMPORTED_MODULE_12__.CcsCredentialType.HOME_ACCOUNT_ID,\n                };\n            }\n            catch (e) {\n                this.logger.verbose(\"Could not parse client info for CCS Header: \" + e);\n            }\n        }\n        const headers = this.createTokenRequestHeaders(ccsCredential || request.ccsCredential);\n        const thumbprint = {\n            clientId: request.tokenBodyParameters?.clientId ||\n                this.config.authOptions.clientId,\n            authority: authority.canonicalAuthority,\n            scopes: request.scopes,\n            claims: request.claims,\n            authenticationScheme: request.authenticationScheme,\n            resourceRequestMethod: request.resourceRequestMethod,\n            resourceRequestUri: request.resourceRequestUri,\n            shrClaims: request.shrClaims,\n            sshKid: request.sshKid,\n        };\n        return (0,_utils_FunctionWrappers_mjs__WEBPACK_IMPORTED_MODULE_2__.invokeAsync)(this.executePostToTokenEndpoint.bind(this), _telemetry_performance_PerformanceEvent_mjs__WEBPACK_IMPORTED_MODULE_1__.PerformanceEvents.AuthorizationCodeClientExecutePostToTokenEndpoint, this.logger, this.performanceClient, request.correlationId)(endpoint, requestBody, headers, thumbprint, request.correlationId, _telemetry_performance_PerformanceEvent_mjs__WEBPACK_IMPORTED_MODULE_1__.PerformanceEvents.AuthorizationCodeClientExecutePostToTokenEndpoint);\n    }\n    /**\n     * Generates a map for all the params to be sent to the service\n     * @param request\n     */\n    async createTokenRequestBody(request) {\n        this.performanceClient?.addQueueMeasurement(_telemetry_performance_PerformanceEvent_mjs__WEBPACK_IMPORTED_MODULE_1__.PerformanceEvents.AuthClientCreateTokenRequestBody, request.correlationId);\n        const parameterBuilder = new _request_RequestParameterBuilder_mjs__WEBPACK_IMPORTED_MODULE_13__.RequestParameterBuilder();\n        parameterBuilder.addClientId(request.tokenBodyParameters?.[_constants_AADServerParamKeys_mjs__WEBPACK_IMPORTED_MODULE_14__.CLIENT_ID] ||\n            this.config.authOptions.clientId);\n        /*\n         * For hybrid spa flow, there will be a code but no verifier\n         * In this scenario, don't include redirect uri as auth code will not be bound to redirect URI\n         */\n        if (!this.includeRedirectUri) {\n            // Just validate\n            _request_RequestValidator_mjs__WEBPACK_IMPORTED_MODULE_15__.RequestValidator.validateRedirectUri(request.redirectUri);\n        }\n        else {\n            // Validate and include redirect uri\n            parameterBuilder.addRedirectUri(request.redirectUri);\n        }\n        // Add scope array, parameter builder will add default scopes and dedupe\n        parameterBuilder.addScopes(request.scopes, true, this.oidcDefaultScopes);\n        // add code: user set, not validated\n        parameterBuilder.addAuthorizationCode(request.code);\n        // Add library metadata\n        parameterBuilder.addLibraryInfo(this.config.libraryInfo);\n        parameterBuilder.addApplicationTelemetry(this.config.telemetry.application);\n        parameterBuilder.addThrottling();\n        if (this.serverTelemetryManager && !(0,_config_ClientConfiguration_mjs__WEBPACK_IMPORTED_MODULE_16__.isOidcProtocolMode)(this.config)) {\n            parameterBuilder.addServerTelemetry(this.serverTelemetryManager);\n        }\n        // add code_verifier if passed\n        if (request.codeVerifier) {\n            parameterBuilder.addCodeVerifier(request.codeVerifier);\n        }\n        if (this.config.clientCredentials.clientSecret) {\n            parameterBuilder.addClientSecret(this.config.clientCredentials.clientSecret);\n        }\n        if (this.config.clientCredentials.clientAssertion) {\n            const clientAssertion = this.config.clientCredentials.clientAssertion;\n            parameterBuilder.addClientAssertion(await (0,_utils_ClientAssertionUtils_mjs__WEBPACK_IMPORTED_MODULE_17__.getClientAssertion)(clientAssertion.assertion, this.config.authOptions.clientId, request.resourceRequestUri));\n            parameterBuilder.addClientAssertionType(clientAssertion.assertionType);\n        }\n        parameterBuilder.addGrantType(_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_7__.GrantType.AUTHORIZATION_CODE_GRANT);\n        parameterBuilder.addClientInfo();\n        if (request.authenticationScheme === _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_7__.AuthenticationScheme.POP) {\n            const popTokenGenerator = new _crypto_PopTokenGenerator_mjs__WEBPACK_IMPORTED_MODULE_18__.PopTokenGenerator(this.cryptoUtils, this.performanceClient);\n            let reqCnfData;\n            if (!request.popKid) {\n                const generatedReqCnfData = await (0,_utils_FunctionWrappers_mjs__WEBPACK_IMPORTED_MODULE_2__.invokeAsync)(popTokenGenerator.generateCnf.bind(popTokenGenerator), _telemetry_performance_PerformanceEvent_mjs__WEBPACK_IMPORTED_MODULE_1__.PerformanceEvents.PopTokenGenerateCnf, this.logger, this.performanceClient, request.correlationId)(request, this.logger);\n                reqCnfData = generatedReqCnfData.reqCnfString;\n            }\n            else {\n                reqCnfData = this.cryptoUtils.encodeKid(request.popKid);\n            }\n            // SPA PoP requires full Base64Url encoded req_cnf string (unhashed)\n            parameterBuilder.addPopToken(reqCnfData);\n        }\n        else if (request.authenticationScheme === _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_7__.AuthenticationScheme.SSH) {\n            if (request.sshJwk) {\n                parameterBuilder.addSshJwk(request.sshJwk);\n            }\n            else {\n                throw (0,_error_ClientConfigurationError_mjs__WEBPACK_IMPORTED_MODULE_9__.createClientConfigurationError)(_error_ClientConfigurationErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_10__.missingSshJwk);\n            }\n        }\n        const correlationId = request.correlationId ||\n            this.config.cryptoInterface.createNewGuid();\n        parameterBuilder.addCorrelationId(correlationId);\n        if (!_utils_StringUtils_mjs__WEBPACK_IMPORTED_MODULE_19__.StringUtils.isEmptyObj(request.claims) ||\n            (this.config.authOptions.clientCapabilities &&\n                this.config.authOptions.clientCapabilities.length > 0)) {\n            parameterBuilder.addClaims(request.claims, this.config.authOptions.clientCapabilities);\n        }\n        let ccsCred = undefined;\n        if (request.clientInfo) {\n            try {\n                const clientInfo = (0,_account_ClientInfo_mjs__WEBPACK_IMPORTED_MODULE_11__.buildClientInfo)(request.clientInfo, this.cryptoUtils.base64Decode);\n                ccsCred = {\n                    credential: `${clientInfo.uid}${_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_7__.Separators.CLIENT_INFO_SEPARATOR}${clientInfo.utid}`,\n                    type: _account_CcsCredential_mjs__WEBPACK_IMPORTED_MODULE_12__.CcsCredentialType.HOME_ACCOUNT_ID,\n                };\n            }\n            catch (e) {\n                this.logger.verbose(\"Could not parse client info for CCS Header: \" + e);\n            }\n        }\n        else {\n            ccsCred = request.ccsCredential;\n        }\n        // Adds these as parameters in the request instead of headers to prevent CORS preflight request\n        if (this.config.systemOptions.preventCorsPreflight && ccsCred) {\n            switch (ccsCred.type) {\n                case _account_CcsCredential_mjs__WEBPACK_IMPORTED_MODULE_12__.CcsCredentialType.HOME_ACCOUNT_ID:\n                    try {\n                        const clientInfo = (0,_account_ClientInfo_mjs__WEBPACK_IMPORTED_MODULE_11__.buildClientInfoFromHomeAccountId)(ccsCred.credential);\n                        parameterBuilder.addCcsOid(clientInfo);\n                    }\n                    catch (e) {\n                        this.logger.verbose(\"Could not parse home account ID for CCS Header: \" +\n                            e);\n                    }\n                    break;\n                case _account_CcsCredential_mjs__WEBPACK_IMPORTED_MODULE_12__.CcsCredentialType.UPN:\n                    parameterBuilder.addCcsUpn(ccsCred.credential);\n                    break;\n            }\n        }\n        if (request.tokenBodyParameters) {\n            parameterBuilder.addExtraQueryParameters(request.tokenBodyParameters);\n        }\n        // Add hybrid spa parameters if not already provided\n        if (request.enableSpaAuthorizationCode &&\n            (!request.tokenBodyParameters ||\n                !request.tokenBodyParameters[_constants_AADServerParamKeys_mjs__WEBPACK_IMPORTED_MODULE_14__.RETURN_SPA_CODE])) {\n            parameterBuilder.addExtraQueryParameters({\n                [_constants_AADServerParamKeys_mjs__WEBPACK_IMPORTED_MODULE_14__.RETURN_SPA_CODE]: \"1\",\n            });\n        }\n        return parameterBuilder.createQueryString();\n    }\n    /**\n     * This API validates the `AuthorizationCodeUrlRequest` and creates a URL\n     * @param request\n     */\n    async createAuthCodeUrlQueryString(request) {\n        this.performanceClient?.addQueueMeasurement(_telemetry_performance_PerformanceEvent_mjs__WEBPACK_IMPORTED_MODULE_1__.PerformanceEvents.AuthClientCreateQueryString, request.correlationId);\n        const parameterBuilder = new _request_RequestParameterBuilder_mjs__WEBPACK_IMPORTED_MODULE_13__.RequestParameterBuilder();\n        parameterBuilder.addClientId(request.extraQueryParameters?.[_constants_AADServerParamKeys_mjs__WEBPACK_IMPORTED_MODULE_14__.CLIENT_ID] ||\n            this.config.authOptions.clientId);\n        const requestScopes = [\n            ...(request.scopes || []),\n            ...(request.extraScopesToConsent || []),\n        ];\n        parameterBuilder.addScopes(requestScopes, true, this.oidcDefaultScopes);\n        // validate the redirectUri (to be a non null value)\n        parameterBuilder.addRedirectUri(request.redirectUri);\n        // generate the correlationId if not set by the user and add\n        const correlationId = request.correlationId ||\n            this.config.cryptoInterface.createNewGuid();\n        parameterBuilder.addCorrelationId(correlationId);\n        // add response_mode. If not passed in it defaults to query.\n        parameterBuilder.addResponseMode(request.responseMode);\n        // add response_type = code\n        parameterBuilder.addResponseTypeCode();\n        // add library info parameters\n        parameterBuilder.addLibraryInfo(this.config.libraryInfo);\n        if (!(0,_config_ClientConfiguration_mjs__WEBPACK_IMPORTED_MODULE_16__.isOidcProtocolMode)(this.config)) {\n            parameterBuilder.addApplicationTelemetry(this.config.telemetry.application);\n        }\n        // add client_info=1\n        parameterBuilder.addClientInfo();\n        if (request.codeChallenge && request.codeChallengeMethod) {\n            parameterBuilder.addCodeChallengeParams(request.codeChallenge, request.codeChallengeMethod);\n        }\n        if (request.prompt) {\n            parameterBuilder.addPrompt(request.prompt);\n        }\n        if (request.domainHint) {\n            parameterBuilder.addDomainHint(request.domainHint);\n        }\n        // Add sid or loginHint with preference for login_hint claim (in request) -> sid -> loginHint (upn/email) -> username of AccountInfo object\n        if (request.prompt !== _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_7__.PromptValue.SELECT_ACCOUNT) {\n            // AAD will throw if prompt=select_account is passed with an account hint\n            if (request.sid && request.prompt === _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_7__.PromptValue.NONE) {\n                // SessionID is only used in silent calls\n                this.logger.verbose(\"createAuthCodeUrlQueryString: Prompt is none, adding sid from request\");\n                parameterBuilder.addSid(request.sid);\n            }\n            else if (request.account) {\n                const accountSid = this.extractAccountSid(request.account);\n                let accountLoginHintClaim = this.extractLoginHint(request.account);\n                if (accountLoginHintClaim && request.domainHint) {\n                    this.logger.warning(`AuthorizationCodeClient.createAuthCodeUrlQueryString: \"domainHint\" param is set, skipping opaque \"login_hint\" claim. Please consider not passing domainHint`);\n                    accountLoginHintClaim = null;\n                }\n                // If login_hint claim is present, use it over sid/username\n                if (accountLoginHintClaim) {\n                    this.logger.verbose(\"createAuthCodeUrlQueryString: login_hint claim present on account\");\n                    parameterBuilder.addLoginHint(accountLoginHintClaim);\n                    try {\n                        const clientInfo = (0,_account_ClientInfo_mjs__WEBPACK_IMPORTED_MODULE_11__.buildClientInfoFromHomeAccountId)(request.account.homeAccountId);\n                        parameterBuilder.addCcsOid(clientInfo);\n                    }\n                    catch (e) {\n                        this.logger.verbose(\"createAuthCodeUrlQueryString: Could not parse home account ID for CCS Header\");\n                    }\n                }\n                else if (accountSid && request.prompt === _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_7__.PromptValue.NONE) {\n                    /*\n                     * If account and loginHint are provided, we will check account first for sid before adding loginHint\n                     * SessionId is only used in silent calls\n                     */\n                    this.logger.verbose(\"createAuthCodeUrlQueryString: Prompt is none, adding sid from account\");\n                    parameterBuilder.addSid(accountSid);\n                    try {\n                        const clientInfo = (0,_account_ClientInfo_mjs__WEBPACK_IMPORTED_MODULE_11__.buildClientInfoFromHomeAccountId)(request.account.homeAccountId);\n                        parameterBuilder.addCcsOid(clientInfo);\n                    }\n                    catch (e) {\n                        this.logger.verbose(\"createAuthCodeUrlQueryString: Could not parse home account ID for CCS Header\");\n                    }\n                }\n                else if (request.loginHint) {\n                    this.logger.verbose(\"createAuthCodeUrlQueryString: Adding login_hint from request\");\n                    parameterBuilder.addLoginHint(request.loginHint);\n                    parameterBuilder.addCcsUpn(request.loginHint);\n                }\n                else if (request.account.username) {\n                    // Fallback to account username if provided\n                    this.logger.verbose(\"createAuthCodeUrlQueryString: Adding login_hint from account\");\n                    parameterBuilder.addLoginHint(request.account.username);\n                    try {\n                        const clientInfo = (0,_account_ClientInfo_mjs__WEBPACK_IMPORTED_MODULE_11__.buildClientInfoFromHomeAccountId)(request.account.homeAccountId);\n                        parameterBuilder.addCcsOid(clientInfo);\n                    }\n                    catch (e) {\n                        this.logger.verbose(\"createAuthCodeUrlQueryString: Could not parse home account ID for CCS Header\");\n                    }\n                }\n            }\n            else if (request.loginHint) {\n                this.logger.verbose(\"createAuthCodeUrlQueryString: No account, adding login_hint from request\");\n                parameterBuilder.addLoginHint(request.loginHint);\n                parameterBuilder.addCcsUpn(request.loginHint);\n            }\n        }\n        else {\n            this.logger.verbose(\"createAuthCodeUrlQueryString: Prompt is select_account, ignoring account hints\");\n        }\n        if (request.nonce) {\n            parameterBuilder.addNonce(request.nonce);\n        }\n        if (request.state) {\n            parameterBuilder.addState(request.state);\n        }\n        if (request.claims ||\n            (this.config.authOptions.clientCapabilities &&\n                this.config.authOptions.clientCapabilities.length > 0)) {\n            parameterBuilder.addClaims(request.claims, this.config.authOptions.clientCapabilities);\n        }\n        if (request.extraQueryParameters) {\n            parameterBuilder.addExtraQueryParameters(request.extraQueryParameters);\n        }\n        if (request.nativeBroker) {\n            // signal ests that this is a WAM call\n            parameterBuilder.addNativeBroker();\n            // pass the req_cnf for POP\n            if (request.authenticationScheme === _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_7__.AuthenticationScheme.POP) {\n                const popTokenGenerator = new _crypto_PopTokenGenerator_mjs__WEBPACK_IMPORTED_MODULE_18__.PopTokenGenerator(this.cryptoUtils);\n                // req_cnf is always sent as a string for SPAs\n                let reqCnfData;\n                if (!request.popKid) {\n                    const generatedReqCnfData = await (0,_utils_FunctionWrappers_mjs__WEBPACK_IMPORTED_MODULE_2__.invokeAsync)(popTokenGenerator.generateCnf.bind(popTokenGenerator), _telemetry_performance_PerformanceEvent_mjs__WEBPACK_IMPORTED_MODULE_1__.PerformanceEvents.PopTokenGenerateCnf, this.logger, this.performanceClient, request.correlationId)(request, this.logger);\n                    reqCnfData = generatedReqCnfData.reqCnfString;\n                }\n                else {\n                    reqCnfData = this.cryptoUtils.encodeKid(request.popKid);\n                }\n                parameterBuilder.addPopToken(reqCnfData);\n            }\n        }\n        return parameterBuilder.createQueryString();\n    }\n    /**\n     * This API validates the `EndSessionRequest` and creates a URL\n     * @param request\n     */\n    createLogoutUrlQueryString(request) {\n        const parameterBuilder = new _request_RequestParameterBuilder_mjs__WEBPACK_IMPORTED_MODULE_13__.RequestParameterBuilder();\n        if (request.postLogoutRedirectUri) {\n            parameterBuilder.addPostLogoutRedirectUri(request.postLogoutRedirectUri);\n        }\n        if (request.correlationId) {\n            parameterBuilder.addCorrelationId(request.correlationId);\n        }\n        if (request.idTokenHint) {\n            parameterBuilder.addIdTokenHint(request.idTokenHint);\n        }\n        if (request.state) {\n            parameterBuilder.addState(request.state);\n        }\n        if (request.logoutHint) {\n            parameterBuilder.addLogoutHint(request.logoutHint);\n        }\n        if (request.extraQueryParameters) {\n            parameterBuilder.addExtraQueryParameters(request.extraQueryParameters);\n        }\n        return parameterBuilder.createQueryString();\n    }\n    /**\n     * Helper to get sid from account. Returns null if idTokenClaims are not present or sid is not present.\n     * @param account\n     */\n    extractAccountSid(account) {\n        return account.idTokenClaims?.sid || null;\n    }\n    extractLoginHint(account) {\n        return account.idTokenClaims?.login_hint || null;\n    }\n}\n\n\n//# sourceMappingURL=AuthorizationCodeClient.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/msal-common/dist/client/AuthorizationCodeClient.mjs\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/msal-common/dist/client/BaseClient.mjs":
/*!********************************************************************!*\
  !*** ./node_modules/@azure/msal-common/dist/client/BaseClient.mjs ***!
  \********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   BaseClient: () => (/* binding */ BaseClient)\n/* harmony export */ });\n/* harmony import */ var _config_ClientConfiguration_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../config/ClientConfiguration.mjs */ \"(rsc)/./node_modules/@azure/msal-common/dist/config/ClientConfiguration.mjs\");\n/* harmony import */ var _network_NetworkManager_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../network/NetworkManager.mjs */ \"(rsc)/./node_modules/@azure/msal-common/dist/network/NetworkManager.mjs\");\n/* harmony import */ var _logger_Logger_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../logger/Logger.mjs */ \"(rsc)/./node_modules/@azure/msal-common/dist/logger/Logger.mjs\");\n/* harmony import */ var _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../utils/Constants.mjs */ \"(rsc)/./node_modules/@azure/msal-common/dist/utils/Constants.mjs\");\n/* harmony import */ var _packageMetadata_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../packageMetadata.mjs */ \"(rsc)/./node_modules/@azure/msal-common/dist/packageMetadata.mjs\");\n/* harmony import */ var _account_CcsCredential_mjs__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../account/CcsCredential.mjs */ \"(rsc)/./node_modules/@azure/msal-common/dist/account/CcsCredential.mjs\");\n/* harmony import */ var _account_ClientInfo_mjs__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../account/ClientInfo.mjs */ \"(rsc)/./node_modules/@azure/msal-common/dist/account/ClientInfo.mjs\");\n/* harmony import */ var _request_RequestParameterBuilder_mjs__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../request/RequestParameterBuilder.mjs */ \"(rsc)/./node_modules/@azure/msal-common/dist/request/RequestParameterBuilder.mjs\");\n/* harmony import */ var _authority_AuthorityFactory_mjs__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../authority/AuthorityFactory.mjs */ \"(rsc)/./node_modules/@azure/msal-common/dist/authority/AuthorityFactory.mjs\");\n/* harmony import */ var _telemetry_performance_PerformanceEvent_mjs__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../telemetry/performance/PerformanceEvent.mjs */ \"(rsc)/./node_modules/@azure/msal-common/dist/telemetry/performance/PerformanceEvent.mjs\");\n/*! @azure/msal-common v14.14.0 2024-07-23 */\n\n\n\n\n\n\n\n\n\n\n\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n/**\n * Base application class which will construct requests to send to and handle responses from the Microsoft STS using the authorization code flow.\n * @internal\n */\nclass BaseClient {\n    constructor(configuration, performanceClient) {\n        // Set the configuration\n        this.config = (0,_config_ClientConfiguration_mjs__WEBPACK_IMPORTED_MODULE_0__.buildClientConfiguration)(configuration);\n        // Initialize the logger\n        this.logger = new _logger_Logger_mjs__WEBPACK_IMPORTED_MODULE_1__.Logger(this.config.loggerOptions, _packageMetadata_mjs__WEBPACK_IMPORTED_MODULE_2__.name, _packageMetadata_mjs__WEBPACK_IMPORTED_MODULE_2__.version);\n        // Initialize crypto\n        this.cryptoUtils = this.config.cryptoInterface;\n        // Initialize storage interface\n        this.cacheManager = this.config.storageInterface;\n        // Set the network interface\n        this.networkClient = this.config.networkInterface;\n        // Set the NetworkManager\n        this.networkManager = new _network_NetworkManager_mjs__WEBPACK_IMPORTED_MODULE_3__.NetworkManager(this.networkClient, this.cacheManager);\n        // Set TelemetryManager\n        this.serverTelemetryManager = this.config.serverTelemetryManager;\n        // set Authority\n        this.authority = this.config.authOptions.authority;\n        // set performance telemetry client\n        this.performanceClient = performanceClient;\n    }\n    /**\n     * Creates default headers for requests to token endpoint\n     */\n    createTokenRequestHeaders(ccsCred) {\n        const headers = {};\n        headers[_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_4__.HeaderNames.CONTENT_TYPE] = _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_4__.Constants.URL_FORM_CONTENT_TYPE;\n        if (!this.config.systemOptions.preventCorsPreflight && ccsCred) {\n            switch (ccsCred.type) {\n                case _account_CcsCredential_mjs__WEBPACK_IMPORTED_MODULE_5__.CcsCredentialType.HOME_ACCOUNT_ID:\n                    try {\n                        const clientInfo = (0,_account_ClientInfo_mjs__WEBPACK_IMPORTED_MODULE_6__.buildClientInfoFromHomeAccountId)(ccsCred.credential);\n                        headers[_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_4__.HeaderNames.CCS_HEADER] = `Oid:${clientInfo.uid}@${clientInfo.utid}`;\n                    }\n                    catch (e) {\n                        this.logger.verbose(\"Could not parse home account ID for CCS Header: \" +\n                            e);\n                    }\n                    break;\n                case _account_CcsCredential_mjs__WEBPACK_IMPORTED_MODULE_5__.CcsCredentialType.UPN:\n                    headers[_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_4__.HeaderNames.CCS_HEADER] = `UPN: ${ccsCred.credential}`;\n                    break;\n            }\n        }\n        return headers;\n    }\n    /**\n     * Http post to token endpoint\n     * @param tokenEndpoint\n     * @param queryString\n     * @param headers\n     * @param thumbprint\n     */\n    async executePostToTokenEndpoint(tokenEndpoint, queryString, headers, thumbprint, correlationId, queuedEvent) {\n        if (queuedEvent) {\n            this.performanceClient?.addQueueMeasurement(queuedEvent, correlationId);\n        }\n        const response = await this.networkManager.sendPostRequest(thumbprint, tokenEndpoint, { body: queryString, headers: headers });\n        this.performanceClient?.addFields({\n            refreshTokenSize: response.body.refresh_token?.length || 0,\n            httpVerToken: response.headers?.[_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_4__.HeaderNames.X_MS_HTTP_VERSION] || \"\",\n        }, correlationId);\n        if (this.config.serverTelemetryManager &&\n            response.status < 500 &&\n            response.status !== 429) {\n            // Telemetry data successfully logged by server, clear Telemetry cache\n            this.config.serverTelemetryManager.clearTelemetryCache();\n        }\n        return response;\n    }\n    /**\n     * Updates the authority object of the client. Endpoint discovery must be completed.\n     * @param updatedAuthority\n     */\n    async updateAuthority(cloudInstanceHostname, correlationId) {\n        this.performanceClient?.addQueueMeasurement(_telemetry_performance_PerformanceEvent_mjs__WEBPACK_IMPORTED_MODULE_7__.PerformanceEvents.UpdateTokenEndpointAuthority, correlationId);\n        const cloudInstanceAuthorityUri = `https://${cloudInstanceHostname}/${this.authority.tenant}/`;\n        const cloudInstanceAuthority = await (0,_authority_AuthorityFactory_mjs__WEBPACK_IMPORTED_MODULE_8__.createDiscoveredInstance)(cloudInstanceAuthorityUri, this.networkClient, this.cacheManager, this.authority.options, this.logger, correlationId, this.performanceClient);\n        this.authority = cloudInstanceAuthority;\n    }\n    /**\n     * Creates query string for the /token request\n     * @param request\n     */\n    createTokenQueryParameters(request) {\n        const parameterBuilder = new _request_RequestParameterBuilder_mjs__WEBPACK_IMPORTED_MODULE_9__.RequestParameterBuilder();\n        if (request.tokenQueryParameters) {\n            parameterBuilder.addExtraQueryParameters(request.tokenQueryParameters);\n        }\n        return parameterBuilder.createQueryString();\n    }\n}\n\n\n//# sourceMappingURL=BaseClient.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtY29tbW9uL2Rpc3QvY2xpZW50L0Jhc2VDbGllbnQubWpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7O0FBQUE7QUFDYTtBQUNnRTtBQUNkO0FBQ2pCO0FBQ2tCO0FBQ1Q7QUFDVTtBQUNZO0FBQ0k7QUFDSjtBQUNLOztBQUVsRjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esc0JBQXNCLHlGQUF3QjtBQUM5QztBQUNBLDBCQUEwQixzREFBTSw0QkFBNEIsc0RBQUksRUFBRSx5REFBTztBQUN6RTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtDQUFrQyx1RUFBYztBQUNoRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnQkFBZ0IsNkRBQVcsaUJBQWlCLDJEQUFTO0FBQ3JEO0FBQ0E7QUFDQSxxQkFBcUIseUVBQWlCO0FBQ3RDO0FBQ0EsMkNBQTJDLHlGQUFnQztBQUMzRSxnQ0FBZ0MsNkRBQVcsc0JBQXNCLGVBQWUsR0FBRyxnQkFBZ0I7QUFDbkc7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EscUJBQXFCLHlFQUFpQjtBQUN0Qyw0QkFBNEIsNkRBQVcsdUJBQXVCLG1CQUFtQjtBQUNqRjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdHQUFnRyxxQ0FBcUM7QUFDckk7QUFDQTtBQUNBLDZDQUE2Qyw2REFBVztBQUN4RCxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxvREFBb0QsMEZBQWlCO0FBQ3JFLHFEQUFxRCxzQkFBc0IsR0FBRyxzQkFBc0I7QUFDcEcsNkNBQTZDLHlGQUF3QjtBQUNyRTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHFDQUFxQyx5RkFBdUI7QUFDNUQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVzQjtBQUN0QiIsInNvdXJjZXMiOlsid2VicGFjazovL2RhbmllbDMtdnAyLy4vbm9kZV9tb2R1bGVzL0BhenVyZS9tc2FsLWNvbW1vbi9kaXN0L2NsaWVudC9CYXNlQ2xpZW50Lm1qcz85MDJlIl0sInNvdXJjZXNDb250ZW50IjpbIi8qISBAYXp1cmUvbXNhbC1jb21tb24gdjE0LjE0LjAgMjAyNC0wNy0yMyAqL1xuJ3VzZSBzdHJpY3QnO1xuaW1wb3J0IHsgYnVpbGRDbGllbnRDb25maWd1cmF0aW9uIH0gZnJvbSAnLi4vY29uZmlnL0NsaWVudENvbmZpZ3VyYXRpb24ubWpzJztcbmltcG9ydCB7IE5ldHdvcmtNYW5hZ2VyIH0gZnJvbSAnLi4vbmV0d29yay9OZXR3b3JrTWFuYWdlci5tanMnO1xuaW1wb3J0IHsgTG9nZ2VyIH0gZnJvbSAnLi4vbG9nZ2VyL0xvZ2dlci5tanMnO1xuaW1wb3J0IHsgSGVhZGVyTmFtZXMsIENvbnN0YW50cyB9IGZyb20gJy4uL3V0aWxzL0NvbnN0YW50cy5tanMnO1xuaW1wb3J0IHsgbmFtZSwgdmVyc2lvbiB9IGZyb20gJy4uL3BhY2thZ2VNZXRhZGF0YS5tanMnO1xuaW1wb3J0IHsgQ2NzQ3JlZGVudGlhbFR5cGUgfSBmcm9tICcuLi9hY2NvdW50L0Njc0NyZWRlbnRpYWwubWpzJztcbmltcG9ydCB7IGJ1aWxkQ2xpZW50SW5mb0Zyb21Ib21lQWNjb3VudElkIH0gZnJvbSAnLi4vYWNjb3VudC9DbGllbnRJbmZvLm1qcyc7XG5pbXBvcnQgeyBSZXF1ZXN0UGFyYW1ldGVyQnVpbGRlciB9IGZyb20gJy4uL3JlcXVlc3QvUmVxdWVzdFBhcmFtZXRlckJ1aWxkZXIubWpzJztcbmltcG9ydCB7IGNyZWF0ZURpc2NvdmVyZWRJbnN0YW5jZSB9IGZyb20gJy4uL2F1dGhvcml0eS9BdXRob3JpdHlGYWN0b3J5Lm1qcyc7XG5pbXBvcnQgeyBQZXJmb3JtYW5jZUV2ZW50cyB9IGZyb20gJy4uL3RlbGVtZXRyeS9wZXJmb3JtYW5jZS9QZXJmb3JtYW5jZUV2ZW50Lm1qcyc7XG5cbi8qXG4gKiBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi4gQWxsIHJpZ2h0cyByZXNlcnZlZC5cbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgTGljZW5zZS5cbiAqL1xuLyoqXG4gKiBCYXNlIGFwcGxpY2F0aW9uIGNsYXNzIHdoaWNoIHdpbGwgY29uc3RydWN0IHJlcXVlc3RzIHRvIHNlbmQgdG8gYW5kIGhhbmRsZSByZXNwb25zZXMgZnJvbSB0aGUgTWljcm9zb2Z0IFNUUyB1c2luZyB0aGUgYXV0aG9yaXphdGlvbiBjb2RlIGZsb3cuXG4gKiBAaW50ZXJuYWxcbiAqL1xuY2xhc3MgQmFzZUNsaWVudCB7XG4gICAgY29uc3RydWN0b3IoY29uZmlndXJhdGlvbiwgcGVyZm9ybWFuY2VDbGllbnQpIHtcbiAgICAgICAgLy8gU2V0IHRoZSBjb25maWd1cmF0aW9uXG4gICAgICAgIHRoaXMuY29uZmlnID0gYnVpbGRDbGllbnRDb25maWd1cmF0aW9uKGNvbmZpZ3VyYXRpb24pO1xuICAgICAgICAvLyBJbml0aWFsaXplIHRoZSBsb2dnZXJcbiAgICAgICAgdGhpcy5sb2dnZXIgPSBuZXcgTG9nZ2VyKHRoaXMuY29uZmlnLmxvZ2dlck9wdGlvbnMsIG5hbWUsIHZlcnNpb24pO1xuICAgICAgICAvLyBJbml0aWFsaXplIGNyeXB0b1xuICAgICAgICB0aGlzLmNyeXB0b1V0aWxzID0gdGhpcy5jb25maWcuY3J5cHRvSW50ZXJmYWNlO1xuICAgICAgICAvLyBJbml0aWFsaXplIHN0b3JhZ2UgaW50ZXJmYWNlXG4gICAgICAgIHRoaXMuY2FjaGVNYW5hZ2VyID0gdGhpcy5jb25maWcuc3RvcmFnZUludGVyZmFjZTtcbiAgICAgICAgLy8gU2V0IHRoZSBuZXR3b3JrIGludGVyZmFjZVxuICAgICAgICB0aGlzLm5ldHdvcmtDbGllbnQgPSB0aGlzLmNvbmZpZy5uZXR3b3JrSW50ZXJmYWNlO1xuICAgICAgICAvLyBTZXQgdGhlIE5ldHdvcmtNYW5hZ2VyXG4gICAgICAgIHRoaXMubmV0d29ya01hbmFnZXIgPSBuZXcgTmV0d29ya01hbmFnZXIodGhpcy5uZXR3b3JrQ2xpZW50LCB0aGlzLmNhY2hlTWFuYWdlcik7XG4gICAgICAgIC8vIFNldCBUZWxlbWV0cnlNYW5hZ2VyXG4gICAgICAgIHRoaXMuc2VydmVyVGVsZW1ldHJ5TWFuYWdlciA9IHRoaXMuY29uZmlnLnNlcnZlclRlbGVtZXRyeU1hbmFnZXI7XG4gICAgICAgIC8vIHNldCBBdXRob3JpdHlcbiAgICAgICAgdGhpcy5hdXRob3JpdHkgPSB0aGlzLmNvbmZpZy5hdXRoT3B0aW9ucy5hdXRob3JpdHk7XG4gICAgICAgIC8vIHNldCBwZXJmb3JtYW5jZSB0ZWxlbWV0cnkgY2xpZW50XG4gICAgICAgIHRoaXMucGVyZm9ybWFuY2VDbGllbnQgPSBwZXJmb3JtYW5jZUNsaWVudDtcbiAgICB9XG4gICAgLyoqXG4gICAgICogQ3JlYXRlcyBkZWZhdWx0IGhlYWRlcnMgZm9yIHJlcXVlc3RzIHRvIHRva2VuIGVuZHBvaW50XG4gICAgICovXG4gICAgY3JlYXRlVG9rZW5SZXF1ZXN0SGVhZGVycyhjY3NDcmVkKSB7XG4gICAgICAgIGNvbnN0IGhlYWRlcnMgPSB7fTtcbiAgICAgICAgaGVhZGVyc1tIZWFkZXJOYW1lcy5DT05URU5UX1RZUEVdID0gQ29uc3RhbnRzLlVSTF9GT1JNX0NPTlRFTlRfVFlQRTtcbiAgICAgICAgaWYgKCF0aGlzLmNvbmZpZy5zeXN0ZW1PcHRpb25zLnByZXZlbnRDb3JzUHJlZmxpZ2h0ICYmIGNjc0NyZWQpIHtcbiAgICAgICAgICAgIHN3aXRjaCAoY2NzQ3JlZC50eXBlKSB7XG4gICAgICAgICAgICAgICAgY2FzZSBDY3NDcmVkZW50aWFsVHlwZS5IT01FX0FDQ09VTlRfSUQ6XG4gICAgICAgICAgICAgICAgICAgIHRyeSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBjb25zdCBjbGllbnRJbmZvID0gYnVpbGRDbGllbnRJbmZvRnJvbUhvbWVBY2NvdW50SWQoY2NzQ3JlZC5jcmVkZW50aWFsKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGhlYWRlcnNbSGVhZGVyTmFtZXMuQ0NTX0hFQURFUl0gPSBgT2lkOiR7Y2xpZW50SW5mby51aWR9QCR7Y2xpZW50SW5mby51dGlkfWA7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgY2F0Y2ggKGUpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMubG9nZ2VyLnZlcmJvc2UoXCJDb3VsZCBub3QgcGFyc2UgaG9tZSBhY2NvdW50IElEIGZvciBDQ1MgSGVhZGVyOiBcIiArXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZSk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICAgICAgY2FzZSBDY3NDcmVkZW50aWFsVHlwZS5VUE46XG4gICAgICAgICAgICAgICAgICAgIGhlYWRlcnNbSGVhZGVyTmFtZXMuQ0NTX0hFQURFUl0gPSBgVVBOOiAke2Njc0NyZWQuY3JlZGVudGlhbH1gO1xuICAgICAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gaGVhZGVycztcbiAgICB9XG4gICAgLyoqXG4gICAgICogSHR0cCBwb3N0IHRvIHRva2VuIGVuZHBvaW50XG4gICAgICogQHBhcmFtIHRva2VuRW5kcG9pbnRcbiAgICAgKiBAcGFyYW0gcXVlcnlTdHJpbmdcbiAgICAgKiBAcGFyYW0gaGVhZGVyc1xuICAgICAqIEBwYXJhbSB0aHVtYnByaW50XG4gICAgICovXG4gICAgYXN5bmMgZXhlY3V0ZVBvc3RUb1Rva2VuRW5kcG9pbnQodG9rZW5FbmRwb2ludCwgcXVlcnlTdHJpbmcsIGhlYWRlcnMsIHRodW1icHJpbnQsIGNvcnJlbGF0aW9uSWQsIHF1ZXVlZEV2ZW50KSB7XG4gICAgICAgIGlmIChxdWV1ZWRFdmVudCkge1xuICAgICAgICAgICAgdGhpcy5wZXJmb3JtYW5jZUNsaWVudD8uYWRkUXVldWVNZWFzdXJlbWVudChxdWV1ZWRFdmVudCwgY29ycmVsYXRpb25JZCk7XG4gICAgICAgIH1cbiAgICAgICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCB0aGlzLm5ldHdvcmtNYW5hZ2VyLnNlbmRQb3N0UmVxdWVzdCh0aHVtYnByaW50LCB0b2tlbkVuZHBvaW50LCB7IGJvZHk6IHF1ZXJ5U3RyaW5nLCBoZWFkZXJzOiBoZWFkZXJzIH0pO1xuICAgICAgICB0aGlzLnBlcmZvcm1hbmNlQ2xpZW50Py5hZGRGaWVsZHMoe1xuICAgICAgICAgICAgcmVmcmVzaFRva2VuU2l6ZTogcmVzcG9uc2UuYm9keS5yZWZyZXNoX3Rva2VuPy5sZW5ndGggfHwgMCxcbiAgICAgICAgICAgIGh0dHBWZXJUb2tlbjogcmVzcG9uc2UuaGVhZGVycz8uW0hlYWRlck5hbWVzLlhfTVNfSFRUUF9WRVJTSU9OXSB8fCBcIlwiLFxuICAgICAgICB9LCBjb3JyZWxhdGlvbklkKTtcbiAgICAgICAgaWYgKHRoaXMuY29uZmlnLnNlcnZlclRlbGVtZXRyeU1hbmFnZXIgJiZcbiAgICAgICAgICAgIHJlc3BvbnNlLnN0YXR1cyA8IDUwMCAmJlxuICAgICAgICAgICAgcmVzcG9uc2Uuc3RhdHVzICE9PSA0MjkpIHtcbiAgICAgICAgICAgIC8vIFRlbGVtZXRyeSBkYXRhIHN1Y2Nlc3NmdWxseSBsb2dnZWQgYnkgc2VydmVyLCBjbGVhciBUZWxlbWV0cnkgY2FjaGVcbiAgICAgICAgICAgIHRoaXMuY29uZmlnLnNlcnZlclRlbGVtZXRyeU1hbmFnZXIuY2xlYXJUZWxlbWV0cnlDYWNoZSgpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiByZXNwb25zZTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogVXBkYXRlcyB0aGUgYXV0aG9yaXR5IG9iamVjdCBvZiB0aGUgY2xpZW50LiBFbmRwb2ludCBkaXNjb3ZlcnkgbXVzdCBiZSBjb21wbGV0ZWQuXG4gICAgICogQHBhcmFtIHVwZGF0ZWRBdXRob3JpdHlcbiAgICAgKi9cbiAgICBhc3luYyB1cGRhdGVBdXRob3JpdHkoY2xvdWRJbnN0YW5jZUhvc3RuYW1lLCBjb3JyZWxhdGlvbklkKSB7XG4gICAgICAgIHRoaXMucGVyZm9ybWFuY2VDbGllbnQ/LmFkZFF1ZXVlTWVhc3VyZW1lbnQoUGVyZm9ybWFuY2VFdmVudHMuVXBkYXRlVG9rZW5FbmRwb2ludEF1dGhvcml0eSwgY29ycmVsYXRpb25JZCk7XG4gICAgICAgIGNvbnN0IGNsb3VkSW5zdGFuY2VBdXRob3JpdHlVcmkgPSBgaHR0cHM6Ly8ke2Nsb3VkSW5zdGFuY2VIb3N0bmFtZX0vJHt0aGlzLmF1dGhvcml0eS50ZW5hbnR9L2A7XG4gICAgICAgIGNvbnN0IGNsb3VkSW5zdGFuY2VBdXRob3JpdHkgPSBhd2FpdCBjcmVhdGVEaXNjb3ZlcmVkSW5zdGFuY2UoY2xvdWRJbnN0YW5jZUF1dGhvcml0eVVyaSwgdGhpcy5uZXR3b3JrQ2xpZW50LCB0aGlzLmNhY2hlTWFuYWdlciwgdGhpcy5hdXRob3JpdHkub3B0aW9ucywgdGhpcy5sb2dnZXIsIGNvcnJlbGF0aW9uSWQsIHRoaXMucGVyZm9ybWFuY2VDbGllbnQpO1xuICAgICAgICB0aGlzLmF1dGhvcml0eSA9IGNsb3VkSW5zdGFuY2VBdXRob3JpdHk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIENyZWF0ZXMgcXVlcnkgc3RyaW5nIGZvciB0aGUgL3Rva2VuIHJlcXVlc3RcbiAgICAgKiBAcGFyYW0gcmVxdWVzdFxuICAgICAqL1xuICAgIGNyZWF0ZVRva2VuUXVlcnlQYXJhbWV0ZXJzKHJlcXVlc3QpIHtcbiAgICAgICAgY29uc3QgcGFyYW1ldGVyQnVpbGRlciA9IG5ldyBSZXF1ZXN0UGFyYW1ldGVyQnVpbGRlcigpO1xuICAgICAgICBpZiAocmVxdWVzdC50b2tlblF1ZXJ5UGFyYW1ldGVycykge1xuICAgICAgICAgICAgcGFyYW1ldGVyQnVpbGRlci5hZGRFeHRyYVF1ZXJ5UGFyYW1ldGVycyhyZXF1ZXN0LnRva2VuUXVlcnlQYXJhbWV0ZXJzKTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gcGFyYW1ldGVyQnVpbGRlci5jcmVhdGVRdWVyeVN0cmluZygpO1xuICAgIH1cbn1cblxuZXhwb3J0IHsgQmFzZUNsaWVudCB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9QmFzZUNsaWVudC5tanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/msal-common/dist/client/BaseClient.mjs\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/msal-common/dist/client/RefreshTokenClient.mjs":
/*!****************************************************************************!*\
  !*** ./node_modules/@azure/msal-common/dist/client/RefreshTokenClient.mjs ***!
  \****************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   RefreshTokenClient: () => (/* binding */ RefreshTokenClient)\n/* harmony export */ });\n/* harmony import */ var _config_ClientConfiguration_mjs__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ../config/ClientConfiguration.mjs */ \"(rsc)/./node_modules/@azure/msal-common/dist/config/ClientConfiguration.mjs\");\n/* harmony import */ var _BaseClient_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./BaseClient.mjs */ \"(rsc)/./node_modules/@azure/msal-common/dist/client/BaseClient.mjs\");\n/* harmony import */ var _request_RequestParameterBuilder_mjs__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ../request/RequestParameterBuilder.mjs */ \"(rsc)/./node_modules/@azure/msal-common/dist/request/RequestParameterBuilder.mjs\");\n/* harmony import */ var _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../utils/Constants.mjs */ \"(rsc)/./node_modules/@azure/msal-common/dist/utils/Constants.mjs\");\n/* harmony import */ var _constants_AADServerParamKeys_mjs__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ../constants/AADServerParamKeys.mjs */ \"(rsc)/./node_modules/@azure/msal-common/dist/constants/AADServerParamKeys.mjs\");\n/* harmony import */ var _response_ResponseHandler_mjs__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../response/ResponseHandler.mjs */ \"(rsc)/./node_modules/@azure/msal-common/dist/response/ResponseHandler.mjs\");\n/* harmony import */ var _crypto_PopTokenGenerator_mjs__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ../crypto/PopTokenGenerator.mjs */ \"(rsc)/./node_modules/@azure/msal-common/dist/crypto/PopTokenGenerator.mjs\");\n/* harmony import */ var _utils_StringUtils_mjs__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ../utils/StringUtils.mjs */ \"(rsc)/./node_modules/@azure/msal-common/dist/utils/StringUtils.mjs\");\n/* harmony import */ var _error_ClientConfigurationError_mjs__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../error/ClientConfigurationError.mjs */ \"(rsc)/./node_modules/@azure/msal-common/dist/error/ClientConfigurationError.mjs\");\n/* harmony import */ var _error_ClientAuthError_mjs__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../error/ClientAuthError.mjs */ \"(rsc)/./node_modules/@azure/msal-common/dist/error/ClientAuthError.mjs\");\n/* harmony import */ var _error_ServerError_mjs__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../error/ServerError.mjs */ \"(rsc)/./node_modules/@azure/msal-common/dist/error/ServerError.mjs\");\n/* harmony import */ var _utils_TimeUtils_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils/TimeUtils.mjs */ \"(rsc)/./node_modules/@azure/msal-common/dist/utils/TimeUtils.mjs\");\n/* harmony import */ var _url_UrlString_mjs__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ../url/UrlString.mjs */ \"(rsc)/./node_modules/@azure/msal-common/dist/url/UrlString.mjs\");\n/* harmony import */ var _account_CcsCredential_mjs__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../account/CcsCredential.mjs */ \"(rsc)/./node_modules/@azure/msal-common/dist/account/CcsCredential.mjs\");\n/* harmony import */ var _account_ClientInfo_mjs__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! ../account/ClientInfo.mjs */ \"(rsc)/./node_modules/@azure/msal-common/dist/account/ClientInfo.mjs\");\n/* harmony import */ var _error_InteractionRequiredAuthError_mjs__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../error/InteractionRequiredAuthError.mjs */ \"(rsc)/./node_modules/@azure/msal-common/dist/error/InteractionRequiredAuthError.mjs\");\n/* harmony import */ var _telemetry_performance_PerformanceEvent_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../telemetry/performance/PerformanceEvent.mjs */ \"(rsc)/./node_modules/@azure/msal-common/dist/telemetry/performance/PerformanceEvent.mjs\");\n/* harmony import */ var _utils_FunctionWrappers_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../utils/FunctionWrappers.mjs */ \"(rsc)/./node_modules/@azure/msal-common/dist/utils/FunctionWrappers.mjs\");\n/* harmony import */ var _cache_utils_CacheHelpers_mjs__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ../cache/utils/CacheHelpers.mjs */ \"(rsc)/./node_modules/@azure/msal-common/dist/cache/utils/CacheHelpers.mjs\");\n/* harmony import */ var _utils_ClientAssertionUtils_mjs__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ../utils/ClientAssertionUtils.mjs */ \"(rsc)/./node_modules/@azure/msal-common/dist/utils/ClientAssertionUtils.mjs\");\n/* harmony import */ var _error_ClientConfigurationErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../error/ClientConfigurationErrorCodes.mjs */ \"(rsc)/./node_modules/@azure/msal-common/dist/error/ClientConfigurationErrorCodes.mjs\");\n/* harmony import */ var _error_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../error/ClientAuthErrorCodes.mjs */ \"(rsc)/./node_modules/@azure/msal-common/dist/error/ClientAuthErrorCodes.mjs\");\n/* harmony import */ var _error_InteractionRequiredAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../error/InteractionRequiredAuthErrorCodes.mjs */ \"(rsc)/./node_modules/@azure/msal-common/dist/error/InteractionRequiredAuthErrorCodes.mjs\");\n/*! @azure/msal-common v14.14.0 2024-07-23 */\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\nconst DEFAULT_REFRESH_TOKEN_EXPIRATION_OFFSET_SECONDS = 300; // 5 Minutes\n/**\n * OAuth2.0 refresh token client\n * @internal\n */\nclass RefreshTokenClient extends _BaseClient_mjs__WEBPACK_IMPORTED_MODULE_0__.BaseClient {\n    constructor(configuration, performanceClient) {\n        super(configuration, performanceClient);\n    }\n    async acquireToken(request) {\n        this.performanceClient?.addQueueMeasurement(_telemetry_performance_PerformanceEvent_mjs__WEBPACK_IMPORTED_MODULE_1__.PerformanceEvents.RefreshTokenClientAcquireToken, request.correlationId);\n        const reqTimestamp = (0,_utils_TimeUtils_mjs__WEBPACK_IMPORTED_MODULE_2__.nowSeconds)();\n        const response = await (0,_utils_FunctionWrappers_mjs__WEBPACK_IMPORTED_MODULE_3__.invokeAsync)(this.executeTokenRequest.bind(this), _telemetry_performance_PerformanceEvent_mjs__WEBPACK_IMPORTED_MODULE_1__.PerformanceEvents.RefreshTokenClientExecuteTokenRequest, this.logger, this.performanceClient, request.correlationId)(request, this.authority);\n        // Retrieve requestId from response headers\n        const requestId = response.headers?.[_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_4__.HeaderNames.X_MS_REQUEST_ID];\n        const responseHandler = new _response_ResponseHandler_mjs__WEBPACK_IMPORTED_MODULE_5__.ResponseHandler(this.config.authOptions.clientId, this.cacheManager, this.cryptoUtils, this.logger, this.config.serializableCache, this.config.persistencePlugin);\n        responseHandler.validateTokenResponse(response.body);\n        return (0,_utils_FunctionWrappers_mjs__WEBPACK_IMPORTED_MODULE_3__.invokeAsync)(responseHandler.handleServerTokenResponse.bind(responseHandler), _telemetry_performance_PerformanceEvent_mjs__WEBPACK_IMPORTED_MODULE_1__.PerformanceEvents.HandleServerTokenResponse, this.logger, this.performanceClient, request.correlationId)(response.body, this.authority, reqTimestamp, request, undefined, undefined, true, request.forceCache, requestId);\n    }\n    /**\n     * Gets cached refresh token and attaches to request, then calls acquireToken API\n     * @param request\n     */\n    async acquireTokenByRefreshToken(request) {\n        // Cannot renew token if no request object is given.\n        if (!request) {\n            throw (0,_error_ClientConfigurationError_mjs__WEBPACK_IMPORTED_MODULE_6__.createClientConfigurationError)(_error_ClientConfigurationErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_7__.tokenRequestEmpty);\n        }\n        this.performanceClient?.addQueueMeasurement(_telemetry_performance_PerformanceEvent_mjs__WEBPACK_IMPORTED_MODULE_1__.PerformanceEvents.RefreshTokenClientAcquireTokenByRefreshToken, request.correlationId);\n        // We currently do not support silent flow for account === null use cases; This will be revisited for confidential flow usecases\n        if (!request.account) {\n            throw (0,_error_ClientAuthError_mjs__WEBPACK_IMPORTED_MODULE_8__.createClientAuthError)(_error_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_9__.noAccountInSilentRequest);\n        }\n        // try checking if FOCI is enabled for the given application\n        const isFOCI = this.cacheManager.isAppMetadataFOCI(request.account.environment);\n        // if the app is part of the family, retrive a Family refresh token if present and make a refreshTokenRequest\n        if (isFOCI) {\n            try {\n                return await (0,_utils_FunctionWrappers_mjs__WEBPACK_IMPORTED_MODULE_3__.invokeAsync)(this.acquireTokenWithCachedRefreshToken.bind(this), _telemetry_performance_PerformanceEvent_mjs__WEBPACK_IMPORTED_MODULE_1__.PerformanceEvents.RefreshTokenClientAcquireTokenWithCachedRefreshToken, this.logger, this.performanceClient, request.correlationId)(request, true);\n            }\n            catch (e) {\n                const noFamilyRTInCache = e instanceof _error_InteractionRequiredAuthError_mjs__WEBPACK_IMPORTED_MODULE_10__.InteractionRequiredAuthError &&\n                    e.errorCode ===\n                        _error_InteractionRequiredAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_11__.noTokensFound;\n                const clientMismatchErrorWithFamilyRT = e instanceof _error_ServerError_mjs__WEBPACK_IMPORTED_MODULE_12__.ServerError &&\n                    e.errorCode === _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_4__.Errors.INVALID_GRANT_ERROR &&\n                    e.subError === _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_4__.Errors.CLIENT_MISMATCH_ERROR;\n                // if family Refresh Token (FRT) cache acquisition fails or if client_mismatch error is seen with FRT, reattempt with application Refresh Token (ART)\n                if (noFamilyRTInCache || clientMismatchErrorWithFamilyRT) {\n                    return (0,_utils_FunctionWrappers_mjs__WEBPACK_IMPORTED_MODULE_3__.invokeAsync)(this.acquireTokenWithCachedRefreshToken.bind(this), _telemetry_performance_PerformanceEvent_mjs__WEBPACK_IMPORTED_MODULE_1__.PerformanceEvents.RefreshTokenClientAcquireTokenWithCachedRefreshToken, this.logger, this.performanceClient, request.correlationId)(request, false);\n                    // throw in all other cases\n                }\n                else {\n                    throw e;\n                }\n            }\n        }\n        // fall back to application refresh token acquisition\n        return (0,_utils_FunctionWrappers_mjs__WEBPACK_IMPORTED_MODULE_3__.invokeAsync)(this.acquireTokenWithCachedRefreshToken.bind(this), _telemetry_performance_PerformanceEvent_mjs__WEBPACK_IMPORTED_MODULE_1__.PerformanceEvents.RefreshTokenClientAcquireTokenWithCachedRefreshToken, this.logger, this.performanceClient, request.correlationId)(request, false);\n    }\n    /**\n     * makes a network call to acquire tokens by exchanging RefreshToken available in userCache; throws if refresh token is not cached\n     * @param request\n     */\n    async acquireTokenWithCachedRefreshToken(request, foci) {\n        this.performanceClient?.addQueueMeasurement(_telemetry_performance_PerformanceEvent_mjs__WEBPACK_IMPORTED_MODULE_1__.PerformanceEvents.RefreshTokenClientAcquireTokenWithCachedRefreshToken, request.correlationId);\n        // fetches family RT or application RT based on FOCI value\n        const refreshToken = (0,_utils_FunctionWrappers_mjs__WEBPACK_IMPORTED_MODULE_3__.invoke)(this.cacheManager.getRefreshToken.bind(this.cacheManager), _telemetry_performance_PerformanceEvent_mjs__WEBPACK_IMPORTED_MODULE_1__.PerformanceEvents.CacheManagerGetRefreshToken, this.logger, this.performanceClient, request.correlationId)(request.account, foci, undefined, this.performanceClient, request.correlationId);\n        if (!refreshToken) {\n            throw (0,_error_InteractionRequiredAuthError_mjs__WEBPACK_IMPORTED_MODULE_10__.createInteractionRequiredAuthError)(_error_InteractionRequiredAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_11__.noTokensFound);\n        }\n        if (refreshToken.expiresOn &&\n            (0,_utils_TimeUtils_mjs__WEBPACK_IMPORTED_MODULE_2__.isTokenExpired)(refreshToken.expiresOn, request.refreshTokenExpirationOffsetSeconds ||\n                DEFAULT_REFRESH_TOKEN_EXPIRATION_OFFSET_SECONDS)) {\n            throw (0,_error_InteractionRequiredAuthError_mjs__WEBPACK_IMPORTED_MODULE_10__.createInteractionRequiredAuthError)(_error_InteractionRequiredAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_11__.refreshTokenExpired);\n        }\n        // attach cached RT size to the current measurement\n        const refreshTokenRequest = {\n            ...request,\n            refreshToken: refreshToken.secret,\n            authenticationScheme: request.authenticationScheme || _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_4__.AuthenticationScheme.BEARER,\n            ccsCredential: {\n                credential: request.account.homeAccountId,\n                type: _account_CcsCredential_mjs__WEBPACK_IMPORTED_MODULE_13__.CcsCredentialType.HOME_ACCOUNT_ID,\n            },\n        };\n        try {\n            return await (0,_utils_FunctionWrappers_mjs__WEBPACK_IMPORTED_MODULE_3__.invokeAsync)(this.acquireToken.bind(this), _telemetry_performance_PerformanceEvent_mjs__WEBPACK_IMPORTED_MODULE_1__.PerformanceEvents.RefreshTokenClientAcquireToken, this.logger, this.performanceClient, request.correlationId)(refreshTokenRequest);\n        }\n        catch (e) {\n            if (e instanceof _error_InteractionRequiredAuthError_mjs__WEBPACK_IMPORTED_MODULE_10__.InteractionRequiredAuthError &&\n                e.subError === _error_InteractionRequiredAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_11__.badToken) {\n                // Remove bad refresh token from cache\n                this.logger.verbose(\"acquireTokenWithRefreshToken: bad refresh token, removing from cache\");\n                const badRefreshTokenKey = (0,_cache_utils_CacheHelpers_mjs__WEBPACK_IMPORTED_MODULE_14__.generateCredentialKey)(refreshToken);\n                this.cacheManager.removeRefreshToken(badRefreshTokenKey);\n            }\n            throw e;\n        }\n    }\n    /**\n     * Constructs the network message and makes a NW call to the underlying secure token service\n     * @param request\n     * @param authority\n     */\n    async executeTokenRequest(request, authority) {\n        this.performanceClient?.addQueueMeasurement(_telemetry_performance_PerformanceEvent_mjs__WEBPACK_IMPORTED_MODULE_1__.PerformanceEvents.RefreshTokenClientExecuteTokenRequest, request.correlationId);\n        const queryParametersString = this.createTokenQueryParameters(request);\n        const endpoint = _url_UrlString_mjs__WEBPACK_IMPORTED_MODULE_15__.UrlString.appendQueryString(authority.tokenEndpoint, queryParametersString);\n        const requestBody = await (0,_utils_FunctionWrappers_mjs__WEBPACK_IMPORTED_MODULE_3__.invokeAsync)(this.createTokenRequestBody.bind(this), _telemetry_performance_PerformanceEvent_mjs__WEBPACK_IMPORTED_MODULE_1__.PerformanceEvents.RefreshTokenClientCreateTokenRequestBody, this.logger, this.performanceClient, request.correlationId)(request);\n        const headers = this.createTokenRequestHeaders(request.ccsCredential);\n        const thumbprint = {\n            clientId: request.tokenBodyParameters?.clientId ||\n                this.config.authOptions.clientId,\n            authority: authority.canonicalAuthority,\n            scopes: request.scopes,\n            claims: request.claims,\n            authenticationScheme: request.authenticationScheme,\n            resourceRequestMethod: request.resourceRequestMethod,\n            resourceRequestUri: request.resourceRequestUri,\n            shrClaims: request.shrClaims,\n            sshKid: request.sshKid,\n        };\n        return (0,_utils_FunctionWrappers_mjs__WEBPACK_IMPORTED_MODULE_3__.invokeAsync)(this.executePostToTokenEndpoint.bind(this), _telemetry_performance_PerformanceEvent_mjs__WEBPACK_IMPORTED_MODULE_1__.PerformanceEvents.RefreshTokenClientExecutePostToTokenEndpoint, this.logger, this.performanceClient, request.correlationId)(endpoint, requestBody, headers, thumbprint, request.correlationId, _telemetry_performance_PerformanceEvent_mjs__WEBPACK_IMPORTED_MODULE_1__.PerformanceEvents.RefreshTokenClientExecutePostToTokenEndpoint);\n    }\n    /**\n     * Helper function to create the token request body\n     * @param request\n     */\n    async createTokenRequestBody(request) {\n        this.performanceClient?.addQueueMeasurement(_telemetry_performance_PerformanceEvent_mjs__WEBPACK_IMPORTED_MODULE_1__.PerformanceEvents.RefreshTokenClientCreateTokenRequestBody, request.correlationId);\n        const correlationId = request.correlationId;\n        const parameterBuilder = new _request_RequestParameterBuilder_mjs__WEBPACK_IMPORTED_MODULE_16__.RequestParameterBuilder();\n        parameterBuilder.addClientId(request.tokenBodyParameters?.[_constants_AADServerParamKeys_mjs__WEBPACK_IMPORTED_MODULE_17__.CLIENT_ID] ||\n            this.config.authOptions.clientId);\n        if (request.redirectUri) {\n            parameterBuilder.addRedirectUri(request.redirectUri);\n        }\n        parameterBuilder.addScopes(request.scopes, true, this.config.authOptions.authority.options.OIDCOptions?.defaultScopes);\n        parameterBuilder.addGrantType(_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_4__.GrantType.REFRESH_TOKEN_GRANT);\n        parameterBuilder.addClientInfo();\n        parameterBuilder.addLibraryInfo(this.config.libraryInfo);\n        parameterBuilder.addApplicationTelemetry(this.config.telemetry.application);\n        parameterBuilder.addThrottling();\n        if (this.serverTelemetryManager && !(0,_config_ClientConfiguration_mjs__WEBPACK_IMPORTED_MODULE_18__.isOidcProtocolMode)(this.config)) {\n            parameterBuilder.addServerTelemetry(this.serverTelemetryManager);\n        }\n        parameterBuilder.addCorrelationId(correlationId);\n        parameterBuilder.addRefreshToken(request.refreshToken);\n        if (this.config.clientCredentials.clientSecret) {\n            parameterBuilder.addClientSecret(this.config.clientCredentials.clientSecret);\n        }\n        if (this.config.clientCredentials.clientAssertion) {\n            const clientAssertion = this.config.clientCredentials.clientAssertion;\n            parameterBuilder.addClientAssertion(await (0,_utils_ClientAssertionUtils_mjs__WEBPACK_IMPORTED_MODULE_19__.getClientAssertion)(clientAssertion.assertion, this.config.authOptions.clientId, request.resourceRequestUri));\n            parameterBuilder.addClientAssertionType(clientAssertion.assertionType);\n        }\n        if (request.authenticationScheme === _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_4__.AuthenticationScheme.POP) {\n            const popTokenGenerator = new _crypto_PopTokenGenerator_mjs__WEBPACK_IMPORTED_MODULE_20__.PopTokenGenerator(this.cryptoUtils, this.performanceClient);\n            let reqCnfData;\n            if (!request.popKid) {\n                const generatedReqCnfData = await (0,_utils_FunctionWrappers_mjs__WEBPACK_IMPORTED_MODULE_3__.invokeAsync)(popTokenGenerator.generateCnf.bind(popTokenGenerator), _telemetry_performance_PerformanceEvent_mjs__WEBPACK_IMPORTED_MODULE_1__.PerformanceEvents.PopTokenGenerateCnf, this.logger, this.performanceClient, request.correlationId)(request, this.logger);\n                reqCnfData = generatedReqCnfData.reqCnfString;\n            }\n            else {\n                reqCnfData = this.cryptoUtils.encodeKid(request.popKid);\n            }\n            // SPA PoP requires full Base64Url encoded req_cnf string (unhashed)\n            parameterBuilder.addPopToken(reqCnfData);\n        }\n        else if (request.authenticationScheme === _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_4__.AuthenticationScheme.SSH) {\n            if (request.sshJwk) {\n                parameterBuilder.addSshJwk(request.sshJwk);\n            }\n            else {\n                throw (0,_error_ClientConfigurationError_mjs__WEBPACK_IMPORTED_MODULE_6__.createClientConfigurationError)(_error_ClientConfigurationErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_7__.missingSshJwk);\n            }\n        }\n        if (!_utils_StringUtils_mjs__WEBPACK_IMPORTED_MODULE_21__.StringUtils.isEmptyObj(request.claims) ||\n            (this.config.authOptions.clientCapabilities &&\n                this.config.authOptions.clientCapabilities.length > 0)) {\n            parameterBuilder.addClaims(request.claims, this.config.authOptions.clientCapabilities);\n        }\n        if (this.config.systemOptions.preventCorsPreflight &&\n            request.ccsCredential) {\n            switch (request.ccsCredential.type) {\n                case _account_CcsCredential_mjs__WEBPACK_IMPORTED_MODULE_13__.CcsCredentialType.HOME_ACCOUNT_ID:\n                    try {\n                        const clientInfo = (0,_account_ClientInfo_mjs__WEBPACK_IMPORTED_MODULE_22__.buildClientInfoFromHomeAccountId)(request.ccsCredential.credential);\n                        parameterBuilder.addCcsOid(clientInfo);\n                    }\n                    catch (e) {\n                        this.logger.verbose(\"Could not parse home account ID for CCS Header: \" +\n                            e);\n                    }\n                    break;\n                case _account_CcsCredential_mjs__WEBPACK_IMPORTED_MODULE_13__.CcsCredentialType.UPN:\n                    parameterBuilder.addCcsUpn(request.ccsCredential.credential);\n                    break;\n            }\n        }\n        if (request.tokenBodyParameters) {\n            parameterBuilder.addExtraQueryParameters(request.tokenBodyParameters);\n        }\n        return parameterBuilder.createQueryString();\n    }\n}\n\n\n//# sourceMappingURL=RefreshTokenClient.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/msal-common/dist/client/RefreshTokenClient.mjs\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/msal-common/dist/client/SilentFlowClient.mjs":
/*!**************************************************************************!*\
  !*** ./node_modules/@azure/msal-common/dist/client/SilentFlowClient.mjs ***!
  \**************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   SilentFlowClient: () => (/* binding */ SilentFlowClient)\n/* harmony export */ });\n/* harmony import */ var _BaseClient_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./BaseClient.mjs */ \"(rsc)/./node_modules/@azure/msal-common/dist/client/BaseClient.mjs\");\n/* harmony import */ var _utils_TimeUtils_mjs__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../utils/TimeUtils.mjs */ \"(rsc)/./node_modules/@azure/msal-common/dist/utils/TimeUtils.mjs\");\n/* harmony import */ var _RefreshTokenClient_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./RefreshTokenClient.mjs */ \"(rsc)/./node_modules/@azure/msal-common/dist/client/RefreshTokenClient.mjs\");\n/* harmony import */ var _error_ClientAuthError_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../error/ClientAuthError.mjs */ \"(rsc)/./node_modules/@azure/msal-common/dist/error/ClientAuthError.mjs\");\n/* harmony import */ var _response_ResponseHandler_mjs__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../response/ResponseHandler.mjs */ \"(rsc)/./node_modules/@azure/msal-common/dist/response/ResponseHandler.mjs\");\n/* harmony import */ var _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/Constants.mjs */ \"(rsc)/./node_modules/@azure/msal-common/dist/utils/Constants.mjs\");\n/* harmony import */ var _utils_StringUtils_mjs__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../utils/StringUtils.mjs */ \"(rsc)/./node_modules/@azure/msal-common/dist/utils/StringUtils.mjs\");\n/* harmony import */ var _account_AuthToken_mjs__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../account/AuthToken.mjs */ \"(rsc)/./node_modules/@azure/msal-common/dist/account/AuthToken.mjs\");\n/* harmony import */ var _telemetry_performance_PerformanceEvent_mjs__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../telemetry/performance/PerformanceEvent.mjs */ \"(rsc)/./node_modules/@azure/msal-common/dist/telemetry/performance/PerformanceEvent.mjs\");\n/* harmony import */ var _utils_FunctionWrappers_mjs__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../utils/FunctionWrappers.mjs */ \"(rsc)/./node_modules/@azure/msal-common/dist/utils/FunctionWrappers.mjs\");\n/* harmony import */ var _authority_Authority_mjs__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../authority/Authority.mjs */ \"(rsc)/./node_modules/@azure/msal-common/dist/authority/Authority.mjs\");\n/* harmony import */ var _error_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../error/ClientAuthErrorCodes.mjs */ \"(rsc)/./node_modules/@azure/msal-common/dist/error/ClientAuthErrorCodes.mjs\");\n/*! @azure/msal-common v14.14.0 2024-07-23 */\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n/** @internal */\nclass SilentFlowClient extends _BaseClient_mjs__WEBPACK_IMPORTED_MODULE_0__.BaseClient {\n    constructor(configuration, performanceClient) {\n        super(configuration, performanceClient);\n    }\n    /**\n     * Retrieves a token from cache if it is still valid, or uses the cached refresh token to renew\n     * the given token and returns the renewed token\n     * @param request\n     */\n    async acquireToken(request) {\n        try {\n            const [authResponse, cacheOutcome] = await this.acquireCachedToken({\n                ...request,\n                scopes: request.scopes?.length\n                    ? request.scopes\n                    : [..._utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_1__.OIDC_DEFAULT_SCOPES],\n            });\n            // if the token is not expired but must be refreshed; get a new one in the background\n            if (cacheOutcome === _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_1__.CacheOutcome.PROACTIVELY_REFRESHED) {\n                this.logger.info(\"SilentFlowClient:acquireCachedToken - Cached access token's refreshOn property has been exceeded'. It's not expired, but must be refreshed.\");\n                // refresh the access token in the background\n                const refreshTokenClient = new _RefreshTokenClient_mjs__WEBPACK_IMPORTED_MODULE_2__.RefreshTokenClient(this.config, this.performanceClient);\n                refreshTokenClient\n                    .acquireTokenByRefreshToken(request)\n                    .catch(() => {\n                    // do nothing, this is running in the background and no action is to be taken upon success or failure\n                });\n            }\n            // return the cached token\n            return authResponse;\n        }\n        catch (e) {\n            if (e instanceof _error_ClientAuthError_mjs__WEBPACK_IMPORTED_MODULE_3__.ClientAuthError &&\n                e.errorCode === _error_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_4__.tokenRefreshRequired) {\n                const refreshTokenClient = new _RefreshTokenClient_mjs__WEBPACK_IMPORTED_MODULE_2__.RefreshTokenClient(this.config, this.performanceClient);\n                return refreshTokenClient.acquireTokenByRefreshToken(request);\n            }\n            else {\n                throw e;\n            }\n        }\n    }\n    /**\n     * Retrieves token from cache or throws an error if it must be refreshed.\n     * @param request\n     */\n    async acquireCachedToken(request) {\n        this.performanceClient?.addQueueMeasurement(_telemetry_performance_PerformanceEvent_mjs__WEBPACK_IMPORTED_MODULE_5__.PerformanceEvents.SilentFlowClientAcquireCachedToken, request.correlationId);\n        let lastCacheOutcome = _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_1__.CacheOutcome.NOT_APPLICABLE;\n        if (request.forceRefresh ||\n            (!this.config.cacheOptions.claimsBasedCachingEnabled &&\n                !_utils_StringUtils_mjs__WEBPACK_IMPORTED_MODULE_6__.StringUtils.isEmptyObj(request.claims))) {\n            // Must refresh due to present force_refresh flag.\n            this.setCacheOutcome(_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_1__.CacheOutcome.FORCE_REFRESH_OR_CLAIMS, request.correlationId);\n            throw (0,_error_ClientAuthError_mjs__WEBPACK_IMPORTED_MODULE_3__.createClientAuthError)(_error_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_4__.tokenRefreshRequired);\n        }\n        // We currently do not support silent flow for account === null use cases; This will be revisited for confidential flow usecases\n        if (!request.account) {\n            throw (0,_error_ClientAuthError_mjs__WEBPACK_IMPORTED_MODULE_3__.createClientAuthError)(_error_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_4__.noAccountInSilentRequest);\n        }\n        const requestTenantId = request.account.tenantId ||\n            (0,_authority_Authority_mjs__WEBPACK_IMPORTED_MODULE_7__.getTenantFromAuthorityString)(request.authority);\n        const tokenKeys = this.cacheManager.getTokenKeys();\n        const cachedAccessToken = this.cacheManager.getAccessToken(request.account, request, tokenKeys, requestTenantId, this.performanceClient, request.correlationId);\n        if (!cachedAccessToken) {\n            // must refresh due to non-existent access_token\n            this.setCacheOutcome(_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_1__.CacheOutcome.NO_CACHED_ACCESS_TOKEN, request.correlationId);\n            throw (0,_error_ClientAuthError_mjs__WEBPACK_IMPORTED_MODULE_3__.createClientAuthError)(_error_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_4__.tokenRefreshRequired);\n        }\n        else if ((0,_utils_TimeUtils_mjs__WEBPACK_IMPORTED_MODULE_8__.wasClockTurnedBack)(cachedAccessToken.cachedAt) ||\n            (0,_utils_TimeUtils_mjs__WEBPACK_IMPORTED_MODULE_8__.isTokenExpired)(cachedAccessToken.expiresOn, this.config.systemOptions.tokenRenewalOffsetSeconds)) {\n            // must refresh due to the expires_in value\n            this.setCacheOutcome(_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_1__.CacheOutcome.CACHED_ACCESS_TOKEN_EXPIRED, request.correlationId);\n            throw (0,_error_ClientAuthError_mjs__WEBPACK_IMPORTED_MODULE_3__.createClientAuthError)(_error_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_4__.tokenRefreshRequired);\n        }\n        else if (cachedAccessToken.refreshOn &&\n            (0,_utils_TimeUtils_mjs__WEBPACK_IMPORTED_MODULE_8__.isTokenExpired)(cachedAccessToken.refreshOn, 0)) {\n            // must refresh (in the background) due to the refresh_in value\n            lastCacheOutcome = _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_1__.CacheOutcome.PROACTIVELY_REFRESHED;\n            // don't throw ClientAuthError.createRefreshRequiredError(), return cached token instead\n        }\n        const environment = request.authority || this.authority.getPreferredCache();\n        const cacheRecord = {\n            account: this.cacheManager.readAccountFromCache(request.account),\n            accessToken: cachedAccessToken,\n            idToken: this.cacheManager.getIdToken(request.account, tokenKeys, requestTenantId, this.performanceClient, request.correlationId),\n            refreshToken: null,\n            appMetadata: this.cacheManager.readAppMetadataFromCache(environment),\n        };\n        this.setCacheOutcome(lastCacheOutcome, request.correlationId);\n        if (this.config.serverTelemetryManager) {\n            this.config.serverTelemetryManager.incrementCacheHits();\n        }\n        return [\n            await (0,_utils_FunctionWrappers_mjs__WEBPACK_IMPORTED_MODULE_9__.invokeAsync)(this.generateResultFromCacheRecord.bind(this), _telemetry_performance_PerformanceEvent_mjs__WEBPACK_IMPORTED_MODULE_5__.PerformanceEvents.SilentFlowClientGenerateResultFromCacheRecord, this.logger, this.performanceClient, request.correlationId)(cacheRecord, request),\n            lastCacheOutcome,\n        ];\n    }\n    setCacheOutcome(cacheOutcome, correlationId) {\n        this.serverTelemetryManager?.setCacheOutcome(cacheOutcome);\n        this.performanceClient?.addFields({\n            cacheOutcome: cacheOutcome,\n        }, correlationId);\n        if (cacheOutcome !== _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_1__.CacheOutcome.NOT_APPLICABLE) {\n            this.logger.info(`Token refresh is required due to cache outcome: ${cacheOutcome}`);\n        }\n    }\n    /**\n     * Helper function to build response object from the CacheRecord\n     * @param cacheRecord\n     */\n    async generateResultFromCacheRecord(cacheRecord, request) {\n        this.performanceClient?.addQueueMeasurement(_telemetry_performance_PerformanceEvent_mjs__WEBPACK_IMPORTED_MODULE_5__.PerformanceEvents.SilentFlowClientGenerateResultFromCacheRecord, request.correlationId);\n        let idTokenClaims;\n        if (cacheRecord.idToken) {\n            idTokenClaims = (0,_account_AuthToken_mjs__WEBPACK_IMPORTED_MODULE_10__.extractTokenClaims)(cacheRecord.idToken.secret, this.config.cryptoInterface.base64Decode);\n        }\n        // token max_age check\n        if (request.maxAge || request.maxAge === 0) {\n            const authTime = idTokenClaims?.auth_time;\n            if (!authTime) {\n                throw (0,_error_ClientAuthError_mjs__WEBPACK_IMPORTED_MODULE_3__.createClientAuthError)(_error_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_4__.authTimeNotFound);\n            }\n            (0,_account_AuthToken_mjs__WEBPACK_IMPORTED_MODULE_10__.checkMaxAge)(authTime, request.maxAge);\n        }\n        return _response_ResponseHandler_mjs__WEBPACK_IMPORTED_MODULE_11__.ResponseHandler.generateAuthenticationResult(this.cryptoUtils, this.authority, cacheRecord, true, request, idTokenClaims);\n    }\n}\n\n\n//# sourceMappingURL=SilentFlowClient.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/msal-common/dist/client/SilentFlowClient.mjs\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/msal-common/dist/config/ClientConfiguration.mjs":
/*!*****************************************************************************!*\
  !*** ./node_modules/@azure/msal-common/dist/config/ClientConfiguration.mjs ***!
  \*****************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DEFAULT_SYSTEM_OPTIONS: () => (/* binding */ DEFAULT_SYSTEM_OPTIONS),\n/* harmony export */   buildClientConfiguration: () => (/* binding */ buildClientConfiguration),\n/* harmony export */   isOidcProtocolMode: () => (/* binding */ isOidcProtocolMode)\n/* harmony export */ });\n/* harmony import */ var _crypto_ICrypto_mjs__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../crypto/ICrypto.mjs */ \"(rsc)/./node_modules/@azure/msal-common/dist/crypto/ICrypto.mjs\");\n/* harmony import */ var _logger_Logger_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../logger/Logger.mjs */ \"(rsc)/./node_modules/@azure/msal-common/dist/logger/Logger.mjs\");\n/* harmony import */ var _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/Constants.mjs */ \"(rsc)/./node_modules/@azure/msal-common/dist/utils/Constants.mjs\");\n/* harmony import */ var _packageMetadata_mjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../packageMetadata.mjs */ \"(rsc)/./node_modules/@azure/msal-common/dist/packageMetadata.mjs\");\n/* harmony import */ var _authority_AuthorityOptions_mjs__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../authority/AuthorityOptions.mjs */ \"(rsc)/./node_modules/@azure/msal-common/dist/authority/AuthorityOptions.mjs\");\n/* harmony import */ var _cache_CacheManager_mjs__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../cache/CacheManager.mjs */ \"(rsc)/./node_modules/@azure/msal-common/dist/cache/CacheManager.mjs\");\n/* harmony import */ var _authority_ProtocolMode_mjs__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../authority/ProtocolMode.mjs */ \"(rsc)/./node_modules/@azure/msal-common/dist/authority/ProtocolMode.mjs\");\n/* harmony import */ var _error_ClientAuthError_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../error/ClientAuthError.mjs */ \"(rsc)/./node_modules/@azure/msal-common/dist/error/ClientAuthError.mjs\");\n/* harmony import */ var _error_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../error/ClientAuthErrorCodes.mjs */ \"(rsc)/./node_modules/@azure/msal-common/dist/error/ClientAuthErrorCodes.mjs\");\n/*! @azure/msal-common v14.14.0 2024-07-23 */\n\n\n\n\n\n\n\n\n\n\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\nconst DEFAULT_SYSTEM_OPTIONS = {\n    tokenRenewalOffsetSeconds: _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.DEFAULT_TOKEN_RENEWAL_OFFSET_SEC,\n    preventCorsPreflight: false,\n};\nconst DEFAULT_LOGGER_IMPLEMENTATION = {\n    loggerCallback: () => {\n        // allow users to not set loggerCallback\n    },\n    piiLoggingEnabled: false,\n    logLevel: _logger_Logger_mjs__WEBPACK_IMPORTED_MODULE_1__.LogLevel.Info,\n    correlationId: _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.Constants.EMPTY_STRING,\n};\nconst DEFAULT_CACHE_OPTIONS = {\n    claimsBasedCachingEnabled: false,\n};\nconst DEFAULT_NETWORK_IMPLEMENTATION = {\n    async sendGetRequestAsync() {\n        throw (0,_error_ClientAuthError_mjs__WEBPACK_IMPORTED_MODULE_2__.createClientAuthError)(_error_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_3__.methodNotImplemented);\n    },\n    async sendPostRequestAsync() {\n        throw (0,_error_ClientAuthError_mjs__WEBPACK_IMPORTED_MODULE_2__.createClientAuthError)(_error_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_3__.methodNotImplemented);\n    },\n};\nconst DEFAULT_LIBRARY_INFO = {\n    sku: _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.Constants.SKU,\n    version: _packageMetadata_mjs__WEBPACK_IMPORTED_MODULE_4__.version,\n    cpu: _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.Constants.EMPTY_STRING,\n    os: _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.Constants.EMPTY_STRING,\n};\nconst DEFAULT_CLIENT_CREDENTIALS = {\n    clientSecret: _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.Constants.EMPTY_STRING,\n    clientAssertion: undefined,\n};\nconst DEFAULT_AZURE_CLOUD_OPTIONS = {\n    azureCloudInstance: _authority_AuthorityOptions_mjs__WEBPACK_IMPORTED_MODULE_5__.AzureCloudInstance.None,\n    tenant: `${_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.Constants.DEFAULT_COMMON_TENANT}`,\n};\nconst DEFAULT_TELEMETRY_OPTIONS = {\n    application: {\n        appName: \"\",\n        appVersion: \"\",\n    },\n};\n/**\n * Function that sets the default options when not explicitly configured from app developer\n *\n * @param Configuration\n *\n * @returns Configuration\n */\nfunction buildClientConfiguration({ authOptions: userAuthOptions, systemOptions: userSystemOptions, loggerOptions: userLoggerOption, cacheOptions: userCacheOptions, storageInterface: storageImplementation, networkInterface: networkImplementation, cryptoInterface: cryptoImplementation, clientCredentials: clientCredentials, libraryInfo: libraryInfo, telemetry: telemetry, serverTelemetryManager: serverTelemetryManager, persistencePlugin: persistencePlugin, serializableCache: serializableCache, }) {\n    const loggerOptions = {\n        ...DEFAULT_LOGGER_IMPLEMENTATION,\n        ...userLoggerOption,\n    };\n    return {\n        authOptions: buildAuthOptions(userAuthOptions),\n        systemOptions: { ...DEFAULT_SYSTEM_OPTIONS, ...userSystemOptions },\n        loggerOptions: loggerOptions,\n        cacheOptions: { ...DEFAULT_CACHE_OPTIONS, ...userCacheOptions },\n        storageInterface: storageImplementation ||\n            new _cache_CacheManager_mjs__WEBPACK_IMPORTED_MODULE_6__.DefaultStorageClass(userAuthOptions.clientId, _crypto_ICrypto_mjs__WEBPACK_IMPORTED_MODULE_7__.DEFAULT_CRYPTO_IMPLEMENTATION, new _logger_Logger_mjs__WEBPACK_IMPORTED_MODULE_1__.Logger(loggerOptions)),\n        networkInterface: networkImplementation || DEFAULT_NETWORK_IMPLEMENTATION,\n        cryptoInterface: cryptoImplementation || _crypto_ICrypto_mjs__WEBPACK_IMPORTED_MODULE_7__.DEFAULT_CRYPTO_IMPLEMENTATION,\n        clientCredentials: clientCredentials || DEFAULT_CLIENT_CREDENTIALS,\n        libraryInfo: { ...DEFAULT_LIBRARY_INFO, ...libraryInfo },\n        telemetry: { ...DEFAULT_TELEMETRY_OPTIONS, ...telemetry },\n        serverTelemetryManager: serverTelemetryManager || null,\n        persistencePlugin: persistencePlugin || null,\n        serializableCache: serializableCache || null,\n    };\n}\n/**\n * Construct authoptions from the client and platform passed values\n * @param authOptions\n */\nfunction buildAuthOptions(authOptions) {\n    return {\n        clientCapabilities: [],\n        azureCloudOptions: DEFAULT_AZURE_CLOUD_OPTIONS,\n        skipAuthorityMetadataCache: false,\n        ...authOptions,\n    };\n}\n/**\n * Returns true if config has protocolMode set to ProtocolMode.OIDC, false otherwise\n * @param ClientConfiguration\n */\nfunction isOidcProtocolMode(config) {\n    return (config.authOptions.authority.options.protocolMode === _authority_ProtocolMode_mjs__WEBPACK_IMPORTED_MODULE_8__.ProtocolMode.OIDC);\n}\n\n\n//# sourceMappingURL=ClientConfiguration.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtY29tbW9uL2Rpc3QvY29uZmlnL0NsaWVudENvbmZpZ3VyYXRpb24ubWpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7OztBQUFBO0FBQ2E7QUFDeUQ7QUFDZDtBQUM2QjtBQUNwQztBQUNzQjtBQUNQO0FBQ0g7QUFDUTtBQUNJOztBQUV6RTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsK0JBQStCLGtGQUFnQztBQUMvRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0EsY0FBYyx3REFBUTtBQUN0QixtQkFBbUIsMkRBQVM7QUFDNUI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsY0FBYyxpRkFBcUIsQ0FBQyxpRkFBb0I7QUFDeEQsS0FBSztBQUNMO0FBQ0EsY0FBYyxpRkFBcUIsQ0FBQyxpRkFBb0I7QUFDeEQsS0FBSztBQUNMO0FBQ0E7QUFDQSxTQUFTLDJEQUFTO0FBQ2xCLGFBQWEseURBQU87QUFDcEIsU0FBUywyREFBUztBQUNsQixRQUFRLDJEQUFTO0FBQ2pCO0FBQ0E7QUFDQSxrQkFBa0IsMkRBQVM7QUFDM0I7QUFDQTtBQUNBO0FBQ0Esd0JBQXdCLCtFQUFrQjtBQUMxQyxlQUFlLDJEQUFTLHVCQUF1QjtBQUMvQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxvQ0FBb0MsNmNBQTZjO0FBQ2pmO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHlCQUF5QixpREFBaUQ7QUFDMUU7QUFDQSx3QkFBd0IsK0NBQStDO0FBQ3ZFO0FBQ0EsZ0JBQWdCLHdFQUFtQiwyQkFBMkIsOEVBQTZCLE1BQU0sc0RBQU07QUFDdkc7QUFDQSxpREFBaUQsOEVBQTZCO0FBQzlFO0FBQ0EsdUJBQXVCLHlDQUF5QztBQUNoRSxxQkFBcUIsNENBQTRDO0FBQ2pFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0VBQWtFLHFFQUFZO0FBQzlFOztBQUVnRjtBQUNoRiIsInNvdXJjZXMiOlsid2VicGFjazovL2RhbmllbDMtdnAyLy4vbm9kZV9tb2R1bGVzL0BhenVyZS9tc2FsLWNvbW1vbi9kaXN0L2NvbmZpZy9DbGllbnRDb25maWd1cmF0aW9uLm1qcz85NDhlIl0sInNvdXJjZXNDb250ZW50IjpbIi8qISBAYXp1cmUvbXNhbC1jb21tb24gdjE0LjE0LjAgMjAyNC0wNy0yMyAqL1xuJ3VzZSBzdHJpY3QnO1xuaW1wb3J0IHsgREVGQVVMVF9DUllQVE9fSU1QTEVNRU5UQVRJT04gfSBmcm9tICcuLi9jcnlwdG8vSUNyeXB0by5tanMnO1xuaW1wb3J0IHsgTG9nZ2VyLCBMb2dMZXZlbCB9IGZyb20gJy4uL2xvZ2dlci9Mb2dnZXIubWpzJztcbmltcG9ydCB7IERFRkFVTFRfVE9LRU5fUkVORVdBTF9PRkZTRVRfU0VDLCBDb25zdGFudHMgfSBmcm9tICcuLi91dGlscy9Db25zdGFudHMubWpzJztcbmltcG9ydCB7IHZlcnNpb24gfSBmcm9tICcuLi9wYWNrYWdlTWV0YWRhdGEubWpzJztcbmltcG9ydCB7IEF6dXJlQ2xvdWRJbnN0YW5jZSB9IGZyb20gJy4uL2F1dGhvcml0eS9BdXRob3JpdHlPcHRpb25zLm1qcyc7XG5pbXBvcnQgeyBEZWZhdWx0U3RvcmFnZUNsYXNzIH0gZnJvbSAnLi4vY2FjaGUvQ2FjaGVNYW5hZ2VyLm1qcyc7XG5pbXBvcnQgeyBQcm90b2NvbE1vZGUgfSBmcm9tICcuLi9hdXRob3JpdHkvUHJvdG9jb2xNb2RlLm1qcyc7XG5pbXBvcnQgeyBjcmVhdGVDbGllbnRBdXRoRXJyb3IgfSBmcm9tICcuLi9lcnJvci9DbGllbnRBdXRoRXJyb3IubWpzJztcbmltcG9ydCB7IG1ldGhvZE5vdEltcGxlbWVudGVkIH0gZnJvbSAnLi4vZXJyb3IvQ2xpZW50QXV0aEVycm9yQ29kZXMubWpzJztcblxuLypcbiAqIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLiBBbGwgcmlnaHRzIHJlc2VydmVkLlxuICogTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBMaWNlbnNlLlxuICovXG5jb25zdCBERUZBVUxUX1NZU1RFTV9PUFRJT05TID0ge1xuICAgIHRva2VuUmVuZXdhbE9mZnNldFNlY29uZHM6IERFRkFVTFRfVE9LRU5fUkVORVdBTF9PRkZTRVRfU0VDLFxuICAgIHByZXZlbnRDb3JzUHJlZmxpZ2h0OiBmYWxzZSxcbn07XG5jb25zdCBERUZBVUxUX0xPR0dFUl9JTVBMRU1FTlRBVElPTiA9IHtcbiAgICBsb2dnZXJDYWxsYmFjazogKCkgPT4ge1xuICAgICAgICAvLyBhbGxvdyB1c2VycyB0byBub3Qgc2V0IGxvZ2dlckNhbGxiYWNrXG4gICAgfSxcbiAgICBwaWlMb2dnaW5nRW5hYmxlZDogZmFsc2UsXG4gICAgbG9nTGV2ZWw6IExvZ0xldmVsLkluZm8sXG4gICAgY29ycmVsYXRpb25JZDogQ29uc3RhbnRzLkVNUFRZX1NUUklORyxcbn07XG5jb25zdCBERUZBVUxUX0NBQ0hFX09QVElPTlMgPSB7XG4gICAgY2xhaW1zQmFzZWRDYWNoaW5nRW5hYmxlZDogZmFsc2UsXG59O1xuY29uc3QgREVGQVVMVF9ORVRXT1JLX0lNUExFTUVOVEFUSU9OID0ge1xuICAgIGFzeW5jIHNlbmRHZXRSZXF1ZXN0QXN5bmMoKSB7XG4gICAgICAgIHRocm93IGNyZWF0ZUNsaWVudEF1dGhFcnJvcihtZXRob2ROb3RJbXBsZW1lbnRlZCk7XG4gICAgfSxcbiAgICBhc3luYyBzZW5kUG9zdFJlcXVlc3RBc3luYygpIHtcbiAgICAgICAgdGhyb3cgY3JlYXRlQ2xpZW50QXV0aEVycm9yKG1ldGhvZE5vdEltcGxlbWVudGVkKTtcbiAgICB9LFxufTtcbmNvbnN0IERFRkFVTFRfTElCUkFSWV9JTkZPID0ge1xuICAgIHNrdTogQ29uc3RhbnRzLlNLVSxcbiAgICB2ZXJzaW9uOiB2ZXJzaW9uLFxuICAgIGNwdTogQ29uc3RhbnRzLkVNUFRZX1NUUklORyxcbiAgICBvczogQ29uc3RhbnRzLkVNUFRZX1NUUklORyxcbn07XG5jb25zdCBERUZBVUxUX0NMSUVOVF9DUkVERU5USUFMUyA9IHtcbiAgICBjbGllbnRTZWNyZXQ6IENvbnN0YW50cy5FTVBUWV9TVFJJTkcsXG4gICAgY2xpZW50QXNzZXJ0aW9uOiB1bmRlZmluZWQsXG59O1xuY29uc3QgREVGQVVMVF9BWlVSRV9DTE9VRF9PUFRJT05TID0ge1xuICAgIGF6dXJlQ2xvdWRJbnN0YW5jZTogQXp1cmVDbG91ZEluc3RhbmNlLk5vbmUsXG4gICAgdGVuYW50OiBgJHtDb25zdGFudHMuREVGQVVMVF9DT01NT05fVEVOQU5UfWAsXG59O1xuY29uc3QgREVGQVVMVF9URUxFTUVUUllfT1BUSU9OUyA9IHtcbiAgICBhcHBsaWNhdGlvbjoge1xuICAgICAgICBhcHBOYW1lOiBcIlwiLFxuICAgICAgICBhcHBWZXJzaW9uOiBcIlwiLFxuICAgIH0sXG59O1xuLyoqXG4gKiBGdW5jdGlvbiB0aGF0IHNldHMgdGhlIGRlZmF1bHQgb3B0aW9ucyB3aGVuIG5vdCBleHBsaWNpdGx5IGNvbmZpZ3VyZWQgZnJvbSBhcHAgZGV2ZWxvcGVyXG4gKlxuICogQHBhcmFtIENvbmZpZ3VyYXRpb25cbiAqXG4gKiBAcmV0dXJucyBDb25maWd1cmF0aW9uXG4gKi9cbmZ1bmN0aW9uIGJ1aWxkQ2xpZW50Q29uZmlndXJhdGlvbih7IGF1dGhPcHRpb25zOiB1c2VyQXV0aE9wdGlvbnMsIHN5c3RlbU9wdGlvbnM6IHVzZXJTeXN0ZW1PcHRpb25zLCBsb2dnZXJPcHRpb25zOiB1c2VyTG9nZ2VyT3B0aW9uLCBjYWNoZU9wdGlvbnM6IHVzZXJDYWNoZU9wdGlvbnMsIHN0b3JhZ2VJbnRlcmZhY2U6IHN0b3JhZ2VJbXBsZW1lbnRhdGlvbiwgbmV0d29ya0ludGVyZmFjZTogbmV0d29ya0ltcGxlbWVudGF0aW9uLCBjcnlwdG9JbnRlcmZhY2U6IGNyeXB0b0ltcGxlbWVudGF0aW9uLCBjbGllbnRDcmVkZW50aWFsczogY2xpZW50Q3JlZGVudGlhbHMsIGxpYnJhcnlJbmZvOiBsaWJyYXJ5SW5mbywgdGVsZW1ldHJ5OiB0ZWxlbWV0cnksIHNlcnZlclRlbGVtZXRyeU1hbmFnZXI6IHNlcnZlclRlbGVtZXRyeU1hbmFnZXIsIHBlcnNpc3RlbmNlUGx1Z2luOiBwZXJzaXN0ZW5jZVBsdWdpbiwgc2VyaWFsaXphYmxlQ2FjaGU6IHNlcmlhbGl6YWJsZUNhY2hlLCB9KSB7XG4gICAgY29uc3QgbG9nZ2VyT3B0aW9ucyA9IHtcbiAgICAgICAgLi4uREVGQVVMVF9MT0dHRVJfSU1QTEVNRU5UQVRJT04sXG4gICAgICAgIC4uLnVzZXJMb2dnZXJPcHRpb24sXG4gICAgfTtcbiAgICByZXR1cm4ge1xuICAgICAgICBhdXRoT3B0aW9uczogYnVpbGRBdXRoT3B0aW9ucyh1c2VyQXV0aE9wdGlvbnMpLFxuICAgICAgICBzeXN0ZW1PcHRpb25zOiB7IC4uLkRFRkFVTFRfU1lTVEVNX09QVElPTlMsIC4uLnVzZXJTeXN0ZW1PcHRpb25zIH0sXG4gICAgICAgIGxvZ2dlck9wdGlvbnM6IGxvZ2dlck9wdGlvbnMsXG4gICAgICAgIGNhY2hlT3B0aW9uczogeyAuLi5ERUZBVUxUX0NBQ0hFX09QVElPTlMsIC4uLnVzZXJDYWNoZU9wdGlvbnMgfSxcbiAgICAgICAgc3RvcmFnZUludGVyZmFjZTogc3RvcmFnZUltcGxlbWVudGF0aW9uIHx8XG4gICAgICAgICAgICBuZXcgRGVmYXVsdFN0b3JhZ2VDbGFzcyh1c2VyQXV0aE9wdGlvbnMuY2xpZW50SWQsIERFRkFVTFRfQ1JZUFRPX0lNUExFTUVOVEFUSU9OLCBuZXcgTG9nZ2VyKGxvZ2dlck9wdGlvbnMpKSxcbiAgICAgICAgbmV0d29ya0ludGVyZmFjZTogbmV0d29ya0ltcGxlbWVudGF0aW9uIHx8IERFRkFVTFRfTkVUV09SS19JTVBMRU1FTlRBVElPTixcbiAgICAgICAgY3J5cHRvSW50ZXJmYWNlOiBjcnlwdG9JbXBsZW1lbnRhdGlvbiB8fCBERUZBVUxUX0NSWVBUT19JTVBMRU1FTlRBVElPTixcbiAgICAgICAgY2xpZW50Q3JlZGVudGlhbHM6IGNsaWVudENyZWRlbnRpYWxzIHx8IERFRkFVTFRfQ0xJRU5UX0NSRURFTlRJQUxTLFxuICAgICAgICBsaWJyYXJ5SW5mbzogeyAuLi5ERUZBVUxUX0xJQlJBUllfSU5GTywgLi4ubGlicmFyeUluZm8gfSxcbiAgICAgICAgdGVsZW1ldHJ5OiB7IC4uLkRFRkFVTFRfVEVMRU1FVFJZX09QVElPTlMsIC4uLnRlbGVtZXRyeSB9LFxuICAgICAgICBzZXJ2ZXJUZWxlbWV0cnlNYW5hZ2VyOiBzZXJ2ZXJUZWxlbWV0cnlNYW5hZ2VyIHx8IG51bGwsXG4gICAgICAgIHBlcnNpc3RlbmNlUGx1Z2luOiBwZXJzaXN0ZW5jZVBsdWdpbiB8fCBudWxsLFxuICAgICAgICBzZXJpYWxpemFibGVDYWNoZTogc2VyaWFsaXphYmxlQ2FjaGUgfHwgbnVsbCxcbiAgICB9O1xufVxuLyoqXG4gKiBDb25zdHJ1Y3QgYXV0aG9wdGlvbnMgZnJvbSB0aGUgY2xpZW50IGFuZCBwbGF0Zm9ybSBwYXNzZWQgdmFsdWVzXG4gKiBAcGFyYW0gYXV0aE9wdGlvbnNcbiAqL1xuZnVuY3Rpb24gYnVpbGRBdXRoT3B0aW9ucyhhdXRoT3B0aW9ucykge1xuICAgIHJldHVybiB7XG4gICAgICAgIGNsaWVudENhcGFiaWxpdGllczogW10sXG4gICAgICAgIGF6dXJlQ2xvdWRPcHRpb25zOiBERUZBVUxUX0FaVVJFX0NMT1VEX09QVElPTlMsXG4gICAgICAgIHNraXBBdXRob3JpdHlNZXRhZGF0YUNhY2hlOiBmYWxzZSxcbiAgICAgICAgLi4uYXV0aE9wdGlvbnMsXG4gICAgfTtcbn1cbi8qKlxuICogUmV0dXJucyB0cnVlIGlmIGNvbmZpZyBoYXMgcHJvdG9jb2xNb2RlIHNldCB0byBQcm90b2NvbE1vZGUuT0lEQywgZmFsc2Ugb3RoZXJ3aXNlXG4gKiBAcGFyYW0gQ2xpZW50Q29uZmlndXJhdGlvblxuICovXG5mdW5jdGlvbiBpc09pZGNQcm90b2NvbE1vZGUoY29uZmlnKSB7XG4gICAgcmV0dXJuIChjb25maWcuYXV0aE9wdGlvbnMuYXV0aG9yaXR5Lm9wdGlvbnMucHJvdG9jb2xNb2RlID09PSBQcm90b2NvbE1vZGUuT0lEQyk7XG59XG5cbmV4cG9ydCB7IERFRkFVTFRfU1lTVEVNX09QVElPTlMsIGJ1aWxkQ2xpZW50Q29uZmlndXJhdGlvbiwgaXNPaWRjUHJvdG9jb2xNb2RlIH07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1DbGllbnRDb25maWd1cmF0aW9uLm1qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/msal-common/dist/config/ClientConfiguration.mjs\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/msal-common/dist/constants/AADServerParamKeys.mjs":
/*!*******************************************************************************!*\
  !*** ./node_modules/@azure/msal-common/dist/constants/AADServerParamKeys.mjs ***!
  \*******************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ACCESS_TOKEN: () => (/* binding */ ACCESS_TOKEN),\n/* harmony export */   CCS_HEADER: () => (/* binding */ CCS_HEADER),\n/* harmony export */   CLAIMS: () => (/* binding */ CLAIMS),\n/* harmony export */   CLIENT_ASSERTION: () => (/* binding */ CLIENT_ASSERTION),\n/* harmony export */   CLIENT_ASSERTION_TYPE: () => (/* binding */ CLIENT_ASSERTION_TYPE),\n/* harmony export */   CLIENT_ID: () => (/* binding */ CLIENT_ID),\n/* harmony export */   CLIENT_INFO: () => (/* binding */ CLIENT_INFO),\n/* harmony export */   CLIENT_REQUEST_ID: () => (/* binding */ CLIENT_REQUEST_ID),\n/* harmony export */   CLIENT_SECRET: () => (/* binding */ CLIENT_SECRET),\n/* harmony export */   CODE: () => (/* binding */ CODE),\n/* harmony export */   CODE_CHALLENGE: () => (/* binding */ CODE_CHALLENGE),\n/* harmony export */   CODE_CHALLENGE_METHOD: () => (/* binding */ CODE_CHALLENGE_METHOD),\n/* harmony export */   CODE_VERIFIER: () => (/* binding */ CODE_VERIFIER),\n/* harmony export */   DEVICE_CODE: () => (/* binding */ DEVICE_CODE),\n/* harmony export */   DOMAIN_HINT: () => (/* binding */ DOMAIN_HINT),\n/* harmony export */   ERROR: () => (/* binding */ ERROR),\n/* harmony export */   ERROR_DESCRIPTION: () => (/* binding */ ERROR_DESCRIPTION),\n/* harmony export */   EXPIRES_IN: () => (/* binding */ EXPIRES_IN),\n/* harmony export */   FOCI: () => (/* binding */ FOCI),\n/* harmony export */   GRANT_TYPE: () => (/* binding */ GRANT_TYPE),\n/* harmony export */   ID_TOKEN: () => (/* binding */ ID_TOKEN),\n/* harmony export */   ID_TOKEN_HINT: () => (/* binding */ ID_TOKEN_HINT),\n/* harmony export */   LOGIN_HINT: () => (/* binding */ LOGIN_HINT),\n/* harmony export */   LOGOUT_HINT: () => (/* binding */ LOGOUT_HINT),\n/* harmony export */   NATIVE_BROKER: () => (/* binding */ NATIVE_BROKER),\n/* harmony export */   NONCE: () => (/* binding */ NONCE),\n/* harmony export */   OBO_ASSERTION: () => (/* binding */ OBO_ASSERTION),\n/* harmony export */   ON_BEHALF_OF: () => (/* binding */ ON_BEHALF_OF),\n/* harmony export */   POST_LOGOUT_URI: () => (/* binding */ POST_LOGOUT_URI),\n/* harmony export */   PROMPT: () => (/* binding */ PROMPT),\n/* harmony export */   REDIRECT_URI: () => (/* binding */ REDIRECT_URI),\n/* harmony export */   REFRESH_TOKEN: () => (/* binding */ REFRESH_TOKEN),\n/* harmony export */   REFRESH_TOKEN_EXPIRES_IN: () => (/* binding */ REFRESH_TOKEN_EXPIRES_IN),\n/* harmony export */   REQUESTED_TOKEN_USE: () => (/* binding */ REQUESTED_TOKEN_USE),\n/* harmony export */   REQ_CNF: () => (/* binding */ REQ_CNF),\n/* harmony export */   RESPONSE_MODE: () => (/* binding */ RESPONSE_MODE),\n/* harmony export */   RESPONSE_TYPE: () => (/* binding */ RESPONSE_TYPE),\n/* harmony export */   RETURN_SPA_CODE: () => (/* binding */ RETURN_SPA_CODE),\n/* harmony export */   SCOPE: () => (/* binding */ SCOPE),\n/* harmony export */   SESSION_STATE: () => (/* binding */ SESSION_STATE),\n/* harmony export */   SID: () => (/* binding */ SID),\n/* harmony export */   STATE: () => (/* binding */ STATE),\n/* harmony export */   TOKEN_TYPE: () => (/* binding */ TOKEN_TYPE),\n/* harmony export */   X_APP_NAME: () => (/* binding */ X_APP_NAME),\n/* harmony export */   X_APP_VER: () => (/* binding */ X_APP_VER),\n/* harmony export */   X_CLIENT_CPU: () => (/* binding */ X_CLIENT_CPU),\n/* harmony export */   X_CLIENT_CURR_TELEM: () => (/* binding */ X_CLIENT_CURR_TELEM),\n/* harmony export */   X_CLIENT_EXTRA_SKU: () => (/* binding */ X_CLIENT_EXTRA_SKU),\n/* harmony export */   X_CLIENT_LAST_TELEM: () => (/* binding */ X_CLIENT_LAST_TELEM),\n/* harmony export */   X_CLIENT_OS: () => (/* binding */ X_CLIENT_OS),\n/* harmony export */   X_CLIENT_SKU: () => (/* binding */ X_CLIENT_SKU),\n/* harmony export */   X_CLIENT_VER: () => (/* binding */ X_CLIENT_VER),\n/* harmony export */   X_MS_LIB_CAPABILITY: () => (/* binding */ X_MS_LIB_CAPABILITY)\n/* harmony export */ });\n/*! @azure/msal-common v14.14.0 2024-07-23 */\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\nconst CLIENT_ID = \"client_id\";\nconst REDIRECT_URI = \"redirect_uri\";\nconst RESPONSE_TYPE = \"response_type\";\nconst RESPONSE_MODE = \"response_mode\";\nconst GRANT_TYPE = \"grant_type\";\nconst CLAIMS = \"claims\";\nconst SCOPE = \"scope\";\nconst ERROR = \"error\";\nconst ERROR_DESCRIPTION = \"error_description\";\nconst ACCESS_TOKEN = \"access_token\";\nconst ID_TOKEN = \"id_token\";\nconst REFRESH_TOKEN = \"refresh_token\";\nconst EXPIRES_IN = \"expires_in\";\nconst REFRESH_TOKEN_EXPIRES_IN = \"refresh_token_expires_in\";\nconst STATE = \"state\";\nconst NONCE = \"nonce\";\nconst PROMPT = \"prompt\";\nconst SESSION_STATE = \"session_state\";\nconst CLIENT_INFO = \"client_info\";\nconst CODE = \"code\";\nconst CODE_CHALLENGE = \"code_challenge\";\nconst CODE_CHALLENGE_METHOD = \"code_challenge_method\";\nconst CODE_VERIFIER = \"code_verifier\";\nconst CLIENT_REQUEST_ID = \"client-request-id\";\nconst X_CLIENT_SKU = \"x-client-SKU\";\nconst X_CLIENT_VER = \"x-client-VER\";\nconst X_CLIENT_OS = \"x-client-OS\";\nconst X_CLIENT_CPU = \"x-client-CPU\";\nconst X_CLIENT_CURR_TELEM = \"x-client-current-telemetry\";\nconst X_CLIENT_LAST_TELEM = \"x-client-last-telemetry\";\nconst X_MS_LIB_CAPABILITY = \"x-ms-lib-capability\";\nconst X_APP_NAME = \"x-app-name\";\nconst X_APP_VER = \"x-app-ver\";\nconst POST_LOGOUT_URI = \"post_logout_redirect_uri\";\nconst ID_TOKEN_HINT = \"id_token_hint\";\nconst DEVICE_CODE = \"device_code\";\nconst CLIENT_SECRET = \"client_secret\";\nconst CLIENT_ASSERTION = \"client_assertion\";\nconst CLIENT_ASSERTION_TYPE = \"client_assertion_type\";\nconst TOKEN_TYPE = \"token_type\";\nconst REQ_CNF = \"req_cnf\";\nconst OBO_ASSERTION = \"assertion\";\nconst REQUESTED_TOKEN_USE = \"requested_token_use\";\nconst ON_BEHALF_OF = \"on_behalf_of\";\nconst FOCI = \"foci\";\nconst CCS_HEADER = \"X-AnchorMailbox\";\nconst RETURN_SPA_CODE = \"return_spa_code\";\nconst NATIVE_BROKER = \"nativebroker\";\nconst LOGOUT_HINT = \"logout_hint\";\nconst SID = \"sid\";\nconst LOGIN_HINT = \"login_hint\";\nconst DOMAIN_HINT = \"domain_hint\";\nconst X_CLIENT_EXTRA_SKU = \"x-client-xtra-sku\";\n\n\n//# sourceMappingURL=AADServerParamKeys.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtY29tbW9uL2Rpc3QvY29uc3RhbnRzL0FBRFNlcnZlclBhcmFtS2V5cy5tanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBQTtBQUNhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUU4dUI7QUFDOXVCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZGFuaWVsMy12cDIvLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtY29tbW9uL2Rpc3QvY29uc3RhbnRzL0FBRFNlcnZlclBhcmFtS2V5cy5tanM/ODg1NSJdLCJzb3VyY2VzQ29udGVudCI6WyIvKiEgQGF6dXJlL21zYWwtY29tbW9uIHYxNC4xNC4wIDIwMjQtMDctMjMgKi9cbid1c2Ugc3RyaWN0Jztcbi8qXG4gKiBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi4gQWxsIHJpZ2h0cyByZXNlcnZlZC5cbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgTGljZW5zZS5cbiAqL1xuY29uc3QgQ0xJRU5UX0lEID0gXCJjbGllbnRfaWRcIjtcbmNvbnN0IFJFRElSRUNUX1VSSSA9IFwicmVkaXJlY3RfdXJpXCI7XG5jb25zdCBSRVNQT05TRV9UWVBFID0gXCJyZXNwb25zZV90eXBlXCI7XG5jb25zdCBSRVNQT05TRV9NT0RFID0gXCJyZXNwb25zZV9tb2RlXCI7XG5jb25zdCBHUkFOVF9UWVBFID0gXCJncmFudF90eXBlXCI7XG5jb25zdCBDTEFJTVMgPSBcImNsYWltc1wiO1xuY29uc3QgU0NPUEUgPSBcInNjb3BlXCI7XG5jb25zdCBFUlJPUiA9IFwiZXJyb3JcIjtcbmNvbnN0IEVSUk9SX0RFU0NSSVBUSU9OID0gXCJlcnJvcl9kZXNjcmlwdGlvblwiO1xuY29uc3QgQUNDRVNTX1RPS0VOID0gXCJhY2Nlc3NfdG9rZW5cIjtcbmNvbnN0IElEX1RPS0VOID0gXCJpZF90b2tlblwiO1xuY29uc3QgUkVGUkVTSF9UT0tFTiA9IFwicmVmcmVzaF90b2tlblwiO1xuY29uc3QgRVhQSVJFU19JTiA9IFwiZXhwaXJlc19pblwiO1xuY29uc3QgUkVGUkVTSF9UT0tFTl9FWFBJUkVTX0lOID0gXCJyZWZyZXNoX3Rva2VuX2V4cGlyZXNfaW5cIjtcbmNvbnN0IFNUQVRFID0gXCJzdGF0ZVwiO1xuY29uc3QgTk9OQ0UgPSBcIm5vbmNlXCI7XG5jb25zdCBQUk9NUFQgPSBcInByb21wdFwiO1xuY29uc3QgU0VTU0lPTl9TVEFURSA9IFwic2Vzc2lvbl9zdGF0ZVwiO1xuY29uc3QgQ0xJRU5UX0lORk8gPSBcImNsaWVudF9pbmZvXCI7XG5jb25zdCBDT0RFID0gXCJjb2RlXCI7XG5jb25zdCBDT0RFX0NIQUxMRU5HRSA9IFwiY29kZV9jaGFsbGVuZ2VcIjtcbmNvbnN0IENPREVfQ0hBTExFTkdFX01FVEhPRCA9IFwiY29kZV9jaGFsbGVuZ2VfbWV0aG9kXCI7XG5jb25zdCBDT0RFX1ZFUklGSUVSID0gXCJjb2RlX3ZlcmlmaWVyXCI7XG5jb25zdCBDTElFTlRfUkVRVUVTVF9JRCA9IFwiY2xpZW50LXJlcXVlc3QtaWRcIjtcbmNvbnN0IFhfQ0xJRU5UX1NLVSA9IFwieC1jbGllbnQtU0tVXCI7XG5jb25zdCBYX0NMSUVOVF9WRVIgPSBcIngtY2xpZW50LVZFUlwiO1xuY29uc3QgWF9DTElFTlRfT1MgPSBcIngtY2xpZW50LU9TXCI7XG5jb25zdCBYX0NMSUVOVF9DUFUgPSBcIngtY2xpZW50LUNQVVwiO1xuY29uc3QgWF9DTElFTlRfQ1VSUl9URUxFTSA9IFwieC1jbGllbnQtY3VycmVudC10ZWxlbWV0cnlcIjtcbmNvbnN0IFhfQ0xJRU5UX0xBU1RfVEVMRU0gPSBcIngtY2xpZW50LWxhc3QtdGVsZW1ldHJ5XCI7XG5jb25zdCBYX01TX0xJQl9DQVBBQklMSVRZID0gXCJ4LW1zLWxpYi1jYXBhYmlsaXR5XCI7XG5jb25zdCBYX0FQUF9OQU1FID0gXCJ4LWFwcC1uYW1lXCI7XG5jb25zdCBYX0FQUF9WRVIgPSBcIngtYXBwLXZlclwiO1xuY29uc3QgUE9TVF9MT0dPVVRfVVJJID0gXCJwb3N0X2xvZ291dF9yZWRpcmVjdF91cmlcIjtcbmNvbnN0IElEX1RPS0VOX0hJTlQgPSBcImlkX3Rva2VuX2hpbnRcIjtcbmNvbnN0IERFVklDRV9DT0RFID0gXCJkZXZpY2VfY29kZVwiO1xuY29uc3QgQ0xJRU5UX1NFQ1JFVCA9IFwiY2xpZW50X3NlY3JldFwiO1xuY29uc3QgQ0xJRU5UX0FTU0VSVElPTiA9IFwiY2xpZW50X2Fzc2VydGlvblwiO1xuY29uc3QgQ0xJRU5UX0FTU0VSVElPTl9UWVBFID0gXCJjbGllbnRfYXNzZXJ0aW9uX3R5cGVcIjtcbmNvbnN0IFRPS0VOX1RZUEUgPSBcInRva2VuX3R5cGVcIjtcbmNvbnN0IFJFUV9DTkYgPSBcInJlcV9jbmZcIjtcbmNvbnN0IE9CT19BU1NFUlRJT04gPSBcImFzc2VydGlvblwiO1xuY29uc3QgUkVRVUVTVEVEX1RPS0VOX1VTRSA9IFwicmVxdWVzdGVkX3Rva2VuX3VzZVwiO1xuY29uc3QgT05fQkVIQUxGX09GID0gXCJvbl9iZWhhbGZfb2ZcIjtcbmNvbnN0IEZPQ0kgPSBcImZvY2lcIjtcbmNvbnN0IENDU19IRUFERVIgPSBcIlgtQW5jaG9yTWFpbGJveFwiO1xuY29uc3QgUkVUVVJOX1NQQV9DT0RFID0gXCJyZXR1cm5fc3BhX2NvZGVcIjtcbmNvbnN0IE5BVElWRV9CUk9LRVIgPSBcIm5hdGl2ZWJyb2tlclwiO1xuY29uc3QgTE9HT1VUX0hJTlQgPSBcImxvZ291dF9oaW50XCI7XG5jb25zdCBTSUQgPSBcInNpZFwiO1xuY29uc3QgTE9HSU5fSElOVCA9IFwibG9naW5faGludFwiO1xuY29uc3QgRE9NQUlOX0hJTlQgPSBcImRvbWFpbl9oaW50XCI7XG5jb25zdCBYX0NMSUVOVF9FWFRSQV9TS1UgPSBcIngtY2xpZW50LXh0cmEtc2t1XCI7XG5cbmV4cG9ydCB7IEFDQ0VTU19UT0tFTiwgQ0NTX0hFQURFUiwgQ0xBSU1TLCBDTElFTlRfQVNTRVJUSU9OLCBDTElFTlRfQVNTRVJUSU9OX1RZUEUsIENMSUVOVF9JRCwgQ0xJRU5UX0lORk8sIENMSUVOVF9SRVFVRVNUX0lELCBDTElFTlRfU0VDUkVULCBDT0RFLCBDT0RFX0NIQUxMRU5HRSwgQ09ERV9DSEFMTEVOR0VfTUVUSE9ELCBDT0RFX1ZFUklGSUVSLCBERVZJQ0VfQ09ERSwgRE9NQUlOX0hJTlQsIEVSUk9SLCBFUlJPUl9ERVNDUklQVElPTiwgRVhQSVJFU19JTiwgRk9DSSwgR1JBTlRfVFlQRSwgSURfVE9LRU4sIElEX1RPS0VOX0hJTlQsIExPR0lOX0hJTlQsIExPR09VVF9ISU5ULCBOQVRJVkVfQlJPS0VSLCBOT05DRSwgT0JPX0FTU0VSVElPTiwgT05fQkVIQUxGX09GLCBQT1NUX0xPR09VVF9VUkksIFBST01QVCwgUkVESVJFQ1RfVVJJLCBSRUZSRVNIX1RPS0VOLCBSRUZSRVNIX1RPS0VOX0VYUElSRVNfSU4sIFJFUVVFU1RFRF9UT0tFTl9VU0UsIFJFUV9DTkYsIFJFU1BPTlNFX01PREUsIFJFU1BPTlNFX1RZUEUsIFJFVFVSTl9TUEFfQ09ERSwgU0NPUEUsIFNFU1NJT05fU1RBVEUsIFNJRCwgU1RBVEUsIFRPS0VOX1RZUEUsIFhfQVBQX05BTUUsIFhfQVBQX1ZFUiwgWF9DTElFTlRfQ1BVLCBYX0NMSUVOVF9DVVJSX1RFTEVNLCBYX0NMSUVOVF9FWFRSQV9TS1UsIFhfQ0xJRU5UX0xBU1RfVEVMRU0sIFhfQ0xJRU5UX09TLCBYX0NMSUVOVF9TS1UsIFhfQ0xJRU5UX1ZFUiwgWF9NU19MSUJfQ0FQQUJJTElUWSB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9QUFEU2VydmVyUGFyYW1LZXlzLm1qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/msal-common/dist/constants/AADServerParamKeys.mjs\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/msal-common/dist/crypto/ICrypto.mjs":
/*!*****************************************************************!*\
  !*** ./node_modules/@azure/msal-common/dist/crypto/ICrypto.mjs ***!
  \*****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DEFAULT_CRYPTO_IMPLEMENTATION: () => (/* binding */ DEFAULT_CRYPTO_IMPLEMENTATION)\n/* harmony export */ });\n/* harmony import */ var _error_ClientAuthError_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../error/ClientAuthError.mjs */ \"(rsc)/./node_modules/@azure/msal-common/dist/error/ClientAuthError.mjs\");\n/* harmony import */ var _error_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../error/ClientAuthErrorCodes.mjs */ \"(rsc)/./node_modules/@azure/msal-common/dist/error/ClientAuthErrorCodes.mjs\");\n/*! @azure/msal-common v14.14.0 2024-07-23 */\n\n\n\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\nconst DEFAULT_CRYPTO_IMPLEMENTATION = {\n    createNewGuid: () => {\n        throw (0,_error_ClientAuthError_mjs__WEBPACK_IMPORTED_MODULE_0__.createClientAuthError)(_error_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_1__.methodNotImplemented);\n    },\n    base64Decode: () => {\n        throw (0,_error_ClientAuthError_mjs__WEBPACK_IMPORTED_MODULE_0__.createClientAuthError)(_error_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_1__.methodNotImplemented);\n    },\n    base64Encode: () => {\n        throw (0,_error_ClientAuthError_mjs__WEBPACK_IMPORTED_MODULE_0__.createClientAuthError)(_error_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_1__.methodNotImplemented);\n    },\n    base64UrlEncode: () => {\n        throw (0,_error_ClientAuthError_mjs__WEBPACK_IMPORTED_MODULE_0__.createClientAuthError)(_error_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_1__.methodNotImplemented);\n    },\n    encodeKid: () => {\n        throw (0,_error_ClientAuthError_mjs__WEBPACK_IMPORTED_MODULE_0__.createClientAuthError)(_error_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_1__.methodNotImplemented);\n    },\n    async getPublicKeyThumbprint() {\n        throw (0,_error_ClientAuthError_mjs__WEBPACK_IMPORTED_MODULE_0__.createClientAuthError)(_error_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_1__.methodNotImplemented);\n    },\n    async removeTokenBindingKey() {\n        throw (0,_error_ClientAuthError_mjs__WEBPACK_IMPORTED_MODULE_0__.createClientAuthError)(_error_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_1__.methodNotImplemented);\n    },\n    async clearKeystore() {\n        throw (0,_error_ClientAuthError_mjs__WEBPACK_IMPORTED_MODULE_0__.createClientAuthError)(_error_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_1__.methodNotImplemented);\n    },\n    async signJwt() {\n        throw (0,_error_ClientAuthError_mjs__WEBPACK_IMPORTED_MODULE_0__.createClientAuthError)(_error_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_1__.methodNotImplemented);\n    },\n    async hashString() {\n        throw (0,_error_ClientAuthError_mjs__WEBPACK_IMPORTED_MODULE_0__.createClientAuthError)(_error_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_1__.methodNotImplemented);\n    },\n};\n\n\n//# sourceMappingURL=ICrypto.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtY29tbW9uL2Rpc3QvY3J5cHRvL0lDcnlwdG8ubWpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFBO0FBQ2E7QUFDd0Q7QUFDSTs7QUFFekU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsY0FBYyxpRkFBcUIsQ0FBQyxpRkFBb0I7QUFDeEQsS0FBSztBQUNMO0FBQ0EsY0FBYyxpRkFBcUIsQ0FBQyxpRkFBb0I7QUFDeEQsS0FBSztBQUNMO0FBQ0EsY0FBYyxpRkFBcUIsQ0FBQyxpRkFBb0I7QUFDeEQsS0FBSztBQUNMO0FBQ0EsY0FBYyxpRkFBcUIsQ0FBQyxpRkFBb0I7QUFDeEQsS0FBSztBQUNMO0FBQ0EsY0FBYyxpRkFBcUIsQ0FBQyxpRkFBb0I7QUFDeEQsS0FBSztBQUNMO0FBQ0EsY0FBYyxpRkFBcUIsQ0FBQyxpRkFBb0I7QUFDeEQsS0FBSztBQUNMO0FBQ0EsY0FBYyxpRkFBcUIsQ0FBQyxpRkFBb0I7QUFDeEQsS0FBSztBQUNMO0FBQ0EsY0FBYyxpRkFBcUIsQ0FBQyxpRkFBb0I7QUFDeEQsS0FBSztBQUNMO0FBQ0EsY0FBYyxpRkFBcUIsQ0FBQyxpRkFBb0I7QUFDeEQsS0FBSztBQUNMO0FBQ0EsY0FBYyxpRkFBcUIsQ0FBQyxpRkFBb0I7QUFDeEQsS0FBSztBQUNMOztBQUV5QztBQUN6QyIsInNvdXJjZXMiOlsid2VicGFjazovL2RhbmllbDMtdnAyLy4vbm9kZV9tb2R1bGVzL0BhenVyZS9tc2FsLWNvbW1vbi9kaXN0L2NyeXB0by9JQ3J5cHRvLm1qcz84ZDhlIl0sInNvdXJjZXNDb250ZW50IjpbIi8qISBAYXp1cmUvbXNhbC1jb21tb24gdjE0LjE0LjAgMjAyNC0wNy0yMyAqL1xuJ3VzZSBzdHJpY3QnO1xuaW1wb3J0IHsgY3JlYXRlQ2xpZW50QXV0aEVycm9yIH0gZnJvbSAnLi4vZXJyb3IvQ2xpZW50QXV0aEVycm9yLm1qcyc7XG5pbXBvcnQgeyBtZXRob2ROb3RJbXBsZW1lbnRlZCB9IGZyb20gJy4uL2Vycm9yL0NsaWVudEF1dGhFcnJvckNvZGVzLm1qcyc7XG5cbi8qXG4gKiBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi4gQWxsIHJpZ2h0cyByZXNlcnZlZC5cbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgTGljZW5zZS5cbiAqL1xuY29uc3QgREVGQVVMVF9DUllQVE9fSU1QTEVNRU5UQVRJT04gPSB7XG4gICAgY3JlYXRlTmV3R3VpZDogKCkgPT4ge1xuICAgICAgICB0aHJvdyBjcmVhdGVDbGllbnRBdXRoRXJyb3IobWV0aG9kTm90SW1wbGVtZW50ZWQpO1xuICAgIH0sXG4gICAgYmFzZTY0RGVjb2RlOiAoKSA9PiB7XG4gICAgICAgIHRocm93IGNyZWF0ZUNsaWVudEF1dGhFcnJvcihtZXRob2ROb3RJbXBsZW1lbnRlZCk7XG4gICAgfSxcbiAgICBiYXNlNjRFbmNvZGU6ICgpID0+IHtcbiAgICAgICAgdGhyb3cgY3JlYXRlQ2xpZW50QXV0aEVycm9yKG1ldGhvZE5vdEltcGxlbWVudGVkKTtcbiAgICB9LFxuICAgIGJhc2U2NFVybEVuY29kZTogKCkgPT4ge1xuICAgICAgICB0aHJvdyBjcmVhdGVDbGllbnRBdXRoRXJyb3IobWV0aG9kTm90SW1wbGVtZW50ZWQpO1xuICAgIH0sXG4gICAgZW5jb2RlS2lkOiAoKSA9PiB7XG4gICAgICAgIHRocm93IGNyZWF0ZUNsaWVudEF1dGhFcnJvcihtZXRob2ROb3RJbXBsZW1lbnRlZCk7XG4gICAgfSxcbiAgICBhc3luYyBnZXRQdWJsaWNLZXlUaHVtYnByaW50KCkge1xuICAgICAgICB0aHJvdyBjcmVhdGVDbGllbnRBdXRoRXJyb3IobWV0aG9kTm90SW1wbGVtZW50ZWQpO1xuICAgIH0sXG4gICAgYXN5bmMgcmVtb3ZlVG9rZW5CaW5kaW5nS2V5KCkge1xuICAgICAgICB0aHJvdyBjcmVhdGVDbGllbnRBdXRoRXJyb3IobWV0aG9kTm90SW1wbGVtZW50ZWQpO1xuICAgIH0sXG4gICAgYXN5bmMgY2xlYXJLZXlzdG9yZSgpIHtcbiAgICAgICAgdGhyb3cgY3JlYXRlQ2xpZW50QXV0aEVycm9yKG1ldGhvZE5vdEltcGxlbWVudGVkKTtcbiAgICB9LFxuICAgIGFzeW5jIHNpZ25Kd3QoKSB7XG4gICAgICAgIHRocm93IGNyZWF0ZUNsaWVudEF1dGhFcnJvcihtZXRob2ROb3RJbXBsZW1lbnRlZCk7XG4gICAgfSxcbiAgICBhc3luYyBoYXNoU3RyaW5nKCkge1xuICAgICAgICB0aHJvdyBjcmVhdGVDbGllbnRBdXRoRXJyb3IobWV0aG9kTm90SW1wbGVtZW50ZWQpO1xuICAgIH0sXG59O1xuXG5leHBvcnQgeyBERUZBVUxUX0NSWVBUT19JTVBMRU1FTlRBVElPTiB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9SUNyeXB0by5tanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/msal-common/dist/crypto/ICrypto.mjs\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/msal-common/dist/crypto/PopTokenGenerator.mjs":
/*!***************************************************************************!*\
  !*** ./node_modules/@azure/msal-common/dist/crypto/PopTokenGenerator.mjs ***!
  \***************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   PopTokenGenerator: () => (/* binding */ PopTokenGenerator)\n/* harmony export */ });\n/* harmony import */ var _utils_TimeUtils_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../utils/TimeUtils.mjs */ \"(rsc)/./node_modules/@azure/msal-common/dist/utils/TimeUtils.mjs\");\n/* harmony import */ var _url_UrlString_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../url/UrlString.mjs */ \"(rsc)/./node_modules/@azure/msal-common/dist/url/UrlString.mjs\");\n/* harmony import */ var _telemetry_performance_PerformanceEvent_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../telemetry/performance/PerformanceEvent.mjs */ \"(rsc)/./node_modules/@azure/msal-common/dist/telemetry/performance/PerformanceEvent.mjs\");\n/* harmony import */ var _utils_FunctionWrappers_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/FunctionWrappers.mjs */ \"(rsc)/./node_modules/@azure/msal-common/dist/utils/FunctionWrappers.mjs\");\n/*! @azure/msal-common v14.14.0 2024-07-23 */\n\n\n\n\n\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\nconst KeyLocation = {\n    SW: \"sw\",\n    UHW: \"uhw\",\n};\n/** @internal */\nclass PopTokenGenerator {\n    constructor(cryptoUtils, performanceClient) {\n        this.cryptoUtils = cryptoUtils;\n        this.performanceClient = performanceClient;\n    }\n    /**\n     * Generates the req_cnf validated at the RP in the POP protocol for SHR parameters\n     * and returns an object containing the keyid, the full req_cnf string and the req_cnf string hash\n     * @param request\n     * @returns\n     */\n    async generateCnf(request, logger) {\n        this.performanceClient?.addQueueMeasurement(_telemetry_performance_PerformanceEvent_mjs__WEBPACK_IMPORTED_MODULE_0__.PerformanceEvents.PopTokenGenerateCnf, request.correlationId);\n        const reqCnf = await (0,_utils_FunctionWrappers_mjs__WEBPACK_IMPORTED_MODULE_1__.invokeAsync)(this.generateKid.bind(this), _telemetry_performance_PerformanceEvent_mjs__WEBPACK_IMPORTED_MODULE_0__.PerformanceEvents.PopTokenGenerateCnf, logger, this.performanceClient, request.correlationId)(request);\n        const reqCnfString = this.cryptoUtils.base64UrlEncode(JSON.stringify(reqCnf));\n        return {\n            kid: reqCnf.kid,\n            reqCnfString,\n        };\n    }\n    /**\n     * Generates key_id for a SHR token request\n     * @param request\n     * @returns\n     */\n    async generateKid(request) {\n        this.performanceClient?.addQueueMeasurement(_telemetry_performance_PerformanceEvent_mjs__WEBPACK_IMPORTED_MODULE_0__.PerformanceEvents.PopTokenGenerateKid, request.correlationId);\n        const kidThumbprint = await this.cryptoUtils.getPublicKeyThumbprint(request);\n        return {\n            kid: kidThumbprint,\n            xms_ksl: KeyLocation.SW,\n        };\n    }\n    /**\n     * Signs the POP access_token with the local generated key-pair\n     * @param accessToken\n     * @param request\n     * @returns\n     */\n    async signPopToken(accessToken, keyId, request) {\n        return this.signPayload(accessToken, keyId, request);\n    }\n    /**\n     * Utility function to generate the signed JWT for an access_token\n     * @param payload\n     * @param kid\n     * @param request\n     * @param claims\n     * @returns\n     */\n    async signPayload(payload, keyId, request, claims) {\n        // Deconstruct request to extract SHR parameters\n        const { resourceRequestMethod, resourceRequestUri, shrClaims, shrNonce, shrOptions, } = request;\n        const resourceUrlString = resourceRequestUri\n            ? new _url_UrlString_mjs__WEBPACK_IMPORTED_MODULE_2__.UrlString(resourceRequestUri)\n            : undefined;\n        const resourceUrlComponents = resourceUrlString?.getUrlComponents();\n        return this.cryptoUtils.signJwt({\n            at: payload,\n            ts: (0,_utils_TimeUtils_mjs__WEBPACK_IMPORTED_MODULE_3__.nowSeconds)(),\n            m: resourceRequestMethod?.toUpperCase(),\n            u: resourceUrlComponents?.HostNameAndPort,\n            nonce: shrNonce || this.cryptoUtils.createNewGuid(),\n            p: resourceUrlComponents?.AbsolutePath,\n            q: resourceUrlComponents?.QueryString\n                ? [[], resourceUrlComponents.QueryString]\n                : undefined,\n            client_claims: shrClaims || undefined,\n            ...claims,\n        }, keyId, shrOptions, request.correlationId);\n    }\n}\n\n\n//# sourceMappingURL=PopTokenGenerator.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtY29tbW9uL2Rpc3QvY3J5cHRvL1BvcFRva2VuR2VuZXJhdG9yLm1qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUFBO0FBQ2E7QUFDdUM7QUFDSDtBQUNpQztBQUN0Qjs7QUFFNUQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esb0RBQW9ELDBGQUFpQjtBQUNyRSw2QkFBNkIsd0VBQVcsOEJBQThCLDBGQUFpQjtBQUN2RjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxvREFBb0QsMEZBQWlCO0FBQ3JFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0JBQWdCLDhFQUE4RTtBQUM5RjtBQUNBLGtCQUFrQix5REFBUztBQUMzQjtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdCQUFnQixnRUFBVTtBQUMxQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTs7QUFFNkI7QUFDN0IiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9kYW5pZWwzLXZwMi8uL25vZGVfbW9kdWxlcy9AYXp1cmUvbXNhbC1jb21tb24vZGlzdC9jcnlwdG8vUG9wVG9rZW5HZW5lcmF0b3IubWpzP2NhYjIiXSwic291cmNlc0NvbnRlbnQiOlsiLyohIEBhenVyZS9tc2FsLWNvbW1vbiB2MTQuMTQuMCAyMDI0LTA3LTIzICovXG4ndXNlIHN0cmljdCc7XG5pbXBvcnQgeyBub3dTZWNvbmRzIH0gZnJvbSAnLi4vdXRpbHMvVGltZVV0aWxzLm1qcyc7XG5pbXBvcnQgeyBVcmxTdHJpbmcgfSBmcm9tICcuLi91cmwvVXJsU3RyaW5nLm1qcyc7XG5pbXBvcnQgeyBQZXJmb3JtYW5jZUV2ZW50cyB9IGZyb20gJy4uL3RlbGVtZXRyeS9wZXJmb3JtYW5jZS9QZXJmb3JtYW5jZUV2ZW50Lm1qcyc7XG5pbXBvcnQgeyBpbnZva2VBc3luYyB9IGZyb20gJy4uL3V0aWxzL0Z1bmN0aW9uV3JhcHBlcnMubWpzJztcblxuLypcbiAqIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLiBBbGwgcmlnaHRzIHJlc2VydmVkLlxuICogTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBMaWNlbnNlLlxuICovXG5jb25zdCBLZXlMb2NhdGlvbiA9IHtcbiAgICBTVzogXCJzd1wiLFxuICAgIFVIVzogXCJ1aHdcIixcbn07XG4vKiogQGludGVybmFsICovXG5jbGFzcyBQb3BUb2tlbkdlbmVyYXRvciB7XG4gICAgY29uc3RydWN0b3IoY3J5cHRvVXRpbHMsIHBlcmZvcm1hbmNlQ2xpZW50KSB7XG4gICAgICAgIHRoaXMuY3J5cHRvVXRpbHMgPSBjcnlwdG9VdGlscztcbiAgICAgICAgdGhpcy5wZXJmb3JtYW5jZUNsaWVudCA9IHBlcmZvcm1hbmNlQ2xpZW50O1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBHZW5lcmF0ZXMgdGhlIHJlcV9jbmYgdmFsaWRhdGVkIGF0IHRoZSBSUCBpbiB0aGUgUE9QIHByb3RvY29sIGZvciBTSFIgcGFyYW1ldGVyc1xuICAgICAqIGFuZCByZXR1cm5zIGFuIG9iamVjdCBjb250YWluaW5nIHRoZSBrZXlpZCwgdGhlIGZ1bGwgcmVxX2NuZiBzdHJpbmcgYW5kIHRoZSByZXFfY25mIHN0cmluZyBoYXNoXG4gICAgICogQHBhcmFtIHJlcXVlc3RcbiAgICAgKiBAcmV0dXJuc1xuICAgICAqL1xuICAgIGFzeW5jIGdlbmVyYXRlQ25mKHJlcXVlc3QsIGxvZ2dlcikge1xuICAgICAgICB0aGlzLnBlcmZvcm1hbmNlQ2xpZW50Py5hZGRRdWV1ZU1lYXN1cmVtZW50KFBlcmZvcm1hbmNlRXZlbnRzLlBvcFRva2VuR2VuZXJhdGVDbmYsIHJlcXVlc3QuY29ycmVsYXRpb25JZCk7XG4gICAgICAgIGNvbnN0IHJlcUNuZiA9IGF3YWl0IGludm9rZUFzeW5jKHRoaXMuZ2VuZXJhdGVLaWQuYmluZCh0aGlzKSwgUGVyZm9ybWFuY2VFdmVudHMuUG9wVG9rZW5HZW5lcmF0ZUNuZiwgbG9nZ2VyLCB0aGlzLnBlcmZvcm1hbmNlQ2xpZW50LCByZXF1ZXN0LmNvcnJlbGF0aW9uSWQpKHJlcXVlc3QpO1xuICAgICAgICBjb25zdCByZXFDbmZTdHJpbmcgPSB0aGlzLmNyeXB0b1V0aWxzLmJhc2U2NFVybEVuY29kZShKU09OLnN0cmluZ2lmeShyZXFDbmYpKTtcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgIGtpZDogcmVxQ25mLmtpZCxcbiAgICAgICAgICAgIHJlcUNuZlN0cmluZyxcbiAgICAgICAgfTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogR2VuZXJhdGVzIGtleV9pZCBmb3IgYSBTSFIgdG9rZW4gcmVxdWVzdFxuICAgICAqIEBwYXJhbSByZXF1ZXN0XG4gICAgICogQHJldHVybnNcbiAgICAgKi9cbiAgICBhc3luYyBnZW5lcmF0ZUtpZChyZXF1ZXN0KSB7XG4gICAgICAgIHRoaXMucGVyZm9ybWFuY2VDbGllbnQ/LmFkZFF1ZXVlTWVhc3VyZW1lbnQoUGVyZm9ybWFuY2VFdmVudHMuUG9wVG9rZW5HZW5lcmF0ZUtpZCwgcmVxdWVzdC5jb3JyZWxhdGlvbklkKTtcbiAgICAgICAgY29uc3Qga2lkVGh1bWJwcmludCA9IGF3YWl0IHRoaXMuY3J5cHRvVXRpbHMuZ2V0UHVibGljS2V5VGh1bWJwcmludChyZXF1ZXN0KTtcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgIGtpZDoga2lkVGh1bWJwcmludCxcbiAgICAgICAgICAgIHhtc19rc2w6IEtleUxvY2F0aW9uLlNXLFxuICAgICAgICB9O1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBTaWducyB0aGUgUE9QIGFjY2Vzc190b2tlbiB3aXRoIHRoZSBsb2NhbCBnZW5lcmF0ZWQga2V5LXBhaXJcbiAgICAgKiBAcGFyYW0gYWNjZXNzVG9rZW5cbiAgICAgKiBAcGFyYW0gcmVxdWVzdFxuICAgICAqIEByZXR1cm5zXG4gICAgICovXG4gICAgYXN5bmMgc2lnblBvcFRva2VuKGFjY2Vzc1Rva2VuLCBrZXlJZCwgcmVxdWVzdCkge1xuICAgICAgICByZXR1cm4gdGhpcy5zaWduUGF5bG9hZChhY2Nlc3NUb2tlbiwga2V5SWQsIHJlcXVlc3QpO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBVdGlsaXR5IGZ1bmN0aW9uIHRvIGdlbmVyYXRlIHRoZSBzaWduZWQgSldUIGZvciBhbiBhY2Nlc3NfdG9rZW5cbiAgICAgKiBAcGFyYW0gcGF5bG9hZFxuICAgICAqIEBwYXJhbSBraWRcbiAgICAgKiBAcGFyYW0gcmVxdWVzdFxuICAgICAqIEBwYXJhbSBjbGFpbXNcbiAgICAgKiBAcmV0dXJuc1xuICAgICAqL1xuICAgIGFzeW5jIHNpZ25QYXlsb2FkKHBheWxvYWQsIGtleUlkLCByZXF1ZXN0LCBjbGFpbXMpIHtcbiAgICAgICAgLy8gRGVjb25zdHJ1Y3QgcmVxdWVzdCB0byBleHRyYWN0IFNIUiBwYXJhbWV0ZXJzXG4gICAgICAgIGNvbnN0IHsgcmVzb3VyY2VSZXF1ZXN0TWV0aG9kLCByZXNvdXJjZVJlcXVlc3RVcmksIHNockNsYWltcywgc2hyTm9uY2UsIHNock9wdGlvbnMsIH0gPSByZXF1ZXN0O1xuICAgICAgICBjb25zdCByZXNvdXJjZVVybFN0cmluZyA9IHJlc291cmNlUmVxdWVzdFVyaVxuICAgICAgICAgICAgPyBuZXcgVXJsU3RyaW5nKHJlc291cmNlUmVxdWVzdFVyaSlcbiAgICAgICAgICAgIDogdW5kZWZpbmVkO1xuICAgICAgICBjb25zdCByZXNvdXJjZVVybENvbXBvbmVudHMgPSByZXNvdXJjZVVybFN0cmluZz8uZ2V0VXJsQ29tcG9uZW50cygpO1xuICAgICAgICByZXR1cm4gdGhpcy5jcnlwdG9VdGlscy5zaWduSnd0KHtcbiAgICAgICAgICAgIGF0OiBwYXlsb2FkLFxuICAgICAgICAgICAgdHM6IG5vd1NlY29uZHMoKSxcbiAgICAgICAgICAgIG06IHJlc291cmNlUmVxdWVzdE1ldGhvZD8udG9VcHBlckNhc2UoKSxcbiAgICAgICAgICAgIHU6IHJlc291cmNlVXJsQ29tcG9uZW50cz8uSG9zdE5hbWVBbmRQb3J0LFxuICAgICAgICAgICAgbm9uY2U6IHNock5vbmNlIHx8IHRoaXMuY3J5cHRvVXRpbHMuY3JlYXRlTmV3R3VpZCgpLFxuICAgICAgICAgICAgcDogcmVzb3VyY2VVcmxDb21wb25lbnRzPy5BYnNvbHV0ZVBhdGgsXG4gICAgICAgICAgICBxOiByZXNvdXJjZVVybENvbXBvbmVudHM/LlF1ZXJ5U3RyaW5nXG4gICAgICAgICAgICAgICAgPyBbW10sIHJlc291cmNlVXJsQ29tcG9uZW50cy5RdWVyeVN0cmluZ11cbiAgICAgICAgICAgICAgICA6IHVuZGVmaW5lZCxcbiAgICAgICAgICAgIGNsaWVudF9jbGFpbXM6IHNockNsYWltcyB8fCB1bmRlZmluZWQsXG4gICAgICAgICAgICAuLi5jbGFpbXMsXG4gICAgICAgIH0sIGtleUlkLCBzaHJPcHRpb25zLCByZXF1ZXN0LmNvcnJlbGF0aW9uSWQpO1xuICAgIH1cbn1cblxuZXhwb3J0IHsgUG9wVG9rZW5HZW5lcmF0b3IgfTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPVBvcFRva2VuR2VuZXJhdG9yLm1qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/msal-common/dist/crypto/PopTokenGenerator.mjs\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/msal-common/dist/error/AuthError.mjs":
/*!******************************************************************!*\
  !*** ./node_modules/@azure/msal-common/dist/error/AuthError.mjs ***!
  \******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AuthError: () => (/* binding */ AuthError),\n/* harmony export */   AuthErrorCodes: () => (/* reexport module object */ _AuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__),\n/* harmony export */   AuthErrorMessage: () => (/* binding */ AuthErrorMessage),\n/* harmony export */   AuthErrorMessages: () => (/* binding */ AuthErrorMessages),\n/* harmony export */   createAuthError: () => (/* binding */ createAuthError)\n/* harmony export */ });\n/* harmony import */ var _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/Constants.mjs */ \"(rsc)/./node_modules/@azure/msal-common/dist/utils/Constants.mjs\");\n/* harmony import */ var _AuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./AuthErrorCodes.mjs */ \"(rsc)/./node_modules/@azure/msal-common/dist/error/AuthErrorCodes.mjs\");\n/*! @azure/msal-common v14.14.0 2024-07-23 */\n\n\n\n\n\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\nconst AuthErrorMessages = {\n    [_AuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.unexpectedError]: \"Unexpected error in authentication.\",\n    [_AuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.postRequestFailed]: \"Post request failed from the network, could be a 4xx/5xx or a network unavailability. Please check the exact error code for details.\",\n};\n/**\n * AuthErrorMessage class containing string constants used by error codes and messages.\n * @deprecated Use AuthErrorCodes instead\n */\nconst AuthErrorMessage = {\n    unexpectedError: {\n        code: _AuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.unexpectedError,\n        desc: AuthErrorMessages[_AuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.unexpectedError],\n    },\n    postRequestFailed: {\n        code: _AuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.postRequestFailed,\n        desc: AuthErrorMessages[_AuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.postRequestFailed],\n    },\n};\n/**\n * General error class thrown by the MSAL.js library.\n */\nclass AuthError extends Error {\n    constructor(errorCode, errorMessage, suberror) {\n        const errorString = errorMessage\n            ? `${errorCode}: ${errorMessage}`\n            : errorCode;\n        super(errorString);\n        Object.setPrototypeOf(this, AuthError.prototype);\n        this.errorCode = errorCode || _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_1__.Constants.EMPTY_STRING;\n        this.errorMessage = errorMessage || _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_1__.Constants.EMPTY_STRING;\n        this.subError = suberror || _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_1__.Constants.EMPTY_STRING;\n        this.name = \"AuthError\";\n    }\n    setCorrelationId(correlationId) {\n        this.correlationId = correlationId;\n    }\n}\nfunction createAuthError(code, additionalMessage) {\n    return new AuthError(code, additionalMessage\n        ? `${AuthErrorMessages[code]} ${additionalMessage}`\n        : AuthErrorMessages[code]);\n}\n\n\n//# sourceMappingURL=AuthError.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtY29tbW9uL2Rpc3QvZXJyb3IvQXV0aEVycm9yLm1qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7O0FBQUE7QUFDYTtBQUNzQztBQUN1QjtBQUNuQjtBQUM3Qjs7QUFFMUI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUssZ0VBQWU7QUFDcEIsS0FBSyxrRUFBaUI7QUFDdEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxjQUFjLGdFQUFlO0FBQzdCLGdDQUFnQyxnRUFBZTtBQUMvQyxLQUFLO0FBQ0w7QUFDQSxjQUFjLGtFQUFpQjtBQUMvQixnQ0FBZ0Msa0VBQWlCO0FBQ2pELEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQixVQUFVLElBQUksYUFBYTtBQUM1QztBQUNBO0FBQ0E7QUFDQSxzQ0FBc0MsMkRBQVM7QUFDL0MsNENBQTRDLDJEQUFTO0FBQ3JELG9DQUFvQywyREFBUztBQUM3QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYSx5QkFBeUIsRUFBRSxrQkFBa0I7QUFDMUQ7QUFDQTs7QUFFMkU7QUFDM0UiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9kYW5pZWwzLXZwMi8uL25vZGVfbW9kdWxlcy9AYXp1cmUvbXNhbC1jb21tb24vZGlzdC9lcnJvci9BdXRoRXJyb3IubWpzPzNjMWMiXSwic291cmNlc0NvbnRlbnQiOlsiLyohIEBhenVyZS9tc2FsLWNvbW1vbiB2MTQuMTQuMCAyMDI0LTA3LTIzICovXG4ndXNlIHN0cmljdCc7XG5pbXBvcnQgeyBDb25zdGFudHMgfSBmcm9tICcuLi91dGlscy9Db25zdGFudHMubWpzJztcbmltcG9ydCB7IHVuZXhwZWN0ZWRFcnJvciwgcG9zdFJlcXVlc3RGYWlsZWQgfSBmcm9tICcuL0F1dGhFcnJvckNvZGVzLm1qcyc7XG5pbXBvcnQgKiBhcyBBdXRoRXJyb3JDb2RlcyBmcm9tICcuL0F1dGhFcnJvckNvZGVzLm1qcyc7XG5leHBvcnQgeyBBdXRoRXJyb3JDb2RlcyB9O1xuXG4vKlxuICogQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uIEFsbCByaWdodHMgcmVzZXJ2ZWQuXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIExpY2Vuc2UuXG4gKi9cbmNvbnN0IEF1dGhFcnJvck1lc3NhZ2VzID0ge1xuICAgIFt1bmV4cGVjdGVkRXJyb3JdOiBcIlVuZXhwZWN0ZWQgZXJyb3IgaW4gYXV0aGVudGljYXRpb24uXCIsXG4gICAgW3Bvc3RSZXF1ZXN0RmFpbGVkXTogXCJQb3N0IHJlcXVlc3QgZmFpbGVkIGZyb20gdGhlIG5ldHdvcmssIGNvdWxkIGJlIGEgNHh4LzV4eCBvciBhIG5ldHdvcmsgdW5hdmFpbGFiaWxpdHkuIFBsZWFzZSBjaGVjayB0aGUgZXhhY3QgZXJyb3IgY29kZSBmb3IgZGV0YWlscy5cIixcbn07XG4vKipcbiAqIEF1dGhFcnJvck1lc3NhZ2UgY2xhc3MgY29udGFpbmluZyBzdHJpbmcgY29uc3RhbnRzIHVzZWQgYnkgZXJyb3IgY29kZXMgYW5kIG1lc3NhZ2VzLlxuICogQGRlcHJlY2F0ZWQgVXNlIEF1dGhFcnJvckNvZGVzIGluc3RlYWRcbiAqL1xuY29uc3QgQXV0aEVycm9yTWVzc2FnZSA9IHtcbiAgICB1bmV4cGVjdGVkRXJyb3I6IHtcbiAgICAgICAgY29kZTogdW5leHBlY3RlZEVycm9yLFxuICAgICAgICBkZXNjOiBBdXRoRXJyb3JNZXNzYWdlc1t1bmV4cGVjdGVkRXJyb3JdLFxuICAgIH0sXG4gICAgcG9zdFJlcXVlc3RGYWlsZWQ6IHtcbiAgICAgICAgY29kZTogcG9zdFJlcXVlc3RGYWlsZWQsXG4gICAgICAgIGRlc2M6IEF1dGhFcnJvck1lc3NhZ2VzW3Bvc3RSZXF1ZXN0RmFpbGVkXSxcbiAgICB9LFxufTtcbi8qKlxuICogR2VuZXJhbCBlcnJvciBjbGFzcyB0aHJvd24gYnkgdGhlIE1TQUwuanMgbGlicmFyeS5cbiAqL1xuY2xhc3MgQXV0aEVycm9yIGV4dGVuZHMgRXJyb3Ige1xuICAgIGNvbnN0cnVjdG9yKGVycm9yQ29kZSwgZXJyb3JNZXNzYWdlLCBzdWJlcnJvcikge1xuICAgICAgICBjb25zdCBlcnJvclN0cmluZyA9IGVycm9yTWVzc2FnZVxuICAgICAgICAgICAgPyBgJHtlcnJvckNvZGV9OiAke2Vycm9yTWVzc2FnZX1gXG4gICAgICAgICAgICA6IGVycm9yQ29kZTtcbiAgICAgICAgc3VwZXIoZXJyb3JTdHJpbmcpO1xuICAgICAgICBPYmplY3Quc2V0UHJvdG90eXBlT2YodGhpcywgQXV0aEVycm9yLnByb3RvdHlwZSk7XG4gICAgICAgIHRoaXMuZXJyb3JDb2RlID0gZXJyb3JDb2RlIHx8IENvbnN0YW50cy5FTVBUWV9TVFJJTkc7XG4gICAgICAgIHRoaXMuZXJyb3JNZXNzYWdlID0gZXJyb3JNZXNzYWdlIHx8IENvbnN0YW50cy5FTVBUWV9TVFJJTkc7XG4gICAgICAgIHRoaXMuc3ViRXJyb3IgPSBzdWJlcnJvciB8fCBDb25zdGFudHMuRU1QVFlfU1RSSU5HO1xuICAgICAgICB0aGlzLm5hbWUgPSBcIkF1dGhFcnJvclwiO1xuICAgIH1cbiAgICBzZXRDb3JyZWxhdGlvbklkKGNvcnJlbGF0aW9uSWQpIHtcbiAgICAgICAgdGhpcy5jb3JyZWxhdGlvbklkID0gY29ycmVsYXRpb25JZDtcbiAgICB9XG59XG5mdW5jdGlvbiBjcmVhdGVBdXRoRXJyb3IoY29kZSwgYWRkaXRpb25hbE1lc3NhZ2UpIHtcbiAgICByZXR1cm4gbmV3IEF1dGhFcnJvcihjb2RlLCBhZGRpdGlvbmFsTWVzc2FnZVxuICAgICAgICA/IGAke0F1dGhFcnJvck1lc3NhZ2VzW2NvZGVdfSAke2FkZGl0aW9uYWxNZXNzYWdlfWBcbiAgICAgICAgOiBBdXRoRXJyb3JNZXNzYWdlc1tjb2RlXSk7XG59XG5cbmV4cG9ydCB7IEF1dGhFcnJvciwgQXV0aEVycm9yTWVzc2FnZSwgQXV0aEVycm9yTWVzc2FnZXMsIGNyZWF0ZUF1dGhFcnJvciB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9QXV0aEVycm9yLm1qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/msal-common/dist/error/AuthError.mjs\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/msal-common/dist/error/AuthErrorCodes.mjs":
/*!***********************************************************************!*\
  !*** ./node_modules/@azure/msal-common/dist/error/AuthErrorCodes.mjs ***!
  \***********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   postRequestFailed: () => (/* binding */ postRequestFailed),\n/* harmony export */   unexpectedError: () => (/* binding */ unexpectedError)\n/* harmony export */ });\n/*! @azure/msal-common v14.14.0 2024-07-23 */\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n/**\n * AuthErrorMessage class containing string constants used by error codes and messages.\n */\nconst unexpectedError = \"unexpected_error\";\nconst postRequestFailed = \"post_request_failed\";\n\n\n//# sourceMappingURL=AuthErrorCodes.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtY29tbW9uL2Rpc3QvZXJyb3IvQXV0aEVycm9yQ29kZXMubWpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQUE7QUFDYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFOEM7QUFDOUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9kYW5pZWwzLXZwMi8uL25vZGVfbW9kdWxlcy9AYXp1cmUvbXNhbC1jb21tb24vZGlzdC9lcnJvci9BdXRoRXJyb3JDb2Rlcy5tanM/Njc5ZiJdLCJzb3VyY2VzQ29udGVudCI6WyIvKiEgQGF6dXJlL21zYWwtY29tbW9uIHYxNC4xNC4wIDIwMjQtMDctMjMgKi9cbid1c2Ugc3RyaWN0Jztcbi8qXG4gKiBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi4gQWxsIHJpZ2h0cyByZXNlcnZlZC5cbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgTGljZW5zZS5cbiAqL1xuLyoqXG4gKiBBdXRoRXJyb3JNZXNzYWdlIGNsYXNzIGNvbnRhaW5pbmcgc3RyaW5nIGNvbnN0YW50cyB1c2VkIGJ5IGVycm9yIGNvZGVzIGFuZCBtZXNzYWdlcy5cbiAqL1xuY29uc3QgdW5leHBlY3RlZEVycm9yID0gXCJ1bmV4cGVjdGVkX2Vycm9yXCI7XG5jb25zdCBwb3N0UmVxdWVzdEZhaWxlZCA9IFwicG9zdF9yZXF1ZXN0X2ZhaWxlZFwiO1xuXG5leHBvcnQgeyBwb3N0UmVxdWVzdEZhaWxlZCwgdW5leHBlY3RlZEVycm9yIH07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1BdXRoRXJyb3JDb2Rlcy5tanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/msal-common/dist/error/AuthErrorCodes.mjs\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/msal-common/dist/error/CacheError.mjs":
/*!*******************************************************************!*\
  !*** ./node_modules/@azure/msal-common/dist/error/CacheError.mjs ***!
  \*******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   CacheError: () => (/* binding */ CacheError),\n/* harmony export */   CacheErrorCodes: () => (/* reexport module object */ _CacheErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__),\n/* harmony export */   CacheErrorMessages: () => (/* binding */ CacheErrorMessages)\n/* harmony export */ });\n/* harmony import */ var _CacheErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./CacheErrorCodes.mjs */ \"(rsc)/./node_modules/@azure/msal-common/dist/error/CacheErrorCodes.mjs\");\n/*! @azure/msal-common v14.14.0 2024-07-23 */\n\n\n\n\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\nconst CacheErrorMessages = {\n    [_CacheErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.cacheQuotaExceededErrorCode]: \"Exceeded cache storage capacity.\",\n    [_CacheErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.cacheUnknownErrorCode]: \"Unexpected error occurred when using cache storage.\",\n};\n/**\n * Error thrown when there is an error with the cache\n */\nclass CacheError extends Error {\n    constructor(errorCode, errorMessage) {\n        const message = errorMessage ||\n            (CacheErrorMessages[errorCode]\n                ? CacheErrorMessages[errorCode]\n                : CacheErrorMessages[_CacheErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.cacheUnknownErrorCode]);\n        super(`${errorCode}: ${message}`);\n        Object.setPrototypeOf(this, CacheError.prototype);\n        this.name = \"CacheError\";\n        this.errorCode = errorCode;\n        this.errorMessage = message;\n    }\n}\n\n\n//# sourceMappingURL=CacheError.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtY29tbW9uL2Rpc3QvZXJyb3IvQ2FjaGVFcnJvci5tanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBO0FBQ2E7QUFDOEU7QUFDbEM7QUFDOUI7O0FBRTNCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLLDZFQUEyQjtBQUNoQyxLQUFLLHVFQUFxQjtBQUMxQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxxQ0FBcUMsdUVBQXFCO0FBQzFELGlCQUFpQixVQUFVLElBQUksUUFBUTtBQUN2QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRTBDO0FBQzFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZGFuaWVsMy12cDIvLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtY29tbW9uL2Rpc3QvZXJyb3IvQ2FjaGVFcnJvci5tanM/NWFhZiJdLCJzb3VyY2VzQ29udGVudCI6WyIvKiEgQGF6dXJlL21zYWwtY29tbW9uIHYxNC4xNC4wIDIwMjQtMDctMjMgKi9cbid1c2Ugc3RyaWN0JztcbmltcG9ydCB7IGNhY2hlVW5rbm93bkVycm9yQ29kZSwgY2FjaGVRdW90YUV4Y2VlZGVkRXJyb3JDb2RlIH0gZnJvbSAnLi9DYWNoZUVycm9yQ29kZXMubWpzJztcbmltcG9ydCAqIGFzIENhY2hlRXJyb3JDb2RlcyBmcm9tICcuL0NhY2hlRXJyb3JDb2Rlcy5tanMnO1xuZXhwb3J0IHsgQ2FjaGVFcnJvckNvZGVzIH07XG5cbi8qXG4gKiBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi4gQWxsIHJpZ2h0cyByZXNlcnZlZC5cbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgTGljZW5zZS5cbiAqL1xuY29uc3QgQ2FjaGVFcnJvck1lc3NhZ2VzID0ge1xuICAgIFtjYWNoZVF1b3RhRXhjZWVkZWRFcnJvckNvZGVdOiBcIkV4Y2VlZGVkIGNhY2hlIHN0b3JhZ2UgY2FwYWNpdHkuXCIsXG4gICAgW2NhY2hlVW5rbm93bkVycm9yQ29kZV06IFwiVW5leHBlY3RlZCBlcnJvciBvY2N1cnJlZCB3aGVuIHVzaW5nIGNhY2hlIHN0b3JhZ2UuXCIsXG59O1xuLyoqXG4gKiBFcnJvciB0aHJvd24gd2hlbiB0aGVyZSBpcyBhbiBlcnJvciB3aXRoIHRoZSBjYWNoZVxuICovXG5jbGFzcyBDYWNoZUVycm9yIGV4dGVuZHMgRXJyb3Ige1xuICAgIGNvbnN0cnVjdG9yKGVycm9yQ29kZSwgZXJyb3JNZXNzYWdlKSB7XG4gICAgICAgIGNvbnN0IG1lc3NhZ2UgPSBlcnJvck1lc3NhZ2UgfHxcbiAgICAgICAgICAgIChDYWNoZUVycm9yTWVzc2FnZXNbZXJyb3JDb2RlXVxuICAgICAgICAgICAgICAgID8gQ2FjaGVFcnJvck1lc3NhZ2VzW2Vycm9yQ29kZV1cbiAgICAgICAgICAgICAgICA6IENhY2hlRXJyb3JNZXNzYWdlc1tjYWNoZVVua25vd25FcnJvckNvZGVdKTtcbiAgICAgICAgc3VwZXIoYCR7ZXJyb3JDb2RlfTogJHttZXNzYWdlfWApO1xuICAgICAgICBPYmplY3Quc2V0UHJvdG90eXBlT2YodGhpcywgQ2FjaGVFcnJvci5wcm90b3R5cGUpO1xuICAgICAgICB0aGlzLm5hbWUgPSBcIkNhY2hlRXJyb3JcIjtcbiAgICAgICAgdGhpcy5lcnJvckNvZGUgPSBlcnJvckNvZGU7XG4gICAgICAgIHRoaXMuZXJyb3JNZXNzYWdlID0gbWVzc2FnZTtcbiAgICB9XG59XG5cbmV4cG9ydCB7IENhY2hlRXJyb3IsIENhY2hlRXJyb3JNZXNzYWdlcyB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Q2FjaGVFcnJvci5tanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/msal-common/dist/error/CacheError.mjs\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/msal-common/dist/error/CacheErrorCodes.mjs":
/*!************************************************************************!*\
  !*** ./node_modules/@azure/msal-common/dist/error/CacheErrorCodes.mjs ***!
  \************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   cacheQuotaExceededErrorCode: () => (/* binding */ cacheQuotaExceededErrorCode),\n/* harmony export */   cacheUnknownErrorCode: () => (/* binding */ cacheUnknownErrorCode)\n/* harmony export */ });\n/*! @azure/msal-common v14.14.0 2024-07-23 */\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\nconst cacheQuotaExceededErrorCode = \"cache_quota_exceeded\";\nconst cacheUnknownErrorCode = \"cache_error_unknown\";\n\n\n//# sourceMappingURL=CacheErrorCodes.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtY29tbW9uL2Rpc3QvZXJyb3IvQ2FjaGVFcnJvckNvZGVzLm1qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFBO0FBQ2E7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRThEO0FBQzlEIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZGFuaWVsMy12cDIvLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtY29tbW9uL2Rpc3QvZXJyb3IvQ2FjaGVFcnJvckNvZGVzLm1qcz9kMWM0Il0sInNvdXJjZXNDb250ZW50IjpbIi8qISBAYXp1cmUvbXNhbC1jb21tb24gdjE0LjE0LjAgMjAyNC0wNy0yMyAqL1xuJ3VzZSBzdHJpY3QnO1xuLypcbiAqIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLiBBbGwgcmlnaHRzIHJlc2VydmVkLlxuICogTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBMaWNlbnNlLlxuICovXG5jb25zdCBjYWNoZVF1b3RhRXhjZWVkZWRFcnJvckNvZGUgPSBcImNhY2hlX3F1b3RhX2V4Y2VlZGVkXCI7XG5jb25zdCBjYWNoZVVua25vd25FcnJvckNvZGUgPSBcImNhY2hlX2Vycm9yX3Vua25vd25cIjtcblxuZXhwb3J0IHsgY2FjaGVRdW90YUV4Y2VlZGVkRXJyb3JDb2RlLCBjYWNoZVVua25vd25FcnJvckNvZGUgfTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPUNhY2hlRXJyb3JDb2Rlcy5tanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/msal-common/dist/error/CacheErrorCodes.mjs\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/msal-common/dist/error/ClientAuthError.mjs":
/*!************************************************************************!*\
  !*** ./node_modules/@azure/msal-common/dist/error/ClientAuthError.mjs ***!
  \************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ClientAuthError: () => (/* binding */ ClientAuthError),\n/* harmony export */   ClientAuthErrorCodes: () => (/* reexport module object */ _ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__),\n/* harmony export */   ClientAuthErrorMessage: () => (/* binding */ ClientAuthErrorMessage),\n/* harmony export */   ClientAuthErrorMessages: () => (/* binding */ ClientAuthErrorMessages),\n/* harmony export */   createClientAuthError: () => (/* binding */ createClientAuthError)\n/* harmony export */ });\n/* harmony import */ var _AuthError_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./AuthError.mjs */ \"(rsc)/./node_modules/@azure/msal-common/dist/error/AuthError.mjs\");\n/* harmony import */ var _ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ClientAuthErrorCodes.mjs */ \"(rsc)/./node_modules/@azure/msal-common/dist/error/ClientAuthErrorCodes.mjs\");\n/*! @azure/msal-common v14.14.0 2024-07-23 */\n\n\n\n\n\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n/**\n * ClientAuthErrorMessage class containing string constants used by error codes and messages.\n */\nconst ClientAuthErrorMessages = {\n    [_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.clientInfoDecodingError]: \"The client info could not be parsed/decoded correctly\",\n    [_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.clientInfoEmptyError]: \"The client info was empty\",\n    [_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.tokenParsingError]: \"Token cannot be parsed\",\n    [_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.nullOrEmptyToken]: \"The token is null or empty\",\n    [_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.endpointResolutionError]: \"Endpoints cannot be resolved\",\n    [_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.networkError]: \"Network request failed\",\n    [_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.openIdConfigError]: \"Could not retrieve endpoints. Check your authority and verify the .well-known/openid-configuration endpoint returns the required endpoints.\",\n    [_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.hashNotDeserialized]: \"The hash parameters could not be deserialized\",\n    [_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.invalidState]: \"State was not the expected format\",\n    [_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.stateMismatch]: \"State mismatch error\",\n    [_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.stateNotFound]: \"State not found\",\n    [_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.nonceMismatch]: \"Nonce mismatch error\",\n    [_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.authTimeNotFound]: \"Max Age was requested and the ID token is missing the auth_time variable.\" +\n        \" auth_time is an optional claim and is not enabled by default - it must be enabled.\" +\n        \" See https://aka.ms/msaljs/optional-claims for more information.\",\n    [_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.maxAgeTranspired]: \"Max Age is set to 0, or too much time has elapsed since the last end-user authentication.\",\n    [_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.multipleMatchingTokens]: \"The cache contains multiple tokens satisfying the requirements. \" +\n        \"Call AcquireToken again providing more requirements such as authority or account.\",\n    [_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.multipleMatchingAccounts]: \"The cache contains multiple accounts satisfying the given parameters. Please pass more info to obtain the correct account\",\n    [_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.multipleMatchingAppMetadata]: \"The cache contains multiple appMetadata satisfying the given parameters. Please pass more info to obtain the correct appMetadata\",\n    [_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.requestCannotBeMade]: \"Token request cannot be made without authorization code or refresh token.\",\n    [_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.cannotRemoveEmptyScope]: \"Cannot remove null or empty scope from ScopeSet\",\n    [_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.cannotAppendScopeSet]: \"Cannot append ScopeSet\",\n    [_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.emptyInputScopeSet]: \"Empty input ScopeSet cannot be processed\",\n    [_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.deviceCodePollingCancelled]: \"Caller has cancelled token endpoint polling during device code flow by setting DeviceCodeRequest.cancel = true.\",\n    [_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.deviceCodeExpired]: \"Device code is expired.\",\n    [_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.deviceCodeUnknownError]: \"Device code stopped polling for unknown reasons.\",\n    [_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.noAccountInSilentRequest]: \"Please pass an account object, silent flow is not supported without account information\",\n    [_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.invalidCacheRecord]: \"Cache record object was null or undefined.\",\n    [_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.invalidCacheEnvironment]: \"Invalid environment when attempting to create cache entry\",\n    [_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.noAccountFound]: \"No account found in cache for given key.\",\n    [_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.noCryptoObject]: \"No crypto object detected.\",\n    [_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.unexpectedCredentialType]: \"Unexpected credential type.\",\n    [_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.invalidAssertion]: \"Client assertion must meet requirements described in https://tools.ietf.org/html/rfc7515\",\n    [_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.invalidClientCredential]: \"Client credential (secret, certificate, or assertion) must not be empty when creating a confidential client. An application should at most have one credential\",\n    [_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.tokenRefreshRequired]: \"Cannot return token from cache because it must be refreshed. This may be due to one of the following reasons: forceRefresh parameter is set to true, claims have been requested, there is no cached access token or it is expired.\",\n    [_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.userTimeoutReached]: \"User defined timeout for device code polling reached\",\n    [_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.tokenClaimsCnfRequiredForSignedJwt]: \"Cannot generate a POP jwt if the token_claims are not populated\",\n    [_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.authorizationCodeMissingFromServerResponse]: \"Server response does not contain an authorization code to proceed\",\n    [_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.bindingKeyNotRemoved]: \"Could not remove the credential's binding key from storage.\",\n    [_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.endSessionEndpointNotSupported]: \"The provided authority does not support logout\",\n    [_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.keyIdMissing]: \"A keyId value is missing from the requested bound token's cache record and is required to match the token to it's stored binding key.\",\n    [_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.noNetworkConnectivity]: \"No network connectivity. Check your internet connection.\",\n    [_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.userCanceled]: \"User cancelled the flow.\",\n    [_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.missingTenantIdError]: \"A tenant id - not common, organizations, or consumers - must be specified when using the client_credentials flow.\",\n    [_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.methodNotImplemented]: \"This method has not been implemented\",\n    [_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.nestedAppAuthBridgeDisabled]: \"The nested app auth bridge is disabled\",\n};\n/**\n * String constants used by error codes and messages.\n * @deprecated Use ClientAuthErrorCodes instead\n */\nconst ClientAuthErrorMessage = {\n    clientInfoDecodingError: {\n        code: _ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.clientInfoDecodingError,\n        desc: ClientAuthErrorMessages[_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.clientInfoDecodingError],\n    },\n    clientInfoEmptyError: {\n        code: _ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.clientInfoEmptyError,\n        desc: ClientAuthErrorMessages[_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.clientInfoEmptyError],\n    },\n    tokenParsingError: {\n        code: _ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.tokenParsingError,\n        desc: ClientAuthErrorMessages[_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.tokenParsingError],\n    },\n    nullOrEmptyToken: {\n        code: _ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.nullOrEmptyToken,\n        desc: ClientAuthErrorMessages[_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.nullOrEmptyToken],\n    },\n    endpointResolutionError: {\n        code: _ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.endpointResolutionError,\n        desc: ClientAuthErrorMessages[_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.endpointResolutionError],\n    },\n    networkError: {\n        code: _ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.networkError,\n        desc: ClientAuthErrorMessages[_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.networkError],\n    },\n    unableToGetOpenidConfigError: {\n        code: _ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.openIdConfigError,\n        desc: ClientAuthErrorMessages[_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.openIdConfigError],\n    },\n    hashNotDeserialized: {\n        code: _ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.hashNotDeserialized,\n        desc: ClientAuthErrorMessages[_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.hashNotDeserialized],\n    },\n    invalidStateError: {\n        code: _ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.invalidState,\n        desc: ClientAuthErrorMessages[_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.invalidState],\n    },\n    stateMismatchError: {\n        code: _ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.stateMismatch,\n        desc: ClientAuthErrorMessages[_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.stateMismatch],\n    },\n    stateNotFoundError: {\n        code: _ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.stateNotFound,\n        desc: ClientAuthErrorMessages[_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.stateNotFound],\n    },\n    nonceMismatchError: {\n        code: _ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.nonceMismatch,\n        desc: ClientAuthErrorMessages[_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.nonceMismatch],\n    },\n    authTimeNotFoundError: {\n        code: _ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.authTimeNotFound,\n        desc: ClientAuthErrorMessages[_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.authTimeNotFound],\n    },\n    maxAgeTranspired: {\n        code: _ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.maxAgeTranspired,\n        desc: ClientAuthErrorMessages[_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.maxAgeTranspired],\n    },\n    multipleMatchingTokens: {\n        code: _ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.multipleMatchingTokens,\n        desc: ClientAuthErrorMessages[_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.multipleMatchingTokens],\n    },\n    multipleMatchingAccounts: {\n        code: _ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.multipleMatchingAccounts,\n        desc: ClientAuthErrorMessages[_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.multipleMatchingAccounts],\n    },\n    multipleMatchingAppMetadata: {\n        code: _ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.multipleMatchingAppMetadata,\n        desc: ClientAuthErrorMessages[_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.multipleMatchingAppMetadata],\n    },\n    tokenRequestCannotBeMade: {\n        code: _ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.requestCannotBeMade,\n        desc: ClientAuthErrorMessages[_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.requestCannotBeMade],\n    },\n    removeEmptyScopeError: {\n        code: _ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.cannotRemoveEmptyScope,\n        desc: ClientAuthErrorMessages[_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.cannotRemoveEmptyScope],\n    },\n    appendScopeSetError: {\n        code: _ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.cannotAppendScopeSet,\n        desc: ClientAuthErrorMessages[_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.cannotAppendScopeSet],\n    },\n    emptyInputScopeSetError: {\n        code: _ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.emptyInputScopeSet,\n        desc: ClientAuthErrorMessages[_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.emptyInputScopeSet],\n    },\n    DeviceCodePollingCancelled: {\n        code: _ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.deviceCodePollingCancelled,\n        desc: ClientAuthErrorMessages[_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.deviceCodePollingCancelled],\n    },\n    DeviceCodeExpired: {\n        code: _ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.deviceCodeExpired,\n        desc: ClientAuthErrorMessages[_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.deviceCodeExpired],\n    },\n    DeviceCodeUnknownError: {\n        code: _ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.deviceCodeUnknownError,\n        desc: ClientAuthErrorMessages[_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.deviceCodeUnknownError],\n    },\n    NoAccountInSilentRequest: {\n        code: _ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.noAccountInSilentRequest,\n        desc: ClientAuthErrorMessages[_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.noAccountInSilentRequest],\n    },\n    invalidCacheRecord: {\n        code: _ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.invalidCacheRecord,\n        desc: ClientAuthErrorMessages[_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.invalidCacheRecord],\n    },\n    invalidCacheEnvironment: {\n        code: _ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.invalidCacheEnvironment,\n        desc: ClientAuthErrorMessages[_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.invalidCacheEnvironment],\n    },\n    noAccountFound: {\n        code: _ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.noAccountFound,\n        desc: ClientAuthErrorMessages[_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.noAccountFound],\n    },\n    noCryptoObj: {\n        code: _ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.noCryptoObject,\n        desc: ClientAuthErrorMessages[_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.noCryptoObject],\n    },\n    unexpectedCredentialType: {\n        code: _ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.unexpectedCredentialType,\n        desc: ClientAuthErrorMessages[_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.unexpectedCredentialType],\n    },\n    invalidAssertion: {\n        code: _ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.invalidAssertion,\n        desc: ClientAuthErrorMessages[_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.invalidAssertion],\n    },\n    invalidClientCredential: {\n        code: _ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.invalidClientCredential,\n        desc: ClientAuthErrorMessages[_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.invalidClientCredential],\n    },\n    tokenRefreshRequired: {\n        code: _ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.tokenRefreshRequired,\n        desc: ClientAuthErrorMessages[_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.tokenRefreshRequired],\n    },\n    userTimeoutReached: {\n        code: _ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.userTimeoutReached,\n        desc: ClientAuthErrorMessages[_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.userTimeoutReached],\n    },\n    tokenClaimsRequired: {\n        code: _ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.tokenClaimsCnfRequiredForSignedJwt,\n        desc: ClientAuthErrorMessages[_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.tokenClaimsCnfRequiredForSignedJwt],\n    },\n    noAuthorizationCodeFromServer: {\n        code: _ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.authorizationCodeMissingFromServerResponse,\n        desc: ClientAuthErrorMessages[_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.authorizationCodeMissingFromServerResponse],\n    },\n    bindingKeyNotRemovedError: {\n        code: _ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.bindingKeyNotRemoved,\n        desc: ClientAuthErrorMessages[_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.bindingKeyNotRemoved],\n    },\n    logoutNotSupported: {\n        code: _ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.endSessionEndpointNotSupported,\n        desc: ClientAuthErrorMessages[_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.endSessionEndpointNotSupported],\n    },\n    keyIdMissing: {\n        code: _ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.keyIdMissing,\n        desc: ClientAuthErrorMessages[_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.keyIdMissing],\n    },\n    noNetworkConnectivity: {\n        code: _ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.noNetworkConnectivity,\n        desc: ClientAuthErrorMessages[_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.noNetworkConnectivity],\n    },\n    userCanceledError: {\n        code: _ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.userCanceled,\n        desc: ClientAuthErrorMessages[_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.userCanceled],\n    },\n    missingTenantIdError: {\n        code: _ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.missingTenantIdError,\n        desc: ClientAuthErrorMessages[_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.missingTenantIdError],\n    },\n    nestedAppAuthBridgeDisabled: {\n        code: _ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.nestedAppAuthBridgeDisabled,\n        desc: ClientAuthErrorMessages[_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.nestedAppAuthBridgeDisabled],\n    },\n};\n/**\n * Error thrown when there is an error in the client code running on the browser.\n */\nclass ClientAuthError extends _AuthError_mjs__WEBPACK_IMPORTED_MODULE_1__.AuthError {\n    constructor(errorCode, additionalMessage) {\n        super(errorCode, additionalMessage\n            ? `${ClientAuthErrorMessages[errorCode]}: ${additionalMessage}`\n            : ClientAuthErrorMessages[errorCode]);\n        this.name = \"ClientAuthError\";\n        Object.setPrototypeOf(this, ClientAuthError.prototype);\n    }\n}\nfunction createClientAuthError(errorCode, additionalMessage) {\n    return new ClientAuthError(errorCode, additionalMessage);\n}\n\n\n//# sourceMappingURL=ClientAuthError.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/msal-common/dist/error/ClientAuthError.mjs\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/msal-common/dist/error/ClientAuthErrorCodes.mjs":
/*!*****************************************************************************!*\
  !*** ./node_modules/@azure/msal-common/dist/error/ClientAuthErrorCodes.mjs ***!
  \*****************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   authTimeNotFound: () => (/* binding */ authTimeNotFound),\n/* harmony export */   authorizationCodeMissingFromServerResponse: () => (/* binding */ authorizationCodeMissingFromServerResponse),\n/* harmony export */   bindingKeyNotRemoved: () => (/* binding */ bindingKeyNotRemoved),\n/* harmony export */   cannotAppendScopeSet: () => (/* binding */ cannotAppendScopeSet),\n/* harmony export */   cannotRemoveEmptyScope: () => (/* binding */ cannotRemoveEmptyScope),\n/* harmony export */   clientInfoDecodingError: () => (/* binding */ clientInfoDecodingError),\n/* harmony export */   clientInfoEmptyError: () => (/* binding */ clientInfoEmptyError),\n/* harmony export */   deviceCodeExpired: () => (/* binding */ deviceCodeExpired),\n/* harmony export */   deviceCodePollingCancelled: () => (/* binding */ deviceCodePollingCancelled),\n/* harmony export */   deviceCodeUnknownError: () => (/* binding */ deviceCodeUnknownError),\n/* harmony export */   emptyInputScopeSet: () => (/* binding */ emptyInputScopeSet),\n/* harmony export */   endSessionEndpointNotSupported: () => (/* binding */ endSessionEndpointNotSupported),\n/* harmony export */   endpointResolutionError: () => (/* binding */ endpointResolutionError),\n/* harmony export */   hashNotDeserialized: () => (/* binding */ hashNotDeserialized),\n/* harmony export */   invalidAssertion: () => (/* binding */ invalidAssertion),\n/* harmony export */   invalidCacheEnvironment: () => (/* binding */ invalidCacheEnvironment),\n/* harmony export */   invalidCacheRecord: () => (/* binding */ invalidCacheRecord),\n/* harmony export */   invalidClientCredential: () => (/* binding */ invalidClientCredential),\n/* harmony export */   invalidState: () => (/* binding */ invalidState),\n/* harmony export */   keyIdMissing: () => (/* binding */ keyIdMissing),\n/* harmony export */   maxAgeTranspired: () => (/* binding */ maxAgeTranspired),\n/* harmony export */   methodNotImplemented: () => (/* binding */ methodNotImplemented),\n/* harmony export */   missingTenantIdError: () => (/* binding */ missingTenantIdError),\n/* harmony export */   multipleMatchingAccounts: () => (/* binding */ multipleMatchingAccounts),\n/* harmony export */   multipleMatchingAppMetadata: () => (/* binding */ multipleMatchingAppMetadata),\n/* harmony export */   multipleMatchingTokens: () => (/* binding */ multipleMatchingTokens),\n/* harmony export */   nestedAppAuthBridgeDisabled: () => (/* binding */ nestedAppAuthBridgeDisabled),\n/* harmony export */   networkError: () => (/* binding */ networkError),\n/* harmony export */   noAccountFound: () => (/* binding */ noAccountFound),\n/* harmony export */   noAccountInSilentRequest: () => (/* binding */ noAccountInSilentRequest),\n/* harmony export */   noCryptoObject: () => (/* binding */ noCryptoObject),\n/* harmony export */   noNetworkConnectivity: () => (/* binding */ noNetworkConnectivity),\n/* harmony export */   nonceMismatch: () => (/* binding */ nonceMismatch),\n/* harmony export */   nullOrEmptyToken: () => (/* binding */ nullOrEmptyToken),\n/* harmony export */   openIdConfigError: () => (/* binding */ openIdConfigError),\n/* harmony export */   requestCannotBeMade: () => (/* binding */ requestCannotBeMade),\n/* harmony export */   stateMismatch: () => (/* binding */ stateMismatch),\n/* harmony export */   stateNotFound: () => (/* binding */ stateNotFound),\n/* harmony export */   tokenClaimsCnfRequiredForSignedJwt: () => (/* binding */ tokenClaimsCnfRequiredForSignedJwt),\n/* harmony export */   tokenParsingError: () => (/* binding */ tokenParsingError),\n/* harmony export */   tokenRefreshRequired: () => (/* binding */ tokenRefreshRequired),\n/* harmony export */   unexpectedCredentialType: () => (/* binding */ unexpectedCredentialType),\n/* harmony export */   userCanceled: () => (/* binding */ userCanceled),\n/* harmony export */   userTimeoutReached: () => (/* binding */ userTimeoutReached)\n/* harmony export */ });\n/*! @azure/msal-common v14.14.0 2024-07-23 */\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\nconst clientInfoDecodingError = \"client_info_decoding_error\";\nconst clientInfoEmptyError = \"client_info_empty_error\";\nconst tokenParsingError = \"token_parsing_error\";\nconst nullOrEmptyToken = \"null_or_empty_token\";\nconst endpointResolutionError = \"endpoints_resolution_error\";\nconst networkError = \"network_error\";\nconst openIdConfigError = \"openid_config_error\";\nconst hashNotDeserialized = \"hash_not_deserialized\";\nconst invalidState = \"invalid_state\";\nconst stateMismatch = \"state_mismatch\";\nconst stateNotFound = \"state_not_found\";\nconst nonceMismatch = \"nonce_mismatch\";\nconst authTimeNotFound = \"auth_time_not_found\";\nconst maxAgeTranspired = \"max_age_transpired\";\nconst multipleMatchingTokens = \"multiple_matching_tokens\";\nconst multipleMatchingAccounts = \"multiple_matching_accounts\";\nconst multipleMatchingAppMetadata = \"multiple_matching_appMetadata\";\nconst requestCannotBeMade = \"request_cannot_be_made\";\nconst cannotRemoveEmptyScope = \"cannot_remove_empty_scope\";\nconst cannotAppendScopeSet = \"cannot_append_scopeset\";\nconst emptyInputScopeSet = \"empty_input_scopeset\";\nconst deviceCodePollingCancelled = \"device_code_polling_cancelled\";\nconst deviceCodeExpired = \"device_code_expired\";\nconst deviceCodeUnknownError = \"device_code_unknown_error\";\nconst noAccountInSilentRequest = \"no_account_in_silent_request\";\nconst invalidCacheRecord = \"invalid_cache_record\";\nconst invalidCacheEnvironment = \"invalid_cache_environment\";\nconst noAccountFound = \"no_account_found\";\nconst noCryptoObject = \"no_crypto_object\";\nconst unexpectedCredentialType = \"unexpected_credential_type\";\nconst invalidAssertion = \"invalid_assertion\";\nconst invalidClientCredential = \"invalid_client_credential\";\nconst tokenRefreshRequired = \"token_refresh_required\";\nconst userTimeoutReached = \"user_timeout_reached\";\nconst tokenClaimsCnfRequiredForSignedJwt = \"token_claims_cnf_required_for_signedjwt\";\nconst authorizationCodeMissingFromServerResponse = \"authorization_code_missing_from_server_response\";\nconst bindingKeyNotRemoved = \"binding_key_not_removed\";\nconst endSessionEndpointNotSupported = \"end_session_endpoint_not_supported\";\nconst keyIdMissing = \"key_id_missing\";\nconst noNetworkConnectivity = \"no_network_connectivity\";\nconst userCanceled = \"user_canceled\";\nconst missingTenantIdError = \"missing_tenant_id_error\";\nconst methodNotImplemented = \"method_not_implemented\";\nconst nestedAppAuthBridgeDisabled = \"nested_app_auth_bridge_disabled\";\n\n\n//# sourceMappingURL=ClientAuthErrorCodes.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtY29tbW9uL2Rpc3QvZXJyb3IvQ2xpZW50QXV0aEVycm9yQ29kZXMubWpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQUE7QUFDYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFaTlCO0FBQ2o5QiIsInNvdXJjZXMiOlsid2VicGFjazovL2RhbmllbDMtdnAyLy4vbm9kZV9tb2R1bGVzL0BhenVyZS9tc2FsLWNvbW1vbi9kaXN0L2Vycm9yL0NsaWVudEF1dGhFcnJvckNvZGVzLm1qcz84MGRjIl0sInNvdXJjZXNDb250ZW50IjpbIi8qISBAYXp1cmUvbXNhbC1jb21tb24gdjE0LjE0LjAgMjAyNC0wNy0yMyAqL1xuJ3VzZSBzdHJpY3QnO1xuLypcbiAqIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLiBBbGwgcmlnaHRzIHJlc2VydmVkLlxuICogTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBMaWNlbnNlLlxuICovXG5jb25zdCBjbGllbnRJbmZvRGVjb2RpbmdFcnJvciA9IFwiY2xpZW50X2luZm9fZGVjb2RpbmdfZXJyb3JcIjtcbmNvbnN0IGNsaWVudEluZm9FbXB0eUVycm9yID0gXCJjbGllbnRfaW5mb19lbXB0eV9lcnJvclwiO1xuY29uc3QgdG9rZW5QYXJzaW5nRXJyb3IgPSBcInRva2VuX3BhcnNpbmdfZXJyb3JcIjtcbmNvbnN0IG51bGxPckVtcHR5VG9rZW4gPSBcIm51bGxfb3JfZW1wdHlfdG9rZW5cIjtcbmNvbnN0IGVuZHBvaW50UmVzb2x1dGlvbkVycm9yID0gXCJlbmRwb2ludHNfcmVzb2x1dGlvbl9lcnJvclwiO1xuY29uc3QgbmV0d29ya0Vycm9yID0gXCJuZXR3b3JrX2Vycm9yXCI7XG5jb25zdCBvcGVuSWRDb25maWdFcnJvciA9IFwib3BlbmlkX2NvbmZpZ19lcnJvclwiO1xuY29uc3QgaGFzaE5vdERlc2VyaWFsaXplZCA9IFwiaGFzaF9ub3RfZGVzZXJpYWxpemVkXCI7XG5jb25zdCBpbnZhbGlkU3RhdGUgPSBcImludmFsaWRfc3RhdGVcIjtcbmNvbnN0IHN0YXRlTWlzbWF0Y2ggPSBcInN0YXRlX21pc21hdGNoXCI7XG5jb25zdCBzdGF0ZU5vdEZvdW5kID0gXCJzdGF0ZV9ub3RfZm91bmRcIjtcbmNvbnN0IG5vbmNlTWlzbWF0Y2ggPSBcIm5vbmNlX21pc21hdGNoXCI7XG5jb25zdCBhdXRoVGltZU5vdEZvdW5kID0gXCJhdXRoX3RpbWVfbm90X2ZvdW5kXCI7XG5jb25zdCBtYXhBZ2VUcmFuc3BpcmVkID0gXCJtYXhfYWdlX3RyYW5zcGlyZWRcIjtcbmNvbnN0IG11bHRpcGxlTWF0Y2hpbmdUb2tlbnMgPSBcIm11bHRpcGxlX21hdGNoaW5nX3Rva2Vuc1wiO1xuY29uc3QgbXVsdGlwbGVNYXRjaGluZ0FjY291bnRzID0gXCJtdWx0aXBsZV9tYXRjaGluZ19hY2NvdW50c1wiO1xuY29uc3QgbXVsdGlwbGVNYXRjaGluZ0FwcE1ldGFkYXRhID0gXCJtdWx0aXBsZV9tYXRjaGluZ19hcHBNZXRhZGF0YVwiO1xuY29uc3QgcmVxdWVzdENhbm5vdEJlTWFkZSA9IFwicmVxdWVzdF9jYW5ub3RfYmVfbWFkZVwiO1xuY29uc3QgY2Fubm90UmVtb3ZlRW1wdHlTY29wZSA9IFwiY2Fubm90X3JlbW92ZV9lbXB0eV9zY29wZVwiO1xuY29uc3QgY2Fubm90QXBwZW5kU2NvcGVTZXQgPSBcImNhbm5vdF9hcHBlbmRfc2NvcGVzZXRcIjtcbmNvbnN0IGVtcHR5SW5wdXRTY29wZVNldCA9IFwiZW1wdHlfaW5wdXRfc2NvcGVzZXRcIjtcbmNvbnN0IGRldmljZUNvZGVQb2xsaW5nQ2FuY2VsbGVkID0gXCJkZXZpY2VfY29kZV9wb2xsaW5nX2NhbmNlbGxlZFwiO1xuY29uc3QgZGV2aWNlQ29kZUV4cGlyZWQgPSBcImRldmljZV9jb2RlX2V4cGlyZWRcIjtcbmNvbnN0IGRldmljZUNvZGVVbmtub3duRXJyb3IgPSBcImRldmljZV9jb2RlX3Vua25vd25fZXJyb3JcIjtcbmNvbnN0IG5vQWNjb3VudEluU2lsZW50UmVxdWVzdCA9IFwibm9fYWNjb3VudF9pbl9zaWxlbnRfcmVxdWVzdFwiO1xuY29uc3QgaW52YWxpZENhY2hlUmVjb3JkID0gXCJpbnZhbGlkX2NhY2hlX3JlY29yZFwiO1xuY29uc3QgaW52YWxpZENhY2hlRW52aXJvbm1lbnQgPSBcImludmFsaWRfY2FjaGVfZW52aXJvbm1lbnRcIjtcbmNvbnN0IG5vQWNjb3VudEZvdW5kID0gXCJub19hY2NvdW50X2ZvdW5kXCI7XG5jb25zdCBub0NyeXB0b09iamVjdCA9IFwibm9fY3J5cHRvX29iamVjdFwiO1xuY29uc3QgdW5leHBlY3RlZENyZWRlbnRpYWxUeXBlID0gXCJ1bmV4cGVjdGVkX2NyZWRlbnRpYWxfdHlwZVwiO1xuY29uc3QgaW52YWxpZEFzc2VydGlvbiA9IFwiaW52YWxpZF9hc3NlcnRpb25cIjtcbmNvbnN0IGludmFsaWRDbGllbnRDcmVkZW50aWFsID0gXCJpbnZhbGlkX2NsaWVudF9jcmVkZW50aWFsXCI7XG5jb25zdCB0b2tlblJlZnJlc2hSZXF1aXJlZCA9IFwidG9rZW5fcmVmcmVzaF9yZXF1aXJlZFwiO1xuY29uc3QgdXNlclRpbWVvdXRSZWFjaGVkID0gXCJ1c2VyX3RpbWVvdXRfcmVhY2hlZFwiO1xuY29uc3QgdG9rZW5DbGFpbXNDbmZSZXF1aXJlZEZvclNpZ25lZEp3dCA9IFwidG9rZW5fY2xhaW1zX2NuZl9yZXF1aXJlZF9mb3Jfc2lnbmVkand0XCI7XG5jb25zdCBhdXRob3JpemF0aW9uQ29kZU1pc3NpbmdGcm9tU2VydmVyUmVzcG9uc2UgPSBcImF1dGhvcml6YXRpb25fY29kZV9taXNzaW5nX2Zyb21fc2VydmVyX3Jlc3BvbnNlXCI7XG5jb25zdCBiaW5kaW5nS2V5Tm90UmVtb3ZlZCA9IFwiYmluZGluZ19rZXlfbm90X3JlbW92ZWRcIjtcbmNvbnN0IGVuZFNlc3Npb25FbmRwb2ludE5vdFN1cHBvcnRlZCA9IFwiZW5kX3Nlc3Npb25fZW5kcG9pbnRfbm90X3N1cHBvcnRlZFwiO1xuY29uc3Qga2V5SWRNaXNzaW5nID0gXCJrZXlfaWRfbWlzc2luZ1wiO1xuY29uc3Qgbm9OZXR3b3JrQ29ubmVjdGl2aXR5ID0gXCJub19uZXR3b3JrX2Nvbm5lY3Rpdml0eVwiO1xuY29uc3QgdXNlckNhbmNlbGVkID0gXCJ1c2VyX2NhbmNlbGVkXCI7XG5jb25zdCBtaXNzaW5nVGVuYW50SWRFcnJvciA9IFwibWlzc2luZ190ZW5hbnRfaWRfZXJyb3JcIjtcbmNvbnN0IG1ldGhvZE5vdEltcGxlbWVudGVkID0gXCJtZXRob2Rfbm90X2ltcGxlbWVudGVkXCI7XG5jb25zdCBuZXN0ZWRBcHBBdXRoQnJpZGdlRGlzYWJsZWQgPSBcIm5lc3RlZF9hcHBfYXV0aF9icmlkZ2VfZGlzYWJsZWRcIjtcblxuZXhwb3J0IHsgYXV0aFRpbWVOb3RGb3VuZCwgYXV0aG9yaXphdGlvbkNvZGVNaXNzaW5nRnJvbVNlcnZlclJlc3BvbnNlLCBiaW5kaW5nS2V5Tm90UmVtb3ZlZCwgY2Fubm90QXBwZW5kU2NvcGVTZXQsIGNhbm5vdFJlbW92ZUVtcHR5U2NvcGUsIGNsaWVudEluZm9EZWNvZGluZ0Vycm9yLCBjbGllbnRJbmZvRW1wdHlFcnJvciwgZGV2aWNlQ29kZUV4cGlyZWQsIGRldmljZUNvZGVQb2xsaW5nQ2FuY2VsbGVkLCBkZXZpY2VDb2RlVW5rbm93bkVycm9yLCBlbXB0eUlucHV0U2NvcGVTZXQsIGVuZFNlc3Npb25FbmRwb2ludE5vdFN1cHBvcnRlZCwgZW5kcG9pbnRSZXNvbHV0aW9uRXJyb3IsIGhhc2hOb3REZXNlcmlhbGl6ZWQsIGludmFsaWRBc3NlcnRpb24sIGludmFsaWRDYWNoZUVudmlyb25tZW50LCBpbnZhbGlkQ2FjaGVSZWNvcmQsIGludmFsaWRDbGllbnRDcmVkZW50aWFsLCBpbnZhbGlkU3RhdGUsIGtleUlkTWlzc2luZywgbWF4QWdlVHJhbnNwaXJlZCwgbWV0aG9kTm90SW1wbGVtZW50ZWQsIG1pc3NpbmdUZW5hbnRJZEVycm9yLCBtdWx0aXBsZU1hdGNoaW5nQWNjb3VudHMsIG11bHRpcGxlTWF0Y2hpbmdBcHBNZXRhZGF0YSwgbXVsdGlwbGVNYXRjaGluZ1Rva2VucywgbmVzdGVkQXBwQXV0aEJyaWRnZURpc2FibGVkLCBuZXR3b3JrRXJyb3IsIG5vQWNjb3VudEZvdW5kLCBub0FjY291bnRJblNpbGVudFJlcXVlc3QsIG5vQ3J5cHRvT2JqZWN0LCBub05ldHdvcmtDb25uZWN0aXZpdHksIG5vbmNlTWlzbWF0Y2gsIG51bGxPckVtcHR5VG9rZW4sIG9wZW5JZENvbmZpZ0Vycm9yLCByZXF1ZXN0Q2Fubm90QmVNYWRlLCBzdGF0ZU1pc21hdGNoLCBzdGF0ZU5vdEZvdW5kLCB0b2tlbkNsYWltc0NuZlJlcXVpcmVkRm9yU2lnbmVkSnd0LCB0b2tlblBhcnNpbmdFcnJvciwgdG9rZW5SZWZyZXNoUmVxdWlyZWQsIHVuZXhwZWN0ZWRDcmVkZW50aWFsVHlwZSwgdXNlckNhbmNlbGVkLCB1c2VyVGltZW91dFJlYWNoZWQgfTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPUNsaWVudEF1dGhFcnJvckNvZGVzLm1qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/msal-common/dist/error/ClientAuthErrorCodes.mjs\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/msal-common/dist/error/ClientConfigurationError.mjs":
/*!*********************************************************************************!*\
  !*** ./node_modules/@azure/msal-common/dist/error/ClientConfigurationError.mjs ***!
  \*********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ClientConfigurationError: () => (/* binding */ ClientConfigurationError),\n/* harmony export */   ClientConfigurationErrorCodes: () => (/* reexport module object */ _ClientConfigurationErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__),\n/* harmony export */   ClientConfigurationErrorMessage: () => (/* binding */ ClientConfigurationErrorMessage),\n/* harmony export */   ClientConfigurationErrorMessages: () => (/* binding */ ClientConfigurationErrorMessages),\n/* harmony export */   createClientConfigurationError: () => (/* binding */ createClientConfigurationError)\n/* harmony export */ });\n/* harmony import */ var _AuthError_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./AuthError.mjs */ \"(rsc)/./node_modules/@azure/msal-common/dist/error/AuthError.mjs\");\n/* harmony import */ var _ClientConfigurationErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ClientConfigurationErrorCodes.mjs */ \"(rsc)/./node_modules/@azure/msal-common/dist/error/ClientConfigurationErrorCodes.mjs\");\n/*! @azure/msal-common v14.14.0 2024-07-23 */\n\n\n\n\n\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\nconst ClientConfigurationErrorMessages = {\n    [_ClientConfigurationErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.redirectUriEmpty]: \"A redirect URI is required for all calls, and none has been set.\",\n    [_ClientConfigurationErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.claimsRequestParsingError]: \"Could not parse the given claims request object.\",\n    [_ClientConfigurationErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.authorityUriInsecure]: \"Authority URIs must use https.  Please see here for valid authority configuration options: https://docs.microsoft.com/en-us/azure/active-directory/develop/msal-js-initializing-client-applications#configuration-options\",\n    [_ClientConfigurationErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.urlParseError]: \"URL could not be parsed into appropriate segments.\",\n    [_ClientConfigurationErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.urlEmptyError]: \"URL was empty or null.\",\n    [_ClientConfigurationErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.emptyInputScopesError]: \"Scopes cannot be passed as null, undefined or empty array because they are required to obtain an access token.\",\n    [_ClientConfigurationErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.invalidPromptValue]: \"Please see here for valid configuration options: https://azuread.github.io/microsoft-authentication-library-for-js/ref/modules/_azure_msal_common.html#commonauthorizationurlrequest\",\n    [_ClientConfigurationErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.invalidClaims]: \"Given claims parameter must be a stringified JSON object.\",\n    [_ClientConfigurationErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.tokenRequestEmpty]: \"Token request was empty and not found in cache.\",\n    [_ClientConfigurationErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.logoutRequestEmpty]: \"The logout request was null or undefined.\",\n    [_ClientConfigurationErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.invalidCodeChallengeMethod]: 'code_challenge_method passed is invalid. Valid values are \"plain\" and \"S256\".',\n    [_ClientConfigurationErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.pkceParamsMissing]: \"Both params: code_challenge and code_challenge_method are to be passed if to be sent in the request\",\n    [_ClientConfigurationErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.invalidCloudDiscoveryMetadata]: \"Invalid cloudDiscoveryMetadata provided. Must be a stringified JSON object containing tenant_discovery_endpoint and metadata fields\",\n    [_ClientConfigurationErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.invalidAuthorityMetadata]: \"Invalid authorityMetadata provided. Must by a stringified JSON object containing authorization_endpoint, token_endpoint, issuer fields.\",\n    [_ClientConfigurationErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.untrustedAuthority]: \"The provided authority is not a trusted authority. Please include this authority in the knownAuthorities config parameter.\",\n    [_ClientConfigurationErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.missingSshJwk]: \"Missing sshJwk in SSH certificate request. A stringified JSON Web Key is required when using the SSH authentication scheme.\",\n    [_ClientConfigurationErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.missingSshKid]: \"Missing sshKid in SSH certificate request. A string that uniquely identifies the public SSH key is required when using the SSH authentication scheme.\",\n    [_ClientConfigurationErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.missingNonceAuthenticationHeader]: \"Unable to find an authentication header containing server nonce. Either the Authentication-Info or WWW-Authenticate headers must be present in order to obtain a server nonce.\",\n    [_ClientConfigurationErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.invalidAuthenticationHeader]: \"Invalid authentication header provided\",\n    [_ClientConfigurationErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.cannotSetOIDCOptions]: \"Cannot set OIDCOptions parameter. Please change the protocol mode to OIDC or use a non-Microsoft authority.\",\n    [_ClientConfigurationErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.cannotAllowNativeBroker]: \"Cannot set allowNativeBroker parameter to true when not in AAD protocol mode.\",\n    [_ClientConfigurationErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.authorityMismatch]: \"Authority mismatch error. Authority provided in login request or PublicClientApplication config does not match the environment of the provided account. Please use a matching account or make an interactive request to login to this authority.\",\n};\n/**\n * ClientConfigurationErrorMessage class containing string constants used by error codes and messages.\n * @deprecated Use ClientConfigurationErrorCodes instead\n */\nconst ClientConfigurationErrorMessage = {\n    redirectUriNotSet: {\n        code: _ClientConfigurationErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.redirectUriEmpty,\n        desc: ClientConfigurationErrorMessages[_ClientConfigurationErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.redirectUriEmpty],\n    },\n    claimsRequestParsingError: {\n        code: _ClientConfigurationErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.claimsRequestParsingError,\n        desc: ClientConfigurationErrorMessages[_ClientConfigurationErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.claimsRequestParsingError],\n    },\n    authorityUriInsecure: {\n        code: _ClientConfigurationErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.authorityUriInsecure,\n        desc: ClientConfigurationErrorMessages[_ClientConfigurationErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.authorityUriInsecure],\n    },\n    urlParseError: {\n        code: _ClientConfigurationErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.urlParseError,\n        desc: ClientConfigurationErrorMessages[_ClientConfigurationErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.urlParseError],\n    },\n    urlEmptyError: {\n        code: _ClientConfigurationErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.urlEmptyError,\n        desc: ClientConfigurationErrorMessages[_ClientConfigurationErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.urlEmptyError],\n    },\n    emptyScopesError: {\n        code: _ClientConfigurationErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.emptyInputScopesError,\n        desc: ClientConfigurationErrorMessages[_ClientConfigurationErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.emptyInputScopesError],\n    },\n    invalidPrompt: {\n        code: _ClientConfigurationErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.invalidPromptValue,\n        desc: ClientConfigurationErrorMessages[_ClientConfigurationErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.invalidPromptValue],\n    },\n    invalidClaimsRequest: {\n        code: _ClientConfigurationErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.invalidClaims,\n        desc: ClientConfigurationErrorMessages[_ClientConfigurationErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.invalidClaims],\n    },\n    tokenRequestEmptyError: {\n        code: _ClientConfigurationErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.tokenRequestEmpty,\n        desc: ClientConfigurationErrorMessages[_ClientConfigurationErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.tokenRequestEmpty],\n    },\n    logoutRequestEmptyError: {\n        code: _ClientConfigurationErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.logoutRequestEmpty,\n        desc: ClientConfigurationErrorMessages[_ClientConfigurationErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.logoutRequestEmpty],\n    },\n    invalidCodeChallengeMethod: {\n        code: _ClientConfigurationErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.invalidCodeChallengeMethod,\n        desc: ClientConfigurationErrorMessages[_ClientConfigurationErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.invalidCodeChallengeMethod],\n    },\n    invalidCodeChallengeParams: {\n        code: _ClientConfigurationErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.pkceParamsMissing,\n        desc: ClientConfigurationErrorMessages[_ClientConfigurationErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.pkceParamsMissing],\n    },\n    invalidCloudDiscoveryMetadata: {\n        code: _ClientConfigurationErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.invalidCloudDiscoveryMetadata,\n        desc: ClientConfigurationErrorMessages[_ClientConfigurationErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.invalidCloudDiscoveryMetadata],\n    },\n    invalidAuthorityMetadata: {\n        code: _ClientConfigurationErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.invalidAuthorityMetadata,\n        desc: ClientConfigurationErrorMessages[_ClientConfigurationErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.invalidAuthorityMetadata],\n    },\n    untrustedAuthority: {\n        code: _ClientConfigurationErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.untrustedAuthority,\n        desc: ClientConfigurationErrorMessages[_ClientConfigurationErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.untrustedAuthority],\n    },\n    missingSshJwk: {\n        code: _ClientConfigurationErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.missingSshJwk,\n        desc: ClientConfigurationErrorMessages[_ClientConfigurationErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.missingSshJwk],\n    },\n    missingSshKid: {\n        code: _ClientConfigurationErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.missingSshKid,\n        desc: ClientConfigurationErrorMessages[_ClientConfigurationErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.missingSshKid],\n    },\n    missingNonceAuthenticationHeader: {\n        code: _ClientConfigurationErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.missingNonceAuthenticationHeader,\n        desc: ClientConfigurationErrorMessages[_ClientConfigurationErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.missingNonceAuthenticationHeader],\n    },\n    invalidAuthenticationHeader: {\n        code: _ClientConfigurationErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.invalidAuthenticationHeader,\n        desc: ClientConfigurationErrorMessages[_ClientConfigurationErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.invalidAuthenticationHeader],\n    },\n    cannotSetOIDCOptions: {\n        code: _ClientConfigurationErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.cannotSetOIDCOptions,\n        desc: ClientConfigurationErrorMessages[_ClientConfigurationErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.cannotSetOIDCOptions],\n    },\n    cannotAllowNativeBroker: {\n        code: _ClientConfigurationErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.cannotAllowNativeBroker,\n        desc: ClientConfigurationErrorMessages[_ClientConfigurationErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.cannotAllowNativeBroker],\n    },\n    authorityMismatch: {\n        code: _ClientConfigurationErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.authorityMismatch,\n        desc: ClientConfigurationErrorMessages[_ClientConfigurationErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.authorityMismatch],\n    },\n};\n/**\n * Error thrown when there is an error in configuration of the MSAL.js library.\n */\nclass ClientConfigurationError extends _AuthError_mjs__WEBPACK_IMPORTED_MODULE_1__.AuthError {\n    constructor(errorCode) {\n        super(errorCode, ClientConfigurationErrorMessages[errorCode]);\n        this.name = \"ClientConfigurationError\";\n        Object.setPrototypeOf(this, ClientConfigurationError.prototype);\n    }\n}\nfunction createClientConfigurationError(errorCode) {\n    return new ClientConfigurationError(errorCode);\n}\n\n\n//# sourceMappingURL=ClientConfigurationError.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/msal-common/dist/error/ClientConfigurationError.mjs\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/msal-common/dist/error/ClientConfigurationErrorCodes.mjs":
/*!**************************************************************************************!*\
  !*** ./node_modules/@azure/msal-common/dist/error/ClientConfigurationErrorCodes.mjs ***!
  \**************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   authorityMismatch: () => (/* binding */ authorityMismatch),\n/* harmony export */   authorityUriInsecure: () => (/* binding */ authorityUriInsecure),\n/* harmony export */   cannotAllowNativeBroker: () => (/* binding */ cannotAllowNativeBroker),\n/* harmony export */   cannotSetOIDCOptions: () => (/* binding */ cannotSetOIDCOptions),\n/* harmony export */   claimsRequestParsingError: () => (/* binding */ claimsRequestParsingError),\n/* harmony export */   emptyInputScopesError: () => (/* binding */ emptyInputScopesError),\n/* harmony export */   invalidAuthenticationHeader: () => (/* binding */ invalidAuthenticationHeader),\n/* harmony export */   invalidAuthorityMetadata: () => (/* binding */ invalidAuthorityMetadata),\n/* harmony export */   invalidClaims: () => (/* binding */ invalidClaims),\n/* harmony export */   invalidCloudDiscoveryMetadata: () => (/* binding */ invalidCloudDiscoveryMetadata),\n/* harmony export */   invalidCodeChallengeMethod: () => (/* binding */ invalidCodeChallengeMethod),\n/* harmony export */   invalidPromptValue: () => (/* binding */ invalidPromptValue),\n/* harmony export */   logoutRequestEmpty: () => (/* binding */ logoutRequestEmpty),\n/* harmony export */   missingNonceAuthenticationHeader: () => (/* binding */ missingNonceAuthenticationHeader),\n/* harmony export */   missingSshJwk: () => (/* binding */ missingSshJwk),\n/* harmony export */   missingSshKid: () => (/* binding */ missingSshKid),\n/* harmony export */   pkceParamsMissing: () => (/* binding */ pkceParamsMissing),\n/* harmony export */   redirectUriEmpty: () => (/* binding */ redirectUriEmpty),\n/* harmony export */   tokenRequestEmpty: () => (/* binding */ tokenRequestEmpty),\n/* harmony export */   untrustedAuthority: () => (/* binding */ untrustedAuthority),\n/* harmony export */   urlEmptyError: () => (/* binding */ urlEmptyError),\n/* harmony export */   urlParseError: () => (/* binding */ urlParseError)\n/* harmony export */ });\n/*! @azure/msal-common v14.14.0 2024-07-23 */\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\nconst redirectUriEmpty = \"redirect_uri_empty\";\nconst claimsRequestParsingError = \"claims_request_parsing_error\";\nconst authorityUriInsecure = \"authority_uri_insecure\";\nconst urlParseError = \"url_parse_error\";\nconst urlEmptyError = \"empty_url_error\";\nconst emptyInputScopesError = \"empty_input_scopes_error\";\nconst invalidPromptValue = \"invalid_prompt_value\";\nconst invalidClaims = \"invalid_claims\";\nconst tokenRequestEmpty = \"token_request_empty\";\nconst logoutRequestEmpty = \"logout_request_empty\";\nconst invalidCodeChallengeMethod = \"invalid_code_challenge_method\";\nconst pkceParamsMissing = \"pkce_params_missing\";\nconst invalidCloudDiscoveryMetadata = \"invalid_cloud_discovery_metadata\";\nconst invalidAuthorityMetadata = \"invalid_authority_metadata\";\nconst untrustedAuthority = \"untrusted_authority\";\nconst missingSshJwk = \"missing_ssh_jwk\";\nconst missingSshKid = \"missing_ssh_kid\";\nconst missingNonceAuthenticationHeader = \"missing_nonce_authentication_header\";\nconst invalidAuthenticationHeader = \"invalid_authentication_header\";\nconst cannotSetOIDCOptions = \"cannot_set_OIDCOptions\";\nconst cannotAllowNativeBroker = \"cannot_allow_native_broker\";\nconst authorityMismatch = \"authority_mismatch\";\n\n\n//# sourceMappingURL=ClientConfigurationErrorCodes.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtY29tbW9uL2Rpc3QvZXJyb3IvQ2xpZW50Q29uZmlndXJhdGlvbkVycm9yQ29kZXMubWpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBQTtBQUNhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFdWU7QUFDdmUiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9kYW5pZWwzLXZwMi8uL25vZGVfbW9kdWxlcy9AYXp1cmUvbXNhbC1jb21tb24vZGlzdC9lcnJvci9DbGllbnRDb25maWd1cmF0aW9uRXJyb3JDb2Rlcy5tanM/YzUzOSJdLCJzb3VyY2VzQ29udGVudCI6WyIvKiEgQGF6dXJlL21zYWwtY29tbW9uIHYxNC4xNC4wIDIwMjQtMDctMjMgKi9cbid1c2Ugc3RyaWN0Jztcbi8qXG4gKiBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi4gQWxsIHJpZ2h0cyByZXNlcnZlZC5cbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgTGljZW5zZS5cbiAqL1xuY29uc3QgcmVkaXJlY3RVcmlFbXB0eSA9IFwicmVkaXJlY3RfdXJpX2VtcHR5XCI7XG5jb25zdCBjbGFpbXNSZXF1ZXN0UGFyc2luZ0Vycm9yID0gXCJjbGFpbXNfcmVxdWVzdF9wYXJzaW5nX2Vycm9yXCI7XG5jb25zdCBhdXRob3JpdHlVcmlJbnNlY3VyZSA9IFwiYXV0aG9yaXR5X3VyaV9pbnNlY3VyZVwiO1xuY29uc3QgdXJsUGFyc2VFcnJvciA9IFwidXJsX3BhcnNlX2Vycm9yXCI7XG5jb25zdCB1cmxFbXB0eUVycm9yID0gXCJlbXB0eV91cmxfZXJyb3JcIjtcbmNvbnN0IGVtcHR5SW5wdXRTY29wZXNFcnJvciA9IFwiZW1wdHlfaW5wdXRfc2NvcGVzX2Vycm9yXCI7XG5jb25zdCBpbnZhbGlkUHJvbXB0VmFsdWUgPSBcImludmFsaWRfcHJvbXB0X3ZhbHVlXCI7XG5jb25zdCBpbnZhbGlkQ2xhaW1zID0gXCJpbnZhbGlkX2NsYWltc1wiO1xuY29uc3QgdG9rZW5SZXF1ZXN0RW1wdHkgPSBcInRva2VuX3JlcXVlc3RfZW1wdHlcIjtcbmNvbnN0IGxvZ291dFJlcXVlc3RFbXB0eSA9IFwibG9nb3V0X3JlcXVlc3RfZW1wdHlcIjtcbmNvbnN0IGludmFsaWRDb2RlQ2hhbGxlbmdlTWV0aG9kID0gXCJpbnZhbGlkX2NvZGVfY2hhbGxlbmdlX21ldGhvZFwiO1xuY29uc3QgcGtjZVBhcmFtc01pc3NpbmcgPSBcInBrY2VfcGFyYW1zX21pc3NpbmdcIjtcbmNvbnN0IGludmFsaWRDbG91ZERpc2NvdmVyeU1ldGFkYXRhID0gXCJpbnZhbGlkX2Nsb3VkX2Rpc2NvdmVyeV9tZXRhZGF0YVwiO1xuY29uc3QgaW52YWxpZEF1dGhvcml0eU1ldGFkYXRhID0gXCJpbnZhbGlkX2F1dGhvcml0eV9tZXRhZGF0YVwiO1xuY29uc3QgdW50cnVzdGVkQXV0aG9yaXR5ID0gXCJ1bnRydXN0ZWRfYXV0aG9yaXR5XCI7XG5jb25zdCBtaXNzaW5nU3NoSndrID0gXCJtaXNzaW5nX3NzaF9qd2tcIjtcbmNvbnN0IG1pc3NpbmdTc2hLaWQgPSBcIm1pc3Npbmdfc3NoX2tpZFwiO1xuY29uc3QgbWlzc2luZ05vbmNlQXV0aGVudGljYXRpb25IZWFkZXIgPSBcIm1pc3Npbmdfbm9uY2VfYXV0aGVudGljYXRpb25faGVhZGVyXCI7XG5jb25zdCBpbnZhbGlkQXV0aGVudGljYXRpb25IZWFkZXIgPSBcImludmFsaWRfYXV0aGVudGljYXRpb25faGVhZGVyXCI7XG5jb25zdCBjYW5ub3RTZXRPSURDT3B0aW9ucyA9IFwiY2Fubm90X3NldF9PSURDT3B0aW9uc1wiO1xuY29uc3QgY2Fubm90QWxsb3dOYXRpdmVCcm9rZXIgPSBcImNhbm5vdF9hbGxvd19uYXRpdmVfYnJva2VyXCI7XG5jb25zdCBhdXRob3JpdHlNaXNtYXRjaCA9IFwiYXV0aG9yaXR5X21pc21hdGNoXCI7XG5cbmV4cG9ydCB7IGF1dGhvcml0eU1pc21hdGNoLCBhdXRob3JpdHlVcmlJbnNlY3VyZSwgY2Fubm90QWxsb3dOYXRpdmVCcm9rZXIsIGNhbm5vdFNldE9JRENPcHRpb25zLCBjbGFpbXNSZXF1ZXN0UGFyc2luZ0Vycm9yLCBlbXB0eUlucHV0U2NvcGVzRXJyb3IsIGludmFsaWRBdXRoZW50aWNhdGlvbkhlYWRlciwgaW52YWxpZEF1dGhvcml0eU1ldGFkYXRhLCBpbnZhbGlkQ2xhaW1zLCBpbnZhbGlkQ2xvdWREaXNjb3ZlcnlNZXRhZGF0YSwgaW52YWxpZENvZGVDaGFsbGVuZ2VNZXRob2QsIGludmFsaWRQcm9tcHRWYWx1ZSwgbG9nb3V0UmVxdWVzdEVtcHR5LCBtaXNzaW5nTm9uY2VBdXRoZW50aWNhdGlvbkhlYWRlciwgbWlzc2luZ1NzaEp3aywgbWlzc2luZ1NzaEtpZCwgcGtjZVBhcmFtc01pc3NpbmcsIHJlZGlyZWN0VXJpRW1wdHksIHRva2VuUmVxdWVzdEVtcHR5LCB1bnRydXN0ZWRBdXRob3JpdHksIHVybEVtcHR5RXJyb3IsIHVybFBhcnNlRXJyb3IgfTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPUNsaWVudENvbmZpZ3VyYXRpb25FcnJvckNvZGVzLm1qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/msal-common/dist/error/ClientConfigurationErrorCodes.mjs\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/msal-common/dist/error/InteractionRequiredAuthError.mjs":
/*!*************************************************************************************!*\
  !*** ./node_modules/@azure/msal-common/dist/error/InteractionRequiredAuthError.mjs ***!
  \*************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   InteractionRequiredAuthError: () => (/* binding */ InteractionRequiredAuthError),\n/* harmony export */   InteractionRequiredAuthErrorCodes: () => (/* reexport module object */ _InteractionRequiredAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__),\n/* harmony export */   InteractionRequiredAuthErrorMessage: () => (/* binding */ InteractionRequiredAuthErrorMessage),\n/* harmony export */   InteractionRequiredAuthSubErrorMessage: () => (/* binding */ InteractionRequiredAuthSubErrorMessage),\n/* harmony export */   InteractionRequiredServerErrorMessage: () => (/* binding */ InteractionRequiredServerErrorMessage),\n/* harmony export */   createInteractionRequiredAuthError: () => (/* binding */ createInteractionRequiredAuthError),\n/* harmony export */   isInteractionRequiredError: () => (/* binding */ isInteractionRequiredError)\n/* harmony export */ });\n/* harmony import */ var _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils/Constants.mjs */ \"(rsc)/./node_modules/@azure/msal-common/dist/utils/Constants.mjs\");\n/* harmony import */ var _AuthError_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./AuthError.mjs */ \"(rsc)/./node_modules/@azure/msal-common/dist/error/AuthError.mjs\");\n/* harmony import */ var _InteractionRequiredAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./InteractionRequiredAuthErrorCodes.mjs */ \"(rsc)/./node_modules/@azure/msal-common/dist/error/InteractionRequiredAuthErrorCodes.mjs\");\n/*! @azure/msal-common v14.14.0 2024-07-23 */\n\n\n\n\n\n\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n/**\n * InteractionRequiredServerErrorMessage contains string constants used by error codes and messages returned by the server indicating interaction is required\n */\nconst InteractionRequiredServerErrorMessage = [\n    _InteractionRequiredAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.interactionRequired,\n    _InteractionRequiredAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.consentRequired,\n    _InteractionRequiredAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.loginRequired,\n    _InteractionRequiredAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.badToken,\n];\nconst InteractionRequiredAuthSubErrorMessage = [\n    \"message_only\",\n    \"additional_action\",\n    \"basic_action\",\n    \"user_password_expired\",\n    \"consent_required\",\n    \"bad_token\",\n];\nconst InteractionRequiredAuthErrorMessages = {\n    [_InteractionRequiredAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.noTokensFound]: \"No refresh token found in the cache. Please sign-in.\",\n    [_InteractionRequiredAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.nativeAccountUnavailable]: \"The requested account is not available in the native broker. It may have been deleted or logged out. Please sign-in again using an interactive API.\",\n    [_InteractionRequiredAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.refreshTokenExpired]: \"Refresh token has expired.\",\n    [_InteractionRequiredAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.badToken]: \"Identity provider returned bad_token due to an expired or invalid refresh token. Please invoke an interactive API to resolve.\",\n};\n/**\n * Interaction required errors defined by the SDK\n * @deprecated Use InteractionRequiredAuthErrorCodes instead\n */\nconst InteractionRequiredAuthErrorMessage = {\n    noTokensFoundError: {\n        code: _InteractionRequiredAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.noTokensFound,\n        desc: InteractionRequiredAuthErrorMessages[_InteractionRequiredAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.noTokensFound],\n    },\n    native_account_unavailable: {\n        code: _InteractionRequiredAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.nativeAccountUnavailable,\n        desc: InteractionRequiredAuthErrorMessages[_InteractionRequiredAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.nativeAccountUnavailable],\n    },\n    bad_token: {\n        code: _InteractionRequiredAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.badToken,\n        desc: InteractionRequiredAuthErrorMessages[_InteractionRequiredAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.badToken],\n    },\n};\n/**\n * Error thrown when user interaction is required.\n */\nclass InteractionRequiredAuthError extends _AuthError_mjs__WEBPACK_IMPORTED_MODULE_1__.AuthError {\n    constructor(errorCode, errorMessage, subError, timestamp, traceId, correlationId, claims, errorNo) {\n        super(errorCode, errorMessage, subError);\n        Object.setPrototypeOf(this, InteractionRequiredAuthError.prototype);\n        this.timestamp = timestamp || _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_2__.Constants.EMPTY_STRING;\n        this.traceId = traceId || _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_2__.Constants.EMPTY_STRING;\n        this.correlationId = correlationId || _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_2__.Constants.EMPTY_STRING;\n        this.claims = claims || _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_2__.Constants.EMPTY_STRING;\n        this.name = \"InteractionRequiredAuthError\";\n        this.errorNo = errorNo;\n    }\n}\n/**\n * Helper function used to determine if an error thrown by the server requires interaction to resolve\n * @param errorCode\n * @param errorString\n * @param subError\n */\nfunction isInteractionRequiredError(errorCode, errorString, subError) {\n    const isInteractionRequiredErrorCode = !!errorCode &&\n        InteractionRequiredServerErrorMessage.indexOf(errorCode) > -1;\n    const isInteractionRequiredSubError = !!subError &&\n        InteractionRequiredAuthSubErrorMessage.indexOf(subError) > -1;\n    const isInteractionRequiredErrorDesc = !!errorString &&\n        InteractionRequiredServerErrorMessage.some((irErrorCode) => {\n            return errorString.indexOf(irErrorCode) > -1;\n        });\n    return (isInteractionRequiredErrorCode ||\n        isInteractionRequiredErrorDesc ||\n        isInteractionRequiredSubError);\n}\n/**\n * Creates an InteractionRequiredAuthError\n */\nfunction createInteractionRequiredAuthError(errorCode) {\n    return new InteractionRequiredAuthError(errorCode, InteractionRequiredAuthErrorMessages[errorCode]);\n}\n\n\n//# sourceMappingURL=InteractionRequiredAuthError.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtY29tbW9uL2Rpc3QvZXJyb3IvSW50ZXJhY3Rpb25SZXF1aXJlZEF1dGhFcnJvci5tanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7OztBQUFBO0FBQ2E7QUFDc0M7QUFDUDtBQUMwSTtBQUN6RjtBQUNoRDs7QUFFN0M7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLElBQUksdUZBQW1CO0FBQ3ZCLElBQUksbUZBQWU7QUFDbkIsSUFBSSxpRkFBYTtBQUNqQixJQUFJLDRFQUFRO0FBQ1o7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLLGlGQUFhO0FBQ2xCLEtBQUssNEZBQXdCO0FBQzdCLEtBQUssdUZBQW1CO0FBQ3hCLEtBQUssNEVBQVE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGNBQWMsaUZBQWE7QUFDM0IsbURBQW1ELGlGQUFhO0FBQ2hFLEtBQUs7QUFDTDtBQUNBLGNBQWMsNEZBQXdCO0FBQ3RDLG1EQUFtRCw0RkFBd0I7QUFDM0UsS0FBSztBQUNMO0FBQ0EsY0FBYyw0RUFBUTtBQUN0QixtREFBbUQsNEVBQVE7QUFDM0QsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMkNBQTJDLHFEQUFTO0FBQ3BEO0FBQ0E7QUFDQTtBQUNBLHNDQUFzQywyREFBUztBQUMvQyxrQ0FBa0MsMkRBQVM7QUFDM0MsOENBQThDLDJEQUFTO0FBQ3ZELGdDQUFnQywyREFBUztBQUN6QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRTROO0FBQzVOIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZGFuaWVsMy12cDIvLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtY29tbW9uL2Rpc3QvZXJyb3IvSW50ZXJhY3Rpb25SZXF1aXJlZEF1dGhFcnJvci5tanM/ZWQwYSJdLCJzb3VyY2VzQ29udGVudCI6WyIvKiEgQGF6dXJlL21zYWwtY29tbW9uIHYxNC4xNC4wIDIwMjQtMDctMjMgKi9cbid1c2Ugc3RyaWN0JztcbmltcG9ydCB7IENvbnN0YW50cyB9IGZyb20gJy4uL3V0aWxzL0NvbnN0YW50cy5tanMnO1xuaW1wb3J0IHsgQXV0aEVycm9yIH0gZnJvbSAnLi9BdXRoRXJyb3IubWpzJztcbmltcG9ydCB7IG5vVG9rZW5zRm91bmQsIG5hdGl2ZUFjY291bnRVbmF2YWlsYWJsZSwgYmFkVG9rZW4sIHJlZnJlc2hUb2tlbkV4cGlyZWQsIGludGVyYWN0aW9uUmVxdWlyZWQsIGNvbnNlbnRSZXF1aXJlZCwgbG9naW5SZXF1aXJlZCB9IGZyb20gJy4vSW50ZXJhY3Rpb25SZXF1aXJlZEF1dGhFcnJvckNvZGVzLm1qcyc7XG5pbXBvcnQgKiBhcyBJbnRlcmFjdGlvblJlcXVpcmVkQXV0aEVycm9yQ29kZXMgZnJvbSAnLi9JbnRlcmFjdGlvblJlcXVpcmVkQXV0aEVycm9yQ29kZXMubWpzJztcbmV4cG9ydCB7IEludGVyYWN0aW9uUmVxdWlyZWRBdXRoRXJyb3JDb2RlcyB9O1xuXG4vKlxuICogQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uIEFsbCByaWdodHMgcmVzZXJ2ZWQuXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIExpY2Vuc2UuXG4gKi9cbi8qKlxuICogSW50ZXJhY3Rpb25SZXF1aXJlZFNlcnZlckVycm9yTWVzc2FnZSBjb250YWlucyBzdHJpbmcgY29uc3RhbnRzIHVzZWQgYnkgZXJyb3IgY29kZXMgYW5kIG1lc3NhZ2VzIHJldHVybmVkIGJ5IHRoZSBzZXJ2ZXIgaW5kaWNhdGluZyBpbnRlcmFjdGlvbiBpcyByZXF1aXJlZFxuICovXG5jb25zdCBJbnRlcmFjdGlvblJlcXVpcmVkU2VydmVyRXJyb3JNZXNzYWdlID0gW1xuICAgIGludGVyYWN0aW9uUmVxdWlyZWQsXG4gICAgY29uc2VudFJlcXVpcmVkLFxuICAgIGxvZ2luUmVxdWlyZWQsXG4gICAgYmFkVG9rZW4sXG5dO1xuY29uc3QgSW50ZXJhY3Rpb25SZXF1aXJlZEF1dGhTdWJFcnJvck1lc3NhZ2UgPSBbXG4gICAgXCJtZXNzYWdlX29ubHlcIixcbiAgICBcImFkZGl0aW9uYWxfYWN0aW9uXCIsXG4gICAgXCJiYXNpY19hY3Rpb25cIixcbiAgICBcInVzZXJfcGFzc3dvcmRfZXhwaXJlZFwiLFxuICAgIFwiY29uc2VudF9yZXF1aXJlZFwiLFxuICAgIFwiYmFkX3Rva2VuXCIsXG5dO1xuY29uc3QgSW50ZXJhY3Rpb25SZXF1aXJlZEF1dGhFcnJvck1lc3NhZ2VzID0ge1xuICAgIFtub1Rva2Vuc0ZvdW5kXTogXCJObyByZWZyZXNoIHRva2VuIGZvdW5kIGluIHRoZSBjYWNoZS4gUGxlYXNlIHNpZ24taW4uXCIsXG4gICAgW25hdGl2ZUFjY291bnRVbmF2YWlsYWJsZV06IFwiVGhlIHJlcXVlc3RlZCBhY2NvdW50IGlzIG5vdCBhdmFpbGFibGUgaW4gdGhlIG5hdGl2ZSBicm9rZXIuIEl0IG1heSBoYXZlIGJlZW4gZGVsZXRlZCBvciBsb2dnZWQgb3V0LiBQbGVhc2Ugc2lnbi1pbiBhZ2FpbiB1c2luZyBhbiBpbnRlcmFjdGl2ZSBBUEkuXCIsXG4gICAgW3JlZnJlc2hUb2tlbkV4cGlyZWRdOiBcIlJlZnJlc2ggdG9rZW4gaGFzIGV4cGlyZWQuXCIsXG4gICAgW2JhZFRva2VuXTogXCJJZGVudGl0eSBwcm92aWRlciByZXR1cm5lZCBiYWRfdG9rZW4gZHVlIHRvIGFuIGV4cGlyZWQgb3IgaW52YWxpZCByZWZyZXNoIHRva2VuLiBQbGVhc2UgaW52b2tlIGFuIGludGVyYWN0aXZlIEFQSSB0byByZXNvbHZlLlwiLFxufTtcbi8qKlxuICogSW50ZXJhY3Rpb24gcmVxdWlyZWQgZXJyb3JzIGRlZmluZWQgYnkgdGhlIFNES1xuICogQGRlcHJlY2F0ZWQgVXNlIEludGVyYWN0aW9uUmVxdWlyZWRBdXRoRXJyb3JDb2RlcyBpbnN0ZWFkXG4gKi9cbmNvbnN0IEludGVyYWN0aW9uUmVxdWlyZWRBdXRoRXJyb3JNZXNzYWdlID0ge1xuICAgIG5vVG9rZW5zRm91bmRFcnJvcjoge1xuICAgICAgICBjb2RlOiBub1Rva2Vuc0ZvdW5kLFxuICAgICAgICBkZXNjOiBJbnRlcmFjdGlvblJlcXVpcmVkQXV0aEVycm9yTWVzc2FnZXNbbm9Ub2tlbnNGb3VuZF0sXG4gICAgfSxcbiAgICBuYXRpdmVfYWNjb3VudF91bmF2YWlsYWJsZToge1xuICAgICAgICBjb2RlOiBuYXRpdmVBY2NvdW50VW5hdmFpbGFibGUsXG4gICAgICAgIGRlc2M6IEludGVyYWN0aW9uUmVxdWlyZWRBdXRoRXJyb3JNZXNzYWdlc1tuYXRpdmVBY2NvdW50VW5hdmFpbGFibGVdLFxuICAgIH0sXG4gICAgYmFkX3Rva2VuOiB7XG4gICAgICAgIGNvZGU6IGJhZFRva2VuLFxuICAgICAgICBkZXNjOiBJbnRlcmFjdGlvblJlcXVpcmVkQXV0aEVycm9yTWVzc2FnZXNbYmFkVG9rZW5dLFxuICAgIH0sXG59O1xuLyoqXG4gKiBFcnJvciB0aHJvd24gd2hlbiB1c2VyIGludGVyYWN0aW9uIGlzIHJlcXVpcmVkLlxuICovXG5jbGFzcyBJbnRlcmFjdGlvblJlcXVpcmVkQXV0aEVycm9yIGV4dGVuZHMgQXV0aEVycm9yIHtcbiAgICBjb25zdHJ1Y3RvcihlcnJvckNvZGUsIGVycm9yTWVzc2FnZSwgc3ViRXJyb3IsIHRpbWVzdGFtcCwgdHJhY2VJZCwgY29ycmVsYXRpb25JZCwgY2xhaW1zLCBlcnJvck5vKSB7XG4gICAgICAgIHN1cGVyKGVycm9yQ29kZSwgZXJyb3JNZXNzYWdlLCBzdWJFcnJvcik7XG4gICAgICAgIE9iamVjdC5zZXRQcm90b3R5cGVPZih0aGlzLCBJbnRlcmFjdGlvblJlcXVpcmVkQXV0aEVycm9yLnByb3RvdHlwZSk7XG4gICAgICAgIHRoaXMudGltZXN0YW1wID0gdGltZXN0YW1wIHx8IENvbnN0YW50cy5FTVBUWV9TVFJJTkc7XG4gICAgICAgIHRoaXMudHJhY2VJZCA9IHRyYWNlSWQgfHwgQ29uc3RhbnRzLkVNUFRZX1NUUklORztcbiAgICAgICAgdGhpcy5jb3JyZWxhdGlvbklkID0gY29ycmVsYXRpb25JZCB8fCBDb25zdGFudHMuRU1QVFlfU1RSSU5HO1xuICAgICAgICB0aGlzLmNsYWltcyA9IGNsYWltcyB8fCBDb25zdGFudHMuRU1QVFlfU1RSSU5HO1xuICAgICAgICB0aGlzLm5hbWUgPSBcIkludGVyYWN0aW9uUmVxdWlyZWRBdXRoRXJyb3JcIjtcbiAgICAgICAgdGhpcy5lcnJvck5vID0gZXJyb3JObztcbiAgICB9XG59XG4vKipcbiAqIEhlbHBlciBmdW5jdGlvbiB1c2VkIHRvIGRldGVybWluZSBpZiBhbiBlcnJvciB0aHJvd24gYnkgdGhlIHNlcnZlciByZXF1aXJlcyBpbnRlcmFjdGlvbiB0byByZXNvbHZlXG4gKiBAcGFyYW0gZXJyb3JDb2RlXG4gKiBAcGFyYW0gZXJyb3JTdHJpbmdcbiAqIEBwYXJhbSBzdWJFcnJvclxuICovXG5mdW5jdGlvbiBpc0ludGVyYWN0aW9uUmVxdWlyZWRFcnJvcihlcnJvckNvZGUsIGVycm9yU3RyaW5nLCBzdWJFcnJvcikge1xuICAgIGNvbnN0IGlzSW50ZXJhY3Rpb25SZXF1aXJlZEVycm9yQ29kZSA9ICEhZXJyb3JDb2RlICYmXG4gICAgICAgIEludGVyYWN0aW9uUmVxdWlyZWRTZXJ2ZXJFcnJvck1lc3NhZ2UuaW5kZXhPZihlcnJvckNvZGUpID4gLTE7XG4gICAgY29uc3QgaXNJbnRlcmFjdGlvblJlcXVpcmVkU3ViRXJyb3IgPSAhIXN1YkVycm9yICYmXG4gICAgICAgIEludGVyYWN0aW9uUmVxdWlyZWRBdXRoU3ViRXJyb3JNZXNzYWdlLmluZGV4T2Yoc3ViRXJyb3IpID4gLTE7XG4gICAgY29uc3QgaXNJbnRlcmFjdGlvblJlcXVpcmVkRXJyb3JEZXNjID0gISFlcnJvclN0cmluZyAmJlxuICAgICAgICBJbnRlcmFjdGlvblJlcXVpcmVkU2VydmVyRXJyb3JNZXNzYWdlLnNvbWUoKGlyRXJyb3JDb2RlKSA9PiB7XG4gICAgICAgICAgICByZXR1cm4gZXJyb3JTdHJpbmcuaW5kZXhPZihpckVycm9yQ29kZSkgPiAtMTtcbiAgICAgICAgfSk7XG4gICAgcmV0dXJuIChpc0ludGVyYWN0aW9uUmVxdWlyZWRFcnJvckNvZGUgfHxcbiAgICAgICAgaXNJbnRlcmFjdGlvblJlcXVpcmVkRXJyb3JEZXNjIHx8XG4gICAgICAgIGlzSW50ZXJhY3Rpb25SZXF1aXJlZFN1YkVycm9yKTtcbn1cbi8qKlxuICogQ3JlYXRlcyBhbiBJbnRlcmFjdGlvblJlcXVpcmVkQXV0aEVycm9yXG4gKi9cbmZ1bmN0aW9uIGNyZWF0ZUludGVyYWN0aW9uUmVxdWlyZWRBdXRoRXJyb3IoZXJyb3JDb2RlKSB7XG4gICAgcmV0dXJuIG5ldyBJbnRlcmFjdGlvblJlcXVpcmVkQXV0aEVycm9yKGVycm9yQ29kZSwgSW50ZXJhY3Rpb25SZXF1aXJlZEF1dGhFcnJvck1lc3NhZ2VzW2Vycm9yQ29kZV0pO1xufVxuXG5leHBvcnQgeyBJbnRlcmFjdGlvblJlcXVpcmVkQXV0aEVycm9yLCBJbnRlcmFjdGlvblJlcXVpcmVkQXV0aEVycm9yTWVzc2FnZSwgSW50ZXJhY3Rpb25SZXF1aXJlZEF1dGhTdWJFcnJvck1lc3NhZ2UsIEludGVyYWN0aW9uUmVxdWlyZWRTZXJ2ZXJFcnJvck1lc3NhZ2UsIGNyZWF0ZUludGVyYWN0aW9uUmVxdWlyZWRBdXRoRXJyb3IsIGlzSW50ZXJhY3Rpb25SZXF1aXJlZEVycm9yIH07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1JbnRlcmFjdGlvblJlcXVpcmVkQXV0aEVycm9yLm1qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/msal-common/dist/error/InteractionRequiredAuthError.mjs\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/msal-common/dist/error/InteractionRequiredAuthErrorCodes.mjs":
/*!******************************************************************************************!*\
  !*** ./node_modules/@azure/msal-common/dist/error/InteractionRequiredAuthErrorCodes.mjs ***!
  \******************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   badToken: () => (/* binding */ badToken),\n/* harmony export */   consentRequired: () => (/* binding */ consentRequired),\n/* harmony export */   interactionRequired: () => (/* binding */ interactionRequired),\n/* harmony export */   loginRequired: () => (/* binding */ loginRequired),\n/* harmony export */   nativeAccountUnavailable: () => (/* binding */ nativeAccountUnavailable),\n/* harmony export */   noTokensFound: () => (/* binding */ noTokensFound),\n/* harmony export */   refreshTokenExpired: () => (/* binding */ refreshTokenExpired)\n/* harmony export */ });\n/*! @azure/msal-common v14.14.0 2024-07-23 */\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n// Codes defined by MSAL\nconst noTokensFound = \"no_tokens_found\";\nconst nativeAccountUnavailable = \"native_account_unavailable\";\nconst refreshTokenExpired = \"refresh_token_expired\";\n// Codes potentially returned by server\nconst interactionRequired = \"interaction_required\";\nconst consentRequired = \"consent_required\";\nconst loginRequired = \"login_required\";\nconst badToken = \"bad_token\";\n\n\n//# sourceMappingURL=InteractionRequiredAuthErrorCodes.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtY29tbW9uL2Rpc3QvZXJyb3IvSW50ZXJhY3Rpb25SZXF1aXJlZEF1dGhFcnJvckNvZGVzLm1qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7O0FBQUE7QUFDYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUV1STtBQUN2SSIsInNvdXJjZXMiOlsid2VicGFjazovL2RhbmllbDMtdnAyLy4vbm9kZV9tb2R1bGVzL0BhenVyZS9tc2FsLWNvbW1vbi9kaXN0L2Vycm9yL0ludGVyYWN0aW9uUmVxdWlyZWRBdXRoRXJyb3JDb2Rlcy5tanM/MDMxNSJdLCJzb3VyY2VzQ29udGVudCI6WyIvKiEgQGF6dXJlL21zYWwtY29tbW9uIHYxNC4xNC4wIDIwMjQtMDctMjMgKi9cbid1c2Ugc3RyaWN0Jztcbi8qXG4gKiBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi4gQWxsIHJpZ2h0cyByZXNlcnZlZC5cbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgTGljZW5zZS5cbiAqL1xuLy8gQ29kZXMgZGVmaW5lZCBieSBNU0FMXG5jb25zdCBub1Rva2Vuc0ZvdW5kID0gXCJub190b2tlbnNfZm91bmRcIjtcbmNvbnN0IG5hdGl2ZUFjY291bnRVbmF2YWlsYWJsZSA9IFwibmF0aXZlX2FjY291bnRfdW5hdmFpbGFibGVcIjtcbmNvbnN0IHJlZnJlc2hUb2tlbkV4cGlyZWQgPSBcInJlZnJlc2hfdG9rZW5fZXhwaXJlZFwiO1xuLy8gQ29kZXMgcG90ZW50aWFsbHkgcmV0dXJuZWQgYnkgc2VydmVyXG5jb25zdCBpbnRlcmFjdGlvblJlcXVpcmVkID0gXCJpbnRlcmFjdGlvbl9yZXF1aXJlZFwiO1xuY29uc3QgY29uc2VudFJlcXVpcmVkID0gXCJjb25zZW50X3JlcXVpcmVkXCI7XG5jb25zdCBsb2dpblJlcXVpcmVkID0gXCJsb2dpbl9yZXF1aXJlZFwiO1xuY29uc3QgYmFkVG9rZW4gPSBcImJhZF90b2tlblwiO1xuXG5leHBvcnQgeyBiYWRUb2tlbiwgY29uc2VudFJlcXVpcmVkLCBpbnRlcmFjdGlvblJlcXVpcmVkLCBsb2dpblJlcXVpcmVkLCBuYXRpdmVBY2NvdW50VW5hdmFpbGFibGUsIG5vVG9rZW5zRm91bmQsIHJlZnJlc2hUb2tlbkV4cGlyZWQgfTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPUludGVyYWN0aW9uUmVxdWlyZWRBdXRoRXJyb3JDb2Rlcy5tanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/msal-common/dist/error/InteractionRequiredAuthErrorCodes.mjs\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/msal-common/dist/error/ServerError.mjs":
/*!********************************************************************!*\
  !*** ./node_modules/@azure/msal-common/dist/error/ServerError.mjs ***!
  \********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ServerError: () => (/* binding */ ServerError)\n/* harmony export */ });\n/* harmony import */ var _AuthError_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./AuthError.mjs */ \"(rsc)/./node_modules/@azure/msal-common/dist/error/AuthError.mjs\");\n/*! @azure/msal-common v14.14.0 2024-07-23 */\n\n\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n/**\n * Error thrown when there is an error with the server code, for example, unavailability.\n */\nclass ServerError extends _AuthError_mjs__WEBPACK_IMPORTED_MODULE_0__.AuthError {\n    constructor(errorCode, errorMessage, subError, errorNo, status) {\n        super(errorCode, errorMessage, subError);\n        this.name = \"ServerError\";\n        this.errorNo = errorNo;\n        this.status = status;\n        Object.setPrototypeOf(this, ServerError.prototype);\n    }\n}\n\n\n//# sourceMappingURL=ServerError.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtY29tbW9uL2Rpc3QvZXJyb3IvU2VydmVyRXJyb3IubWpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQUE7QUFDYTtBQUMrQjs7QUFFNUM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwwQkFBMEIscURBQVM7QUFDbkM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFdUI7QUFDdkIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9kYW5pZWwzLXZwMi8uL25vZGVfbW9kdWxlcy9AYXp1cmUvbXNhbC1jb21tb24vZGlzdC9lcnJvci9TZXJ2ZXJFcnJvci5tanM/YjA4ZiJdLCJzb3VyY2VzQ29udGVudCI6WyIvKiEgQGF6dXJlL21zYWwtY29tbW9uIHYxNC4xNC4wIDIwMjQtMDctMjMgKi9cbid1c2Ugc3RyaWN0JztcbmltcG9ydCB7IEF1dGhFcnJvciB9IGZyb20gJy4vQXV0aEVycm9yLm1qcyc7XG5cbi8qXG4gKiBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi4gQWxsIHJpZ2h0cyByZXNlcnZlZC5cbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgTGljZW5zZS5cbiAqL1xuLyoqXG4gKiBFcnJvciB0aHJvd24gd2hlbiB0aGVyZSBpcyBhbiBlcnJvciB3aXRoIHRoZSBzZXJ2ZXIgY29kZSwgZm9yIGV4YW1wbGUsIHVuYXZhaWxhYmlsaXR5LlxuICovXG5jbGFzcyBTZXJ2ZXJFcnJvciBleHRlbmRzIEF1dGhFcnJvciB7XG4gICAgY29uc3RydWN0b3IoZXJyb3JDb2RlLCBlcnJvck1lc3NhZ2UsIHN1YkVycm9yLCBlcnJvck5vLCBzdGF0dXMpIHtcbiAgICAgICAgc3VwZXIoZXJyb3JDb2RlLCBlcnJvck1lc3NhZ2UsIHN1YkVycm9yKTtcbiAgICAgICAgdGhpcy5uYW1lID0gXCJTZXJ2ZXJFcnJvclwiO1xuICAgICAgICB0aGlzLmVycm9yTm8gPSBlcnJvck5vO1xuICAgICAgICB0aGlzLnN0YXR1cyA9IHN0YXR1cztcbiAgICAgICAgT2JqZWN0LnNldFByb3RvdHlwZU9mKHRoaXMsIFNlcnZlckVycm9yLnByb3RvdHlwZSk7XG4gICAgfVxufVxuXG5leHBvcnQgeyBTZXJ2ZXJFcnJvciB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9U2VydmVyRXJyb3IubWpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/msal-common/dist/error/ServerError.mjs\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/msal-common/dist/logger/Logger.mjs":
/*!****************************************************************!*\
  !*** ./node_modules/@azure/msal-common/dist/logger/Logger.mjs ***!
  \****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   LogLevel: () => (/* binding */ LogLevel),\n/* harmony export */   Logger: () => (/* binding */ Logger)\n/* harmony export */ });\n/* harmony import */ var _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/Constants.mjs */ \"(rsc)/./node_modules/@azure/msal-common/dist/utils/Constants.mjs\");\n/*! @azure/msal-common v14.14.0 2024-07-23 */\n\n\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n/**\n * Log message level.\n */\nvar LogLevel;\n(function (LogLevel) {\n    LogLevel[LogLevel[\"Error\"] = 0] = \"Error\";\n    LogLevel[LogLevel[\"Warning\"] = 1] = \"Warning\";\n    LogLevel[LogLevel[\"Info\"] = 2] = \"Info\";\n    LogLevel[LogLevel[\"Verbose\"] = 3] = \"Verbose\";\n    LogLevel[LogLevel[\"Trace\"] = 4] = \"Trace\";\n})(LogLevel || (LogLevel = {}));\n/**\n * Class which facilitates logging of messages to a specific place.\n */\nclass Logger {\n    constructor(loggerOptions, packageName, packageVersion) {\n        // Current log level, defaults to info.\n        this.level = LogLevel.Info;\n        const defaultLoggerCallback = () => {\n            return;\n        };\n        const setLoggerOptions = loggerOptions || Logger.createDefaultLoggerOptions();\n        this.localCallback =\n            setLoggerOptions.loggerCallback || defaultLoggerCallback;\n        this.piiLoggingEnabled = setLoggerOptions.piiLoggingEnabled || false;\n        this.level =\n            typeof setLoggerOptions.logLevel === \"number\"\n                ? setLoggerOptions.logLevel\n                : LogLevel.Info;\n        this.correlationId =\n            setLoggerOptions.correlationId || _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.Constants.EMPTY_STRING;\n        this.packageName = packageName || _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.Constants.EMPTY_STRING;\n        this.packageVersion = packageVersion || _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.Constants.EMPTY_STRING;\n    }\n    static createDefaultLoggerOptions() {\n        return {\n            loggerCallback: () => {\n                // allow users to not set loggerCallback\n            },\n            piiLoggingEnabled: false,\n            logLevel: LogLevel.Info,\n        };\n    }\n    /**\n     * Create new Logger with existing configurations.\n     */\n    clone(packageName, packageVersion, correlationId) {\n        return new Logger({\n            loggerCallback: this.localCallback,\n            piiLoggingEnabled: this.piiLoggingEnabled,\n            logLevel: this.level,\n            correlationId: correlationId || this.correlationId,\n        }, packageName, packageVersion);\n    }\n    /**\n     * Log message with required options.\n     */\n    logMessage(logMessage, options) {\n        if (options.logLevel > this.level ||\n            (!this.piiLoggingEnabled && options.containsPii)) {\n            return;\n        }\n        const timestamp = new Date().toUTCString();\n        // Add correlationId to logs if set, correlationId provided on log messages take precedence\n        const logHeader = `[${timestamp}] : [${options.correlationId || this.correlationId || \"\"}]`;\n        const log = `${logHeader} : ${this.packageName}@${this.packageVersion} : ${LogLevel[options.logLevel]} - ${logMessage}`;\n        // debug(`msal:${LogLevel[options.logLevel]}${options.containsPii ? \"-Pii\": Constants.EMPTY_STRING}${options.context ? `:${options.context}` : Constants.EMPTY_STRING}`)(logMessage);\n        this.executeCallback(options.logLevel, log, options.containsPii || false);\n    }\n    /**\n     * Execute callback with message.\n     */\n    executeCallback(level, message, containsPii) {\n        if (this.localCallback) {\n            this.localCallback(level, message, containsPii);\n        }\n    }\n    /**\n     * Logs error messages.\n     */\n    error(message, correlationId) {\n        this.logMessage(message, {\n            logLevel: LogLevel.Error,\n            containsPii: false,\n            correlationId: correlationId || _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.Constants.EMPTY_STRING,\n        });\n    }\n    /**\n     * Logs error messages with PII.\n     */\n    errorPii(message, correlationId) {\n        this.logMessage(message, {\n            logLevel: LogLevel.Error,\n            containsPii: true,\n            correlationId: correlationId || _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.Constants.EMPTY_STRING,\n        });\n    }\n    /**\n     * Logs warning messages.\n     */\n    warning(message, correlationId) {\n        this.logMessage(message, {\n            logLevel: LogLevel.Warning,\n            containsPii: false,\n            correlationId: correlationId || _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.Constants.EMPTY_STRING,\n        });\n    }\n    /**\n     * Logs warning messages with PII.\n     */\n    warningPii(message, correlationId) {\n        this.logMessage(message, {\n            logLevel: LogLevel.Warning,\n            containsPii: true,\n            correlationId: correlationId || _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.Constants.EMPTY_STRING,\n        });\n    }\n    /**\n     * Logs info messages.\n     */\n    info(message, correlationId) {\n        this.logMessage(message, {\n            logLevel: LogLevel.Info,\n            containsPii: false,\n            correlationId: correlationId || _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.Constants.EMPTY_STRING,\n        });\n    }\n    /**\n     * Logs info messages with PII.\n     */\n    infoPii(message, correlationId) {\n        this.logMessage(message, {\n            logLevel: LogLevel.Info,\n            containsPii: true,\n            correlationId: correlationId || _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.Constants.EMPTY_STRING,\n        });\n    }\n    /**\n     * Logs verbose messages.\n     */\n    verbose(message, correlationId) {\n        this.logMessage(message, {\n            logLevel: LogLevel.Verbose,\n            containsPii: false,\n            correlationId: correlationId || _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.Constants.EMPTY_STRING,\n        });\n    }\n    /**\n     * Logs verbose messages with PII.\n     */\n    verbosePii(message, correlationId) {\n        this.logMessage(message, {\n            logLevel: LogLevel.Verbose,\n            containsPii: true,\n            correlationId: correlationId || _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.Constants.EMPTY_STRING,\n        });\n    }\n    /**\n     * Logs trace messages.\n     */\n    trace(message, correlationId) {\n        this.logMessage(message, {\n            logLevel: LogLevel.Trace,\n            containsPii: false,\n            correlationId: correlationId || _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.Constants.EMPTY_STRING,\n        });\n    }\n    /**\n     * Logs trace messages with PII.\n     */\n    tracePii(message, correlationId) {\n        this.logMessage(message, {\n            logLevel: LogLevel.Trace,\n            containsPii: true,\n            correlationId: correlationId || _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.Constants.EMPTY_STRING,\n        });\n    }\n    /**\n     * Returns whether PII Logging is enabled or not.\n     */\n    isPiiLoggingEnabled() {\n        return this.piiLoggingEnabled || false;\n    }\n}\n\n\n//# sourceMappingURL=Logger.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/msal-common/dist/logger/Logger.mjs\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/msal-common/dist/network/NetworkManager.mjs":
/*!*************************************************************************!*\
  !*** ./node_modules/@azure/msal-common/dist/network/NetworkManager.mjs ***!
  \*************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   NetworkManager: () => (/* binding */ NetworkManager)\n/* harmony export */ });\n/* harmony import */ var _ThrottlingUtils_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ThrottlingUtils.mjs */ \"(rsc)/./node_modules/@azure/msal-common/dist/network/ThrottlingUtils.mjs\");\n/* harmony import */ var _error_AuthError_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../error/AuthError.mjs */ \"(rsc)/./node_modules/@azure/msal-common/dist/error/AuthError.mjs\");\n/* harmony import */ var _error_ClientAuthError_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../error/ClientAuthError.mjs */ \"(rsc)/./node_modules/@azure/msal-common/dist/error/ClientAuthError.mjs\");\n/* harmony import */ var _error_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../error/ClientAuthErrorCodes.mjs */ \"(rsc)/./node_modules/@azure/msal-common/dist/error/ClientAuthErrorCodes.mjs\");\n/*! @azure/msal-common v14.14.0 2024-07-23 */\n\n\n\n\n\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n/** @internal */\nclass NetworkManager {\n    constructor(networkClient, cacheManager) {\n        this.networkClient = networkClient;\n        this.cacheManager = cacheManager;\n    }\n    /**\n     * Wraps sendPostRequestAsync with necessary preflight and postflight logic\n     * @param thumbprint\n     * @param tokenEndpoint\n     * @param options\n     */\n    async sendPostRequest(thumbprint, tokenEndpoint, options) {\n        _ThrottlingUtils_mjs__WEBPACK_IMPORTED_MODULE_0__.ThrottlingUtils.preProcess(this.cacheManager, thumbprint);\n        let response;\n        try {\n            response = await this.networkClient.sendPostRequestAsync(tokenEndpoint, options);\n        }\n        catch (e) {\n            if (e instanceof _error_AuthError_mjs__WEBPACK_IMPORTED_MODULE_1__.AuthError) {\n                throw e;\n            }\n            else {\n                throw (0,_error_ClientAuthError_mjs__WEBPACK_IMPORTED_MODULE_2__.createClientAuthError)(_error_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_3__.networkError);\n            }\n        }\n        _ThrottlingUtils_mjs__WEBPACK_IMPORTED_MODULE_0__.ThrottlingUtils.postProcess(this.cacheManager, thumbprint, response);\n        return response;\n    }\n}\n\n\n//# sourceMappingURL=NetworkManager.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtY29tbW9uL2Rpc3QvbmV0d29yay9OZXR3b3JrTWFuYWdlci5tanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBQTtBQUNhO0FBQzJDO0FBQ0w7QUFDa0I7QUFDSjs7QUFFakU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFFBQVEsaUVBQWU7QUFDdkI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDZCQUE2QiwyREFBUztBQUN0QztBQUNBO0FBQ0E7QUFDQSxzQkFBc0IsaUZBQXFCLENBQUMseUVBQVk7QUFDeEQ7QUFDQTtBQUNBLFFBQVEsaUVBQWU7QUFDdkI7QUFDQTtBQUNBOztBQUUwQjtBQUMxQiIsInNvdXJjZXMiOlsid2VicGFjazovL2RhbmllbDMtdnAyLy4vbm9kZV9tb2R1bGVzL0BhenVyZS9tc2FsLWNvbW1vbi9kaXN0L25ldHdvcmsvTmV0d29ya01hbmFnZXIubWpzPzc1OWIiXSwic291cmNlc0NvbnRlbnQiOlsiLyohIEBhenVyZS9tc2FsLWNvbW1vbiB2MTQuMTQuMCAyMDI0LTA3LTIzICovXG4ndXNlIHN0cmljdCc7XG5pbXBvcnQgeyBUaHJvdHRsaW5nVXRpbHMgfSBmcm9tICcuL1Rocm90dGxpbmdVdGlscy5tanMnO1xuaW1wb3J0IHsgQXV0aEVycm9yIH0gZnJvbSAnLi4vZXJyb3IvQXV0aEVycm9yLm1qcyc7XG5pbXBvcnQgeyBjcmVhdGVDbGllbnRBdXRoRXJyb3IgfSBmcm9tICcuLi9lcnJvci9DbGllbnRBdXRoRXJyb3IubWpzJztcbmltcG9ydCB7IG5ldHdvcmtFcnJvciB9IGZyb20gJy4uL2Vycm9yL0NsaWVudEF1dGhFcnJvckNvZGVzLm1qcyc7XG5cbi8qXG4gKiBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi4gQWxsIHJpZ2h0cyByZXNlcnZlZC5cbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgTGljZW5zZS5cbiAqL1xuLyoqIEBpbnRlcm5hbCAqL1xuY2xhc3MgTmV0d29ya01hbmFnZXIge1xuICAgIGNvbnN0cnVjdG9yKG5ldHdvcmtDbGllbnQsIGNhY2hlTWFuYWdlcikge1xuICAgICAgICB0aGlzLm5ldHdvcmtDbGllbnQgPSBuZXR3b3JrQ2xpZW50O1xuICAgICAgICB0aGlzLmNhY2hlTWFuYWdlciA9IGNhY2hlTWFuYWdlcjtcbiAgICB9XG4gICAgLyoqXG4gICAgICogV3JhcHMgc2VuZFBvc3RSZXF1ZXN0QXN5bmMgd2l0aCBuZWNlc3NhcnkgcHJlZmxpZ2h0IGFuZCBwb3N0ZmxpZ2h0IGxvZ2ljXG4gICAgICogQHBhcmFtIHRodW1icHJpbnRcbiAgICAgKiBAcGFyYW0gdG9rZW5FbmRwb2ludFxuICAgICAqIEBwYXJhbSBvcHRpb25zXG4gICAgICovXG4gICAgYXN5bmMgc2VuZFBvc3RSZXF1ZXN0KHRodW1icHJpbnQsIHRva2VuRW5kcG9pbnQsIG9wdGlvbnMpIHtcbiAgICAgICAgVGhyb3R0bGluZ1V0aWxzLnByZVByb2Nlc3ModGhpcy5jYWNoZU1hbmFnZXIsIHRodW1icHJpbnQpO1xuICAgICAgICBsZXQgcmVzcG9uc2U7XG4gICAgICAgIHRyeSB7XG4gICAgICAgICAgICByZXNwb25zZSA9IGF3YWl0IHRoaXMubmV0d29ya0NsaWVudC5zZW5kUG9zdFJlcXVlc3RBc3luYyh0b2tlbkVuZHBvaW50LCBvcHRpb25zKTtcbiAgICAgICAgfVxuICAgICAgICBjYXRjaCAoZSkge1xuICAgICAgICAgICAgaWYgKGUgaW5zdGFuY2VvZiBBdXRoRXJyb3IpIHtcbiAgICAgICAgICAgICAgICB0aHJvdyBlO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgdGhyb3cgY3JlYXRlQ2xpZW50QXV0aEVycm9yKG5ldHdvcmtFcnJvcik7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgVGhyb3R0bGluZ1V0aWxzLnBvc3RQcm9jZXNzKHRoaXMuY2FjaGVNYW5hZ2VyLCB0aHVtYnByaW50LCByZXNwb25zZSk7XG4gICAgICAgIHJldHVybiByZXNwb25zZTtcbiAgICB9XG59XG5cbmV4cG9ydCB7IE5ldHdvcmtNYW5hZ2VyIH07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1OZXR3b3JrTWFuYWdlci5tanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/msal-common/dist/network/NetworkManager.mjs\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/msal-common/dist/network/ThrottlingUtils.mjs":
/*!**************************************************************************!*\
  !*** ./node_modules/@azure/msal-common/dist/network/ThrottlingUtils.mjs ***!
  \**************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ThrottlingUtils: () => (/* binding */ ThrottlingUtils)\n/* harmony export */ });\n/* harmony import */ var _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/Constants.mjs */ \"(rsc)/./node_modules/@azure/msal-common/dist/utils/Constants.mjs\");\n/* harmony import */ var _error_ServerError_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../error/ServerError.mjs */ \"(rsc)/./node_modules/@azure/msal-common/dist/error/ServerError.mjs\");\n/*! @azure/msal-common v14.14.0 2024-07-23 */\n\n\n\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n/** @internal */\nclass ThrottlingUtils {\n    /**\n     * Prepares a RequestThumbprint to be stored as a key.\n     * @param thumbprint\n     */\n    static generateThrottlingStorageKey(thumbprint) {\n        return `${_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.ThrottlingConstants.THROTTLING_PREFIX}.${JSON.stringify(thumbprint)}`;\n    }\n    /**\n     * Performs necessary throttling checks before a network request.\n     * @param cacheManager\n     * @param thumbprint\n     */\n    static preProcess(cacheManager, thumbprint) {\n        const key = ThrottlingUtils.generateThrottlingStorageKey(thumbprint);\n        const value = cacheManager.getThrottlingCache(key);\n        if (value) {\n            if (value.throttleTime < Date.now()) {\n                cacheManager.removeItem(key);\n                return;\n            }\n            throw new _error_ServerError_mjs__WEBPACK_IMPORTED_MODULE_1__.ServerError(value.errorCodes?.join(\" \") || _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.Constants.EMPTY_STRING, value.errorMessage, value.subError);\n        }\n    }\n    /**\n     * Performs necessary throttling checks after a network request.\n     * @param cacheManager\n     * @param thumbprint\n     * @param response\n     */\n    static postProcess(cacheManager, thumbprint, response) {\n        if (ThrottlingUtils.checkResponseStatus(response) ||\n            ThrottlingUtils.checkResponseForRetryAfter(response)) {\n            const thumbprintValue = {\n                throttleTime: ThrottlingUtils.calculateThrottleTime(parseInt(response.headers[_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.HeaderNames.RETRY_AFTER])),\n                error: response.body.error,\n                errorCodes: response.body.error_codes,\n                errorMessage: response.body.error_description,\n                subError: response.body.suberror,\n            };\n            cacheManager.setThrottlingCache(ThrottlingUtils.generateThrottlingStorageKey(thumbprint), thumbprintValue);\n        }\n    }\n    /**\n     * Checks a NetworkResponse object's status codes against 429 or 5xx\n     * @param response\n     */\n    static checkResponseStatus(response) {\n        return (response.status === 429 ||\n            (response.status >= 500 && response.status < 600));\n    }\n    /**\n     * Checks a NetworkResponse object's RetryAfter header\n     * @param response\n     */\n    static checkResponseForRetryAfter(response) {\n        if (response.headers) {\n            return (response.headers.hasOwnProperty(_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.HeaderNames.RETRY_AFTER) &&\n                (response.status < 200 || response.status >= 300));\n        }\n        return false;\n    }\n    /**\n     * Calculates the Unix-time value for a throttle to expire given throttleTime in seconds.\n     * @param throttleTime\n     */\n    static calculateThrottleTime(throttleTime) {\n        const time = throttleTime <= 0 ? 0 : throttleTime;\n        const currentSeconds = Date.now() / 1000;\n        return Math.floor(Math.min(currentSeconds +\n            (time || _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.ThrottlingConstants.DEFAULT_THROTTLE_TIME_SECONDS), currentSeconds +\n            _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.ThrottlingConstants.DEFAULT_MAX_THROTTLE_TIME_SECONDS) * 1000);\n    }\n    static removeThrottle(cacheManager, clientId, request, homeAccountIdentifier) {\n        const thumbprint = {\n            clientId: clientId,\n            authority: request.authority,\n            scopes: request.scopes,\n            homeAccountIdentifier: homeAccountIdentifier,\n            claims: request.claims,\n            authenticationScheme: request.authenticationScheme,\n            resourceRequestMethod: request.resourceRequestMethod,\n            resourceRequestUri: request.resourceRequestUri,\n            shrClaims: request.shrClaims,\n            sshKid: request.sshKid,\n        };\n        const key = this.generateThrottlingStorageKey(thumbprint);\n        cacheManager.removeItem(key);\n    }\n}\n\n\n//# sourceMappingURL=ThrottlingUtils.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtY29tbW9uL2Rpc3QvbmV0d29yay9UaHJvdHRsaW5nVXRpbHMubWpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFBO0FBQ2E7QUFDd0U7QUFDOUI7O0FBRXZEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrQkFBa0IscUVBQW1CLG1CQUFtQixHQUFHLDJCQUEyQjtBQUN0RjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esc0JBQXNCLCtEQUFXLGdDQUFnQywyREFBUztBQUMxRTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw4RkFBOEYsNkRBQVc7QUFDekc7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxvREFBb0QsNkRBQVc7QUFDL0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EscUJBQXFCLHFFQUFtQjtBQUN4QyxZQUFZLHFFQUFtQjtBQUMvQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRTJCO0FBQzNCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZGFuaWVsMy12cDIvLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtY29tbW9uL2Rpc3QvbmV0d29yay9UaHJvdHRsaW5nVXRpbHMubWpzPzI1NWIiXSwic291cmNlc0NvbnRlbnQiOlsiLyohIEBhenVyZS9tc2FsLWNvbW1vbiB2MTQuMTQuMCAyMDI0LTA3LTIzICovXG4ndXNlIHN0cmljdCc7XG5pbXBvcnQgeyBUaHJvdHRsaW5nQ29uc3RhbnRzLCBDb25zdGFudHMsIEhlYWRlck5hbWVzIH0gZnJvbSAnLi4vdXRpbHMvQ29uc3RhbnRzLm1qcyc7XG5pbXBvcnQgeyBTZXJ2ZXJFcnJvciB9IGZyb20gJy4uL2Vycm9yL1NlcnZlckVycm9yLm1qcyc7XG5cbi8qXG4gKiBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi4gQWxsIHJpZ2h0cyByZXNlcnZlZC5cbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgTGljZW5zZS5cbiAqL1xuLyoqIEBpbnRlcm5hbCAqL1xuY2xhc3MgVGhyb3R0bGluZ1V0aWxzIHtcbiAgICAvKipcbiAgICAgKiBQcmVwYXJlcyBhIFJlcXVlc3RUaHVtYnByaW50IHRvIGJlIHN0b3JlZCBhcyBhIGtleS5cbiAgICAgKiBAcGFyYW0gdGh1bWJwcmludFxuICAgICAqL1xuICAgIHN0YXRpYyBnZW5lcmF0ZVRocm90dGxpbmdTdG9yYWdlS2V5KHRodW1icHJpbnQpIHtcbiAgICAgICAgcmV0dXJuIGAke1Rocm90dGxpbmdDb25zdGFudHMuVEhST1RUTElOR19QUkVGSVh9LiR7SlNPTi5zdHJpbmdpZnkodGh1bWJwcmludCl9YDtcbiAgICB9XG4gICAgLyoqXG4gICAgICogUGVyZm9ybXMgbmVjZXNzYXJ5IHRocm90dGxpbmcgY2hlY2tzIGJlZm9yZSBhIG5ldHdvcmsgcmVxdWVzdC5cbiAgICAgKiBAcGFyYW0gY2FjaGVNYW5hZ2VyXG4gICAgICogQHBhcmFtIHRodW1icHJpbnRcbiAgICAgKi9cbiAgICBzdGF0aWMgcHJlUHJvY2VzcyhjYWNoZU1hbmFnZXIsIHRodW1icHJpbnQpIHtcbiAgICAgICAgY29uc3Qga2V5ID0gVGhyb3R0bGluZ1V0aWxzLmdlbmVyYXRlVGhyb3R0bGluZ1N0b3JhZ2VLZXkodGh1bWJwcmludCk7XG4gICAgICAgIGNvbnN0IHZhbHVlID0gY2FjaGVNYW5hZ2VyLmdldFRocm90dGxpbmdDYWNoZShrZXkpO1xuICAgICAgICBpZiAodmFsdWUpIHtcbiAgICAgICAgICAgIGlmICh2YWx1ZS50aHJvdHRsZVRpbWUgPCBEYXRlLm5vdygpKSB7XG4gICAgICAgICAgICAgICAgY2FjaGVNYW5hZ2VyLnJlbW92ZUl0ZW0oa2V5KTtcbiAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICB0aHJvdyBuZXcgU2VydmVyRXJyb3IodmFsdWUuZXJyb3JDb2Rlcz8uam9pbihcIiBcIikgfHwgQ29uc3RhbnRzLkVNUFRZX1NUUklORywgdmFsdWUuZXJyb3JNZXNzYWdlLCB2YWx1ZS5zdWJFcnJvcik7XG4gICAgICAgIH1cbiAgICB9XG4gICAgLyoqXG4gICAgICogUGVyZm9ybXMgbmVjZXNzYXJ5IHRocm90dGxpbmcgY2hlY2tzIGFmdGVyIGEgbmV0d29yayByZXF1ZXN0LlxuICAgICAqIEBwYXJhbSBjYWNoZU1hbmFnZXJcbiAgICAgKiBAcGFyYW0gdGh1bWJwcmludFxuICAgICAqIEBwYXJhbSByZXNwb25zZVxuICAgICAqL1xuICAgIHN0YXRpYyBwb3N0UHJvY2VzcyhjYWNoZU1hbmFnZXIsIHRodW1icHJpbnQsIHJlc3BvbnNlKSB7XG4gICAgICAgIGlmIChUaHJvdHRsaW5nVXRpbHMuY2hlY2tSZXNwb25zZVN0YXR1cyhyZXNwb25zZSkgfHxcbiAgICAgICAgICAgIFRocm90dGxpbmdVdGlscy5jaGVja1Jlc3BvbnNlRm9yUmV0cnlBZnRlcihyZXNwb25zZSkpIHtcbiAgICAgICAgICAgIGNvbnN0IHRodW1icHJpbnRWYWx1ZSA9IHtcbiAgICAgICAgICAgICAgICB0aHJvdHRsZVRpbWU6IFRocm90dGxpbmdVdGlscy5jYWxjdWxhdGVUaHJvdHRsZVRpbWUocGFyc2VJbnQocmVzcG9uc2UuaGVhZGVyc1tIZWFkZXJOYW1lcy5SRVRSWV9BRlRFUl0pKSxcbiAgICAgICAgICAgICAgICBlcnJvcjogcmVzcG9uc2UuYm9keS5lcnJvcixcbiAgICAgICAgICAgICAgICBlcnJvckNvZGVzOiByZXNwb25zZS5ib2R5LmVycm9yX2NvZGVzLFxuICAgICAgICAgICAgICAgIGVycm9yTWVzc2FnZTogcmVzcG9uc2UuYm9keS5lcnJvcl9kZXNjcmlwdGlvbixcbiAgICAgICAgICAgICAgICBzdWJFcnJvcjogcmVzcG9uc2UuYm9keS5zdWJlcnJvcixcbiAgICAgICAgICAgIH07XG4gICAgICAgICAgICBjYWNoZU1hbmFnZXIuc2V0VGhyb3R0bGluZ0NhY2hlKFRocm90dGxpbmdVdGlscy5nZW5lcmF0ZVRocm90dGxpbmdTdG9yYWdlS2V5KHRodW1icHJpbnQpLCB0aHVtYnByaW50VmFsdWUpO1xuICAgICAgICB9XG4gICAgfVxuICAgIC8qKlxuICAgICAqIENoZWNrcyBhIE5ldHdvcmtSZXNwb25zZSBvYmplY3QncyBzdGF0dXMgY29kZXMgYWdhaW5zdCA0Mjkgb3IgNXh4XG4gICAgICogQHBhcmFtIHJlc3BvbnNlXG4gICAgICovXG4gICAgc3RhdGljIGNoZWNrUmVzcG9uc2VTdGF0dXMocmVzcG9uc2UpIHtcbiAgICAgICAgcmV0dXJuIChyZXNwb25zZS5zdGF0dXMgPT09IDQyOSB8fFxuICAgICAgICAgICAgKHJlc3BvbnNlLnN0YXR1cyA+PSA1MDAgJiYgcmVzcG9uc2Uuc3RhdHVzIDwgNjAwKSk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIENoZWNrcyBhIE5ldHdvcmtSZXNwb25zZSBvYmplY3QncyBSZXRyeUFmdGVyIGhlYWRlclxuICAgICAqIEBwYXJhbSByZXNwb25zZVxuICAgICAqL1xuICAgIHN0YXRpYyBjaGVja1Jlc3BvbnNlRm9yUmV0cnlBZnRlcihyZXNwb25zZSkge1xuICAgICAgICBpZiAocmVzcG9uc2UuaGVhZGVycykge1xuICAgICAgICAgICAgcmV0dXJuIChyZXNwb25zZS5oZWFkZXJzLmhhc093blByb3BlcnR5KEhlYWRlck5hbWVzLlJFVFJZX0FGVEVSKSAmJlxuICAgICAgICAgICAgICAgIChyZXNwb25zZS5zdGF0dXMgPCAyMDAgfHwgcmVzcG9uc2Uuc3RhdHVzID49IDMwMCkpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogQ2FsY3VsYXRlcyB0aGUgVW5peC10aW1lIHZhbHVlIGZvciBhIHRocm90dGxlIHRvIGV4cGlyZSBnaXZlbiB0aHJvdHRsZVRpbWUgaW4gc2Vjb25kcy5cbiAgICAgKiBAcGFyYW0gdGhyb3R0bGVUaW1lXG4gICAgICovXG4gICAgc3RhdGljIGNhbGN1bGF0ZVRocm90dGxlVGltZSh0aHJvdHRsZVRpbWUpIHtcbiAgICAgICAgY29uc3QgdGltZSA9IHRocm90dGxlVGltZSA8PSAwID8gMCA6IHRocm90dGxlVGltZTtcbiAgICAgICAgY29uc3QgY3VycmVudFNlY29uZHMgPSBEYXRlLm5vdygpIC8gMTAwMDtcbiAgICAgICAgcmV0dXJuIE1hdGguZmxvb3IoTWF0aC5taW4oY3VycmVudFNlY29uZHMgK1xuICAgICAgICAgICAgKHRpbWUgfHwgVGhyb3R0bGluZ0NvbnN0YW50cy5ERUZBVUxUX1RIUk9UVExFX1RJTUVfU0VDT05EUyksIGN1cnJlbnRTZWNvbmRzICtcbiAgICAgICAgICAgIFRocm90dGxpbmdDb25zdGFudHMuREVGQVVMVF9NQVhfVEhST1RUTEVfVElNRV9TRUNPTkRTKSAqIDEwMDApO1xuICAgIH1cbiAgICBzdGF0aWMgcmVtb3ZlVGhyb3R0bGUoY2FjaGVNYW5hZ2VyLCBjbGllbnRJZCwgcmVxdWVzdCwgaG9tZUFjY291bnRJZGVudGlmaWVyKSB7XG4gICAgICAgIGNvbnN0IHRodW1icHJpbnQgPSB7XG4gICAgICAgICAgICBjbGllbnRJZDogY2xpZW50SWQsXG4gICAgICAgICAgICBhdXRob3JpdHk6IHJlcXVlc3QuYXV0aG9yaXR5LFxuICAgICAgICAgICAgc2NvcGVzOiByZXF1ZXN0LnNjb3BlcyxcbiAgICAgICAgICAgIGhvbWVBY2NvdW50SWRlbnRpZmllcjogaG9tZUFjY291bnRJZGVudGlmaWVyLFxuICAgICAgICAgICAgY2xhaW1zOiByZXF1ZXN0LmNsYWltcyxcbiAgICAgICAgICAgIGF1dGhlbnRpY2F0aW9uU2NoZW1lOiByZXF1ZXN0LmF1dGhlbnRpY2F0aW9uU2NoZW1lLFxuICAgICAgICAgICAgcmVzb3VyY2VSZXF1ZXN0TWV0aG9kOiByZXF1ZXN0LnJlc291cmNlUmVxdWVzdE1ldGhvZCxcbiAgICAgICAgICAgIHJlc291cmNlUmVxdWVzdFVyaTogcmVxdWVzdC5yZXNvdXJjZVJlcXVlc3RVcmksXG4gICAgICAgICAgICBzaHJDbGFpbXM6IHJlcXVlc3Quc2hyQ2xhaW1zLFxuICAgICAgICAgICAgc3NoS2lkOiByZXF1ZXN0LnNzaEtpZCxcbiAgICAgICAgfTtcbiAgICAgICAgY29uc3Qga2V5ID0gdGhpcy5nZW5lcmF0ZVRocm90dGxpbmdTdG9yYWdlS2V5KHRodW1icHJpbnQpO1xuICAgICAgICBjYWNoZU1hbmFnZXIucmVtb3ZlSXRlbShrZXkpO1xuICAgIH1cbn1cblxuZXhwb3J0IHsgVGhyb3R0bGluZ1V0aWxzIH07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1UaHJvdHRsaW5nVXRpbHMubWpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/msal-common/dist/network/ThrottlingUtils.mjs\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/msal-common/dist/packageMetadata.mjs":
/*!******************************************************************!*\
  !*** ./node_modules/@azure/msal-common/dist/packageMetadata.mjs ***!
  \******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   name: () => (/* binding */ name),\n/* harmony export */   version: () => (/* binding */ version)\n/* harmony export */ });\n/*! @azure/msal-common v14.14.0 2024-07-23 */\n\n/* eslint-disable header/header */\nconst name = \"@azure/msal-common\";\nconst version = \"14.14.0\";\n\n\n//# sourceMappingURL=packageMetadata.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtY29tbW9uL2Rpc3QvcGFja2FnZU1ldGFkYXRhLm1qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFBO0FBQ2E7QUFDYjtBQUNBO0FBQ0E7O0FBRXlCO0FBQ3pCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZGFuaWVsMy12cDIvLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtY29tbW9uL2Rpc3QvcGFja2FnZU1ldGFkYXRhLm1qcz80NjNmIl0sInNvdXJjZXNDb250ZW50IjpbIi8qISBAYXp1cmUvbXNhbC1jb21tb24gdjE0LjE0LjAgMjAyNC0wNy0yMyAqL1xuJ3VzZSBzdHJpY3QnO1xuLyogZXNsaW50LWRpc2FibGUgaGVhZGVyL2hlYWRlciAqL1xuY29uc3QgbmFtZSA9IFwiQGF6dXJlL21zYWwtY29tbW9uXCI7XG5jb25zdCB2ZXJzaW9uID0gXCIxNC4xNC4wXCI7XG5cbmV4cG9ydCB7IG5hbWUsIHZlcnNpb24gfTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXBhY2thZ2VNZXRhZGF0YS5tanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/msal-common/dist/packageMetadata.mjs\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/msal-common/dist/request/RequestParameterBuilder.mjs":
/*!**********************************************************************************!*\
  !*** ./node_modules/@azure/msal-common/dist/request/RequestParameterBuilder.mjs ***!
  \**********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   RequestParameterBuilder: () => (/* binding */ RequestParameterBuilder)\n/* harmony export */ });\n/* harmony import */ var _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/Constants.mjs */ \"(rsc)/./node_modules/@azure/msal-common/dist/utils/Constants.mjs\");\n/* harmony import */ var _constants_AADServerParamKeys_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../constants/AADServerParamKeys.mjs */ \"(rsc)/./node_modules/@azure/msal-common/dist/constants/AADServerParamKeys.mjs\");\n/* harmony import */ var _ScopeSet_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./ScopeSet.mjs */ \"(rsc)/./node_modules/@azure/msal-common/dist/request/ScopeSet.mjs\");\n/* harmony import */ var _error_ClientConfigurationError_mjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../error/ClientConfigurationError.mjs */ \"(rsc)/./node_modules/@azure/msal-common/dist/error/ClientConfigurationError.mjs\");\n/* harmony import */ var _RequestValidator_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./RequestValidator.mjs */ \"(rsc)/./node_modules/@azure/msal-common/dist/request/RequestValidator.mjs\");\n/* harmony import */ var _error_ClientConfigurationErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../error/ClientConfigurationErrorCodes.mjs */ \"(rsc)/./node_modules/@azure/msal-common/dist/error/ClientConfigurationErrorCodes.mjs\");\n/*! @azure/msal-common v14.14.0 2024-07-23 */\n\n\n\n\n\n\n\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n/** @internal */\nclass RequestParameterBuilder {\n    constructor() {\n        this.parameters = new Map();\n    }\n    /**\n     * add response_type = code\n     */\n    addResponseTypeCode() {\n        this.parameters.set(_constants_AADServerParamKeys_mjs__WEBPACK_IMPORTED_MODULE_0__.RESPONSE_TYPE, encodeURIComponent(_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_1__.Constants.CODE_RESPONSE_TYPE));\n    }\n    /**\n     * add response_type = token id_token\n     */\n    addResponseTypeForTokenAndIdToken() {\n        this.parameters.set(_constants_AADServerParamKeys_mjs__WEBPACK_IMPORTED_MODULE_0__.RESPONSE_TYPE, encodeURIComponent(`${_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_1__.Constants.TOKEN_RESPONSE_TYPE} ${_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_1__.Constants.ID_TOKEN_RESPONSE_TYPE}`));\n    }\n    /**\n     * add response_mode. defaults to query.\n     * @param responseMode\n     */\n    addResponseMode(responseMode) {\n        this.parameters.set(_constants_AADServerParamKeys_mjs__WEBPACK_IMPORTED_MODULE_0__.RESPONSE_MODE, encodeURIComponent(responseMode ? responseMode : _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_1__.ResponseMode.QUERY));\n    }\n    /**\n     * Add flag to indicate STS should attempt to use WAM if available\n     */\n    addNativeBroker() {\n        this.parameters.set(_constants_AADServerParamKeys_mjs__WEBPACK_IMPORTED_MODULE_0__.NATIVE_BROKER, encodeURIComponent(\"1\"));\n    }\n    /**\n     * add scopes. set addOidcScopes to false to prevent default scopes in non-user scenarios\n     * @param scopeSet\n     * @param addOidcScopes\n     */\n    addScopes(scopes, addOidcScopes = true, defaultScopes = _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_1__.OIDC_DEFAULT_SCOPES) {\n        // Always add openid to the scopes when adding OIDC scopes\n        if (addOidcScopes &&\n            !defaultScopes.includes(\"openid\") &&\n            !scopes.includes(\"openid\")) {\n            defaultScopes.push(\"openid\");\n        }\n        const requestScopes = addOidcScopes\n            ? [...(scopes || []), ...defaultScopes]\n            : scopes || [];\n        const scopeSet = new _ScopeSet_mjs__WEBPACK_IMPORTED_MODULE_2__.ScopeSet(requestScopes);\n        this.parameters.set(_constants_AADServerParamKeys_mjs__WEBPACK_IMPORTED_MODULE_0__.SCOPE, encodeURIComponent(scopeSet.printScopes()));\n    }\n    /**\n     * add clientId\n     * @param clientId\n     */\n    addClientId(clientId) {\n        this.parameters.set(_constants_AADServerParamKeys_mjs__WEBPACK_IMPORTED_MODULE_0__.CLIENT_ID, encodeURIComponent(clientId));\n    }\n    /**\n     * add redirect_uri\n     * @param redirectUri\n     */\n    addRedirectUri(redirectUri) {\n        _RequestValidator_mjs__WEBPACK_IMPORTED_MODULE_3__.RequestValidator.validateRedirectUri(redirectUri);\n        this.parameters.set(_constants_AADServerParamKeys_mjs__WEBPACK_IMPORTED_MODULE_0__.REDIRECT_URI, encodeURIComponent(redirectUri));\n    }\n    /**\n     * add post logout redirectUri\n     * @param redirectUri\n     */\n    addPostLogoutRedirectUri(redirectUri) {\n        _RequestValidator_mjs__WEBPACK_IMPORTED_MODULE_3__.RequestValidator.validateRedirectUri(redirectUri);\n        this.parameters.set(_constants_AADServerParamKeys_mjs__WEBPACK_IMPORTED_MODULE_0__.POST_LOGOUT_URI, encodeURIComponent(redirectUri));\n    }\n    /**\n     * add id_token_hint to logout request\n     * @param idTokenHint\n     */\n    addIdTokenHint(idTokenHint) {\n        this.parameters.set(_constants_AADServerParamKeys_mjs__WEBPACK_IMPORTED_MODULE_0__.ID_TOKEN_HINT, encodeURIComponent(idTokenHint));\n    }\n    /**\n     * add domain_hint\n     * @param domainHint\n     */\n    addDomainHint(domainHint) {\n        this.parameters.set(_constants_AADServerParamKeys_mjs__WEBPACK_IMPORTED_MODULE_0__.DOMAIN_HINT, encodeURIComponent(domainHint));\n    }\n    /**\n     * add login_hint\n     * @param loginHint\n     */\n    addLoginHint(loginHint) {\n        this.parameters.set(_constants_AADServerParamKeys_mjs__WEBPACK_IMPORTED_MODULE_0__.LOGIN_HINT, encodeURIComponent(loginHint));\n    }\n    /**\n     * Adds the CCS (Cache Credential Service) query parameter for login_hint\n     * @param loginHint\n     */\n    addCcsUpn(loginHint) {\n        this.parameters.set(_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_1__.HeaderNames.CCS_HEADER, encodeURIComponent(`UPN:${loginHint}`));\n    }\n    /**\n     * Adds the CCS (Cache Credential Service) query parameter for account object\n     * @param loginHint\n     */\n    addCcsOid(clientInfo) {\n        this.parameters.set(_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_1__.HeaderNames.CCS_HEADER, encodeURIComponent(`Oid:${clientInfo.uid}@${clientInfo.utid}`));\n    }\n    /**\n     * add sid\n     * @param sid\n     */\n    addSid(sid) {\n        this.parameters.set(_constants_AADServerParamKeys_mjs__WEBPACK_IMPORTED_MODULE_0__.SID, encodeURIComponent(sid));\n    }\n    /**\n     * add claims\n     * @param claims\n     */\n    addClaims(claims, clientCapabilities) {\n        const mergedClaims = this.addClientCapabilitiesToClaims(claims, clientCapabilities);\n        _RequestValidator_mjs__WEBPACK_IMPORTED_MODULE_3__.RequestValidator.validateClaims(mergedClaims);\n        this.parameters.set(_constants_AADServerParamKeys_mjs__WEBPACK_IMPORTED_MODULE_0__.CLAIMS, encodeURIComponent(mergedClaims));\n    }\n    /**\n     * add correlationId\n     * @param correlationId\n     */\n    addCorrelationId(correlationId) {\n        this.parameters.set(_constants_AADServerParamKeys_mjs__WEBPACK_IMPORTED_MODULE_0__.CLIENT_REQUEST_ID, encodeURIComponent(correlationId));\n    }\n    /**\n     * add library info query params\n     * @param libraryInfo\n     */\n    addLibraryInfo(libraryInfo) {\n        // Telemetry Info\n        this.parameters.set(_constants_AADServerParamKeys_mjs__WEBPACK_IMPORTED_MODULE_0__.X_CLIENT_SKU, libraryInfo.sku);\n        this.parameters.set(_constants_AADServerParamKeys_mjs__WEBPACK_IMPORTED_MODULE_0__.X_CLIENT_VER, libraryInfo.version);\n        if (libraryInfo.os) {\n            this.parameters.set(_constants_AADServerParamKeys_mjs__WEBPACK_IMPORTED_MODULE_0__.X_CLIENT_OS, libraryInfo.os);\n        }\n        if (libraryInfo.cpu) {\n            this.parameters.set(_constants_AADServerParamKeys_mjs__WEBPACK_IMPORTED_MODULE_0__.X_CLIENT_CPU, libraryInfo.cpu);\n        }\n    }\n    /**\n     * Add client telemetry parameters\n     * @param appTelemetry\n     */\n    addApplicationTelemetry(appTelemetry) {\n        if (appTelemetry?.appName) {\n            this.parameters.set(_constants_AADServerParamKeys_mjs__WEBPACK_IMPORTED_MODULE_0__.X_APP_NAME, appTelemetry.appName);\n        }\n        if (appTelemetry?.appVersion) {\n            this.parameters.set(_constants_AADServerParamKeys_mjs__WEBPACK_IMPORTED_MODULE_0__.X_APP_VER, appTelemetry.appVersion);\n        }\n    }\n    /**\n     * add prompt\n     * @param prompt\n     */\n    addPrompt(prompt) {\n        _RequestValidator_mjs__WEBPACK_IMPORTED_MODULE_3__.RequestValidator.validatePrompt(prompt);\n        this.parameters.set(`${_constants_AADServerParamKeys_mjs__WEBPACK_IMPORTED_MODULE_0__.PROMPT}`, encodeURIComponent(prompt));\n    }\n    /**\n     * add state\n     * @param state\n     */\n    addState(state) {\n        if (state) {\n            this.parameters.set(_constants_AADServerParamKeys_mjs__WEBPACK_IMPORTED_MODULE_0__.STATE, encodeURIComponent(state));\n        }\n    }\n    /**\n     * add nonce\n     * @param nonce\n     */\n    addNonce(nonce) {\n        this.parameters.set(_constants_AADServerParamKeys_mjs__WEBPACK_IMPORTED_MODULE_0__.NONCE, encodeURIComponent(nonce));\n    }\n    /**\n     * add code_challenge and code_challenge_method\n     * - throw if either of them are not passed\n     * @param codeChallenge\n     * @param codeChallengeMethod\n     */\n    addCodeChallengeParams(codeChallenge, codeChallengeMethod) {\n        _RequestValidator_mjs__WEBPACK_IMPORTED_MODULE_3__.RequestValidator.validateCodeChallengeParams(codeChallenge, codeChallengeMethod);\n        if (codeChallenge && codeChallengeMethod) {\n            this.parameters.set(_constants_AADServerParamKeys_mjs__WEBPACK_IMPORTED_MODULE_0__.CODE_CHALLENGE, encodeURIComponent(codeChallenge));\n            this.parameters.set(_constants_AADServerParamKeys_mjs__WEBPACK_IMPORTED_MODULE_0__.CODE_CHALLENGE_METHOD, encodeURIComponent(codeChallengeMethod));\n        }\n        else {\n            throw (0,_error_ClientConfigurationError_mjs__WEBPACK_IMPORTED_MODULE_4__.createClientConfigurationError)(_error_ClientConfigurationErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_5__.pkceParamsMissing);\n        }\n    }\n    /**\n     * add the `authorization_code` passed by the user to exchange for a token\n     * @param code\n     */\n    addAuthorizationCode(code) {\n        this.parameters.set(_constants_AADServerParamKeys_mjs__WEBPACK_IMPORTED_MODULE_0__.CODE, encodeURIComponent(code));\n    }\n    /**\n     * add the `authorization_code` passed by the user to exchange for a token\n     * @param code\n     */\n    addDeviceCode(code) {\n        this.parameters.set(_constants_AADServerParamKeys_mjs__WEBPACK_IMPORTED_MODULE_0__.DEVICE_CODE, encodeURIComponent(code));\n    }\n    /**\n     * add the `refreshToken` passed by the user\n     * @param refreshToken\n     */\n    addRefreshToken(refreshToken) {\n        this.parameters.set(_constants_AADServerParamKeys_mjs__WEBPACK_IMPORTED_MODULE_0__.REFRESH_TOKEN, encodeURIComponent(refreshToken));\n    }\n    /**\n     * add the `code_verifier` passed by the user to exchange for a token\n     * @param codeVerifier\n     */\n    addCodeVerifier(codeVerifier) {\n        this.parameters.set(_constants_AADServerParamKeys_mjs__WEBPACK_IMPORTED_MODULE_0__.CODE_VERIFIER, encodeURIComponent(codeVerifier));\n    }\n    /**\n     * add client_secret\n     * @param clientSecret\n     */\n    addClientSecret(clientSecret) {\n        this.parameters.set(_constants_AADServerParamKeys_mjs__WEBPACK_IMPORTED_MODULE_0__.CLIENT_SECRET, encodeURIComponent(clientSecret));\n    }\n    /**\n     * add clientAssertion for confidential client flows\n     * @param clientAssertion\n     */\n    addClientAssertion(clientAssertion) {\n        if (clientAssertion) {\n            this.parameters.set(_constants_AADServerParamKeys_mjs__WEBPACK_IMPORTED_MODULE_0__.CLIENT_ASSERTION, encodeURIComponent(clientAssertion));\n        }\n    }\n    /**\n     * add clientAssertionType for confidential client flows\n     * @param clientAssertionType\n     */\n    addClientAssertionType(clientAssertionType) {\n        if (clientAssertionType) {\n            this.parameters.set(_constants_AADServerParamKeys_mjs__WEBPACK_IMPORTED_MODULE_0__.CLIENT_ASSERTION_TYPE, encodeURIComponent(clientAssertionType));\n        }\n    }\n    /**\n     * add OBO assertion for confidential client flows\n     * @param clientAssertion\n     */\n    addOboAssertion(oboAssertion) {\n        this.parameters.set(_constants_AADServerParamKeys_mjs__WEBPACK_IMPORTED_MODULE_0__.OBO_ASSERTION, encodeURIComponent(oboAssertion));\n    }\n    /**\n     * add grant type\n     * @param grantType\n     */\n    addRequestTokenUse(tokenUse) {\n        this.parameters.set(_constants_AADServerParamKeys_mjs__WEBPACK_IMPORTED_MODULE_0__.REQUESTED_TOKEN_USE, encodeURIComponent(tokenUse));\n    }\n    /**\n     * add grant type\n     * @param grantType\n     */\n    addGrantType(grantType) {\n        this.parameters.set(_constants_AADServerParamKeys_mjs__WEBPACK_IMPORTED_MODULE_0__.GRANT_TYPE, encodeURIComponent(grantType));\n    }\n    /**\n     * add client info\n     *\n     */\n    addClientInfo() {\n        this.parameters.set(_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_1__.CLIENT_INFO, \"1\");\n    }\n    /**\n     * add extraQueryParams\n     * @param eQParams\n     */\n    addExtraQueryParameters(eQParams) {\n        Object.entries(eQParams).forEach(([key, value]) => {\n            if (!this.parameters.has(key) && value) {\n                this.parameters.set(key, value);\n            }\n        });\n    }\n    addClientCapabilitiesToClaims(claims, clientCapabilities) {\n        let mergedClaims;\n        // Parse provided claims into JSON object or initialize empty object\n        if (!claims) {\n            mergedClaims = {};\n        }\n        else {\n            try {\n                mergedClaims = JSON.parse(claims);\n            }\n            catch (e) {\n                throw (0,_error_ClientConfigurationError_mjs__WEBPACK_IMPORTED_MODULE_4__.createClientConfigurationError)(_error_ClientConfigurationErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_5__.invalidClaims);\n            }\n        }\n        if (clientCapabilities && clientCapabilities.length > 0) {\n            if (!mergedClaims.hasOwnProperty(_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_1__.ClaimsRequestKeys.ACCESS_TOKEN)) {\n                // Add access_token key to claims object\n                mergedClaims[_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_1__.ClaimsRequestKeys.ACCESS_TOKEN] = {};\n            }\n            // Add xms_cc claim with provided clientCapabilities to access_token key\n            mergedClaims[_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_1__.ClaimsRequestKeys.ACCESS_TOKEN][_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_1__.ClaimsRequestKeys.XMS_CC] = {\n                values: clientCapabilities,\n            };\n        }\n        return JSON.stringify(mergedClaims);\n    }\n    /**\n     * adds `username` for Password Grant flow\n     * @param username\n     */\n    addUsername(username) {\n        this.parameters.set(_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_1__.PasswordGrantConstants.username, encodeURIComponent(username));\n    }\n    /**\n     * adds `password` for Password Grant flow\n     * @param password\n     */\n    addPassword(password) {\n        this.parameters.set(_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_1__.PasswordGrantConstants.password, encodeURIComponent(password));\n    }\n    /**\n     * add pop_jwk to query params\n     * @param cnfString\n     */\n    addPopToken(cnfString) {\n        if (cnfString) {\n            this.parameters.set(_constants_AADServerParamKeys_mjs__WEBPACK_IMPORTED_MODULE_0__.TOKEN_TYPE, _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_1__.AuthenticationScheme.POP);\n            this.parameters.set(_constants_AADServerParamKeys_mjs__WEBPACK_IMPORTED_MODULE_0__.REQ_CNF, encodeURIComponent(cnfString));\n        }\n    }\n    /**\n     * add SSH JWK and key ID to query params\n     */\n    addSshJwk(sshJwkString) {\n        if (sshJwkString) {\n            this.parameters.set(_constants_AADServerParamKeys_mjs__WEBPACK_IMPORTED_MODULE_0__.TOKEN_TYPE, _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_1__.AuthenticationScheme.SSH);\n            this.parameters.set(_constants_AADServerParamKeys_mjs__WEBPACK_IMPORTED_MODULE_0__.REQ_CNF, encodeURIComponent(sshJwkString));\n        }\n    }\n    /**\n     * add server telemetry fields\n     * @param serverTelemetryManager\n     */\n    addServerTelemetry(serverTelemetryManager) {\n        this.parameters.set(_constants_AADServerParamKeys_mjs__WEBPACK_IMPORTED_MODULE_0__.X_CLIENT_CURR_TELEM, serverTelemetryManager.generateCurrentRequestHeaderValue());\n        this.parameters.set(_constants_AADServerParamKeys_mjs__WEBPACK_IMPORTED_MODULE_0__.X_CLIENT_LAST_TELEM, serverTelemetryManager.generateLastRequestHeaderValue());\n    }\n    /**\n     * Adds parameter that indicates to the server that throttling is supported\n     */\n    addThrottling() {\n        this.parameters.set(_constants_AADServerParamKeys_mjs__WEBPACK_IMPORTED_MODULE_0__.X_MS_LIB_CAPABILITY, _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_1__.ThrottlingConstants.X_MS_LIB_CAPABILITY_VALUE);\n    }\n    /**\n     * Adds logout_hint parameter for \"silent\" logout which prevent server account picker\n     */\n    addLogoutHint(logoutHint) {\n        this.parameters.set(_constants_AADServerParamKeys_mjs__WEBPACK_IMPORTED_MODULE_0__.LOGOUT_HINT, encodeURIComponent(logoutHint));\n    }\n    /**\n     * Utility to create a URL from the params map\n     */\n    createQueryString() {\n        const queryParameterArray = new Array();\n        this.parameters.forEach((value, key) => {\n            queryParameterArray.push(`${key}=${value}`);\n        });\n        return queryParameterArray.join(\"&\");\n    }\n}\n\n\n//# sourceMappingURL=RequestParameterBuilder.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/msal-common/dist/request/RequestParameterBuilder.mjs\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/msal-common/dist/request/RequestValidator.mjs":
/*!***************************************************************************!*\
  !*** ./node_modules/@azure/msal-common/dist/request/RequestValidator.mjs ***!
  \***************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   RequestValidator: () => (/* binding */ RequestValidator)\n/* harmony export */ });\n/* harmony import */ var _error_ClientConfigurationError_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../error/ClientConfigurationError.mjs */ \"(rsc)/./node_modules/@azure/msal-common/dist/error/ClientConfigurationError.mjs\");\n/* harmony import */ var _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils/Constants.mjs */ \"(rsc)/./node_modules/@azure/msal-common/dist/utils/Constants.mjs\");\n/* harmony import */ var _error_ClientConfigurationErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../error/ClientConfigurationErrorCodes.mjs */ \"(rsc)/./node_modules/@azure/msal-common/dist/error/ClientConfigurationErrorCodes.mjs\");\n/*! @azure/msal-common v14.14.0 2024-07-23 */\n\n\n\n\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n/**\n * Validates server consumable params from the \"request\" objects\n */\nclass RequestValidator {\n    /**\n     * Utility to check if the `redirectUri` in the request is a non-null value\n     * @param redirectUri\n     */\n    static validateRedirectUri(redirectUri) {\n        if (!redirectUri) {\n            throw (0,_error_ClientConfigurationError_mjs__WEBPACK_IMPORTED_MODULE_0__.createClientConfigurationError)(_error_ClientConfigurationErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_1__.redirectUriEmpty);\n        }\n    }\n    /**\n     * Utility to validate prompt sent by the user in the request\n     * @param prompt\n     */\n    static validatePrompt(prompt) {\n        const promptValues = [];\n        for (const value in _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_2__.PromptValue) {\n            promptValues.push(_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_2__.PromptValue[value]);\n        }\n        if (promptValues.indexOf(prompt) < 0) {\n            throw (0,_error_ClientConfigurationError_mjs__WEBPACK_IMPORTED_MODULE_0__.createClientConfigurationError)(_error_ClientConfigurationErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_1__.invalidPromptValue);\n        }\n    }\n    static validateClaims(claims) {\n        try {\n            JSON.parse(claims);\n        }\n        catch (e) {\n            throw (0,_error_ClientConfigurationError_mjs__WEBPACK_IMPORTED_MODULE_0__.createClientConfigurationError)(_error_ClientConfigurationErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_1__.invalidClaims);\n        }\n    }\n    /**\n     * Utility to validate code_challenge and code_challenge_method\n     * @param codeChallenge\n     * @param codeChallengeMethod\n     */\n    static validateCodeChallengeParams(codeChallenge, codeChallengeMethod) {\n        if (!codeChallenge || !codeChallengeMethod) {\n            throw (0,_error_ClientConfigurationError_mjs__WEBPACK_IMPORTED_MODULE_0__.createClientConfigurationError)(_error_ClientConfigurationErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_1__.pkceParamsMissing);\n        }\n        else {\n            this.validateCodeChallengeMethod(codeChallengeMethod);\n        }\n    }\n    /**\n     * Utility to validate code_challenge_method\n     * @param codeChallengeMethod\n     */\n    static validateCodeChallengeMethod(codeChallengeMethod) {\n        if ([\n            _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_2__.CodeChallengeMethodValues.PLAIN,\n            _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_2__.CodeChallengeMethodValues.S256,\n        ].indexOf(codeChallengeMethod) < 0) {\n            throw (0,_error_ClientConfigurationError_mjs__WEBPACK_IMPORTED_MODULE_0__.createClientConfigurationError)(_error_ClientConfigurationErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_1__.invalidCodeChallengeMethod);\n        }\n    }\n}\n\n\n//# sourceMappingURL=RequestValidator.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtY29tbW9uL2Rpc3QvcmVxdWVzdC9SZXF1ZXN0VmFsaWRhdG9yLm1qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7QUFDYTtBQUMwRTtBQUNQO0FBQ2dGOztBQUVoSztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0JBQWtCLG1HQUE4QixDQUFDLHNGQUFnQjtBQUNqRTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNEJBQTRCLDZEQUFXO0FBQ3ZDLDhCQUE4Qiw2REFBVztBQUN6QztBQUNBO0FBQ0Esa0JBQWtCLG1HQUE4QixDQUFDLHdGQUFrQjtBQUNuRTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtCQUFrQixtR0FBOEIsQ0FBQyxtRkFBYTtBQUM5RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrQkFBa0IsbUdBQThCLENBQUMsdUZBQWlCO0FBQ2xFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxZQUFZLDJFQUF5QjtBQUNyQyxZQUFZLDJFQUF5QjtBQUNyQztBQUNBLGtCQUFrQixtR0FBOEIsQ0FBQyxnR0FBMEI7QUFDM0U7QUFDQTtBQUNBOztBQUU0QjtBQUM1QiIsInNvdXJjZXMiOlsid2VicGFjazovL2RhbmllbDMtdnAyLy4vbm9kZV9tb2R1bGVzL0BhenVyZS9tc2FsLWNvbW1vbi9kaXN0L3JlcXVlc3QvUmVxdWVzdFZhbGlkYXRvci5tanM/YmI1NiJdLCJzb3VyY2VzQ29udGVudCI6WyIvKiEgQGF6dXJlL21zYWwtY29tbW9uIHYxNC4xNC4wIDIwMjQtMDctMjMgKi9cbid1c2Ugc3RyaWN0JztcbmltcG9ydCB7IGNyZWF0ZUNsaWVudENvbmZpZ3VyYXRpb25FcnJvciB9IGZyb20gJy4uL2Vycm9yL0NsaWVudENvbmZpZ3VyYXRpb25FcnJvci5tanMnO1xuaW1wb3J0IHsgQ29kZUNoYWxsZW5nZU1ldGhvZFZhbHVlcywgUHJvbXB0VmFsdWUgfSBmcm9tICcuLi91dGlscy9Db25zdGFudHMubWpzJztcbmltcG9ydCB7IHJlZGlyZWN0VXJpRW1wdHksIGludmFsaWRQcm9tcHRWYWx1ZSwgaW52YWxpZENsYWltcywgcGtjZVBhcmFtc01pc3NpbmcsIGludmFsaWRDb2RlQ2hhbGxlbmdlTWV0aG9kIH0gZnJvbSAnLi4vZXJyb3IvQ2xpZW50Q29uZmlndXJhdGlvbkVycm9yQ29kZXMubWpzJztcblxuLypcbiAqIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLiBBbGwgcmlnaHRzIHJlc2VydmVkLlxuICogTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBMaWNlbnNlLlxuICovXG4vKipcbiAqIFZhbGlkYXRlcyBzZXJ2ZXIgY29uc3VtYWJsZSBwYXJhbXMgZnJvbSB0aGUgXCJyZXF1ZXN0XCIgb2JqZWN0c1xuICovXG5jbGFzcyBSZXF1ZXN0VmFsaWRhdG9yIHtcbiAgICAvKipcbiAgICAgKiBVdGlsaXR5IHRvIGNoZWNrIGlmIHRoZSBgcmVkaXJlY3RVcmlgIGluIHRoZSByZXF1ZXN0IGlzIGEgbm9uLW51bGwgdmFsdWVcbiAgICAgKiBAcGFyYW0gcmVkaXJlY3RVcmlcbiAgICAgKi9cbiAgICBzdGF0aWMgdmFsaWRhdGVSZWRpcmVjdFVyaShyZWRpcmVjdFVyaSkge1xuICAgICAgICBpZiAoIXJlZGlyZWN0VXJpKSB7XG4gICAgICAgICAgICB0aHJvdyBjcmVhdGVDbGllbnRDb25maWd1cmF0aW9uRXJyb3IocmVkaXJlY3RVcmlFbXB0eSk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgLyoqXG4gICAgICogVXRpbGl0eSB0byB2YWxpZGF0ZSBwcm9tcHQgc2VudCBieSB0aGUgdXNlciBpbiB0aGUgcmVxdWVzdFxuICAgICAqIEBwYXJhbSBwcm9tcHRcbiAgICAgKi9cbiAgICBzdGF0aWMgdmFsaWRhdGVQcm9tcHQocHJvbXB0KSB7XG4gICAgICAgIGNvbnN0IHByb21wdFZhbHVlcyA9IFtdO1xuICAgICAgICBmb3IgKGNvbnN0IHZhbHVlIGluIFByb21wdFZhbHVlKSB7XG4gICAgICAgICAgICBwcm9tcHRWYWx1ZXMucHVzaChQcm9tcHRWYWx1ZVt2YWx1ZV0pO1xuICAgICAgICB9XG4gICAgICAgIGlmIChwcm9tcHRWYWx1ZXMuaW5kZXhPZihwcm9tcHQpIDwgMCkge1xuICAgICAgICAgICAgdGhyb3cgY3JlYXRlQ2xpZW50Q29uZmlndXJhdGlvbkVycm9yKGludmFsaWRQcm9tcHRWYWx1ZSk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgc3RhdGljIHZhbGlkYXRlQ2xhaW1zKGNsYWltcykge1xuICAgICAgICB0cnkge1xuICAgICAgICAgICAgSlNPTi5wYXJzZShjbGFpbXMpO1xuICAgICAgICB9XG4gICAgICAgIGNhdGNoIChlKSB7XG4gICAgICAgICAgICB0aHJvdyBjcmVhdGVDbGllbnRDb25maWd1cmF0aW9uRXJyb3IoaW52YWxpZENsYWltcyk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgLyoqXG4gICAgICogVXRpbGl0eSB0byB2YWxpZGF0ZSBjb2RlX2NoYWxsZW5nZSBhbmQgY29kZV9jaGFsbGVuZ2VfbWV0aG9kXG4gICAgICogQHBhcmFtIGNvZGVDaGFsbGVuZ2VcbiAgICAgKiBAcGFyYW0gY29kZUNoYWxsZW5nZU1ldGhvZFxuICAgICAqL1xuICAgIHN0YXRpYyB2YWxpZGF0ZUNvZGVDaGFsbGVuZ2VQYXJhbXMoY29kZUNoYWxsZW5nZSwgY29kZUNoYWxsZW5nZU1ldGhvZCkge1xuICAgICAgICBpZiAoIWNvZGVDaGFsbGVuZ2UgfHwgIWNvZGVDaGFsbGVuZ2VNZXRob2QpIHtcbiAgICAgICAgICAgIHRocm93IGNyZWF0ZUNsaWVudENvbmZpZ3VyYXRpb25FcnJvcihwa2NlUGFyYW1zTWlzc2luZyk7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICB0aGlzLnZhbGlkYXRlQ29kZUNoYWxsZW5nZU1ldGhvZChjb2RlQ2hhbGxlbmdlTWV0aG9kKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICAvKipcbiAgICAgKiBVdGlsaXR5IHRvIHZhbGlkYXRlIGNvZGVfY2hhbGxlbmdlX21ldGhvZFxuICAgICAqIEBwYXJhbSBjb2RlQ2hhbGxlbmdlTWV0aG9kXG4gICAgICovXG4gICAgc3RhdGljIHZhbGlkYXRlQ29kZUNoYWxsZW5nZU1ldGhvZChjb2RlQ2hhbGxlbmdlTWV0aG9kKSB7XG4gICAgICAgIGlmIChbXG4gICAgICAgICAgICBDb2RlQ2hhbGxlbmdlTWV0aG9kVmFsdWVzLlBMQUlOLFxuICAgICAgICAgICAgQ29kZUNoYWxsZW5nZU1ldGhvZFZhbHVlcy5TMjU2LFxuICAgICAgICBdLmluZGV4T2YoY29kZUNoYWxsZW5nZU1ldGhvZCkgPCAwKSB7XG4gICAgICAgICAgICB0aHJvdyBjcmVhdGVDbGllbnRDb25maWd1cmF0aW9uRXJyb3IoaW52YWxpZENvZGVDaGFsbGVuZ2VNZXRob2QpO1xuICAgICAgICB9XG4gICAgfVxufVxuXG5leHBvcnQgeyBSZXF1ZXN0VmFsaWRhdG9yIH07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1SZXF1ZXN0VmFsaWRhdG9yLm1qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/msal-common/dist/request/RequestValidator.mjs\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/msal-common/dist/request/ScopeSet.mjs":
/*!*******************************************************************!*\
  !*** ./node_modules/@azure/msal-common/dist/request/ScopeSet.mjs ***!
  \*******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ScopeSet: () => (/* binding */ ScopeSet)\n/* harmony export */ });\n/* harmony import */ var _error_ClientConfigurationError_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../error/ClientConfigurationError.mjs */ \"(rsc)/./node_modules/@azure/msal-common/dist/error/ClientConfigurationError.mjs\");\n/* harmony import */ var _utils_StringUtils_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/StringUtils.mjs */ \"(rsc)/./node_modules/@azure/msal-common/dist/utils/StringUtils.mjs\");\n/* harmony import */ var _error_ClientAuthError_mjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../error/ClientAuthError.mjs */ \"(rsc)/./node_modules/@azure/msal-common/dist/error/ClientAuthError.mjs\");\n/* harmony import */ var _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/Constants.mjs */ \"(rsc)/./node_modules/@azure/msal-common/dist/utils/Constants.mjs\");\n/* harmony import */ var _error_ClientConfigurationErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../error/ClientConfigurationErrorCodes.mjs */ \"(rsc)/./node_modules/@azure/msal-common/dist/error/ClientConfigurationErrorCodes.mjs\");\n/* harmony import */ var _error_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../error/ClientAuthErrorCodes.mjs */ \"(rsc)/./node_modules/@azure/msal-common/dist/error/ClientAuthErrorCodes.mjs\");\n/*! @azure/msal-common v14.14.0 2024-07-23 */\n\n\n\n\n\n\n\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n/**\n * The ScopeSet class creates a set of scopes. Scopes are case-insensitive, unique values, so the Set object in JS makes\n * the most sense to implement for this class. All scopes are trimmed and converted to lower case strings in intersection and union functions\n * to ensure uniqueness of strings.\n */\nclass ScopeSet {\n    constructor(inputScopes) {\n        // Filter empty string and null/undefined array items\n        const scopeArr = inputScopes\n            ? _utils_StringUtils_mjs__WEBPACK_IMPORTED_MODULE_0__.StringUtils.trimArrayEntries([...inputScopes])\n            : [];\n        const filteredInput = scopeArr\n            ? _utils_StringUtils_mjs__WEBPACK_IMPORTED_MODULE_0__.StringUtils.removeEmptyStringsFromArray(scopeArr)\n            : [];\n        // Validate and filter scopes (validate function throws if validation fails)\n        this.validateInputScopes(filteredInput);\n        this.scopes = new Set(); // Iterator in constructor not supported by IE11\n        filteredInput.forEach((scope) => this.scopes.add(scope));\n    }\n    /**\n     * Factory method to create ScopeSet from space-delimited string\n     * @param inputScopeString\n     * @param appClientId\n     * @param scopesRequired\n     */\n    static fromString(inputScopeString) {\n        const scopeString = inputScopeString || _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_1__.Constants.EMPTY_STRING;\n        const inputScopes = scopeString.split(\" \");\n        return new ScopeSet(inputScopes);\n    }\n    /**\n     * Creates the set of scopes to search for in cache lookups\n     * @param inputScopeString\n     * @returns\n     */\n    static createSearchScopes(inputScopeString) {\n        const scopeSet = new ScopeSet(inputScopeString);\n        if (!scopeSet.containsOnlyOIDCScopes()) {\n            scopeSet.removeOIDCScopes();\n        }\n        else {\n            scopeSet.removeScope(_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_1__.Constants.OFFLINE_ACCESS_SCOPE);\n        }\n        return scopeSet;\n    }\n    /**\n     * Used to validate the scopes input parameter requested  by the developer.\n     * @param {Array<string>} inputScopes - Developer requested permissions. Not all scopes are guaranteed to be included in the access token returned.\n     * @param {boolean} scopesRequired - Boolean indicating whether the scopes array is required or not\n     */\n    validateInputScopes(inputScopes) {\n        // Check if scopes are required but not given or is an empty array\n        if (!inputScopes || inputScopes.length < 1) {\n            throw (0,_error_ClientConfigurationError_mjs__WEBPACK_IMPORTED_MODULE_2__.createClientConfigurationError)(_error_ClientConfigurationErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_3__.emptyInputScopesError);\n        }\n    }\n    /**\n     * Check if a given scope is present in this set of scopes.\n     * @param scope\n     */\n    containsScope(scope) {\n        const lowerCaseScopes = this.printScopesLowerCase().split(\" \");\n        const lowerCaseScopesSet = new ScopeSet(lowerCaseScopes);\n        // compare lowercase scopes\n        return scope\n            ? lowerCaseScopesSet.scopes.has(scope.toLowerCase())\n            : false;\n    }\n    /**\n     * Check if a set of scopes is present in this set of scopes.\n     * @param scopeSet\n     */\n    containsScopeSet(scopeSet) {\n        if (!scopeSet || scopeSet.scopes.size <= 0) {\n            return false;\n        }\n        return (this.scopes.size >= scopeSet.scopes.size &&\n            scopeSet.asArray().every((scope) => this.containsScope(scope)));\n    }\n    /**\n     * Check if set of scopes contains only the defaults\n     */\n    containsOnlyOIDCScopes() {\n        let defaultScopeCount = 0;\n        _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_1__.OIDC_SCOPES.forEach((defaultScope) => {\n            if (this.containsScope(defaultScope)) {\n                defaultScopeCount += 1;\n            }\n        });\n        return this.scopes.size === defaultScopeCount;\n    }\n    /**\n     * Appends single scope if passed\n     * @param newScope\n     */\n    appendScope(newScope) {\n        if (newScope) {\n            this.scopes.add(newScope.trim());\n        }\n    }\n    /**\n     * Appends multiple scopes if passed\n     * @param newScopes\n     */\n    appendScopes(newScopes) {\n        try {\n            newScopes.forEach((newScope) => this.appendScope(newScope));\n        }\n        catch (e) {\n            throw (0,_error_ClientAuthError_mjs__WEBPACK_IMPORTED_MODULE_4__.createClientAuthError)(_error_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_5__.cannotAppendScopeSet);\n        }\n    }\n    /**\n     * Removes element from set of scopes.\n     * @param scope\n     */\n    removeScope(scope) {\n        if (!scope) {\n            throw (0,_error_ClientAuthError_mjs__WEBPACK_IMPORTED_MODULE_4__.createClientAuthError)(_error_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_5__.cannotRemoveEmptyScope);\n        }\n        this.scopes.delete(scope.trim());\n    }\n    /**\n     * Removes default scopes from set of scopes\n     * Primarily used to prevent cache misses if the default scopes are not returned from the server\n     */\n    removeOIDCScopes() {\n        _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_1__.OIDC_SCOPES.forEach((defaultScope) => {\n            this.scopes.delete(defaultScope);\n        });\n    }\n    /**\n     * Combines an array of scopes with the current set of scopes.\n     * @param otherScopes\n     */\n    unionScopeSets(otherScopes) {\n        if (!otherScopes) {\n            throw (0,_error_ClientAuthError_mjs__WEBPACK_IMPORTED_MODULE_4__.createClientAuthError)(_error_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_5__.emptyInputScopeSet);\n        }\n        const unionScopes = new Set(); // Iterator in constructor not supported in IE11\n        otherScopes.scopes.forEach((scope) => unionScopes.add(scope.toLowerCase()));\n        this.scopes.forEach((scope) => unionScopes.add(scope.toLowerCase()));\n        return unionScopes;\n    }\n    /**\n     * Check if scopes intersect between this set and another.\n     * @param otherScopes\n     */\n    intersectingScopeSets(otherScopes) {\n        if (!otherScopes) {\n            throw (0,_error_ClientAuthError_mjs__WEBPACK_IMPORTED_MODULE_4__.createClientAuthError)(_error_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_5__.emptyInputScopeSet);\n        }\n        // Do not allow OIDC scopes to be the only intersecting scopes\n        if (!otherScopes.containsOnlyOIDCScopes()) {\n            otherScopes.removeOIDCScopes();\n        }\n        const unionScopes = this.unionScopeSets(otherScopes);\n        const sizeOtherScopes = otherScopes.getScopeCount();\n        const sizeThisScopes = this.getScopeCount();\n        const sizeUnionScopes = unionScopes.size;\n        return sizeUnionScopes < sizeThisScopes + sizeOtherScopes;\n    }\n    /**\n     * Returns size of set of scopes.\n     */\n    getScopeCount() {\n        return this.scopes.size;\n    }\n    /**\n     * Returns the scopes as an array of string values\n     */\n    asArray() {\n        const array = [];\n        this.scopes.forEach((val) => array.push(val));\n        return array;\n    }\n    /**\n     * Prints scopes into a space-delimited string\n     */\n    printScopes() {\n        if (this.scopes) {\n            const scopeArr = this.asArray();\n            return scopeArr.join(\" \");\n        }\n        return _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_1__.Constants.EMPTY_STRING;\n    }\n    /**\n     * Prints scopes into a space-delimited lower-case string (used for caching)\n     */\n    printScopesLowerCase() {\n        return this.printScopes().toLowerCase();\n    }\n}\n\n\n//# sourceMappingURL=ScopeSet.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/msal-common/dist/request/ScopeSet.mjs\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/msal-common/dist/response/ResponseHandler.mjs":
/*!***************************************************************************!*\
  !*** ./node_modules/@azure/msal-common/dist/response/ResponseHandler.mjs ***!
  \***************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ResponseHandler: () => (/* binding */ ResponseHandler),\n/* harmony export */   buildAccountToCache: () => (/* binding */ buildAccountToCache)\n/* harmony export */ });\n/* harmony import */ var _error_ClientAuthError_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../error/ClientAuthError.mjs */ \"(rsc)/./node_modules/@azure/msal-common/dist/error/ClientAuthError.mjs\");\n/* harmony import */ var _error_ServerError_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../error/ServerError.mjs */ \"(rsc)/./node_modules/@azure/msal-common/dist/error/ServerError.mjs\");\n/* harmony import */ var _request_ScopeSet_mjs__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../request/ScopeSet.mjs */ \"(rsc)/./node_modules/@azure/msal-common/dist/request/ScopeSet.mjs\");\n/* harmony import */ var _cache_entities_AccountEntity_mjs__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../cache/entities/AccountEntity.mjs */ \"(rsc)/./node_modules/@azure/msal-common/dist/cache/entities/AccountEntity.mjs\");\n/* harmony import */ var _error_InteractionRequiredAuthError_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../error/InteractionRequiredAuthError.mjs */ \"(rsc)/./node_modules/@azure/msal-common/dist/error/InteractionRequiredAuthError.mjs\");\n/* harmony import */ var _utils_ProtocolUtils_mjs__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../utils/ProtocolUtils.mjs */ \"(rsc)/./node_modules/@azure/msal-common/dist/utils/ProtocolUtils.mjs\");\n/* harmony import */ var _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../utils/Constants.mjs */ \"(rsc)/./node_modules/@azure/msal-common/dist/utils/Constants.mjs\");\n/* harmony import */ var _crypto_PopTokenGenerator_mjs__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../crypto/PopTokenGenerator.mjs */ \"(rsc)/./node_modules/@azure/msal-common/dist/crypto/PopTokenGenerator.mjs\");\n/* harmony import */ var _cache_persistence_TokenCacheContext_mjs__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../cache/persistence/TokenCacheContext.mjs */ \"(rsc)/./node_modules/@azure/msal-common/dist/cache/persistence/TokenCacheContext.mjs\");\n/* harmony import */ var _telemetry_performance_PerformanceEvent_mjs__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../telemetry/performance/PerformanceEvent.mjs */ \"(rsc)/./node_modules/@azure/msal-common/dist/telemetry/performance/PerformanceEvent.mjs\");\n/* harmony import */ var _account_AuthToken_mjs__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../account/AuthToken.mjs */ \"(rsc)/./node_modules/@azure/msal-common/dist/account/AuthToken.mjs\");\n/* harmony import */ var _account_TokenClaims_mjs__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../account/TokenClaims.mjs */ \"(rsc)/./node_modules/@azure/msal-common/dist/account/TokenClaims.mjs\");\n/* harmony import */ var _account_AccountInfo_mjs__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ../account/AccountInfo.mjs */ \"(rsc)/./node_modules/@azure/msal-common/dist/account/AccountInfo.mjs\");\n/* harmony import */ var _cache_utils_CacheHelpers_mjs__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../cache/utils/CacheHelpers.mjs */ \"(rsc)/./node_modules/@azure/msal-common/dist/cache/utils/CacheHelpers.mjs\");\n/* harmony import */ var _error_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../error/ClientAuthErrorCodes.mjs */ \"(rsc)/./node_modules/@azure/msal-common/dist/error/ClientAuthErrorCodes.mjs\");\n/*! @azure/msal-common v14.14.0 2024-07-23 */\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\nfunction parseServerErrorNo(serverResponse) {\n    const errorCodePrefix = \"code=\";\n    const errorCodePrefixIndex = serverResponse.error_uri?.lastIndexOf(errorCodePrefix);\n    return errorCodePrefixIndex && errorCodePrefixIndex >= 0\n        ? serverResponse.error_uri?.substring(errorCodePrefixIndex + errorCodePrefix.length)\n        : undefined;\n}\n/**\n * Class that handles response parsing.\n * @internal\n */\nclass ResponseHandler {\n    constructor(clientId, cacheStorage, cryptoObj, logger, serializableCache, persistencePlugin, performanceClient) {\n        this.clientId = clientId;\n        this.cacheStorage = cacheStorage;\n        this.cryptoObj = cryptoObj;\n        this.logger = logger;\n        this.serializableCache = serializableCache;\n        this.persistencePlugin = persistencePlugin;\n        this.performanceClient = performanceClient;\n    }\n    /**\n     * Function which validates server authorization code response.\n     * @param serverResponseHash\n     * @param requestState\n     * @param cryptoObj\n     */\n    validateServerAuthorizationCodeResponse(serverResponse, requestState) {\n        if (!serverResponse.state || !requestState) {\n            throw serverResponse.state\n                ? (0,_error_ClientAuthError_mjs__WEBPACK_IMPORTED_MODULE_0__.createClientAuthError)(_error_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_1__.stateNotFound, \"Cached State\")\n                : (0,_error_ClientAuthError_mjs__WEBPACK_IMPORTED_MODULE_0__.createClientAuthError)(_error_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_1__.stateNotFound, \"Server State\");\n        }\n        let decodedServerResponseState;\n        let decodedRequestState;\n        try {\n            decodedServerResponseState = decodeURIComponent(serverResponse.state);\n        }\n        catch (e) {\n            throw (0,_error_ClientAuthError_mjs__WEBPACK_IMPORTED_MODULE_0__.createClientAuthError)(_error_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_1__.invalidState, serverResponse.state);\n        }\n        try {\n            decodedRequestState = decodeURIComponent(requestState);\n        }\n        catch (e) {\n            throw (0,_error_ClientAuthError_mjs__WEBPACK_IMPORTED_MODULE_0__.createClientAuthError)(_error_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_1__.invalidState, serverResponse.state);\n        }\n        if (decodedServerResponseState !== decodedRequestState) {\n            throw (0,_error_ClientAuthError_mjs__WEBPACK_IMPORTED_MODULE_0__.createClientAuthError)(_error_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_1__.stateMismatch);\n        }\n        // Check for error\n        if (serverResponse.error ||\n            serverResponse.error_description ||\n            serverResponse.suberror) {\n            const serverErrorNo = parseServerErrorNo(serverResponse);\n            if ((0,_error_InteractionRequiredAuthError_mjs__WEBPACK_IMPORTED_MODULE_2__.isInteractionRequiredError)(serverResponse.error, serverResponse.error_description, serverResponse.suberror)) {\n                throw new _error_InteractionRequiredAuthError_mjs__WEBPACK_IMPORTED_MODULE_2__.InteractionRequiredAuthError(serverResponse.error || \"\", serverResponse.error_description, serverResponse.suberror, serverResponse.timestamp || \"\", serverResponse.trace_id || \"\", serverResponse.correlation_id || \"\", serverResponse.claims || \"\", serverErrorNo);\n            }\n            throw new _error_ServerError_mjs__WEBPACK_IMPORTED_MODULE_3__.ServerError(serverResponse.error || \"\", serverResponse.error_description, serverResponse.suberror, serverErrorNo);\n        }\n    }\n    /**\n     * Function which validates server authorization token response.\n     * @param serverResponse\n     * @param refreshAccessToken\n     */\n    validateTokenResponse(serverResponse, refreshAccessToken) {\n        // Check for error\n        if (serverResponse.error ||\n            serverResponse.error_description ||\n            serverResponse.suberror) {\n            const errString = `Error(s): ${serverResponse.error_codes || _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_4__.Constants.NOT_AVAILABLE} - Timestamp: ${serverResponse.timestamp || _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_4__.Constants.NOT_AVAILABLE} - Description: ${serverResponse.error_description || _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_4__.Constants.NOT_AVAILABLE} - Correlation ID: ${serverResponse.correlation_id || _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_4__.Constants.NOT_AVAILABLE} - Trace ID: ${serverResponse.trace_id || _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_4__.Constants.NOT_AVAILABLE}`;\n            const serverErrorNo = serverResponse.error_codes?.length\n                ? serverResponse.error_codes[0]\n                : undefined;\n            const serverError = new _error_ServerError_mjs__WEBPACK_IMPORTED_MODULE_3__.ServerError(serverResponse.error, errString, serverResponse.suberror, serverErrorNo, serverResponse.status);\n            // check if 500 error\n            if (refreshAccessToken &&\n                serverResponse.status &&\n                serverResponse.status >= _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_4__.HttpStatus.SERVER_ERROR_RANGE_START &&\n                serverResponse.status <= _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_4__.HttpStatus.SERVER_ERROR_RANGE_END) {\n                this.logger.warning(`executeTokenRequest:validateTokenResponse - AAD is currently unavailable and the access token is unable to be refreshed.\\n${serverError}`);\n                // don't throw an exception, but alert the user via a log that the token was unable to be refreshed\n                return;\n                // check if 400 error\n            }\n            else if (refreshAccessToken &&\n                serverResponse.status &&\n                serverResponse.status >= _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_4__.HttpStatus.CLIENT_ERROR_RANGE_START &&\n                serverResponse.status <= _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_4__.HttpStatus.CLIENT_ERROR_RANGE_END) {\n                this.logger.warning(`executeTokenRequest:validateTokenResponse - AAD is currently available but is unable to refresh the access token.\\n${serverError}`);\n                // don't throw an exception, but alert the user via a log that the token was unable to be refreshed\n                return;\n            }\n            if ((0,_error_InteractionRequiredAuthError_mjs__WEBPACK_IMPORTED_MODULE_2__.isInteractionRequiredError)(serverResponse.error, serverResponse.error_description, serverResponse.suberror)) {\n                throw new _error_InteractionRequiredAuthError_mjs__WEBPACK_IMPORTED_MODULE_2__.InteractionRequiredAuthError(serverResponse.error, serverResponse.error_description, serverResponse.suberror, serverResponse.timestamp || _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_4__.Constants.EMPTY_STRING, serverResponse.trace_id || _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_4__.Constants.EMPTY_STRING, serverResponse.correlation_id || _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_4__.Constants.EMPTY_STRING, serverResponse.claims || _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_4__.Constants.EMPTY_STRING, serverErrorNo);\n            }\n            throw serverError;\n        }\n    }\n    /**\n     * Returns a constructed token response based on given string. Also manages the cache updates and cleanups.\n     * @param serverTokenResponse\n     * @param authority\n     */\n    async handleServerTokenResponse(serverTokenResponse, authority, reqTimestamp, request, authCodePayload, userAssertionHash, handlingRefreshTokenResponse, forceCacheRefreshTokenResponse, serverRequestId) {\n        this.performanceClient?.addQueueMeasurement(_telemetry_performance_PerformanceEvent_mjs__WEBPACK_IMPORTED_MODULE_5__.PerformanceEvents.HandleServerTokenResponse, serverTokenResponse.correlation_id);\n        // create an idToken object (not entity)\n        let idTokenClaims;\n        if (serverTokenResponse.id_token) {\n            idTokenClaims = (0,_account_AuthToken_mjs__WEBPACK_IMPORTED_MODULE_6__.extractTokenClaims)(serverTokenResponse.id_token || _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_4__.Constants.EMPTY_STRING, this.cryptoObj.base64Decode);\n            // token nonce check (TODO: Add a warning if no nonce is given?)\n            if (authCodePayload && authCodePayload.nonce) {\n                if (idTokenClaims.nonce !== authCodePayload.nonce) {\n                    throw (0,_error_ClientAuthError_mjs__WEBPACK_IMPORTED_MODULE_0__.createClientAuthError)(_error_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_1__.nonceMismatch);\n                }\n            }\n            // token max_age check\n            if (request.maxAge || request.maxAge === 0) {\n                const authTime = idTokenClaims.auth_time;\n                if (!authTime) {\n                    throw (0,_error_ClientAuthError_mjs__WEBPACK_IMPORTED_MODULE_0__.createClientAuthError)(_error_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_1__.authTimeNotFound);\n                }\n                (0,_account_AuthToken_mjs__WEBPACK_IMPORTED_MODULE_6__.checkMaxAge)(authTime, request.maxAge);\n            }\n        }\n        // generate homeAccountId\n        this.homeAccountIdentifier = _cache_entities_AccountEntity_mjs__WEBPACK_IMPORTED_MODULE_7__.AccountEntity.generateHomeAccountId(serverTokenResponse.client_info || _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_4__.Constants.EMPTY_STRING, authority.authorityType, this.logger, this.cryptoObj, idTokenClaims);\n        // save the response tokens\n        let requestStateObj;\n        if (!!authCodePayload && !!authCodePayload.state) {\n            requestStateObj = _utils_ProtocolUtils_mjs__WEBPACK_IMPORTED_MODULE_8__.ProtocolUtils.parseRequestState(this.cryptoObj, authCodePayload.state);\n        }\n        // Add keyId from request to serverTokenResponse if defined\n        serverTokenResponse.key_id =\n            serverTokenResponse.key_id || request.sshKid || undefined;\n        const cacheRecord = this.generateCacheRecord(serverTokenResponse, authority, reqTimestamp, request, idTokenClaims, userAssertionHash, authCodePayload);\n        let cacheContext;\n        try {\n            if (this.persistencePlugin && this.serializableCache) {\n                this.logger.verbose(\"Persistence enabled, calling beforeCacheAccess\");\n                cacheContext = new _cache_persistence_TokenCacheContext_mjs__WEBPACK_IMPORTED_MODULE_9__.TokenCacheContext(this.serializableCache, true);\n                await this.persistencePlugin.beforeCacheAccess(cacheContext);\n            }\n            /*\n             * When saving a refreshed tokens to the cache, it is expected that the account that was used is present in the cache.\n             * If not present, we should return null, as it's the case that another application called removeAccount in between\n             * the calls to getAllAccounts and acquireTokenSilent. We should not overwrite that removal, unless explicitly flagged by\n             * the developer, as in the case of refresh token flow used in ADAL Node to MSAL Node migration.\n             */\n            if (handlingRefreshTokenResponse &&\n                !forceCacheRefreshTokenResponse &&\n                cacheRecord.account) {\n                const key = cacheRecord.account.generateAccountKey();\n                const account = this.cacheStorage.getAccount(key, this.logger);\n                if (!account) {\n                    this.logger.warning(\"Account used to refresh tokens not in persistence, refreshed tokens will not be stored in the cache\");\n                    return await ResponseHandler.generateAuthenticationResult(this.cryptoObj, authority, cacheRecord, false, request, idTokenClaims, requestStateObj, undefined, serverRequestId);\n                }\n            }\n            await this.cacheStorage.saveCacheRecord(cacheRecord, request.storeInCache, request.correlationId);\n        }\n        finally {\n            if (this.persistencePlugin &&\n                this.serializableCache &&\n                cacheContext) {\n                this.logger.verbose(\"Persistence enabled, calling afterCacheAccess\");\n                await this.persistencePlugin.afterCacheAccess(cacheContext);\n            }\n        }\n        return ResponseHandler.generateAuthenticationResult(this.cryptoObj, authority, cacheRecord, false, request, idTokenClaims, requestStateObj, serverTokenResponse, serverRequestId);\n    }\n    /**\n     * Generates CacheRecord\n     * @param serverTokenResponse\n     * @param idTokenObj\n     * @param authority\n     */\n    generateCacheRecord(serverTokenResponse, authority, reqTimestamp, request, idTokenClaims, userAssertionHash, authCodePayload) {\n        const env = authority.getPreferredCache();\n        if (!env) {\n            throw (0,_error_ClientAuthError_mjs__WEBPACK_IMPORTED_MODULE_0__.createClientAuthError)(_error_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_1__.invalidCacheEnvironment);\n        }\n        const claimsTenantId = (0,_account_TokenClaims_mjs__WEBPACK_IMPORTED_MODULE_10__.getTenantIdFromIdTokenClaims)(idTokenClaims);\n        // IdToken: non AAD scenarios can have empty realm\n        let cachedIdToken;\n        let cachedAccount;\n        if (serverTokenResponse.id_token && !!idTokenClaims) {\n            cachedIdToken = (0,_cache_utils_CacheHelpers_mjs__WEBPACK_IMPORTED_MODULE_11__.createIdTokenEntity)(this.homeAccountIdentifier, env, serverTokenResponse.id_token, this.clientId, claimsTenantId || \"\");\n            cachedAccount = buildAccountToCache(this.cacheStorage, authority, this.homeAccountIdentifier, this.cryptoObj.base64Decode, idTokenClaims, serverTokenResponse.client_info, env, claimsTenantId, authCodePayload, undefined, // nativeAccountId\n            this.logger);\n        }\n        // AccessToken\n        let cachedAccessToken = null;\n        if (serverTokenResponse.access_token) {\n            // If scopes not returned in server response, use request scopes\n            const responseScopes = serverTokenResponse.scope\n                ? _request_ScopeSet_mjs__WEBPACK_IMPORTED_MODULE_12__.ScopeSet.fromString(serverTokenResponse.scope)\n                : new _request_ScopeSet_mjs__WEBPACK_IMPORTED_MODULE_12__.ScopeSet(request.scopes || []);\n            /*\n             * Use timestamp calculated before request\n             * Server may return timestamps as strings, parse to numbers if so.\n             */\n            const expiresIn = (typeof serverTokenResponse.expires_in === \"string\"\n                ? parseInt(serverTokenResponse.expires_in, 10)\n                : serverTokenResponse.expires_in) || 0;\n            const extExpiresIn = (typeof serverTokenResponse.ext_expires_in === \"string\"\n                ? parseInt(serverTokenResponse.ext_expires_in, 10)\n                : serverTokenResponse.ext_expires_in) || 0;\n            const refreshIn = (typeof serverTokenResponse.refresh_in === \"string\"\n                ? parseInt(serverTokenResponse.refresh_in, 10)\n                : serverTokenResponse.refresh_in) || undefined;\n            const tokenExpirationSeconds = reqTimestamp + expiresIn;\n            const extendedTokenExpirationSeconds = tokenExpirationSeconds + extExpiresIn;\n            const refreshOnSeconds = refreshIn && refreshIn > 0\n                ? reqTimestamp + refreshIn\n                : undefined;\n            // non AAD scenarios can have empty realm\n            cachedAccessToken = (0,_cache_utils_CacheHelpers_mjs__WEBPACK_IMPORTED_MODULE_11__.createAccessTokenEntity)(this.homeAccountIdentifier, env, serverTokenResponse.access_token, this.clientId, claimsTenantId || authority.tenant || \"\", responseScopes.printScopes(), tokenExpirationSeconds, extendedTokenExpirationSeconds, this.cryptoObj.base64Decode, refreshOnSeconds, serverTokenResponse.token_type, userAssertionHash, serverTokenResponse.key_id, request.claims, request.requestedClaimsHash);\n        }\n        // refreshToken\n        let cachedRefreshToken = null;\n        if (serverTokenResponse.refresh_token) {\n            let rtExpiresOn;\n            if (serverTokenResponse.refresh_token_expires_in) {\n                const rtExpiresIn = typeof serverTokenResponse.refresh_token_expires_in ===\n                    \"string\"\n                    ? parseInt(serverTokenResponse.refresh_token_expires_in, 10)\n                    : serverTokenResponse.refresh_token_expires_in;\n                rtExpiresOn = reqTimestamp + rtExpiresIn;\n            }\n            cachedRefreshToken = (0,_cache_utils_CacheHelpers_mjs__WEBPACK_IMPORTED_MODULE_11__.createRefreshTokenEntity)(this.homeAccountIdentifier, env, serverTokenResponse.refresh_token, this.clientId, serverTokenResponse.foci, userAssertionHash, rtExpiresOn);\n        }\n        // appMetadata\n        let cachedAppMetadata = null;\n        if (serverTokenResponse.foci) {\n            cachedAppMetadata = {\n                clientId: this.clientId,\n                environment: env,\n                familyId: serverTokenResponse.foci,\n            };\n        }\n        return {\n            account: cachedAccount,\n            idToken: cachedIdToken,\n            accessToken: cachedAccessToken,\n            refreshToken: cachedRefreshToken,\n            appMetadata: cachedAppMetadata,\n        };\n    }\n    /**\n     * Creates an @AuthenticationResult from @CacheRecord , @IdToken , and a boolean that states whether or not the result is from cache.\n     *\n     * Optionally takes a state string that is set as-is in the response.\n     *\n     * @param cacheRecord\n     * @param idTokenObj\n     * @param fromTokenCache\n     * @param stateString\n     */\n    static async generateAuthenticationResult(cryptoObj, authority, cacheRecord, fromTokenCache, request, idTokenClaims, requestState, serverTokenResponse, requestId) {\n        let accessToken = _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_4__.Constants.EMPTY_STRING;\n        let responseScopes = [];\n        let expiresOn = null;\n        let extExpiresOn;\n        let refreshOn;\n        let familyId = _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_4__.Constants.EMPTY_STRING;\n        if (cacheRecord.accessToken) {\n            /*\n             * if the request object has `popKid` property, `signPopToken` will be set to false and\n             * the token will be returned unsigned\n             */\n            if (cacheRecord.accessToken.tokenType ===\n                _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_4__.AuthenticationScheme.POP &&\n                !request.popKid) {\n                const popTokenGenerator = new _crypto_PopTokenGenerator_mjs__WEBPACK_IMPORTED_MODULE_13__.PopTokenGenerator(cryptoObj);\n                const { secret, keyId } = cacheRecord.accessToken;\n                if (!keyId) {\n                    throw (0,_error_ClientAuthError_mjs__WEBPACK_IMPORTED_MODULE_0__.createClientAuthError)(_error_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_1__.keyIdMissing);\n                }\n                accessToken = await popTokenGenerator.signPopToken(secret, keyId, request);\n            }\n            else {\n                accessToken = cacheRecord.accessToken.secret;\n            }\n            responseScopes = _request_ScopeSet_mjs__WEBPACK_IMPORTED_MODULE_12__.ScopeSet.fromString(cacheRecord.accessToken.target).asArray();\n            expiresOn = new Date(Number(cacheRecord.accessToken.expiresOn) * 1000);\n            extExpiresOn = new Date(Number(cacheRecord.accessToken.extendedExpiresOn) * 1000);\n            if (cacheRecord.accessToken.refreshOn) {\n                refreshOn = new Date(Number(cacheRecord.accessToken.refreshOn) * 1000);\n            }\n        }\n        if (cacheRecord.appMetadata) {\n            familyId =\n                cacheRecord.appMetadata.familyId === _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_4__.THE_FAMILY_ID\n                    ? _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_4__.THE_FAMILY_ID\n                    : \"\";\n        }\n        const uid = idTokenClaims?.oid || idTokenClaims?.sub || \"\";\n        const tid = idTokenClaims?.tid || \"\";\n        // for hybrid + native bridge enablement, send back the native account Id\n        if (serverTokenResponse?.spa_accountid && !!cacheRecord.account) {\n            cacheRecord.account.nativeAccountId =\n                serverTokenResponse?.spa_accountid;\n        }\n        const accountInfo = cacheRecord.account\n            ? (0,_account_AccountInfo_mjs__WEBPACK_IMPORTED_MODULE_14__.updateAccountTenantProfileData)(cacheRecord.account.getAccountInfo(), undefined, // tenantProfile optional\n            idTokenClaims, cacheRecord.idToken?.secret)\n            : null;\n        return {\n            authority: authority.canonicalAuthority,\n            uniqueId: uid,\n            tenantId: tid,\n            scopes: responseScopes,\n            account: accountInfo,\n            idToken: cacheRecord?.idToken?.secret || \"\",\n            idTokenClaims: idTokenClaims || {},\n            accessToken: accessToken,\n            fromCache: fromTokenCache,\n            expiresOn: expiresOn,\n            extExpiresOn: extExpiresOn,\n            refreshOn: refreshOn,\n            correlationId: request.correlationId,\n            requestId: requestId || _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_4__.Constants.EMPTY_STRING,\n            familyId: familyId,\n            tokenType: cacheRecord.accessToken?.tokenType || _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_4__.Constants.EMPTY_STRING,\n            state: requestState\n                ? requestState.userRequestState\n                : _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_4__.Constants.EMPTY_STRING,\n            cloudGraphHostName: cacheRecord.account?.cloudGraphHostName ||\n                _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_4__.Constants.EMPTY_STRING,\n            msGraphHost: cacheRecord.account?.msGraphHost || _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_4__.Constants.EMPTY_STRING,\n            code: serverTokenResponse?.spa_code,\n            fromNativeBroker: false,\n        };\n    }\n}\nfunction buildAccountToCache(cacheStorage, authority, homeAccountId, base64Decode, idTokenClaims, clientInfo, environment, claimsTenantId, authCodePayload, nativeAccountId, logger) {\n    logger?.verbose(\"setCachedAccount called\");\n    // Check if base account is already cached\n    const accountKeys = cacheStorage.getAccountKeys();\n    const baseAccountKey = accountKeys.find((accountKey) => {\n        return accountKey.startsWith(homeAccountId);\n    });\n    let cachedAccount = null;\n    if (baseAccountKey) {\n        cachedAccount = cacheStorage.getAccount(baseAccountKey, logger);\n    }\n    const baseAccount = cachedAccount ||\n        _cache_entities_AccountEntity_mjs__WEBPACK_IMPORTED_MODULE_7__.AccountEntity.createAccount({\n            homeAccountId,\n            idTokenClaims,\n            clientInfo,\n            environment,\n            cloudGraphHostName: authCodePayload?.cloud_graph_host_name,\n            msGraphHost: authCodePayload?.msgraph_host,\n            nativeAccountId: nativeAccountId,\n        }, authority, base64Decode);\n    const tenantProfiles = baseAccount.tenantProfiles || [];\n    const tenantId = claimsTenantId || baseAccount.realm;\n    if (tenantId &&\n        !tenantProfiles.find((tenantProfile) => {\n            return tenantProfile.tenantId === tenantId;\n        })) {\n        const newTenantProfile = (0,_account_AccountInfo_mjs__WEBPACK_IMPORTED_MODULE_14__.buildTenantProfile)(homeAccountId, baseAccount.localAccountId, tenantId, idTokenClaims);\n        tenantProfiles.push(newTenantProfile);\n    }\n    baseAccount.tenantProfiles = tenantProfiles;\n    return baseAccount;\n}\n\n\n//# sourceMappingURL=ResponseHandler.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/msal-common/dist/response/ResponseHandler.mjs\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/msal-common/dist/telemetry/performance/PerformanceEvent.mjs":
/*!*****************************************************************************************!*\
  !*** ./node_modules/@azure/msal-common/dist/telemetry/performance/PerformanceEvent.mjs ***!
  \*****************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   IntFields: () => (/* binding */ IntFields),\n/* harmony export */   PerformanceEventAbbreviations: () => (/* binding */ PerformanceEventAbbreviations),\n/* harmony export */   PerformanceEventStatus: () => (/* binding */ PerformanceEventStatus),\n/* harmony export */   PerformanceEvents: () => (/* binding */ PerformanceEvents)\n/* harmony export */ });\n/*! @azure/msal-common v14.14.0 2024-07-23 */\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n/**\n * Enumeration of operations that are instrumented by have their performance measured by the PerformanceClient.\n *\n * @export\n * @enum {number}\n */\nconst PerformanceEvents = {\n    /**\n     * acquireTokenByCode API (msal-browser and msal-node).\n     * Used to acquire tokens by trading an authorization code against the token endpoint.\n     */\n    AcquireTokenByCode: \"acquireTokenByCode\",\n    /**\n     * acquireTokenByRefreshToken API (msal-browser and msal-node).\n     * Used to renew an access token using a refresh token against the token endpoint.\n     */\n    AcquireTokenByRefreshToken: \"acquireTokenByRefreshToken\",\n    /**\n     * acquireTokenSilent API (msal-browser and msal-node).\n     * Used to silently acquire a new access token (from the cache or the network).\n     */\n    AcquireTokenSilent: \"acquireTokenSilent\",\n    /**\n     * acquireTokenSilentAsync (msal-browser).\n     * Internal API for acquireTokenSilent.\n     */\n    AcquireTokenSilentAsync: \"acquireTokenSilentAsync\",\n    /**\n     * acquireTokenPopup (msal-browser).\n     * Used to acquire a new access token interactively through pop ups\n     */\n    AcquireTokenPopup: \"acquireTokenPopup\",\n    /**\n     * acquireTokenPreRedirect (msal-browser).\n     * First part of the redirect flow.\n     * Used to acquire a new access token interactively through redirects.\n     */\n    AcquireTokenPreRedirect: \"acquireTokenPreRedirect\",\n    /**\n     * acquireTokenRedirect (msal-browser).\n     * Second part of the redirect flow.\n     * Used to acquire a new access token interactively through redirects.\n     */\n    AcquireTokenRedirect: \"acquireTokenRedirect\",\n    /**\n     * getPublicKeyThumbprint API in CryptoOpts class (msal-browser).\n     * Used to generate a public/private keypair and generate a public key thumbprint for pop requests.\n     */\n    CryptoOptsGetPublicKeyThumbprint: \"cryptoOptsGetPublicKeyThumbprint\",\n    /**\n     * signJwt API in CryptoOpts class (msal-browser).\n     * Used to signed a pop token.\n     */\n    CryptoOptsSignJwt: \"cryptoOptsSignJwt\",\n    /**\n     * acquireToken API in the SilentCacheClient class (msal-browser).\n     * Used to read access tokens from the cache.\n     */\n    SilentCacheClientAcquireToken: \"silentCacheClientAcquireToken\",\n    /**\n     * acquireToken API in the SilentIframeClient class (msal-browser).\n     * Used to acquire a new set of tokens from the authorize endpoint in a hidden iframe.\n     */\n    SilentIframeClientAcquireToken: \"silentIframeClientAcquireToken\",\n    AwaitConcurrentIframe: \"awaitConcurrentIframe\",\n    /**\n     * acquireToken API in SilentRereshClient (msal-browser).\n     * Used to acquire a new set of tokens from the token endpoint using a refresh token.\n     */\n    SilentRefreshClientAcquireToken: \"silentRefreshClientAcquireToken\",\n    /**\n     * ssoSilent API (msal-browser).\n     * Used to silently acquire an authorization code and set of tokens using a hidden iframe.\n     */\n    SsoSilent: \"ssoSilent\",\n    /**\n     * getDiscoveredAuthority API in StandardInteractionClient class (msal-browser).\n     * Used to load authority metadata for a request.\n     */\n    StandardInteractionClientGetDiscoveredAuthority: \"standardInteractionClientGetDiscoveredAuthority\",\n    /**\n     * acquireToken APIs in msal-browser.\n     * Used to make an /authorize endpoint call with native brokering enabled.\n     */\n    FetchAccountIdWithNativeBroker: \"fetchAccountIdWithNativeBroker\",\n    /**\n     * acquireToken API in NativeInteractionClient class (msal-browser).\n     * Used to acquire a token from Native component when native brokering is enabled.\n     */\n    NativeInteractionClientAcquireToken: \"nativeInteractionClientAcquireToken\",\n    /**\n     * Time spent creating default headers for requests to token endpoint\n     */\n    BaseClientCreateTokenRequestHeaders: \"baseClientCreateTokenRequestHeaders\",\n    /**\n     * Time spent sending/waiting for the response of a request to the token endpoint\n     */\n    RefreshTokenClientExecutePostToTokenEndpoint: \"refreshTokenClientExecutePostToTokenEndpoint\",\n    AuthorizationCodeClientExecutePostToTokenEndpoint: \"authorizationCodeClientExecutePostToTokenEndpoint\",\n    /**\n     * Used to measure the time taken for completing embedded-broker handshake (PW-Broker).\n     */\n    BrokerHandhshake: \"brokerHandshake\",\n    /**\n     * acquireTokenByRefreshToken API in BrokerClientApplication (PW-Broker) .\n     */\n    AcquireTokenByRefreshTokenInBroker: \"acquireTokenByRefreshTokenInBroker\",\n    /**\n     * Time taken for token acquisition by broker\n     */\n    AcquireTokenByBroker: \"acquireTokenByBroker\",\n    /**\n     * Time spent on the network for refresh token acquisition\n     */\n    RefreshTokenClientExecuteTokenRequest: \"refreshTokenClientExecuteTokenRequest\",\n    /**\n     * Time taken for acquiring refresh token , records RT size\n     */\n    RefreshTokenClientAcquireToken: \"refreshTokenClientAcquireToken\",\n    /**\n     * Time taken for acquiring cached refresh token\n     */\n    RefreshTokenClientAcquireTokenWithCachedRefreshToken: \"refreshTokenClientAcquireTokenWithCachedRefreshToken\",\n    /**\n     * acquireTokenByRefreshToken API in RefreshTokenClient (msal-common).\n     */\n    RefreshTokenClientAcquireTokenByRefreshToken: \"refreshTokenClientAcquireTokenByRefreshToken\",\n    /**\n     * Helper function to create token request body in RefreshTokenClient (msal-common).\n     */\n    RefreshTokenClientCreateTokenRequestBody: \"refreshTokenClientCreateTokenRequestBody\",\n    /**\n     * acquireTokenFromCache (msal-browser).\n     * Internal API for acquiring token from cache\n     */\n    AcquireTokenFromCache: \"acquireTokenFromCache\",\n    SilentFlowClientAcquireCachedToken: \"silentFlowClientAcquireCachedToken\",\n    SilentFlowClientGenerateResultFromCacheRecord: \"silentFlowClientGenerateResultFromCacheRecord\",\n    /**\n     * acquireTokenBySilentIframe (msal-browser).\n     * Internal API for acquiring token by silent Iframe\n     */\n    AcquireTokenBySilentIframe: \"acquireTokenBySilentIframe\",\n    /**\n     * Internal API for initializing base request in BaseInteractionClient (msal-browser)\n     */\n    InitializeBaseRequest: \"initializeBaseRequest\",\n    /**\n     * Internal API for initializing silent request in SilentCacheClient (msal-browser)\n     */\n    InitializeSilentRequest: \"initializeSilentRequest\",\n    InitializeClientApplication: \"initializeClientApplication\",\n    /**\n     * Helper function in SilentIframeClient class (msal-browser).\n     */\n    SilentIframeClientTokenHelper: \"silentIframeClientTokenHelper\",\n    /**\n     * SilentHandler\n     */\n    SilentHandlerInitiateAuthRequest: \"silentHandlerInitiateAuthRequest\",\n    SilentHandlerMonitorIframeForHash: \"silentHandlerMonitorIframeForHash\",\n    SilentHandlerLoadFrame: \"silentHandlerLoadFrame\",\n    SilentHandlerLoadFrameSync: \"silentHandlerLoadFrameSync\",\n    /**\n     * Helper functions in StandardInteractionClient class (msal-browser)\n     */\n    StandardInteractionClientCreateAuthCodeClient: \"standardInteractionClientCreateAuthCodeClient\",\n    StandardInteractionClientGetClientConfiguration: \"standardInteractionClientGetClientConfiguration\",\n    StandardInteractionClientInitializeAuthorizationRequest: \"standardInteractionClientInitializeAuthorizationRequest\",\n    StandardInteractionClientInitializeAuthorizationCodeRequest: \"standardInteractionClientInitializeAuthorizationCodeRequest\",\n    /**\n     * getAuthCodeUrl API (msal-browser and msal-node).\n     */\n    GetAuthCodeUrl: \"getAuthCodeUrl\",\n    /**\n     * Functions from InteractionHandler (msal-browser)\n     */\n    HandleCodeResponseFromServer: \"handleCodeResponseFromServer\",\n    HandleCodeResponse: \"handleCodeResponse\",\n    UpdateTokenEndpointAuthority: \"updateTokenEndpointAuthority\",\n    /**\n     * APIs in Authorization Code Client (msal-common)\n     */\n    AuthClientAcquireToken: \"authClientAcquireToken\",\n    AuthClientExecuteTokenRequest: \"authClientExecuteTokenRequest\",\n    AuthClientCreateTokenRequestBody: \"authClientCreateTokenRequestBody\",\n    AuthClientCreateQueryString: \"authClientCreateQueryString\",\n    /**\n     * Generate functions in PopTokenGenerator (msal-common)\n     */\n    PopTokenGenerateCnf: \"popTokenGenerateCnf\",\n    PopTokenGenerateKid: \"popTokenGenerateKid\",\n    /**\n     * handleServerTokenResponse API in ResponseHandler (msal-common)\n     */\n    HandleServerTokenResponse: \"handleServerTokenResponse\",\n    DeserializeResponse: \"deserializeResponse\",\n    /**\n     * Authority functions\n     */\n    AuthorityFactoryCreateDiscoveredInstance: \"authorityFactoryCreateDiscoveredInstance\",\n    AuthorityResolveEndpointsAsync: \"authorityResolveEndpointsAsync\",\n    AuthorityResolveEndpointsFromLocalSources: \"authorityResolveEndpointsFromLocalSources\",\n    AuthorityGetCloudDiscoveryMetadataFromNetwork: \"authorityGetCloudDiscoveryMetadataFromNetwork\",\n    AuthorityUpdateCloudDiscoveryMetadata: \"authorityUpdateCloudDiscoveryMetadata\",\n    AuthorityGetEndpointMetadataFromNetwork: \"authorityGetEndpointMetadataFromNetwork\",\n    AuthorityUpdateEndpointMetadata: \"authorityUpdateEndpointMetadata\",\n    AuthorityUpdateMetadataWithRegionalInformation: \"authorityUpdateMetadataWithRegionalInformation\",\n    /**\n     * Region Discovery functions\n     */\n    RegionDiscoveryDetectRegion: \"regionDiscoveryDetectRegion\",\n    RegionDiscoveryGetRegionFromIMDS: \"regionDiscoveryGetRegionFromIMDS\",\n    RegionDiscoveryGetCurrentVersion: \"regionDiscoveryGetCurrentVersion\",\n    AcquireTokenByCodeAsync: \"acquireTokenByCodeAsync\",\n    GetEndpointMetadataFromNetwork: \"getEndpointMetadataFromNetwork\",\n    GetCloudDiscoveryMetadataFromNetworkMeasurement: \"getCloudDiscoveryMetadataFromNetworkMeasurement\",\n    HandleRedirectPromiseMeasurement: \"handleRedirectPromise\",\n    HandleNativeRedirectPromiseMeasurement: \"handleNativeRedirectPromise\",\n    UpdateCloudDiscoveryMetadataMeasurement: \"updateCloudDiscoveryMetadataMeasurement\",\n    UsernamePasswordClientAcquireToken: \"usernamePasswordClientAcquireToken\",\n    NativeMessageHandlerHandshake: \"nativeMessageHandlerHandshake\",\n    NativeGenerateAuthResult: \"nativeGenerateAuthResult\",\n    RemoveHiddenIframe: \"removeHiddenIframe\",\n    /**\n     * Cache operations\n     */\n    ClearTokensAndKeysWithClaims: \"clearTokensAndKeysWithClaims\",\n    CacheManagerGetRefreshToken: \"cacheManagerGetRefreshToken\",\n    /**\n     * Crypto Operations\n     */\n    GeneratePkceCodes: \"generatePkceCodes\",\n    GenerateCodeVerifier: \"generateCodeVerifier\",\n    GenerateCodeChallengeFromVerifier: \"generateCodeChallengeFromVerifier\",\n    Sha256Digest: \"sha256Digest\",\n    GetRandomValues: \"getRandomValues\",\n};\nconst PerformanceEventAbbreviations = new Map([\n    [PerformanceEvents.AcquireTokenByCode, \"ATByCode\"],\n    [PerformanceEvents.AcquireTokenByRefreshToken, \"ATByRT\"],\n    [PerformanceEvents.AcquireTokenSilent, \"ATS\"],\n    [PerformanceEvents.AcquireTokenSilentAsync, \"ATSAsync\"],\n    [PerformanceEvents.AcquireTokenPopup, \"ATPopup\"],\n    [PerformanceEvents.AcquireTokenRedirect, \"ATRedirect\"],\n    [\n        PerformanceEvents.CryptoOptsGetPublicKeyThumbprint,\n        \"CryptoGetPKThumb\",\n    ],\n    [PerformanceEvents.CryptoOptsSignJwt, \"CryptoSignJwt\"],\n    [PerformanceEvents.SilentCacheClientAcquireToken, \"SltCacheClientAT\"],\n    [PerformanceEvents.SilentIframeClientAcquireToken, \"SltIframeClientAT\"],\n    [PerformanceEvents.SilentRefreshClientAcquireToken, \"SltRClientAT\"],\n    [PerformanceEvents.SsoSilent, \"SsoSlt\"],\n    [\n        PerformanceEvents.StandardInteractionClientGetDiscoveredAuthority,\n        \"StdIntClientGetDiscAuth\",\n    ],\n    [\n        PerformanceEvents.FetchAccountIdWithNativeBroker,\n        \"FetchAccIdWithNtvBroker\",\n    ],\n    [\n        PerformanceEvents.NativeInteractionClientAcquireToken,\n        \"NtvIntClientAT\",\n    ],\n    [\n        PerformanceEvents.BaseClientCreateTokenRequestHeaders,\n        \"BaseClientCreateTReqHead\",\n    ],\n    [\n        PerformanceEvents.RefreshTokenClientExecutePostToTokenEndpoint,\n        \"RTClientExecPost\",\n    ],\n    [\n        PerformanceEvents.AuthorizationCodeClientExecutePostToTokenEndpoint,\n        \"AuthCodeClientExecPost\",\n    ],\n    [PerformanceEvents.BrokerHandhshake, \"BrokerHandshake\"],\n    [\n        PerformanceEvents.AcquireTokenByRefreshTokenInBroker,\n        \"ATByRTInBroker\",\n    ],\n    [PerformanceEvents.AcquireTokenByBroker, \"ATByBroker\"],\n    [\n        PerformanceEvents.RefreshTokenClientExecuteTokenRequest,\n        \"RTClientExecTReq\",\n    ],\n    [PerformanceEvents.RefreshTokenClientAcquireToken, \"RTClientAT\"],\n    [\n        PerformanceEvents.RefreshTokenClientAcquireTokenWithCachedRefreshToken,\n        \"RTClientATWithCachedRT\",\n    ],\n    [\n        PerformanceEvents.RefreshTokenClientAcquireTokenByRefreshToken,\n        \"RTClientATByRT\",\n    ],\n    [\n        PerformanceEvents.RefreshTokenClientCreateTokenRequestBody,\n        \"RTClientCreateTReqBody\",\n    ],\n    [PerformanceEvents.AcquireTokenFromCache, \"ATFromCache\"],\n    [\n        PerformanceEvents.SilentFlowClientAcquireCachedToken,\n        \"SltFlowClientATCached\",\n    ],\n    [\n        PerformanceEvents.SilentFlowClientGenerateResultFromCacheRecord,\n        \"SltFlowClientGenResFromCache\",\n    ],\n    [PerformanceEvents.AcquireTokenBySilentIframe, \"ATBySltIframe\"],\n    [PerformanceEvents.InitializeBaseRequest, \"InitBaseReq\"],\n    [PerformanceEvents.InitializeSilentRequest, \"InitSltReq\"],\n    [\n        PerformanceEvents.InitializeClientApplication,\n        \"InitClientApplication\",\n    ],\n    [PerformanceEvents.SilentIframeClientTokenHelper, \"SIClientTHelper\"],\n    [\n        PerformanceEvents.SilentHandlerInitiateAuthRequest,\n        \"SHandlerInitAuthReq\",\n    ],\n    [\n        PerformanceEvents.SilentHandlerMonitorIframeForHash,\n        \"SltHandlerMonitorIframeForHash\",\n    ],\n    [PerformanceEvents.SilentHandlerLoadFrame, \"SHandlerLoadFrame\"],\n    [PerformanceEvents.SilentHandlerLoadFrameSync, \"SHandlerLoadFrameSync\"],\n    [\n        PerformanceEvents.StandardInteractionClientCreateAuthCodeClient,\n        \"StdIntClientCreateAuthCodeClient\",\n    ],\n    [\n        PerformanceEvents.StandardInteractionClientGetClientConfiguration,\n        \"StdIntClientGetClientConf\",\n    ],\n    [\n        PerformanceEvents.StandardInteractionClientInitializeAuthorizationRequest,\n        \"StdIntClientInitAuthReq\",\n    ],\n    [\n        PerformanceEvents.StandardInteractionClientInitializeAuthorizationCodeRequest,\n        \"StdIntClientInitAuthCodeReq\",\n    ],\n    [PerformanceEvents.GetAuthCodeUrl, \"GetAuthCodeUrl\"],\n    [\n        PerformanceEvents.HandleCodeResponseFromServer,\n        \"HandleCodeResFromServer\",\n    ],\n    [PerformanceEvents.HandleCodeResponse, \"HandleCodeResp\"],\n    [PerformanceEvents.UpdateTokenEndpointAuthority, \"UpdTEndpointAuth\"],\n    [PerformanceEvents.AuthClientAcquireToken, \"AuthClientAT\"],\n    [PerformanceEvents.AuthClientExecuteTokenRequest, \"AuthClientExecTReq\"],\n    [\n        PerformanceEvents.AuthClientCreateTokenRequestBody,\n        \"AuthClientCreateTReqBody\",\n    ],\n    [\n        PerformanceEvents.AuthClientCreateQueryString,\n        \"AuthClientCreateQueryStr\",\n    ],\n    [PerformanceEvents.PopTokenGenerateCnf, \"PopTGenCnf\"],\n    [PerformanceEvents.PopTokenGenerateKid, \"PopTGenKid\"],\n    [PerformanceEvents.HandleServerTokenResponse, \"HandleServerTRes\"],\n    [PerformanceEvents.DeserializeResponse, \"DeserializeRes\"],\n    [\n        PerformanceEvents.AuthorityFactoryCreateDiscoveredInstance,\n        \"AuthFactCreateDiscInst\",\n    ],\n    [\n        PerformanceEvents.AuthorityResolveEndpointsAsync,\n        \"AuthResolveEndpointsAsync\",\n    ],\n    [\n        PerformanceEvents.AuthorityResolveEndpointsFromLocalSources,\n        \"AuthResolveEndpointsFromLocal\",\n    ],\n    [\n        PerformanceEvents.AuthorityGetCloudDiscoveryMetadataFromNetwork,\n        \"AuthGetCDMetaFromNet\",\n    ],\n    [\n        PerformanceEvents.AuthorityUpdateCloudDiscoveryMetadata,\n        \"AuthUpdCDMeta\",\n    ],\n    [\n        PerformanceEvents.AuthorityGetEndpointMetadataFromNetwork,\n        \"AuthUpdCDMetaFromNet\",\n    ],\n    [\n        PerformanceEvents.AuthorityUpdateEndpointMetadata,\n        \"AuthUpdEndpointMeta\",\n    ],\n    [\n        PerformanceEvents.AuthorityUpdateMetadataWithRegionalInformation,\n        \"AuthUpdMetaWithRegInfo\",\n    ],\n    [PerformanceEvents.RegionDiscoveryDetectRegion, \"RegDiscDetectReg\"],\n    [\n        PerformanceEvents.RegionDiscoveryGetRegionFromIMDS,\n        \"RegDiscGetRegFromIMDS\",\n    ],\n    [\n        PerformanceEvents.RegionDiscoveryGetCurrentVersion,\n        \"RegDiscGetCurrentVer\",\n    ],\n    [PerformanceEvents.AcquireTokenByCodeAsync, \"ATByCodeAsync\"],\n    [\n        PerformanceEvents.GetEndpointMetadataFromNetwork,\n        \"GetEndpointMetaFromNet\",\n    ],\n    [\n        PerformanceEvents.GetCloudDiscoveryMetadataFromNetworkMeasurement,\n        \"GetCDMetaFromNet\",\n    ],\n    [\n        PerformanceEvents.HandleRedirectPromiseMeasurement,\n        \"HandleRedirectPromise\",\n    ],\n    [\n        PerformanceEvents.HandleNativeRedirectPromiseMeasurement,\n        \"HandleNtvRedirectPromise\",\n    ],\n    [\n        PerformanceEvents.UpdateCloudDiscoveryMetadataMeasurement,\n        \"UpdateCDMeta\",\n    ],\n    [\n        PerformanceEvents.UsernamePasswordClientAcquireToken,\n        \"UserPassClientAT\",\n    ],\n    [\n        PerformanceEvents.NativeMessageHandlerHandshake,\n        \"NtvMsgHandlerHandshake\",\n    ],\n    [PerformanceEvents.NativeGenerateAuthResult, \"NtvGenAuthRes\"],\n    [PerformanceEvents.RemoveHiddenIframe, \"RemoveHiddenIframe\"],\n    [\n        PerformanceEvents.ClearTokensAndKeysWithClaims,\n        \"ClearTAndKeysWithClaims\",\n    ],\n    [PerformanceEvents.CacheManagerGetRefreshToken, \"CacheManagerGetRT\"],\n    [PerformanceEvents.GeneratePkceCodes, \"GenPkceCodes\"],\n    [PerformanceEvents.GenerateCodeVerifier, \"GenCodeVerifier\"],\n    [\n        PerformanceEvents.GenerateCodeChallengeFromVerifier,\n        \"GenCodeChallengeFromVerifier\",\n    ],\n    [PerformanceEvents.Sha256Digest, \"Sha256Digest\"],\n    [PerformanceEvents.GetRandomValues, \"GetRandomValues\"],\n]);\n/**\n * State of the performance event.\n *\n * @export\n * @enum {number}\n */\nconst PerformanceEventStatus = {\n    NotStarted: 0,\n    InProgress: 1,\n    Completed: 2,\n};\nconst IntFields = new Set([\n    \"accessTokenSize\",\n    \"durationMs\",\n    \"idTokenSize\",\n    \"matsSilentStatus\",\n    \"matsHttpStatus\",\n    \"refreshTokenSize\",\n    \"queuedTimeMs\",\n    \"startTimeMs\",\n    \"status\",\n    \"multiMatchedAT\",\n    \"multiMatchedID\",\n    \"multiMatchedRT\",\n]);\n\n\n//# sourceMappingURL=PerformanceEvent.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/msal-common/dist/telemetry/performance/PerformanceEvent.mjs\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/msal-common/dist/telemetry/server/ServerTelemetryManager.mjs":
/*!******************************************************************************************!*\
  !*** ./node_modules/@azure/msal-common/dist/telemetry/server/ServerTelemetryManager.mjs ***!
  \******************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ServerTelemetryManager: () => (/* binding */ ServerTelemetryManager)\n/* harmony export */ });\n/* harmony import */ var _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/Constants.mjs */ \"(rsc)/./node_modules/@azure/msal-common/dist/utils/Constants.mjs\");\n/* harmony import */ var _error_AuthError_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../error/AuthError.mjs */ \"(rsc)/./node_modules/@azure/msal-common/dist/error/AuthError.mjs\");\n/*! @azure/msal-common v14.14.0 2024-07-23 */\n\n\n\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\nconst skuGroupSeparator = \",\";\nconst skuValueSeparator = \"|\";\nfunction makeExtraSkuString(params) {\n    const { skus, libraryName, libraryVersion, extensionName, extensionVersion, } = params;\n    const skuMap = new Map([\n        [0, [libraryName, libraryVersion]],\n        [2, [extensionName, extensionVersion]],\n    ]);\n    let skuArr = [];\n    if (skus?.length) {\n        skuArr = skus.split(skuGroupSeparator);\n        // Ignore invalid input sku param\n        if (skuArr.length < 4) {\n            return skus;\n        }\n    }\n    else {\n        skuArr = Array.from({ length: 4 }, () => skuValueSeparator);\n    }\n    skuMap.forEach((value, key) => {\n        if (value.length === 2 && value[0]?.length && value[1]?.length) {\n            setSku({\n                skuArr,\n                index: key,\n                skuName: value[0],\n                skuVersion: value[1],\n            });\n        }\n    });\n    return skuArr.join(skuGroupSeparator);\n}\nfunction setSku(params) {\n    const { skuArr, index, skuName, skuVersion } = params;\n    if (index >= skuArr.length) {\n        return;\n    }\n    skuArr[index] = [skuName, skuVersion].join(skuValueSeparator);\n}\n/** @internal */\nclass ServerTelemetryManager {\n    constructor(telemetryRequest, cacheManager) {\n        this.cacheOutcome = _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.CacheOutcome.NOT_APPLICABLE;\n        this.cacheManager = cacheManager;\n        this.apiId = telemetryRequest.apiId;\n        this.correlationId = telemetryRequest.correlationId;\n        this.wrapperSKU = telemetryRequest.wrapperSKU || _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.Constants.EMPTY_STRING;\n        this.wrapperVer = telemetryRequest.wrapperVer || _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.Constants.EMPTY_STRING;\n        this.telemetryCacheKey =\n            _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.SERVER_TELEM_CONSTANTS.CACHE_KEY +\n                _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.Separators.CACHE_KEY_SEPARATOR +\n                telemetryRequest.clientId;\n    }\n    /**\n     * API to add MSER Telemetry to request\n     */\n    generateCurrentRequestHeaderValue() {\n        const request = `${this.apiId}${_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.SERVER_TELEM_CONSTANTS.VALUE_SEPARATOR}${this.cacheOutcome}`;\n        const platformFieldsArr = [this.wrapperSKU, this.wrapperVer];\n        const nativeBrokerErrorCode = this.getNativeBrokerErrorCode();\n        if (nativeBrokerErrorCode?.length) {\n            platformFieldsArr.push(`broker_error=${nativeBrokerErrorCode}`);\n        }\n        const platformFields = platformFieldsArr.join(_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.SERVER_TELEM_CONSTANTS.VALUE_SEPARATOR);\n        const regionDiscoveryFields = this.getRegionDiscoveryFields();\n        const requestWithRegionDiscoveryFields = [\n            request,\n            regionDiscoveryFields,\n        ].join(_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.SERVER_TELEM_CONSTANTS.VALUE_SEPARATOR);\n        return [\n            _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.SERVER_TELEM_CONSTANTS.SCHEMA_VERSION,\n            requestWithRegionDiscoveryFields,\n            platformFields,\n        ].join(_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.SERVER_TELEM_CONSTANTS.CATEGORY_SEPARATOR);\n    }\n    /**\n     * API to add MSER Telemetry for the last failed request\n     */\n    generateLastRequestHeaderValue() {\n        const lastRequests = this.getLastRequests();\n        const maxErrors = ServerTelemetryManager.maxErrorsToSend(lastRequests);\n        const failedRequests = lastRequests.failedRequests\n            .slice(0, 2 * maxErrors)\n            .join(_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.SERVER_TELEM_CONSTANTS.VALUE_SEPARATOR);\n        const errors = lastRequests.errors\n            .slice(0, maxErrors)\n            .join(_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.SERVER_TELEM_CONSTANTS.VALUE_SEPARATOR);\n        const errorCount = lastRequests.errors.length;\n        // Indicate whether this header contains all data or partial data\n        const overflow = maxErrors < errorCount\n            ? _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.SERVER_TELEM_CONSTANTS.OVERFLOW_TRUE\n            : _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.SERVER_TELEM_CONSTANTS.OVERFLOW_FALSE;\n        const platformFields = [errorCount, overflow].join(_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.SERVER_TELEM_CONSTANTS.VALUE_SEPARATOR);\n        return [\n            _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.SERVER_TELEM_CONSTANTS.SCHEMA_VERSION,\n            lastRequests.cacheHits,\n            failedRequests,\n            errors,\n            platformFields,\n        ].join(_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.SERVER_TELEM_CONSTANTS.CATEGORY_SEPARATOR);\n    }\n    /**\n     * API to cache token failures for MSER data capture\n     * @param error\n     */\n    cacheFailedRequest(error) {\n        const lastRequests = this.getLastRequests();\n        if (lastRequests.errors.length >=\n            _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.SERVER_TELEM_CONSTANTS.MAX_CACHED_ERRORS) {\n            // Remove a cached error to make room, first in first out\n            lastRequests.failedRequests.shift(); // apiId\n            lastRequests.failedRequests.shift(); // correlationId\n            lastRequests.errors.shift();\n        }\n        lastRequests.failedRequests.push(this.apiId, this.correlationId);\n        if (error instanceof Error && !!error && error.toString()) {\n            if (error instanceof _error_AuthError_mjs__WEBPACK_IMPORTED_MODULE_1__.AuthError) {\n                if (error.subError) {\n                    lastRequests.errors.push(error.subError);\n                }\n                else if (error.errorCode) {\n                    lastRequests.errors.push(error.errorCode);\n                }\n                else {\n                    lastRequests.errors.push(error.toString());\n                }\n            }\n            else {\n                lastRequests.errors.push(error.toString());\n            }\n        }\n        else {\n            lastRequests.errors.push(_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.SERVER_TELEM_CONSTANTS.UNKNOWN_ERROR);\n        }\n        this.cacheManager.setServerTelemetry(this.telemetryCacheKey, lastRequests);\n        return;\n    }\n    /**\n     * Update server telemetry cache entry by incrementing cache hit counter\n     */\n    incrementCacheHits() {\n        const lastRequests = this.getLastRequests();\n        lastRequests.cacheHits += 1;\n        this.cacheManager.setServerTelemetry(this.telemetryCacheKey, lastRequests);\n        return lastRequests.cacheHits;\n    }\n    /**\n     * Get the server telemetry entity from cache or initialize a new one\n     */\n    getLastRequests() {\n        const initialValue = {\n            failedRequests: [],\n            errors: [],\n            cacheHits: 0,\n        };\n        const lastRequests = this.cacheManager.getServerTelemetry(this.telemetryCacheKey);\n        return lastRequests || initialValue;\n    }\n    /**\n     * Remove server telemetry cache entry\n     */\n    clearTelemetryCache() {\n        const lastRequests = this.getLastRequests();\n        const numErrorsFlushed = ServerTelemetryManager.maxErrorsToSend(lastRequests);\n        const errorCount = lastRequests.errors.length;\n        if (numErrorsFlushed === errorCount) {\n            // All errors were sent on last request, clear Telemetry cache\n            this.cacheManager.removeItem(this.telemetryCacheKey);\n        }\n        else {\n            // Partial data was flushed to server, construct a new telemetry cache item with errors that were not flushed\n            const serverTelemEntity = {\n                failedRequests: lastRequests.failedRequests.slice(numErrorsFlushed * 2),\n                errors: lastRequests.errors.slice(numErrorsFlushed),\n                cacheHits: 0,\n            };\n            this.cacheManager.setServerTelemetry(this.telemetryCacheKey, serverTelemEntity);\n        }\n    }\n    /**\n     * Returns the maximum number of errors that can be flushed to the server in the next network request\n     * @param serverTelemetryEntity\n     */\n    static maxErrorsToSend(serverTelemetryEntity) {\n        let i;\n        let maxErrors = 0;\n        let dataSize = 0;\n        const errorCount = serverTelemetryEntity.errors.length;\n        for (i = 0; i < errorCount; i++) {\n            // failedRequests parameter contains pairs of apiId and correlationId, multiply index by 2 to preserve pairs\n            const apiId = serverTelemetryEntity.failedRequests[2 * i] ||\n                _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.Constants.EMPTY_STRING;\n            const correlationId = serverTelemetryEntity.failedRequests[2 * i + 1] ||\n                _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.Constants.EMPTY_STRING;\n            const errorCode = serverTelemetryEntity.errors[i] || _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.Constants.EMPTY_STRING;\n            // Count number of characters that would be added to header, each character is 1 byte. Add 3 at the end to account for separators\n            dataSize +=\n                apiId.toString().length +\n                    correlationId.toString().length +\n                    errorCode.length +\n                    3;\n            if (dataSize < _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.SERVER_TELEM_CONSTANTS.MAX_LAST_HEADER_BYTES) {\n                // Adding this entry to the header would still keep header size below the limit\n                maxErrors += 1;\n            }\n            else {\n                break;\n            }\n        }\n        return maxErrors;\n    }\n    /**\n     * Get the region discovery fields\n     *\n     * @returns string\n     */\n    getRegionDiscoveryFields() {\n        const regionDiscoveryFields = [];\n        regionDiscoveryFields.push(this.regionUsed || _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.Constants.EMPTY_STRING);\n        regionDiscoveryFields.push(this.regionSource || _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.Constants.EMPTY_STRING);\n        regionDiscoveryFields.push(this.regionOutcome || _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.Constants.EMPTY_STRING);\n        return regionDiscoveryFields.join(\",\");\n    }\n    /**\n     * Update the region discovery metadata\n     *\n     * @param regionDiscoveryMetadata\n     * @returns void\n     */\n    updateRegionDiscoveryMetadata(regionDiscoveryMetadata) {\n        this.regionUsed = regionDiscoveryMetadata.region_used;\n        this.regionSource = regionDiscoveryMetadata.region_source;\n        this.regionOutcome = regionDiscoveryMetadata.region_outcome;\n    }\n    /**\n     * Set cache outcome\n     */\n    setCacheOutcome(cacheOutcome) {\n        this.cacheOutcome = cacheOutcome;\n    }\n    setNativeBrokerErrorCode(errorCode) {\n        const lastRequests = this.getLastRequests();\n        lastRequests.nativeBrokerErrorCode = errorCode;\n        this.cacheManager.setServerTelemetry(this.telemetryCacheKey, lastRequests);\n    }\n    getNativeBrokerErrorCode() {\n        return this.getLastRequests().nativeBrokerErrorCode;\n    }\n    clearNativeBrokerErrorCode() {\n        const lastRequests = this.getLastRequests();\n        delete lastRequests.nativeBrokerErrorCode;\n        this.cacheManager.setServerTelemetry(this.telemetryCacheKey, lastRequests);\n    }\n    static makeExtraSkuString(params) {\n        return makeExtraSkuString(params);\n    }\n}\n\n\n//# sourceMappingURL=ServerTelemetryManager.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/msal-common/dist/telemetry/server/ServerTelemetryManager.mjs\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/msal-common/dist/url/UrlString.mjs":
/*!****************************************************************!*\
  !*** ./node_modules/@azure/msal-common/dist/url/UrlString.mjs ***!
  \****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   UrlString: () => (/* binding */ UrlString)\n/* harmony export */ });\n/* harmony import */ var _error_ClientConfigurationError_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../error/ClientConfigurationError.mjs */ \"(rsc)/./node_modules/@azure/msal-common/dist/error/ClientConfigurationError.mjs\");\n/* harmony import */ var _utils_StringUtils_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils/StringUtils.mjs */ \"(rsc)/./node_modules/@azure/msal-common/dist/utils/StringUtils.mjs\");\n/* harmony import */ var _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../utils/Constants.mjs */ \"(rsc)/./node_modules/@azure/msal-common/dist/utils/Constants.mjs\");\n/* harmony import */ var _utils_UrlUtils_mjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../utils/UrlUtils.mjs */ \"(rsc)/./node_modules/@azure/msal-common/dist/utils/UrlUtils.mjs\");\n/* harmony import */ var _error_ClientConfigurationErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../error/ClientConfigurationErrorCodes.mjs */ \"(rsc)/./node_modules/@azure/msal-common/dist/error/ClientConfigurationErrorCodes.mjs\");\n/*! @azure/msal-common v14.14.0 2024-07-23 */\n\n\n\n\n\n\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n/**\n * Url object class which can perform various transformations on url strings.\n */\nclass UrlString {\n    get urlString() {\n        return this._urlString;\n    }\n    constructor(url) {\n        this._urlString = url;\n        if (!this._urlString) {\n            // Throws error if url is empty\n            throw (0,_error_ClientConfigurationError_mjs__WEBPACK_IMPORTED_MODULE_0__.createClientConfigurationError)(_error_ClientConfigurationErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_1__.urlEmptyError);\n        }\n        if (!url.includes(\"#\")) {\n            this._urlString = UrlString.canonicalizeUri(url);\n        }\n    }\n    /**\n     * Ensure urls are lower case and end with a / character.\n     * @param url\n     */\n    static canonicalizeUri(url) {\n        if (url) {\n            let lowerCaseUrl = url.toLowerCase();\n            if (_utils_StringUtils_mjs__WEBPACK_IMPORTED_MODULE_2__.StringUtils.endsWith(lowerCaseUrl, \"?\")) {\n                lowerCaseUrl = lowerCaseUrl.slice(0, -1);\n            }\n            else if (_utils_StringUtils_mjs__WEBPACK_IMPORTED_MODULE_2__.StringUtils.endsWith(lowerCaseUrl, \"?/\")) {\n                lowerCaseUrl = lowerCaseUrl.slice(0, -2);\n            }\n            if (!_utils_StringUtils_mjs__WEBPACK_IMPORTED_MODULE_2__.StringUtils.endsWith(lowerCaseUrl, \"/\")) {\n                lowerCaseUrl += \"/\";\n            }\n            return lowerCaseUrl;\n        }\n        return url;\n    }\n    /**\n     * Throws if urlString passed is not a valid authority URI string.\n     */\n    validateAsUri() {\n        // Attempts to parse url for uri components\n        let components;\n        try {\n            components = this.getUrlComponents();\n        }\n        catch (e) {\n            throw (0,_error_ClientConfigurationError_mjs__WEBPACK_IMPORTED_MODULE_0__.createClientConfigurationError)(_error_ClientConfigurationErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_1__.urlParseError);\n        }\n        // Throw error if URI or path segments are not parseable.\n        if (!components.HostNameAndPort || !components.PathSegments) {\n            throw (0,_error_ClientConfigurationError_mjs__WEBPACK_IMPORTED_MODULE_0__.createClientConfigurationError)(_error_ClientConfigurationErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_1__.urlParseError);\n        }\n        // Throw error if uri is insecure.\n        if (!components.Protocol ||\n            components.Protocol.toLowerCase() !== \"https:\") {\n            throw (0,_error_ClientConfigurationError_mjs__WEBPACK_IMPORTED_MODULE_0__.createClientConfigurationError)(_error_ClientConfigurationErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_1__.authorityUriInsecure);\n        }\n    }\n    /**\n     * Given a url and a query string return the url with provided query string appended\n     * @param url\n     * @param queryString\n     */\n    static appendQueryString(url, queryString) {\n        if (!queryString) {\n            return url;\n        }\n        return url.indexOf(\"?\") < 0\n            ? `${url}?${queryString}`\n            : `${url}&${queryString}`;\n    }\n    /**\n     * Returns a url with the hash removed\n     * @param url\n     */\n    static removeHashFromUrl(url) {\n        return UrlString.canonicalizeUri(url.split(\"#\")[0]);\n    }\n    /**\n     * Given a url like https://a:b/common/d?e=f#g, and a tenantId, returns https://a:b/tenantId/d\n     * @param href The url\n     * @param tenantId The tenant id to replace\n     */\n    replaceTenantPath(tenantId) {\n        const urlObject = this.getUrlComponents();\n        const pathArray = urlObject.PathSegments;\n        if (tenantId &&\n            pathArray.length !== 0 &&\n            (pathArray[0] === _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_3__.AADAuthorityConstants.COMMON ||\n                pathArray[0] === _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_3__.AADAuthorityConstants.ORGANIZATIONS)) {\n            pathArray[0] = tenantId;\n        }\n        return UrlString.constructAuthorityUriFromObject(urlObject);\n    }\n    /**\n     * Parses out the components from a url string.\n     * @returns An object with the various components. Please cache this value insted of calling this multiple times on the same url.\n     */\n    getUrlComponents() {\n        // https://gist.github.com/curtisz/11139b2cfcaef4a261e0\n        const regEx = RegExp(\"^(([^:/?#]+):)?(//([^/?#]*))?([^?#]*)(\\\\?([^#]*))?(#(.*))?\");\n        // If url string does not match regEx, we throw an error\n        const match = this.urlString.match(regEx);\n        if (!match) {\n            throw (0,_error_ClientConfigurationError_mjs__WEBPACK_IMPORTED_MODULE_0__.createClientConfigurationError)(_error_ClientConfigurationErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_1__.urlParseError);\n        }\n        // Url component object\n        const urlComponents = {\n            Protocol: match[1],\n            HostNameAndPort: match[4],\n            AbsolutePath: match[5],\n            QueryString: match[7],\n        };\n        let pathSegments = urlComponents.AbsolutePath.split(\"/\");\n        pathSegments = pathSegments.filter((val) => val && val.length > 0); // remove empty elements\n        urlComponents.PathSegments = pathSegments;\n        if (urlComponents.QueryString &&\n            urlComponents.QueryString.endsWith(\"/\")) {\n            urlComponents.QueryString = urlComponents.QueryString.substring(0, urlComponents.QueryString.length - 1);\n        }\n        return urlComponents;\n    }\n    static getDomainFromUrl(url) {\n        const regEx = RegExp(\"^([^:/?#]+://)?([^/?#]*)\");\n        const match = url.match(regEx);\n        if (!match) {\n            throw (0,_error_ClientConfigurationError_mjs__WEBPACK_IMPORTED_MODULE_0__.createClientConfigurationError)(_error_ClientConfigurationErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_1__.urlParseError);\n        }\n        return match[2];\n    }\n    static getAbsoluteUrl(relativeUrl, baseUrl) {\n        if (relativeUrl[0] === _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_3__.Constants.FORWARD_SLASH) {\n            const url = new UrlString(baseUrl);\n            const baseComponents = url.getUrlComponents();\n            return (baseComponents.Protocol +\n                \"//\" +\n                baseComponents.HostNameAndPort +\n                relativeUrl);\n        }\n        return relativeUrl;\n    }\n    static constructAuthorityUriFromObject(urlObject) {\n        return new UrlString(urlObject.Protocol +\n            \"//\" +\n            urlObject.HostNameAndPort +\n            \"/\" +\n            urlObject.PathSegments.join(\"/\"));\n    }\n    /**\n     * Check if the hash of the URL string contains known properties\n     * @deprecated This API will be removed in a future version\n     */\n    static hashContainsKnownProperties(response) {\n        return !!(0,_utils_UrlUtils_mjs__WEBPACK_IMPORTED_MODULE_4__.getDeserializedResponse)(response);\n    }\n}\n\n\n//# sourceMappingURL=UrlString.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/msal-common/dist/url/UrlString.mjs\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/msal-common/dist/utils/ClientAssertionUtils.mjs":
/*!*****************************************************************************!*\
  !*** ./node_modules/@azure/msal-common/dist/utils/ClientAssertionUtils.mjs ***!
  \*****************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getClientAssertion: () => (/* binding */ getClientAssertion)\n/* harmony export */ });\n/*! @azure/msal-common v14.14.0 2024-07-23 */\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\nasync function getClientAssertion(clientAssertion, clientId, tokenEndpoint) {\n    if (typeof clientAssertion === \"string\") {\n        return clientAssertion;\n    }\n    else {\n        const config = {\n            clientId: clientId,\n            tokenEndpoint: tokenEndpoint,\n        };\n        return clientAssertion(config);\n    }\n}\n\n\n//# sourceMappingURL=ClientAssertionUtils.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtY29tbW9uL2Rpc3QvdXRpbHMvQ2xpZW50QXNzZXJ0aW9uVXRpbHMubWpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQTtBQUNhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRThCO0FBQzlCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZGFuaWVsMy12cDIvLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtY29tbW9uL2Rpc3QvdXRpbHMvQ2xpZW50QXNzZXJ0aW9uVXRpbHMubWpzPzEwYzgiXSwic291cmNlc0NvbnRlbnQiOlsiLyohIEBhenVyZS9tc2FsLWNvbW1vbiB2MTQuMTQuMCAyMDI0LTA3LTIzICovXG4ndXNlIHN0cmljdCc7XG4vKlxuICogQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uIEFsbCByaWdodHMgcmVzZXJ2ZWQuXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIExpY2Vuc2UuXG4gKi9cbmFzeW5jIGZ1bmN0aW9uIGdldENsaWVudEFzc2VydGlvbihjbGllbnRBc3NlcnRpb24sIGNsaWVudElkLCB0b2tlbkVuZHBvaW50KSB7XG4gICAgaWYgKHR5cGVvZiBjbGllbnRBc3NlcnRpb24gPT09IFwic3RyaW5nXCIpIHtcbiAgICAgICAgcmV0dXJuIGNsaWVudEFzc2VydGlvbjtcbiAgICB9XG4gICAgZWxzZSB7XG4gICAgICAgIGNvbnN0IGNvbmZpZyA9IHtcbiAgICAgICAgICAgIGNsaWVudElkOiBjbGllbnRJZCxcbiAgICAgICAgICAgIHRva2VuRW5kcG9pbnQ6IHRva2VuRW5kcG9pbnQsXG4gICAgICAgIH07XG4gICAgICAgIHJldHVybiBjbGllbnRBc3NlcnRpb24oY29uZmlnKTtcbiAgICB9XG59XG5cbmV4cG9ydCB7IGdldENsaWVudEFzc2VydGlvbiB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Q2xpZW50QXNzZXJ0aW9uVXRpbHMubWpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/msal-common/dist/utils/ClientAssertionUtils.mjs\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/msal-common/dist/utils/Constants.mjs":
/*!******************************************************************!*\
  !*** ./node_modules/@azure/msal-common/dist/utils/Constants.mjs ***!
  \******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AADAuthorityConstants: () => (/* binding */ AADAuthorityConstants),\n/* harmony export */   APP_METADATA: () => (/* binding */ APP_METADATA),\n/* harmony export */   AUTHORITY_METADATA_CONSTANTS: () => (/* binding */ AUTHORITY_METADATA_CONSTANTS),\n/* harmony export */   AuthenticationScheme: () => (/* binding */ AuthenticationScheme),\n/* harmony export */   AuthorityMetadataSource: () => (/* binding */ AuthorityMetadataSource),\n/* harmony export */   CLIENT_INFO: () => (/* binding */ CLIENT_INFO),\n/* harmony export */   CacheAccountType: () => (/* binding */ CacheAccountType),\n/* harmony export */   CacheOutcome: () => (/* binding */ CacheOutcome),\n/* harmony export */   CacheType: () => (/* binding */ CacheType),\n/* harmony export */   ClaimsRequestKeys: () => (/* binding */ ClaimsRequestKeys),\n/* harmony export */   CodeChallengeMethodValues: () => (/* binding */ CodeChallengeMethodValues),\n/* harmony export */   Constants: () => (/* binding */ Constants),\n/* harmony export */   CredentialType: () => (/* binding */ CredentialType),\n/* harmony export */   DEFAULT_TOKEN_RENEWAL_OFFSET_SEC: () => (/* binding */ DEFAULT_TOKEN_RENEWAL_OFFSET_SEC),\n/* harmony export */   Errors: () => (/* binding */ Errors),\n/* harmony export */   GrantType: () => (/* binding */ GrantType),\n/* harmony export */   HeaderNames: () => (/* binding */ HeaderNames),\n/* harmony export */   HttpStatus: () => (/* binding */ HttpStatus),\n/* harmony export */   JsonWebTokenTypes: () => (/* binding */ JsonWebTokenTypes),\n/* harmony export */   OIDC_DEFAULT_SCOPES: () => (/* binding */ OIDC_DEFAULT_SCOPES),\n/* harmony export */   OIDC_SCOPES: () => (/* binding */ OIDC_SCOPES),\n/* harmony export */   ONE_DAY_IN_MS: () => (/* binding */ ONE_DAY_IN_MS),\n/* harmony export */   PasswordGrantConstants: () => (/* binding */ PasswordGrantConstants),\n/* harmony export */   PersistentCacheKeys: () => (/* binding */ PersistentCacheKeys),\n/* harmony export */   PromptValue: () => (/* binding */ PromptValue),\n/* harmony export */   RegionDiscoveryOutcomes: () => (/* binding */ RegionDiscoveryOutcomes),\n/* harmony export */   RegionDiscoverySources: () => (/* binding */ RegionDiscoverySources),\n/* harmony export */   ResponseCodes: () => (/* binding */ ResponseCodes),\n/* harmony export */   ResponseMode: () => (/* binding */ ResponseMode),\n/* harmony export */   SERVER_TELEM_CONSTANTS: () => (/* binding */ SERVER_TELEM_CONSTANTS),\n/* harmony export */   Separators: () => (/* binding */ Separators),\n/* harmony export */   ServerResponseType: () => (/* binding */ ServerResponseType),\n/* harmony export */   THE_FAMILY_ID: () => (/* binding */ THE_FAMILY_ID),\n/* harmony export */   ThrottlingConstants: () => (/* binding */ ThrottlingConstants)\n/* harmony export */ });\n/*! @azure/msal-common v14.14.0 2024-07-23 */\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\nconst Constants = {\n    LIBRARY_NAME: \"MSAL.JS\",\n    SKU: \"msal.js.common\",\n    // Prefix for all library cache entries\n    CACHE_PREFIX: \"msal\",\n    // default authority\n    DEFAULT_AUTHORITY: \"https://login.microsoftonline.com/common/\",\n    DEFAULT_AUTHORITY_HOST: \"login.microsoftonline.com\",\n    DEFAULT_COMMON_TENANT: \"common\",\n    // ADFS String\n    ADFS: \"adfs\",\n    DSTS: \"dstsv2\",\n    // Default AAD Instance Discovery Endpoint\n    AAD_INSTANCE_DISCOVERY_ENDPT: \"https://login.microsoftonline.com/common/discovery/instance?api-version=1.1&authorization_endpoint=\",\n    // CIAM URL\n    CIAM_AUTH_URL: \".ciamlogin.com\",\n    AAD_TENANT_DOMAIN_SUFFIX: \".onmicrosoft.com\",\n    // Resource delimiter - used for certain cache entries\n    RESOURCE_DELIM: \"|\",\n    // Placeholder for non-existent account ids/objects\n    NO_ACCOUNT: \"NO_ACCOUNT\",\n    // Claims\n    CLAIMS: \"claims\",\n    // Consumer UTID\n    CONSUMER_UTID: \"9188040d-6c67-4c5b-b112-36a304b66dad\",\n    // Default scopes\n    OPENID_SCOPE: \"openid\",\n    PROFILE_SCOPE: \"profile\",\n    OFFLINE_ACCESS_SCOPE: \"offline_access\",\n    EMAIL_SCOPE: \"email\",\n    // Default response type for authorization code flow\n    CODE_RESPONSE_TYPE: \"code\",\n    CODE_GRANT_TYPE: \"authorization_code\",\n    RT_GRANT_TYPE: \"refresh_token\",\n    FRAGMENT_RESPONSE_MODE: \"fragment\",\n    S256_CODE_CHALLENGE_METHOD: \"S256\",\n    URL_FORM_CONTENT_TYPE: \"application/x-www-form-urlencoded;charset=utf-8\",\n    AUTHORIZATION_PENDING: \"authorization_pending\",\n    NOT_DEFINED: \"not_defined\",\n    EMPTY_STRING: \"\",\n    NOT_APPLICABLE: \"N/A\",\n    NOT_AVAILABLE: \"Not Available\",\n    FORWARD_SLASH: \"/\",\n    IMDS_ENDPOINT: \"http://169.254.169.254/metadata/instance/compute/location\",\n    IMDS_VERSION: \"2020-06-01\",\n    IMDS_TIMEOUT: 2000,\n    AZURE_REGION_AUTO_DISCOVER_FLAG: \"TryAutoDetect\",\n    REGIONAL_AUTH_PUBLIC_CLOUD_SUFFIX: \"login.microsoft.com\",\n    KNOWN_PUBLIC_CLOUDS: [\n        \"login.microsoftonline.com\",\n        \"login.windows.net\",\n        \"login.microsoft.com\",\n        \"sts.windows.net\",\n    ],\n    TOKEN_RESPONSE_TYPE: \"token\",\n    ID_TOKEN_RESPONSE_TYPE: \"id_token\",\n    SHR_NONCE_VALIDITY: 240,\n    INVALID_INSTANCE: \"invalid_instance\",\n};\nconst HttpStatus = {\n    SUCCESS: 200,\n    SUCCESS_RANGE_START: 200,\n    SUCCESS_RANGE_END: 299,\n    REDIRECT: 302,\n    CLIENT_ERROR: 400,\n    CLIENT_ERROR_RANGE_START: 400,\n    BAD_REQUEST: 400,\n    UNAUTHORIZED: 401,\n    NOT_FOUND: 404,\n    REQUEST_TIMEOUT: 408,\n    TOO_MANY_REQUESTS: 429,\n    CLIENT_ERROR_RANGE_END: 499,\n    SERVER_ERROR: 500,\n    SERVER_ERROR_RANGE_START: 500,\n    SERVICE_UNAVAILABLE: 503,\n    GATEWAY_TIMEOUT: 504,\n    SERVER_ERROR_RANGE_END: 599,\n    MULTI_SIDED_ERROR: 600,\n};\nconst OIDC_DEFAULT_SCOPES = [\n    Constants.OPENID_SCOPE,\n    Constants.PROFILE_SCOPE,\n    Constants.OFFLINE_ACCESS_SCOPE,\n];\nconst OIDC_SCOPES = [...OIDC_DEFAULT_SCOPES, Constants.EMAIL_SCOPE];\n/**\n * Request header names\n */\nconst HeaderNames = {\n    CONTENT_TYPE: \"Content-Type\",\n    RETRY_AFTER: \"Retry-After\",\n    CCS_HEADER: \"X-AnchorMailbox\",\n    WWWAuthenticate: \"WWW-Authenticate\",\n    AuthenticationInfo: \"Authentication-Info\",\n    X_MS_REQUEST_ID: \"x-ms-request-id\",\n    X_MS_HTTP_VERSION: \"x-ms-httpver\",\n};\n/**\n * Persistent cache keys MSAL which stay while user is logged in.\n */\nconst PersistentCacheKeys = {\n    ID_TOKEN: \"idtoken\",\n    CLIENT_INFO: \"client.info\",\n    ADAL_ID_TOKEN: \"adal.idtoken\",\n    ERROR: \"error\",\n    ERROR_DESC: \"error.description\",\n    ACTIVE_ACCOUNT: \"active-account\",\n    ACTIVE_ACCOUNT_FILTERS: \"active-account-filters\", // new cache entry for active_account for a more robust version for browser\n};\n/**\n * String constants related to AAD Authority\n */\nconst AADAuthorityConstants = {\n    COMMON: \"common\",\n    ORGANIZATIONS: \"organizations\",\n    CONSUMERS: \"consumers\",\n};\n/**\n * Claims request keys\n */\nconst ClaimsRequestKeys = {\n    ACCESS_TOKEN: \"access_token\",\n    XMS_CC: \"xms_cc\",\n};\n/**\n * we considered making this \"enum\" in the request instead of string, however it looks like the allowed list of\n * prompt values kept changing over past couple of years. There are some undocumented prompt values for some\n * internal partners too, hence the choice of generic \"string\" type instead of the \"enum\"\n */\nconst PromptValue = {\n    LOGIN: \"login\",\n    SELECT_ACCOUNT: \"select_account\",\n    CONSENT: \"consent\",\n    NONE: \"none\",\n    CREATE: \"create\",\n    NO_SESSION: \"no_session\",\n};\n/**\n * allowed values for codeVerifier\n */\nconst CodeChallengeMethodValues = {\n    PLAIN: \"plain\",\n    S256: \"S256\",\n};\n/**\n * allowed values for server response type\n */\nconst ServerResponseType = {\n    QUERY: \"query\",\n    FRAGMENT: \"fragment\",\n};\n/**\n * allowed values for response_mode\n */\nconst ResponseMode = {\n    ...ServerResponseType,\n    FORM_POST: \"form_post\",\n};\n/**\n * allowed grant_type\n */\nconst GrantType = {\n    IMPLICIT_GRANT: \"implicit\",\n    AUTHORIZATION_CODE_GRANT: \"authorization_code\",\n    CLIENT_CREDENTIALS_GRANT: \"client_credentials\",\n    RESOURCE_OWNER_PASSWORD_GRANT: \"password\",\n    REFRESH_TOKEN_GRANT: \"refresh_token\",\n    DEVICE_CODE_GRANT: \"device_code\",\n    JWT_BEARER: \"urn:ietf:params:oauth:grant-type:jwt-bearer\",\n};\n/**\n * Account types in Cache\n */\nconst CacheAccountType = {\n    MSSTS_ACCOUNT_TYPE: \"MSSTS\",\n    ADFS_ACCOUNT_TYPE: \"ADFS\",\n    MSAV1_ACCOUNT_TYPE: \"MSA\",\n    GENERIC_ACCOUNT_TYPE: \"Generic\", // NTLM, Kerberos, FBA, Basic etc\n};\n/**\n * Separators used in cache\n */\nconst Separators = {\n    CACHE_KEY_SEPARATOR: \"-\",\n    CLIENT_INFO_SEPARATOR: \".\",\n};\n/**\n * Credential Type stored in the cache\n */\nconst CredentialType = {\n    ID_TOKEN: \"IdToken\",\n    ACCESS_TOKEN: \"AccessToken\",\n    ACCESS_TOKEN_WITH_AUTH_SCHEME: \"AccessToken_With_AuthScheme\",\n    REFRESH_TOKEN: \"RefreshToken\",\n};\n/**\n * Combine all cache types\n */\nconst CacheType = {\n    ADFS: 1001,\n    MSA: 1002,\n    MSSTS: 1003,\n    GENERIC: 1004,\n    ACCESS_TOKEN: 2001,\n    REFRESH_TOKEN: 2002,\n    ID_TOKEN: 2003,\n    APP_METADATA: 3001,\n    UNDEFINED: 9999,\n};\n/**\n * More Cache related constants\n */\nconst APP_METADATA = \"appmetadata\";\nconst CLIENT_INFO = \"client_info\";\nconst THE_FAMILY_ID = \"1\";\nconst AUTHORITY_METADATA_CONSTANTS = {\n    CACHE_KEY: \"authority-metadata\",\n    REFRESH_TIME_SECONDS: 3600 * 24, // 24 Hours\n};\nconst AuthorityMetadataSource = {\n    CONFIG: \"config\",\n    CACHE: \"cache\",\n    NETWORK: \"network\",\n    HARDCODED_VALUES: \"hardcoded_values\",\n};\nconst SERVER_TELEM_CONSTANTS = {\n    SCHEMA_VERSION: 5,\n    MAX_CUR_HEADER_BYTES: 80,\n    MAX_LAST_HEADER_BYTES: 330,\n    MAX_CACHED_ERRORS: 50,\n    CACHE_KEY: \"server-telemetry\",\n    CATEGORY_SEPARATOR: \"|\",\n    VALUE_SEPARATOR: \",\",\n    OVERFLOW_TRUE: \"1\",\n    OVERFLOW_FALSE: \"0\",\n    UNKNOWN_ERROR: \"unknown_error\",\n};\n/**\n * Type of the authentication request\n */\nconst AuthenticationScheme = {\n    BEARER: \"Bearer\",\n    POP: \"pop\",\n    SSH: \"ssh-cert\",\n};\n/**\n * Constants related to throttling\n */\nconst ThrottlingConstants = {\n    // Default time to throttle RequestThumbprint in seconds\n    DEFAULT_THROTTLE_TIME_SECONDS: 60,\n    // Default maximum time to throttle in seconds, overrides what the server sends back\n    DEFAULT_MAX_THROTTLE_TIME_SECONDS: 3600,\n    // Prefix for storing throttling entries\n    THROTTLING_PREFIX: \"throttling\",\n    // Value assigned to the x-ms-lib-capability header to indicate to the server the library supports throttling\n    X_MS_LIB_CAPABILITY_VALUE: \"retry-after, h429\",\n};\nconst Errors = {\n    INVALID_GRANT_ERROR: \"invalid_grant\",\n    CLIENT_MISMATCH_ERROR: \"client_mismatch\",\n};\n/**\n * Password grant parameters\n */\nconst PasswordGrantConstants = {\n    username: \"username\",\n    password: \"password\",\n};\n/**\n * Response codes\n */\nconst ResponseCodes = {\n    httpSuccess: 200,\n    httpBadRequest: 400,\n};\n/**\n * Region Discovery Sources\n */\nconst RegionDiscoverySources = {\n    FAILED_AUTO_DETECTION: \"1\",\n    INTERNAL_CACHE: \"2\",\n    ENVIRONMENT_VARIABLE: \"3\",\n    IMDS: \"4\",\n};\n/**\n * Region Discovery Outcomes\n */\nconst RegionDiscoveryOutcomes = {\n    CONFIGURED_MATCHES_DETECTED: \"1\",\n    CONFIGURED_NO_AUTO_DETECTION: \"2\",\n    CONFIGURED_NOT_DETECTED: \"3\",\n    AUTO_DETECTION_REQUESTED_SUCCESSFUL: \"4\",\n    AUTO_DETECTION_REQUESTED_FAILED: \"5\",\n};\n/**\n * Specifies the reason for fetching the access token from the identity provider\n */\nconst CacheOutcome = {\n    // When a token is found in the cache or the cache is not supposed to be hit when making the request\n    NOT_APPLICABLE: \"0\",\n    // When the token request goes to the identity provider because force_refresh was set to true. Also occurs if claims were requested\n    FORCE_REFRESH_OR_CLAIMS: \"1\",\n    // When the token request goes to the identity provider because no cached access token exists\n    NO_CACHED_ACCESS_TOKEN: \"2\",\n    // When the token request goes to the identity provider because cached access token expired\n    CACHED_ACCESS_TOKEN_EXPIRED: \"3\",\n    // When the token request goes to the identity provider because refresh_in was used and the existing token needs to be refreshed\n    PROACTIVELY_REFRESHED: \"4\",\n};\nconst JsonWebTokenTypes = {\n    Jwt: \"JWT\",\n    Jwk: \"JWK\",\n    Pop: \"pop\",\n};\nconst ONE_DAY_IN_MS = 86400000;\n// Token renewal offset default in seconds\nconst DEFAULT_TOKEN_RENEWAL_OFFSET_SEC = 300;\n\n\n//# sourceMappingURL=Constants.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/msal-common/dist/utils/Constants.mjs\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/msal-common/dist/utils/FunctionWrappers.mjs":
/*!*************************************************************************!*\
  !*** ./node_modules/@azure/msal-common/dist/utils/FunctionWrappers.mjs ***!
  \*************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   invoke: () => (/* binding */ invoke),\n/* harmony export */   invokeAsync: () => (/* binding */ invokeAsync)\n/* harmony export */ });\n/*! @azure/msal-common v14.14.0 2024-07-23 */\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n/**\n * Wraps a function with a performance measurement.\n * Usage: invoke(functionToCall, performanceClient, \"EventName\", \"correlationId\")(...argsToPassToFunction)\n * @param callback\n * @param eventName\n * @param logger\n * @param telemetryClient\n * @param correlationId\n * @returns\n * @internal\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nconst invoke = (callback, eventName, logger, telemetryClient, correlationId) => {\n    return (...args) => {\n        logger.trace(`Executing function ${eventName}`);\n        const inProgressEvent = telemetryClient?.startMeasurement(eventName, correlationId);\n        if (correlationId) {\n            // Track number of times this API is called in a single request\n            const eventCount = eventName + \"CallCount\";\n            telemetryClient?.incrementFields({ [eventCount]: 1 }, correlationId);\n        }\n        try {\n            const result = callback(...args);\n            inProgressEvent?.end({\n                success: true,\n            });\n            logger.trace(`Returning result from ${eventName}`);\n            return result;\n        }\n        catch (e) {\n            logger.trace(`Error occurred in ${eventName}`);\n            try {\n                logger.trace(JSON.stringify(e));\n            }\n            catch (e) {\n                logger.trace(\"Unable to print error message.\");\n            }\n            inProgressEvent?.end({\n                success: false,\n            }, e);\n            throw e;\n        }\n    };\n};\n/**\n * Wraps an async function with a performance measurement.\n * Usage: invokeAsync(functionToCall, performanceClient, \"EventName\", \"correlationId\")(...argsToPassToFunction)\n * @param callback\n * @param eventName\n * @param logger\n * @param telemetryClient\n * @param correlationId\n * @returns\n * @internal\n *\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nconst invokeAsync = (callback, eventName, logger, telemetryClient, correlationId) => {\n    return (...args) => {\n        logger.trace(`Executing function ${eventName}`);\n        const inProgressEvent = telemetryClient?.startMeasurement(eventName, correlationId);\n        if (correlationId) {\n            // Track number of times this API is called in a single request\n            const eventCount = eventName + \"CallCount\";\n            telemetryClient?.incrementFields({ [eventCount]: 1 }, correlationId);\n        }\n        telemetryClient?.setPreQueueTime(eventName, correlationId);\n        return callback(...args)\n            .then((response) => {\n            logger.trace(`Returning result from ${eventName}`);\n            inProgressEvent?.end({\n                success: true,\n            });\n            return response;\n        })\n            .catch((e) => {\n            logger.trace(`Error occurred in ${eventName}`);\n            try {\n                logger.trace(JSON.stringify(e));\n            }\n            catch (e) {\n                logger.trace(\"Unable to print error message.\");\n            }\n            inProgressEvent?.end({\n                success: false,\n            }, e);\n            throw e;\n        });\n    };\n};\n\n\n//# sourceMappingURL=FunctionWrappers.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtY29tbW9uL2Rpc3QvdXRpbHMvRnVuY3Rpb25XcmFwcGVycy5tanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQTtBQUNhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMkNBQTJDLFVBQVU7QUFDckQ7QUFDQTtBQUNBO0FBQ0E7QUFDQSwrQ0FBK0MsaUJBQWlCO0FBQ2hFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2Isa0RBQWtELFVBQVU7QUFDNUQ7QUFDQTtBQUNBO0FBQ0EsOENBQThDLFVBQVU7QUFDeEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDJDQUEyQyxVQUFVO0FBQ3JEO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsK0NBQStDLGlCQUFpQjtBQUNoRTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtEQUFrRCxVQUFVO0FBQzVEO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQSxTQUFTO0FBQ1Q7QUFDQSw4Q0FBOEMsVUFBVTtBQUN4RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0EsU0FBUztBQUNUO0FBQ0E7O0FBRStCO0FBQy9CIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZGFuaWVsMy12cDIvLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtY29tbW9uL2Rpc3QvdXRpbHMvRnVuY3Rpb25XcmFwcGVycy5tanM/NjllNiJdLCJzb3VyY2VzQ29udGVudCI6WyIvKiEgQGF6dXJlL21zYWwtY29tbW9uIHYxNC4xNC4wIDIwMjQtMDctMjMgKi9cbid1c2Ugc3RyaWN0Jztcbi8qXG4gKiBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi4gQWxsIHJpZ2h0cyByZXNlcnZlZC5cbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgTGljZW5zZS5cbiAqL1xuLyoqXG4gKiBXcmFwcyBhIGZ1bmN0aW9uIHdpdGggYSBwZXJmb3JtYW5jZSBtZWFzdXJlbWVudC5cbiAqIFVzYWdlOiBpbnZva2UoZnVuY3Rpb25Ub0NhbGwsIHBlcmZvcm1hbmNlQ2xpZW50LCBcIkV2ZW50TmFtZVwiLCBcImNvcnJlbGF0aW9uSWRcIikoLi4uYXJnc1RvUGFzc1RvRnVuY3Rpb24pXG4gKiBAcGFyYW0gY2FsbGJhY2tcbiAqIEBwYXJhbSBldmVudE5hbWVcbiAqIEBwYXJhbSBsb2dnZXJcbiAqIEBwYXJhbSB0ZWxlbWV0cnlDbGllbnRcbiAqIEBwYXJhbSBjb3JyZWxhdGlvbklkXG4gKiBAcmV0dXJuc1xuICogQGludGVybmFsXG4gKi9cbi8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBAdHlwZXNjcmlwdC1lc2xpbnQvbm8tZXhwbGljaXQtYW55XG5jb25zdCBpbnZva2UgPSAoY2FsbGJhY2ssIGV2ZW50TmFtZSwgbG9nZ2VyLCB0ZWxlbWV0cnlDbGllbnQsIGNvcnJlbGF0aW9uSWQpID0+IHtcbiAgICByZXR1cm4gKC4uLmFyZ3MpID0+IHtcbiAgICAgICAgbG9nZ2VyLnRyYWNlKGBFeGVjdXRpbmcgZnVuY3Rpb24gJHtldmVudE5hbWV9YCk7XG4gICAgICAgIGNvbnN0IGluUHJvZ3Jlc3NFdmVudCA9IHRlbGVtZXRyeUNsaWVudD8uc3RhcnRNZWFzdXJlbWVudChldmVudE5hbWUsIGNvcnJlbGF0aW9uSWQpO1xuICAgICAgICBpZiAoY29ycmVsYXRpb25JZCkge1xuICAgICAgICAgICAgLy8gVHJhY2sgbnVtYmVyIG9mIHRpbWVzIHRoaXMgQVBJIGlzIGNhbGxlZCBpbiBhIHNpbmdsZSByZXF1ZXN0XG4gICAgICAgICAgICBjb25zdCBldmVudENvdW50ID0gZXZlbnROYW1lICsgXCJDYWxsQ291bnRcIjtcbiAgICAgICAgICAgIHRlbGVtZXRyeUNsaWVudD8uaW5jcmVtZW50RmllbGRzKHsgW2V2ZW50Q291bnRdOiAxIH0sIGNvcnJlbGF0aW9uSWQpO1xuICAgICAgICB9XG4gICAgICAgIHRyeSB7XG4gICAgICAgICAgICBjb25zdCByZXN1bHQgPSBjYWxsYmFjayguLi5hcmdzKTtcbiAgICAgICAgICAgIGluUHJvZ3Jlc3NFdmVudD8uZW5kKHtcbiAgICAgICAgICAgICAgICBzdWNjZXNzOiB0cnVlLFxuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICBsb2dnZXIudHJhY2UoYFJldHVybmluZyByZXN1bHQgZnJvbSAke2V2ZW50TmFtZX1gKTtcbiAgICAgICAgICAgIHJldHVybiByZXN1bHQ7XG4gICAgICAgIH1cbiAgICAgICAgY2F0Y2ggKGUpIHtcbiAgICAgICAgICAgIGxvZ2dlci50cmFjZShgRXJyb3Igb2NjdXJyZWQgaW4gJHtldmVudE5hbWV9YCk7XG4gICAgICAgICAgICB0cnkge1xuICAgICAgICAgICAgICAgIGxvZ2dlci50cmFjZShKU09OLnN0cmluZ2lmeShlKSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBjYXRjaCAoZSkge1xuICAgICAgICAgICAgICAgIGxvZ2dlci50cmFjZShcIlVuYWJsZSB0byBwcmludCBlcnJvciBtZXNzYWdlLlwiKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGluUHJvZ3Jlc3NFdmVudD8uZW5kKHtcbiAgICAgICAgICAgICAgICBzdWNjZXNzOiBmYWxzZSxcbiAgICAgICAgICAgIH0sIGUpO1xuICAgICAgICAgICAgdGhyb3cgZTtcbiAgICAgICAgfVxuICAgIH07XG59O1xuLyoqXG4gKiBXcmFwcyBhbiBhc3luYyBmdW5jdGlvbiB3aXRoIGEgcGVyZm9ybWFuY2UgbWVhc3VyZW1lbnQuXG4gKiBVc2FnZTogaW52b2tlQXN5bmMoZnVuY3Rpb25Ub0NhbGwsIHBlcmZvcm1hbmNlQ2xpZW50LCBcIkV2ZW50TmFtZVwiLCBcImNvcnJlbGF0aW9uSWRcIikoLi4uYXJnc1RvUGFzc1RvRnVuY3Rpb24pXG4gKiBAcGFyYW0gY2FsbGJhY2tcbiAqIEBwYXJhbSBldmVudE5hbWVcbiAqIEBwYXJhbSBsb2dnZXJcbiAqIEBwYXJhbSB0ZWxlbWV0cnlDbGllbnRcbiAqIEBwYXJhbSBjb3JyZWxhdGlvbklkXG4gKiBAcmV0dXJuc1xuICogQGludGVybmFsXG4gKlxuICovXG4vLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgQHR5cGVzY3JpcHQtZXNsaW50L25vLWV4cGxpY2l0LWFueVxuY29uc3QgaW52b2tlQXN5bmMgPSAoY2FsbGJhY2ssIGV2ZW50TmFtZSwgbG9nZ2VyLCB0ZWxlbWV0cnlDbGllbnQsIGNvcnJlbGF0aW9uSWQpID0+IHtcbiAgICByZXR1cm4gKC4uLmFyZ3MpID0+IHtcbiAgICAgICAgbG9nZ2VyLnRyYWNlKGBFeGVjdXRpbmcgZnVuY3Rpb24gJHtldmVudE5hbWV9YCk7XG4gICAgICAgIGNvbnN0IGluUHJvZ3Jlc3NFdmVudCA9IHRlbGVtZXRyeUNsaWVudD8uc3RhcnRNZWFzdXJlbWVudChldmVudE5hbWUsIGNvcnJlbGF0aW9uSWQpO1xuICAgICAgICBpZiAoY29ycmVsYXRpb25JZCkge1xuICAgICAgICAgICAgLy8gVHJhY2sgbnVtYmVyIG9mIHRpbWVzIHRoaXMgQVBJIGlzIGNhbGxlZCBpbiBhIHNpbmdsZSByZXF1ZXN0XG4gICAgICAgICAgICBjb25zdCBldmVudENvdW50ID0gZXZlbnROYW1lICsgXCJDYWxsQ291bnRcIjtcbiAgICAgICAgICAgIHRlbGVtZXRyeUNsaWVudD8uaW5jcmVtZW50RmllbGRzKHsgW2V2ZW50Q291bnRdOiAxIH0sIGNvcnJlbGF0aW9uSWQpO1xuICAgICAgICB9XG4gICAgICAgIHRlbGVtZXRyeUNsaWVudD8uc2V0UHJlUXVldWVUaW1lKGV2ZW50TmFtZSwgY29ycmVsYXRpb25JZCk7XG4gICAgICAgIHJldHVybiBjYWxsYmFjayguLi5hcmdzKVxuICAgICAgICAgICAgLnRoZW4oKHJlc3BvbnNlKSA9PiB7XG4gICAgICAgICAgICBsb2dnZXIudHJhY2UoYFJldHVybmluZyByZXN1bHQgZnJvbSAke2V2ZW50TmFtZX1gKTtcbiAgICAgICAgICAgIGluUHJvZ3Jlc3NFdmVudD8uZW5kKHtcbiAgICAgICAgICAgICAgICBzdWNjZXNzOiB0cnVlLFxuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICByZXR1cm4gcmVzcG9uc2U7XG4gICAgICAgIH0pXG4gICAgICAgICAgICAuY2F0Y2goKGUpID0+IHtcbiAgICAgICAgICAgIGxvZ2dlci50cmFjZShgRXJyb3Igb2NjdXJyZWQgaW4gJHtldmVudE5hbWV9YCk7XG4gICAgICAgICAgICB0cnkge1xuICAgICAgICAgICAgICAgIGxvZ2dlci50cmFjZShKU09OLnN0cmluZ2lmeShlKSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBjYXRjaCAoZSkge1xuICAgICAgICAgICAgICAgIGxvZ2dlci50cmFjZShcIlVuYWJsZSB0byBwcmludCBlcnJvciBtZXNzYWdlLlwiKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGluUHJvZ3Jlc3NFdmVudD8uZW5kKHtcbiAgICAgICAgICAgICAgICBzdWNjZXNzOiBmYWxzZSxcbiAgICAgICAgICAgIH0sIGUpO1xuICAgICAgICAgICAgdGhyb3cgZTtcbiAgICAgICAgfSk7XG4gICAgfTtcbn07XG5cbmV4cG9ydCB7IGludm9rZSwgaW52b2tlQXN5bmMgfTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPUZ1bmN0aW9uV3JhcHBlcnMubWpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/msal-common/dist/utils/FunctionWrappers.mjs\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/msal-common/dist/utils/ProtocolUtils.mjs":
/*!**********************************************************************!*\
  !*** ./node_modules/@azure/msal-common/dist/utils/ProtocolUtils.mjs ***!
  \**********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ProtocolUtils: () => (/* binding */ ProtocolUtils)\n/* harmony export */ });\n/* harmony import */ var _Constants_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Constants.mjs */ \"(rsc)/./node_modules/@azure/msal-common/dist/utils/Constants.mjs\");\n/* harmony import */ var _error_ClientAuthError_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../error/ClientAuthError.mjs */ \"(rsc)/./node_modules/@azure/msal-common/dist/error/ClientAuthError.mjs\");\n/* harmony import */ var _error_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../error/ClientAuthErrorCodes.mjs */ \"(rsc)/./node_modules/@azure/msal-common/dist/error/ClientAuthErrorCodes.mjs\");\n/*! @azure/msal-common v14.14.0 2024-07-23 */\n\n\n\n\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n/**\n * Class which provides helpers for OAuth 2.0 protocol specific values\n */\nclass ProtocolUtils {\n    /**\n     * Appends user state with random guid, or returns random guid.\n     * @param userState\n     * @param randomGuid\n     */\n    static setRequestState(cryptoObj, userState, meta) {\n        const libraryState = ProtocolUtils.generateLibraryState(cryptoObj, meta);\n        return userState\n            ? `${libraryState}${_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.Constants.RESOURCE_DELIM}${userState}`\n            : libraryState;\n    }\n    /**\n     * Generates the state value used by the common library.\n     * @param randomGuid\n     * @param cryptoObj\n     */\n    static generateLibraryState(cryptoObj, meta) {\n        if (!cryptoObj) {\n            throw (0,_error_ClientAuthError_mjs__WEBPACK_IMPORTED_MODULE_1__.createClientAuthError)(_error_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_2__.noCryptoObject);\n        }\n        // Create a state object containing a unique id and the timestamp of the request creation\n        const stateObj = {\n            id: cryptoObj.createNewGuid(),\n        };\n        if (meta) {\n            stateObj.meta = meta;\n        }\n        const stateString = JSON.stringify(stateObj);\n        return cryptoObj.base64Encode(stateString);\n    }\n    /**\n     * Parses the state into the RequestStateObject, which contains the LibraryState info and the state passed by the user.\n     * @param state\n     * @param cryptoObj\n     */\n    static parseRequestState(cryptoObj, state) {\n        if (!cryptoObj) {\n            throw (0,_error_ClientAuthError_mjs__WEBPACK_IMPORTED_MODULE_1__.createClientAuthError)(_error_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_2__.noCryptoObject);\n        }\n        if (!state) {\n            throw (0,_error_ClientAuthError_mjs__WEBPACK_IMPORTED_MODULE_1__.createClientAuthError)(_error_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_2__.invalidState);\n        }\n        try {\n            // Split the state between library state and user passed state and decode them separately\n            const splitState = state.split(_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.Constants.RESOURCE_DELIM);\n            const libraryState = splitState[0];\n            const userState = splitState.length > 1\n                ? splitState.slice(1).join(_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.Constants.RESOURCE_DELIM)\n                : _Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.Constants.EMPTY_STRING;\n            const libraryStateString = cryptoObj.base64Decode(libraryState);\n            const libraryStateObj = JSON.parse(libraryStateString);\n            return {\n                userRequestState: userState || _Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.Constants.EMPTY_STRING,\n                libraryState: libraryStateObj,\n            };\n        }\n        catch (e) {\n            throw (0,_error_ClientAuthError_mjs__WEBPACK_IMPORTED_MODULE_1__.createClientAuthError)(_error_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_2__.invalidState);\n        }\n    }\n}\n\n\n//# sourceMappingURL=ProtocolUtils.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtY29tbW9uL2Rpc3QvdXRpbHMvUHJvdG9jb2xVdGlscy5tanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBO0FBQ2E7QUFDK0I7QUFDeUI7QUFDWTs7QUFFakY7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUIsYUFBYSxFQUFFLHFEQUFTLGdCQUFnQixFQUFFLFVBQVU7QUFDckU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0JBQWtCLGlGQUFxQixDQUFDLDJFQUFjO0FBQ3REO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtCQUFrQixpRkFBcUIsQ0FBQywyRUFBYztBQUN0RDtBQUNBO0FBQ0Esa0JBQWtCLGlGQUFxQixDQUFDLHlFQUFZO0FBQ3BEO0FBQ0E7QUFDQTtBQUNBLDJDQUEyQyxxREFBUztBQUNwRDtBQUNBO0FBQ0EsMkNBQTJDLHFEQUFTO0FBQ3BELGtCQUFrQixxREFBUztBQUMzQjtBQUNBO0FBQ0E7QUFDQSwrQ0FBK0MscURBQVM7QUFDeEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrQkFBa0IsaUZBQXFCLENBQUMseUVBQVk7QUFDcEQ7QUFDQTtBQUNBOztBQUV5QjtBQUN6QiIsInNvdXJjZXMiOlsid2VicGFjazovL2RhbmllbDMtdnAyLy4vbm9kZV9tb2R1bGVzL0BhenVyZS9tc2FsLWNvbW1vbi9kaXN0L3V0aWxzL1Byb3RvY29sVXRpbHMubWpzPzEyMjIiXSwic291cmNlc0NvbnRlbnQiOlsiLyohIEBhenVyZS9tc2FsLWNvbW1vbiB2MTQuMTQuMCAyMDI0LTA3LTIzICovXG4ndXNlIHN0cmljdCc7XG5pbXBvcnQgeyBDb25zdGFudHMgfSBmcm9tICcuL0NvbnN0YW50cy5tanMnO1xuaW1wb3J0IHsgY3JlYXRlQ2xpZW50QXV0aEVycm9yIH0gZnJvbSAnLi4vZXJyb3IvQ2xpZW50QXV0aEVycm9yLm1qcyc7XG5pbXBvcnQgeyBub0NyeXB0b09iamVjdCwgaW52YWxpZFN0YXRlIH0gZnJvbSAnLi4vZXJyb3IvQ2xpZW50QXV0aEVycm9yQ29kZXMubWpzJztcblxuLypcbiAqIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLiBBbGwgcmlnaHRzIHJlc2VydmVkLlxuICogTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBMaWNlbnNlLlxuICovXG4vKipcbiAqIENsYXNzIHdoaWNoIHByb3ZpZGVzIGhlbHBlcnMgZm9yIE9BdXRoIDIuMCBwcm90b2NvbCBzcGVjaWZpYyB2YWx1ZXNcbiAqL1xuY2xhc3MgUHJvdG9jb2xVdGlscyB7XG4gICAgLyoqXG4gICAgICogQXBwZW5kcyB1c2VyIHN0YXRlIHdpdGggcmFuZG9tIGd1aWQsIG9yIHJldHVybnMgcmFuZG9tIGd1aWQuXG4gICAgICogQHBhcmFtIHVzZXJTdGF0ZVxuICAgICAqIEBwYXJhbSByYW5kb21HdWlkXG4gICAgICovXG4gICAgc3RhdGljIHNldFJlcXVlc3RTdGF0ZShjcnlwdG9PYmosIHVzZXJTdGF0ZSwgbWV0YSkge1xuICAgICAgICBjb25zdCBsaWJyYXJ5U3RhdGUgPSBQcm90b2NvbFV0aWxzLmdlbmVyYXRlTGlicmFyeVN0YXRlKGNyeXB0b09iaiwgbWV0YSk7XG4gICAgICAgIHJldHVybiB1c2VyU3RhdGVcbiAgICAgICAgICAgID8gYCR7bGlicmFyeVN0YXRlfSR7Q29uc3RhbnRzLlJFU09VUkNFX0RFTElNfSR7dXNlclN0YXRlfWBcbiAgICAgICAgICAgIDogbGlicmFyeVN0YXRlO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBHZW5lcmF0ZXMgdGhlIHN0YXRlIHZhbHVlIHVzZWQgYnkgdGhlIGNvbW1vbiBsaWJyYXJ5LlxuICAgICAqIEBwYXJhbSByYW5kb21HdWlkXG4gICAgICogQHBhcmFtIGNyeXB0b09ialxuICAgICAqL1xuICAgIHN0YXRpYyBnZW5lcmF0ZUxpYnJhcnlTdGF0ZShjcnlwdG9PYmosIG1ldGEpIHtcbiAgICAgICAgaWYgKCFjcnlwdG9PYmopIHtcbiAgICAgICAgICAgIHRocm93IGNyZWF0ZUNsaWVudEF1dGhFcnJvcihub0NyeXB0b09iamVjdCk7XG4gICAgICAgIH1cbiAgICAgICAgLy8gQ3JlYXRlIGEgc3RhdGUgb2JqZWN0IGNvbnRhaW5pbmcgYSB1bmlxdWUgaWQgYW5kIHRoZSB0aW1lc3RhbXAgb2YgdGhlIHJlcXVlc3QgY3JlYXRpb25cbiAgICAgICAgY29uc3Qgc3RhdGVPYmogPSB7XG4gICAgICAgICAgICBpZDogY3J5cHRvT2JqLmNyZWF0ZU5ld0d1aWQoKSxcbiAgICAgICAgfTtcbiAgICAgICAgaWYgKG1ldGEpIHtcbiAgICAgICAgICAgIHN0YXRlT2JqLm1ldGEgPSBtZXRhO1xuICAgICAgICB9XG4gICAgICAgIGNvbnN0IHN0YXRlU3RyaW5nID0gSlNPTi5zdHJpbmdpZnkoc3RhdGVPYmopO1xuICAgICAgICByZXR1cm4gY3J5cHRvT2JqLmJhc2U2NEVuY29kZShzdGF0ZVN0cmluZyk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIFBhcnNlcyB0aGUgc3RhdGUgaW50byB0aGUgUmVxdWVzdFN0YXRlT2JqZWN0LCB3aGljaCBjb250YWlucyB0aGUgTGlicmFyeVN0YXRlIGluZm8gYW5kIHRoZSBzdGF0ZSBwYXNzZWQgYnkgdGhlIHVzZXIuXG4gICAgICogQHBhcmFtIHN0YXRlXG4gICAgICogQHBhcmFtIGNyeXB0b09ialxuICAgICAqL1xuICAgIHN0YXRpYyBwYXJzZVJlcXVlc3RTdGF0ZShjcnlwdG9PYmosIHN0YXRlKSB7XG4gICAgICAgIGlmICghY3J5cHRvT2JqKSB7XG4gICAgICAgICAgICB0aHJvdyBjcmVhdGVDbGllbnRBdXRoRXJyb3Iobm9DcnlwdG9PYmplY3QpO1xuICAgICAgICB9XG4gICAgICAgIGlmICghc3RhdGUpIHtcbiAgICAgICAgICAgIHRocm93IGNyZWF0ZUNsaWVudEF1dGhFcnJvcihpbnZhbGlkU3RhdGUpO1xuICAgICAgICB9XG4gICAgICAgIHRyeSB7XG4gICAgICAgICAgICAvLyBTcGxpdCB0aGUgc3RhdGUgYmV0d2VlbiBsaWJyYXJ5IHN0YXRlIGFuZCB1c2VyIHBhc3NlZCBzdGF0ZSBhbmQgZGVjb2RlIHRoZW0gc2VwYXJhdGVseVxuICAgICAgICAgICAgY29uc3Qgc3BsaXRTdGF0ZSA9IHN0YXRlLnNwbGl0KENvbnN0YW50cy5SRVNPVVJDRV9ERUxJTSk7XG4gICAgICAgICAgICBjb25zdCBsaWJyYXJ5U3RhdGUgPSBzcGxpdFN0YXRlWzBdO1xuICAgICAgICAgICAgY29uc3QgdXNlclN0YXRlID0gc3BsaXRTdGF0ZS5sZW5ndGggPiAxXG4gICAgICAgICAgICAgICAgPyBzcGxpdFN0YXRlLnNsaWNlKDEpLmpvaW4oQ29uc3RhbnRzLlJFU09VUkNFX0RFTElNKVxuICAgICAgICAgICAgICAgIDogQ29uc3RhbnRzLkVNUFRZX1NUUklORztcbiAgICAgICAgICAgIGNvbnN0IGxpYnJhcnlTdGF0ZVN0cmluZyA9IGNyeXB0b09iai5iYXNlNjREZWNvZGUobGlicmFyeVN0YXRlKTtcbiAgICAgICAgICAgIGNvbnN0IGxpYnJhcnlTdGF0ZU9iaiA9IEpTT04ucGFyc2UobGlicmFyeVN0YXRlU3RyaW5nKTtcbiAgICAgICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICAgICAgdXNlclJlcXVlc3RTdGF0ZTogdXNlclN0YXRlIHx8IENvbnN0YW50cy5FTVBUWV9TVFJJTkcsXG4gICAgICAgICAgICAgICAgbGlicmFyeVN0YXRlOiBsaWJyYXJ5U3RhdGVPYmosXG4gICAgICAgICAgICB9O1xuICAgICAgICB9XG4gICAgICAgIGNhdGNoIChlKSB7XG4gICAgICAgICAgICB0aHJvdyBjcmVhdGVDbGllbnRBdXRoRXJyb3IoaW52YWxpZFN0YXRlKTtcbiAgICAgICAgfVxuICAgIH1cbn1cblxuZXhwb3J0IHsgUHJvdG9jb2xVdGlscyB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9UHJvdG9jb2xVdGlscy5tanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/msal-common/dist/utils/ProtocolUtils.mjs\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/msal-common/dist/utils/StringUtils.mjs":
/*!********************************************************************!*\
  !*** ./node_modules/@azure/msal-common/dist/utils/StringUtils.mjs ***!
  \********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   StringUtils: () => (/* binding */ StringUtils)\n/* harmony export */ });\n/*! @azure/msal-common v14.14.0 2024-07-23 */\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n/**\n * @hidden\n */\nclass StringUtils {\n    /**\n     * Check if stringified object is empty\n     * @param strObj\n     */\n    static isEmptyObj(strObj) {\n        if (strObj) {\n            try {\n                const obj = JSON.parse(strObj);\n                return Object.keys(obj).length === 0;\n            }\n            catch (e) { }\n        }\n        return true;\n    }\n    static startsWith(str, search) {\n        return str.indexOf(search) === 0;\n    }\n    static endsWith(str, search) {\n        return (str.length >= search.length &&\n            str.lastIndexOf(search) === str.length - search.length);\n    }\n    /**\n     * Parses string into an object.\n     *\n     * @param query\n     */\n    static queryStringToObject(query) {\n        const obj = {};\n        const params = query.split(\"&\");\n        const decode = (s) => decodeURIComponent(s.replace(/\\+/g, \" \"));\n        params.forEach((pair) => {\n            if (pair.trim()) {\n                const [key, value] = pair.split(/=(.+)/g, 2); // Split on the first occurence of the '=' character\n                if (key && value) {\n                    obj[decode(key)] = decode(value);\n                }\n            }\n        });\n        return obj;\n    }\n    /**\n     * Trims entries in an array.\n     *\n     * @param arr\n     */\n    static trimArrayEntries(arr) {\n        return arr.map((entry) => entry.trim());\n    }\n    /**\n     * Removes empty strings from array\n     * @param arr\n     */\n    static removeEmptyStringsFromArray(arr) {\n        return arr.filter((entry) => {\n            return !!entry;\n        });\n    }\n    /**\n     * Attempts to parse a string into JSON\n     * @param str\n     */\n    static jsonParseHelper(str) {\n        try {\n            return JSON.parse(str);\n        }\n        catch (e) {\n            return null;\n        }\n    }\n    /**\n     * Tests if a given string matches a given pattern, with support for wildcards and queries.\n     * @param pattern Wildcard pattern to string match. Supports \"*\" for wildcards and \"?\" for queries\n     * @param input String to match against\n     */\n    static matchPattern(pattern, input) {\n        /**\n         * Wildcard support: https://stackoverflow.com/a/3117248/4888559\n         * Queries: replaces \"?\" in string with escaped \"\\?\" for regex test\n         */\n        // eslint-disable-next-line security/detect-non-literal-regexp\n        const regex = new RegExp(pattern\n            .replace(/\\\\/g, \"\\\\\\\\\")\n            .replace(/\\*/g, \"[^ ]*\")\n            .replace(/\\?/g, \"\\\\?\"));\n        return regex.test(input);\n    }\n}\n\n\n//# sourceMappingURL=StringUtils.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtY29tbW9uL2Rpc3QvdXRpbHMvU3RyaW5nVXRpbHMubWpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQTtBQUNhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw4REFBOEQ7QUFDOUQ7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFdUI7QUFDdkIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9kYW5pZWwzLXZwMi8uL25vZGVfbW9kdWxlcy9AYXp1cmUvbXNhbC1jb21tb24vZGlzdC91dGlscy9TdHJpbmdVdGlscy5tanM/YzkxMSJdLCJzb3VyY2VzQ29udGVudCI6WyIvKiEgQGF6dXJlL21zYWwtY29tbW9uIHYxNC4xNC4wIDIwMjQtMDctMjMgKi9cbid1c2Ugc3RyaWN0Jztcbi8qXG4gKiBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi4gQWxsIHJpZ2h0cyByZXNlcnZlZC5cbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgTGljZW5zZS5cbiAqL1xuLyoqXG4gKiBAaGlkZGVuXG4gKi9cbmNsYXNzIFN0cmluZ1V0aWxzIHtcbiAgICAvKipcbiAgICAgKiBDaGVjayBpZiBzdHJpbmdpZmllZCBvYmplY3QgaXMgZW1wdHlcbiAgICAgKiBAcGFyYW0gc3RyT2JqXG4gICAgICovXG4gICAgc3RhdGljIGlzRW1wdHlPYmooc3RyT2JqKSB7XG4gICAgICAgIGlmIChzdHJPYmopIHtcbiAgICAgICAgICAgIHRyeSB7XG4gICAgICAgICAgICAgICAgY29uc3Qgb2JqID0gSlNPTi5wYXJzZShzdHJPYmopO1xuICAgICAgICAgICAgICAgIHJldHVybiBPYmplY3Qua2V5cyhvYmopLmxlbmd0aCA9PT0gMDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGNhdGNoIChlKSB7IH1cbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICB9XG4gICAgc3RhdGljIHN0YXJ0c1dpdGgoc3RyLCBzZWFyY2gpIHtcbiAgICAgICAgcmV0dXJuIHN0ci5pbmRleE9mKHNlYXJjaCkgPT09IDA7XG4gICAgfVxuICAgIHN0YXRpYyBlbmRzV2l0aChzdHIsIHNlYXJjaCkge1xuICAgICAgICByZXR1cm4gKHN0ci5sZW5ndGggPj0gc2VhcmNoLmxlbmd0aCAmJlxuICAgICAgICAgICAgc3RyLmxhc3RJbmRleE9mKHNlYXJjaCkgPT09IHN0ci5sZW5ndGggLSBzZWFyY2gubGVuZ3RoKTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogUGFyc2VzIHN0cmluZyBpbnRvIGFuIG9iamVjdC5cbiAgICAgKlxuICAgICAqIEBwYXJhbSBxdWVyeVxuICAgICAqL1xuICAgIHN0YXRpYyBxdWVyeVN0cmluZ1RvT2JqZWN0KHF1ZXJ5KSB7XG4gICAgICAgIGNvbnN0IG9iaiA9IHt9O1xuICAgICAgICBjb25zdCBwYXJhbXMgPSBxdWVyeS5zcGxpdChcIiZcIik7XG4gICAgICAgIGNvbnN0IGRlY29kZSA9IChzKSA9PiBkZWNvZGVVUklDb21wb25lbnQocy5yZXBsYWNlKC9cXCsvZywgXCIgXCIpKTtcbiAgICAgICAgcGFyYW1zLmZvckVhY2goKHBhaXIpID0+IHtcbiAgICAgICAgICAgIGlmIChwYWlyLnRyaW0oKSkge1xuICAgICAgICAgICAgICAgIGNvbnN0IFtrZXksIHZhbHVlXSA9IHBhaXIuc3BsaXQoLz0oLispL2csIDIpOyAvLyBTcGxpdCBvbiB0aGUgZmlyc3Qgb2NjdXJlbmNlIG9mIHRoZSAnPScgY2hhcmFjdGVyXG4gICAgICAgICAgICAgICAgaWYgKGtleSAmJiB2YWx1ZSkge1xuICAgICAgICAgICAgICAgICAgICBvYmpbZGVjb2RlKGtleSldID0gZGVjb2RlKHZhbHVlKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH0pO1xuICAgICAgICByZXR1cm4gb2JqO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBUcmltcyBlbnRyaWVzIGluIGFuIGFycmF5LlxuICAgICAqXG4gICAgICogQHBhcmFtIGFyclxuICAgICAqL1xuICAgIHN0YXRpYyB0cmltQXJyYXlFbnRyaWVzKGFycikge1xuICAgICAgICByZXR1cm4gYXJyLm1hcCgoZW50cnkpID0+IGVudHJ5LnRyaW0oKSk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIFJlbW92ZXMgZW1wdHkgc3RyaW5ncyBmcm9tIGFycmF5XG4gICAgICogQHBhcmFtIGFyclxuICAgICAqL1xuICAgIHN0YXRpYyByZW1vdmVFbXB0eVN0cmluZ3NGcm9tQXJyYXkoYXJyKSB7XG4gICAgICAgIHJldHVybiBhcnIuZmlsdGVyKChlbnRyeSkgPT4ge1xuICAgICAgICAgICAgcmV0dXJuICEhZW50cnk7XG4gICAgICAgIH0pO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBBdHRlbXB0cyB0byBwYXJzZSBhIHN0cmluZyBpbnRvIEpTT05cbiAgICAgKiBAcGFyYW0gc3RyXG4gICAgICovXG4gICAgc3RhdGljIGpzb25QYXJzZUhlbHBlcihzdHIpIHtcbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgIHJldHVybiBKU09OLnBhcnNlKHN0cik7XG4gICAgICAgIH1cbiAgICAgICAgY2F0Y2ggKGUpIHtcbiAgICAgICAgICAgIHJldHVybiBudWxsO1xuICAgICAgICB9XG4gICAgfVxuICAgIC8qKlxuICAgICAqIFRlc3RzIGlmIGEgZ2l2ZW4gc3RyaW5nIG1hdGNoZXMgYSBnaXZlbiBwYXR0ZXJuLCB3aXRoIHN1cHBvcnQgZm9yIHdpbGRjYXJkcyBhbmQgcXVlcmllcy5cbiAgICAgKiBAcGFyYW0gcGF0dGVybiBXaWxkY2FyZCBwYXR0ZXJuIHRvIHN0cmluZyBtYXRjaC4gU3VwcG9ydHMgXCIqXCIgZm9yIHdpbGRjYXJkcyBhbmQgXCI/XCIgZm9yIHF1ZXJpZXNcbiAgICAgKiBAcGFyYW0gaW5wdXQgU3RyaW5nIHRvIG1hdGNoIGFnYWluc3RcbiAgICAgKi9cbiAgICBzdGF0aWMgbWF0Y2hQYXR0ZXJuKHBhdHRlcm4sIGlucHV0KSB7XG4gICAgICAgIC8qKlxuICAgICAgICAgKiBXaWxkY2FyZCBzdXBwb3J0OiBodHRwczovL3N0YWNrb3ZlcmZsb3cuY29tL2EvMzExNzI0OC80ODg4NTU5XG4gICAgICAgICAqIFF1ZXJpZXM6IHJlcGxhY2VzIFwiP1wiIGluIHN0cmluZyB3aXRoIGVzY2FwZWQgXCJcXD9cIiBmb3IgcmVnZXggdGVzdFxuICAgICAgICAgKi9cbiAgICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIHNlY3VyaXR5L2RldGVjdC1ub24tbGl0ZXJhbC1yZWdleHBcbiAgICAgICAgY29uc3QgcmVnZXggPSBuZXcgUmVnRXhwKHBhdHRlcm5cbiAgICAgICAgICAgIC5yZXBsYWNlKC9cXFxcL2csIFwiXFxcXFxcXFxcIilcbiAgICAgICAgICAgIC5yZXBsYWNlKC9cXCovZywgXCJbXiBdKlwiKVxuICAgICAgICAgICAgLnJlcGxhY2UoL1xcPy9nLCBcIlxcXFw/XCIpKTtcbiAgICAgICAgcmV0dXJuIHJlZ2V4LnRlc3QoaW5wdXQpO1xuICAgIH1cbn1cblxuZXhwb3J0IHsgU3RyaW5nVXRpbHMgfTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPVN0cmluZ1V0aWxzLm1qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/msal-common/dist/utils/StringUtils.mjs\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/msal-common/dist/utils/TimeUtils.mjs":
/*!******************************************************************!*\
  !*** ./node_modules/@azure/msal-common/dist/utils/TimeUtils.mjs ***!
  \******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   delay: () => (/* binding */ delay),\n/* harmony export */   isTokenExpired: () => (/* binding */ isTokenExpired),\n/* harmony export */   nowSeconds: () => (/* binding */ nowSeconds),\n/* harmony export */   wasClockTurnedBack: () => (/* binding */ wasClockTurnedBack)\n/* harmony export */ });\n/*! @azure/msal-common v14.14.0 2024-07-23 */\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n/**\n * Utility functions for managing date and time operations.\n */\n/**\n * return the current time in Unix time (seconds).\n */\nfunction nowSeconds() {\n    // Date.getTime() returns in milliseconds.\n    return Math.round(new Date().getTime() / 1000.0);\n}\n/**\n * check if a token is expired based on given UTC time in seconds.\n * @param expiresOn\n */\nfunction isTokenExpired(expiresOn, offset) {\n    // check for access token expiry\n    const expirationSec = Number(expiresOn) || 0;\n    const offsetCurrentTimeSec = nowSeconds() + offset;\n    // If current time + offset is greater than token expiration time, then token is expired.\n    return offsetCurrentTimeSec > expirationSec;\n}\n/**\n * If the current time is earlier than the time that a token was cached at, we must discard the token\n * i.e. The system clock was turned back after acquiring the cached token\n * @param cachedAt\n * @param offset\n */\nfunction wasClockTurnedBack(cachedAt) {\n    const cachedAtSec = Number(cachedAt);\n    return cachedAtSec > nowSeconds();\n}\n/**\n * Waits for t number of milliseconds\n * @param t number\n * @param value T\n */\nfunction delay(t, value) {\n    return new Promise((resolve) => setTimeout(() => resolve(value), t));\n}\n\n\n//# sourceMappingURL=TimeUtils.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtY29tbW9uL2Rpc3QvdXRpbHMvVGltZVV0aWxzLm1qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7QUFDYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVpRTtBQUNqRSIsInNvdXJjZXMiOlsid2VicGFjazovL2RhbmllbDMtdnAyLy4vbm9kZV9tb2R1bGVzL0BhenVyZS9tc2FsLWNvbW1vbi9kaXN0L3V0aWxzL1RpbWVVdGlscy5tanM/NjMyNCJdLCJzb3VyY2VzQ29udGVudCI6WyIvKiEgQGF6dXJlL21zYWwtY29tbW9uIHYxNC4xNC4wIDIwMjQtMDctMjMgKi9cbid1c2Ugc3RyaWN0Jztcbi8qXG4gKiBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi4gQWxsIHJpZ2h0cyByZXNlcnZlZC5cbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgTGljZW5zZS5cbiAqL1xuLyoqXG4gKiBVdGlsaXR5IGZ1bmN0aW9ucyBmb3IgbWFuYWdpbmcgZGF0ZSBhbmQgdGltZSBvcGVyYXRpb25zLlxuICovXG4vKipcbiAqIHJldHVybiB0aGUgY3VycmVudCB0aW1lIGluIFVuaXggdGltZSAoc2Vjb25kcykuXG4gKi9cbmZ1bmN0aW9uIG5vd1NlY29uZHMoKSB7XG4gICAgLy8gRGF0ZS5nZXRUaW1lKCkgcmV0dXJucyBpbiBtaWxsaXNlY29uZHMuXG4gICAgcmV0dXJuIE1hdGgucm91bmQobmV3IERhdGUoKS5nZXRUaW1lKCkgLyAxMDAwLjApO1xufVxuLyoqXG4gKiBjaGVjayBpZiBhIHRva2VuIGlzIGV4cGlyZWQgYmFzZWQgb24gZ2l2ZW4gVVRDIHRpbWUgaW4gc2Vjb25kcy5cbiAqIEBwYXJhbSBleHBpcmVzT25cbiAqL1xuZnVuY3Rpb24gaXNUb2tlbkV4cGlyZWQoZXhwaXJlc09uLCBvZmZzZXQpIHtcbiAgICAvLyBjaGVjayBmb3IgYWNjZXNzIHRva2VuIGV4cGlyeVxuICAgIGNvbnN0IGV4cGlyYXRpb25TZWMgPSBOdW1iZXIoZXhwaXJlc09uKSB8fCAwO1xuICAgIGNvbnN0IG9mZnNldEN1cnJlbnRUaW1lU2VjID0gbm93U2Vjb25kcygpICsgb2Zmc2V0O1xuICAgIC8vIElmIGN1cnJlbnQgdGltZSArIG9mZnNldCBpcyBncmVhdGVyIHRoYW4gdG9rZW4gZXhwaXJhdGlvbiB0aW1lLCB0aGVuIHRva2VuIGlzIGV4cGlyZWQuXG4gICAgcmV0dXJuIG9mZnNldEN1cnJlbnRUaW1lU2VjID4gZXhwaXJhdGlvblNlYztcbn1cbi8qKlxuICogSWYgdGhlIGN1cnJlbnQgdGltZSBpcyBlYXJsaWVyIHRoYW4gdGhlIHRpbWUgdGhhdCBhIHRva2VuIHdhcyBjYWNoZWQgYXQsIHdlIG11c3QgZGlzY2FyZCB0aGUgdG9rZW5cbiAqIGkuZS4gVGhlIHN5c3RlbSBjbG9jayB3YXMgdHVybmVkIGJhY2sgYWZ0ZXIgYWNxdWlyaW5nIHRoZSBjYWNoZWQgdG9rZW5cbiAqIEBwYXJhbSBjYWNoZWRBdFxuICogQHBhcmFtIG9mZnNldFxuICovXG5mdW5jdGlvbiB3YXNDbG9ja1R1cm5lZEJhY2soY2FjaGVkQXQpIHtcbiAgICBjb25zdCBjYWNoZWRBdFNlYyA9IE51bWJlcihjYWNoZWRBdCk7XG4gICAgcmV0dXJuIGNhY2hlZEF0U2VjID4gbm93U2Vjb25kcygpO1xufVxuLyoqXG4gKiBXYWl0cyBmb3IgdCBudW1iZXIgb2YgbWlsbGlzZWNvbmRzXG4gKiBAcGFyYW0gdCBudW1iZXJcbiAqIEBwYXJhbSB2YWx1ZSBUXG4gKi9cbmZ1bmN0aW9uIGRlbGF5KHQsIHZhbHVlKSB7XG4gICAgcmV0dXJuIG5ldyBQcm9taXNlKChyZXNvbHZlKSA9PiBzZXRUaW1lb3V0KCgpID0+IHJlc29sdmUodmFsdWUpLCB0KSk7XG59XG5cbmV4cG9ydCB7IGRlbGF5LCBpc1Rva2VuRXhwaXJlZCwgbm93U2Vjb25kcywgd2FzQ2xvY2tUdXJuZWRCYWNrIH07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1UaW1lVXRpbHMubWpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/msal-common/dist/utils/TimeUtils.mjs\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/msal-common/dist/utils/UrlUtils.mjs":
/*!*****************************************************************!*\
  !*** ./node_modules/@azure/msal-common/dist/utils/UrlUtils.mjs ***!
  \*****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getDeserializedResponse: () => (/* binding */ getDeserializedResponse),\n/* harmony export */   stripLeadingHashOrQuery: () => (/* binding */ stripLeadingHashOrQuery)\n/* harmony export */ });\n/* harmony import */ var _error_ClientAuthError_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../error/ClientAuthError.mjs */ \"(rsc)/./node_modules/@azure/msal-common/dist/error/ClientAuthError.mjs\");\n/* harmony import */ var _error_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../error/ClientAuthErrorCodes.mjs */ \"(rsc)/./node_modules/@azure/msal-common/dist/error/ClientAuthErrorCodes.mjs\");\n/*! @azure/msal-common v14.14.0 2024-07-23 */\n\n\n\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n/**\n * Parses hash string from given string. Returns empty string if no hash symbol is found.\n * @param hashString\n */\nfunction stripLeadingHashOrQuery(responseString) {\n    if (responseString.startsWith(\"#/\")) {\n        return responseString.substring(2);\n    }\n    else if (responseString.startsWith(\"#\") ||\n        responseString.startsWith(\"?\")) {\n        return responseString.substring(1);\n    }\n    return responseString;\n}\n/**\n * Returns URL hash as server auth code response object.\n */\nfunction getDeserializedResponse(responseString) {\n    // Check if given hash is empty\n    if (!responseString || responseString.indexOf(\"=\") < 0) {\n        return null;\n    }\n    try {\n        // Strip the # or ? symbol if present\n        const normalizedResponse = stripLeadingHashOrQuery(responseString);\n        // If # symbol was not present, above will return empty string, so give original hash value\n        const deserializedHash = Object.fromEntries(new URLSearchParams(normalizedResponse));\n        // Check for known response properties\n        if (deserializedHash.code ||\n            deserializedHash.error ||\n            deserializedHash.error_description ||\n            deserializedHash.state) {\n            return deserializedHash;\n        }\n    }\n    catch (e) {\n        throw (0,_error_ClientAuthError_mjs__WEBPACK_IMPORTED_MODULE_0__.createClientAuthError)(_error_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_1__.hashNotDeserialized);\n    }\n    return null;\n}\n\n\n//# sourceMappingURL=UrlUtils.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtY29tbW9uL2Rpc3QvdXRpbHMvVXJsVXRpbHMubWpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTtBQUNhO0FBQ3dEO0FBQ0c7O0FBRXhFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsY0FBYyxpRkFBcUIsQ0FBQyxnRkFBbUI7QUFDdkQ7QUFDQTtBQUNBOztBQUU0RDtBQUM1RCIsInNvdXJjZXMiOlsid2VicGFjazovL2RhbmllbDMtdnAyLy4vbm9kZV9tb2R1bGVzL0BhenVyZS9tc2FsLWNvbW1vbi9kaXN0L3V0aWxzL1VybFV0aWxzLm1qcz82YjZmIl0sInNvdXJjZXNDb250ZW50IjpbIi8qISBAYXp1cmUvbXNhbC1jb21tb24gdjE0LjE0LjAgMjAyNC0wNy0yMyAqL1xuJ3VzZSBzdHJpY3QnO1xuaW1wb3J0IHsgY3JlYXRlQ2xpZW50QXV0aEVycm9yIH0gZnJvbSAnLi4vZXJyb3IvQ2xpZW50QXV0aEVycm9yLm1qcyc7XG5pbXBvcnQgeyBoYXNoTm90RGVzZXJpYWxpemVkIH0gZnJvbSAnLi4vZXJyb3IvQ2xpZW50QXV0aEVycm9yQ29kZXMubWpzJztcblxuLypcbiAqIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLiBBbGwgcmlnaHRzIHJlc2VydmVkLlxuICogTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBMaWNlbnNlLlxuICovXG4vKipcbiAqIFBhcnNlcyBoYXNoIHN0cmluZyBmcm9tIGdpdmVuIHN0cmluZy4gUmV0dXJucyBlbXB0eSBzdHJpbmcgaWYgbm8gaGFzaCBzeW1ib2wgaXMgZm91bmQuXG4gKiBAcGFyYW0gaGFzaFN0cmluZ1xuICovXG5mdW5jdGlvbiBzdHJpcExlYWRpbmdIYXNoT3JRdWVyeShyZXNwb25zZVN0cmluZykge1xuICAgIGlmIChyZXNwb25zZVN0cmluZy5zdGFydHNXaXRoKFwiIy9cIikpIHtcbiAgICAgICAgcmV0dXJuIHJlc3BvbnNlU3RyaW5nLnN1YnN0cmluZygyKTtcbiAgICB9XG4gICAgZWxzZSBpZiAocmVzcG9uc2VTdHJpbmcuc3RhcnRzV2l0aChcIiNcIikgfHxcbiAgICAgICAgcmVzcG9uc2VTdHJpbmcuc3RhcnRzV2l0aChcIj9cIikpIHtcbiAgICAgICAgcmV0dXJuIHJlc3BvbnNlU3RyaW5nLnN1YnN0cmluZygxKTtcbiAgICB9XG4gICAgcmV0dXJuIHJlc3BvbnNlU3RyaW5nO1xufVxuLyoqXG4gKiBSZXR1cm5zIFVSTCBoYXNoIGFzIHNlcnZlciBhdXRoIGNvZGUgcmVzcG9uc2Ugb2JqZWN0LlxuICovXG5mdW5jdGlvbiBnZXREZXNlcmlhbGl6ZWRSZXNwb25zZShyZXNwb25zZVN0cmluZykge1xuICAgIC8vIENoZWNrIGlmIGdpdmVuIGhhc2ggaXMgZW1wdHlcbiAgICBpZiAoIXJlc3BvbnNlU3RyaW5nIHx8IHJlc3BvbnNlU3RyaW5nLmluZGV4T2YoXCI9XCIpIDwgMCkge1xuICAgICAgICByZXR1cm4gbnVsbDtcbiAgICB9XG4gICAgdHJ5IHtcbiAgICAgICAgLy8gU3RyaXAgdGhlICMgb3IgPyBzeW1ib2wgaWYgcHJlc2VudFxuICAgICAgICBjb25zdCBub3JtYWxpemVkUmVzcG9uc2UgPSBzdHJpcExlYWRpbmdIYXNoT3JRdWVyeShyZXNwb25zZVN0cmluZyk7XG4gICAgICAgIC8vIElmICMgc3ltYm9sIHdhcyBub3QgcHJlc2VudCwgYWJvdmUgd2lsbCByZXR1cm4gZW1wdHkgc3RyaW5nLCBzbyBnaXZlIG9yaWdpbmFsIGhhc2ggdmFsdWVcbiAgICAgICAgY29uc3QgZGVzZXJpYWxpemVkSGFzaCA9IE9iamVjdC5mcm9tRW50cmllcyhuZXcgVVJMU2VhcmNoUGFyYW1zKG5vcm1hbGl6ZWRSZXNwb25zZSkpO1xuICAgICAgICAvLyBDaGVjayBmb3Iga25vd24gcmVzcG9uc2UgcHJvcGVydGllc1xuICAgICAgICBpZiAoZGVzZXJpYWxpemVkSGFzaC5jb2RlIHx8XG4gICAgICAgICAgICBkZXNlcmlhbGl6ZWRIYXNoLmVycm9yIHx8XG4gICAgICAgICAgICBkZXNlcmlhbGl6ZWRIYXNoLmVycm9yX2Rlc2NyaXB0aW9uIHx8XG4gICAgICAgICAgICBkZXNlcmlhbGl6ZWRIYXNoLnN0YXRlKSB7XG4gICAgICAgICAgICByZXR1cm4gZGVzZXJpYWxpemVkSGFzaDtcbiAgICAgICAgfVxuICAgIH1cbiAgICBjYXRjaCAoZSkge1xuICAgICAgICB0aHJvdyBjcmVhdGVDbGllbnRBdXRoRXJyb3IoaGFzaE5vdERlc2VyaWFsaXplZCk7XG4gICAgfVxuICAgIHJldHVybiBudWxsO1xufVxuXG5leHBvcnQgeyBnZXREZXNlcmlhbGl6ZWRSZXNwb25zZSwgc3RyaXBMZWFkaW5nSGFzaE9yUXVlcnkgfTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPVVybFV0aWxzLm1qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/msal-common/dist/utils/UrlUtils.mjs\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/msal-node/dist/cache/NodeStorage.mjs":
/*!******************************************************************!*\
  !*** ./node_modules/@azure/msal-node/dist/cache/NodeStorage.mjs ***!
  \******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   NodeStorage: () => (/* binding */ NodeStorage)\n/* harmony export */ });\n/* harmony import */ var _azure_msal_common__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @azure/msal-common */ \"(rsc)/./node_modules/@azure/msal-common/dist/cache/CacheManager.mjs\");\n/* harmony import */ var _azure_msal_common__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @azure/msal-common */ \"(rsc)/./node_modules/@azure/msal-common/dist/cache/entities/AccountEntity.mjs\");\n/* harmony import */ var _azure_msal_common__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @azure/msal-common */ \"(rsc)/./node_modules/@azure/msal-common/dist/cache/utils/CacheHelpers.mjs\");\n/* harmony import */ var _serializer_Deserializer_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./serializer/Deserializer.mjs */ \"(rsc)/./node_modules/@azure/msal-node/dist/cache/serializer/Deserializer.mjs\");\n/* harmony import */ var _serializer_Serializer_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./serializer/Serializer.mjs */ \"(rsc)/./node_modules/@azure/msal-node/dist/cache/serializer/Serializer.mjs\");\n/*! @azure/msal-node v2.12.0 2024-07-23 */\n\n\n\n\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n/**\n * This class implements Storage for node, reading cache from user specified storage location or an  extension library\n * @public\n */\nclass NodeStorage extends _azure_msal_common__WEBPACK_IMPORTED_MODULE_2__.CacheManager {\n    constructor(logger, clientId, cryptoImpl, staticAuthorityOptions) {\n        super(clientId, cryptoImpl, logger, staticAuthorityOptions);\n        this.cache = {};\n        this.changeEmitters = [];\n        this.logger = logger;\n    }\n    /**\n     * Queue up callbacks\n     * @param func - a callback function for cache change indication\n     */\n    registerChangeEmitter(func) {\n        this.changeEmitters.push(func);\n    }\n    /**\n     * Invoke the callback when cache changes\n     */\n    emitChange() {\n        this.changeEmitters.forEach((func) => func.call(null));\n    }\n    /**\n     * Converts cacheKVStore to InMemoryCache\n     * @param cache - key value store\n     */\n    cacheToInMemoryCache(cache) {\n        const inMemoryCache = {\n            accounts: {},\n            idTokens: {},\n            accessTokens: {},\n            refreshTokens: {},\n            appMetadata: {},\n        };\n        for (const key in cache) {\n            const value = cache[key];\n            if (typeof value !== \"object\") {\n                continue;\n            }\n            if (value instanceof _azure_msal_common__WEBPACK_IMPORTED_MODULE_3__.AccountEntity) {\n                inMemoryCache.accounts[key] = value;\n            }\n            else if (_azure_msal_common__WEBPACK_IMPORTED_MODULE_4__.isIdTokenEntity(value)) {\n                inMemoryCache.idTokens[key] = value;\n            }\n            else if (_azure_msal_common__WEBPACK_IMPORTED_MODULE_4__.isAccessTokenEntity(value)) {\n                inMemoryCache.accessTokens[key] = value;\n            }\n            else if (_azure_msal_common__WEBPACK_IMPORTED_MODULE_4__.isRefreshTokenEntity(value)) {\n                inMemoryCache.refreshTokens[key] = value;\n            }\n            else if (_azure_msal_common__WEBPACK_IMPORTED_MODULE_4__.isAppMetadataEntity(key, value)) {\n                inMemoryCache.appMetadata[key] = value;\n            }\n            else {\n                continue;\n            }\n        }\n        return inMemoryCache;\n    }\n    /**\n     * converts inMemoryCache to CacheKVStore\n     * @param inMemoryCache - kvstore map for inmemory\n     */\n    inMemoryCacheToCache(inMemoryCache) {\n        // convert in memory cache to a flat Key-Value map\n        let cache = this.getCache();\n        cache = {\n            ...cache,\n            ...inMemoryCache.accounts,\n            ...inMemoryCache.idTokens,\n            ...inMemoryCache.accessTokens,\n            ...inMemoryCache.refreshTokens,\n            ...inMemoryCache.appMetadata,\n        };\n        // convert in memory cache to a flat Key-Value map\n        return cache;\n    }\n    /**\n     * gets the current in memory cache for the client\n     */\n    getInMemoryCache() {\n        this.logger.trace(\"Getting in-memory cache\");\n        // convert the cache key value store to inMemoryCache\n        const inMemoryCache = this.cacheToInMemoryCache(this.getCache());\n        return inMemoryCache;\n    }\n    /**\n     * sets the current in memory cache for the client\n     * @param inMemoryCache - key value map in memory\n     */\n    setInMemoryCache(inMemoryCache) {\n        this.logger.trace(\"Setting in-memory cache\");\n        // convert and append the inMemoryCache to cacheKVStore\n        const cache = this.inMemoryCacheToCache(inMemoryCache);\n        this.setCache(cache);\n        this.emitChange();\n    }\n    /**\n     * get the current cache key-value store\n     */\n    getCache() {\n        this.logger.trace(\"Getting cache key-value store\");\n        return this.cache;\n    }\n    /**\n     * sets the current cache (key value store)\n     * @param cacheMap - key value map\n     */\n    setCache(cache) {\n        this.logger.trace(\"Setting cache key value store\");\n        this.cache = cache;\n        // mark change in cache\n        this.emitChange();\n    }\n    /**\n     * Gets cache item with given key.\n     * @param key - lookup key for the cache entry\n     */\n    getItem(key) {\n        this.logger.tracePii(`Item key: ${key}`);\n        // read cache\n        const cache = this.getCache();\n        return cache[key];\n    }\n    /**\n     * Gets cache item with given key-value\n     * @param key - lookup key for the cache entry\n     * @param value - value of the cache entry\n     */\n    setItem(key, value) {\n        this.logger.tracePii(`Item key: ${key}`);\n        // read cache\n        const cache = this.getCache();\n        cache[key] = value;\n        // write to cache\n        this.setCache(cache);\n    }\n    getAccountKeys() {\n        const inMemoryCache = this.getInMemoryCache();\n        const accountKeys = Object.keys(inMemoryCache.accounts);\n        return accountKeys;\n    }\n    getTokenKeys() {\n        const inMemoryCache = this.getInMemoryCache();\n        const tokenKeys = {\n            idToken: Object.keys(inMemoryCache.idTokens),\n            accessToken: Object.keys(inMemoryCache.accessTokens),\n            refreshToken: Object.keys(inMemoryCache.refreshTokens),\n        };\n        return tokenKeys;\n    }\n    /**\n     * fetch the account entity\n     * @param accountKey - lookup key to fetch cache type AccountEntity\n     */\n    getAccount(accountKey) {\n        const accountEntity = this.getCachedAccountEntity(accountKey);\n        if (accountEntity && _azure_msal_common__WEBPACK_IMPORTED_MODULE_3__.AccountEntity.isAccountEntity(accountEntity)) {\n            return this.updateOutdatedCachedAccount(accountKey, accountEntity);\n        }\n        return null;\n    }\n    /**\n     * Reads account from cache, builds it into an account entity and returns it.\n     * @param accountKey\n     * @returns\n     */\n    getCachedAccountEntity(accountKey) {\n        const cachedAccount = this.getItem(accountKey);\n        return cachedAccount\n            ? Object.assign(new _azure_msal_common__WEBPACK_IMPORTED_MODULE_3__.AccountEntity(), this.getItem(accountKey))\n            : null;\n    }\n    /**\n     * set account entity\n     * @param account - cache value to be set of type AccountEntity\n     */\n    setAccount(account) {\n        const accountKey = account.generateAccountKey();\n        this.setItem(accountKey, account);\n    }\n    /**\n     * fetch the idToken credential\n     * @param idTokenKey - lookup key to fetch cache type IdTokenEntity\n     */\n    getIdTokenCredential(idTokenKey) {\n        const idToken = this.getItem(idTokenKey);\n        if (_azure_msal_common__WEBPACK_IMPORTED_MODULE_4__.isIdTokenEntity(idToken)) {\n            return idToken;\n        }\n        return null;\n    }\n    /**\n     * set idToken credential\n     * @param idToken - cache value to be set of type IdTokenEntity\n     */\n    setIdTokenCredential(idToken) {\n        const idTokenKey = _azure_msal_common__WEBPACK_IMPORTED_MODULE_4__.generateCredentialKey(idToken);\n        this.setItem(idTokenKey, idToken);\n    }\n    /**\n     * fetch the accessToken credential\n     * @param accessTokenKey - lookup key to fetch cache type AccessTokenEntity\n     */\n    getAccessTokenCredential(accessTokenKey) {\n        const accessToken = this.getItem(accessTokenKey);\n        if (_azure_msal_common__WEBPACK_IMPORTED_MODULE_4__.isAccessTokenEntity(accessToken)) {\n            return accessToken;\n        }\n        return null;\n    }\n    /**\n     * set accessToken credential\n     * @param accessToken -  cache value to be set of type AccessTokenEntity\n     */\n    setAccessTokenCredential(accessToken) {\n        const accessTokenKey = _azure_msal_common__WEBPACK_IMPORTED_MODULE_4__.generateCredentialKey(accessToken);\n        this.setItem(accessTokenKey, accessToken);\n    }\n    /**\n     * fetch the refreshToken credential\n     * @param refreshTokenKey - lookup key to fetch cache type RefreshTokenEntity\n     */\n    getRefreshTokenCredential(refreshTokenKey) {\n        const refreshToken = this.getItem(refreshTokenKey);\n        if (_azure_msal_common__WEBPACK_IMPORTED_MODULE_4__.isRefreshTokenEntity(refreshToken)) {\n            return refreshToken;\n        }\n        return null;\n    }\n    /**\n     * set refreshToken credential\n     * @param refreshToken - cache value to be set of type RefreshTokenEntity\n     */\n    setRefreshTokenCredential(refreshToken) {\n        const refreshTokenKey = _azure_msal_common__WEBPACK_IMPORTED_MODULE_4__.generateCredentialKey(refreshToken);\n        this.setItem(refreshTokenKey, refreshToken);\n    }\n    /**\n     * fetch appMetadata entity from the platform cache\n     * @param appMetadataKey - lookup key to fetch cache type AppMetadataEntity\n     */\n    getAppMetadata(appMetadataKey) {\n        const appMetadata = this.getItem(appMetadataKey);\n        if (_azure_msal_common__WEBPACK_IMPORTED_MODULE_4__.isAppMetadataEntity(appMetadataKey, appMetadata)) {\n            return appMetadata;\n        }\n        return null;\n    }\n    /**\n     * set appMetadata entity to the platform cache\n     * @param appMetadata - cache value to be set of type AppMetadataEntity\n     */\n    setAppMetadata(appMetadata) {\n        const appMetadataKey = _azure_msal_common__WEBPACK_IMPORTED_MODULE_4__.generateAppMetadataKey(appMetadata);\n        this.setItem(appMetadataKey, appMetadata);\n    }\n    /**\n     * fetch server telemetry entity from the platform cache\n     * @param serverTelemetrykey - lookup key to fetch cache type ServerTelemetryEntity\n     */\n    getServerTelemetry(serverTelemetrykey) {\n        const serverTelemetryEntity = this.getItem(serverTelemetrykey);\n        if (serverTelemetryEntity &&\n            _azure_msal_common__WEBPACK_IMPORTED_MODULE_4__.isServerTelemetryEntity(serverTelemetrykey, serverTelemetryEntity)) {\n            return serverTelemetryEntity;\n        }\n        return null;\n    }\n    /**\n     * set server telemetry entity to the platform cache\n     * @param serverTelemetryKey - lookup key to fetch cache type ServerTelemetryEntity\n     * @param serverTelemetry - cache value to be set of type ServerTelemetryEntity\n     */\n    setServerTelemetry(serverTelemetryKey, serverTelemetry) {\n        this.setItem(serverTelemetryKey, serverTelemetry);\n    }\n    /**\n     * fetch authority metadata entity from the platform cache\n     * @param key - lookup key to fetch cache type AuthorityMetadataEntity\n     */\n    getAuthorityMetadata(key) {\n        const authorityMetadataEntity = this.getItem(key);\n        if (authorityMetadataEntity &&\n            _azure_msal_common__WEBPACK_IMPORTED_MODULE_4__.isAuthorityMetadataEntity(key, authorityMetadataEntity)) {\n            return authorityMetadataEntity;\n        }\n        return null;\n    }\n    /**\n     * Get all authority metadata keys\n     */\n    getAuthorityMetadataKeys() {\n        return this.getKeys().filter((key) => {\n            return this.isAuthorityMetadata(key);\n        });\n    }\n    /**\n     * set authority metadata entity to the platform cache\n     * @param key - lookup key to fetch cache type AuthorityMetadataEntity\n     * @param metadata - cache value to be set of type AuthorityMetadataEntity\n     */\n    setAuthorityMetadata(key, metadata) {\n        this.setItem(key, metadata);\n    }\n    /**\n     * fetch throttling entity from the platform cache\n     * @param throttlingCacheKey - lookup key to fetch cache type ThrottlingEntity\n     */\n    getThrottlingCache(throttlingCacheKey) {\n        const throttlingCache = this.getItem(throttlingCacheKey);\n        if (throttlingCache &&\n            _azure_msal_common__WEBPACK_IMPORTED_MODULE_4__.isThrottlingEntity(throttlingCacheKey, throttlingCache)) {\n            return throttlingCache;\n        }\n        return null;\n    }\n    /**\n     * set throttling entity to the platform cache\n     * @param throttlingCacheKey - lookup key to fetch cache type ThrottlingEntity\n     * @param throttlingCache - cache value to be set of type ThrottlingEntity\n     */\n    setThrottlingCache(throttlingCacheKey, throttlingCache) {\n        this.setItem(throttlingCacheKey, throttlingCache);\n    }\n    /**\n     * Removes the cache item from memory with the given key.\n     * @param key - lookup key to remove a cache entity\n     * @param inMemory - key value map of the cache\n     */\n    removeItem(key) {\n        this.logger.tracePii(`Item key: ${key}`);\n        // read inMemoryCache\n        let result = false;\n        const cache = this.getCache();\n        if (!!cache[key]) {\n            delete cache[key];\n            result = true;\n        }\n        // write to the cache after removal\n        if (result) {\n            this.setCache(cache);\n            this.emitChange();\n        }\n        return result;\n    }\n    /**\n     * Remove account entity from the platform cache if it's outdated\n     * @param accountKey\n     */\n    removeOutdatedAccount(accountKey) {\n        this.removeItem(accountKey);\n    }\n    /**\n     * Checks whether key is in cache.\n     * @param key - look up key for a cache entity\n     */\n    containsKey(key) {\n        return this.getKeys().includes(key);\n    }\n    /**\n     * Gets all keys in window.\n     */\n    getKeys() {\n        this.logger.trace(\"Retrieving all cache keys\");\n        // read cache\n        const cache = this.getCache();\n        return [...Object.keys(cache)];\n    }\n    /**\n     * Clears all cache entries created by MSAL (except tokens).\n     */\n    async clear() {\n        this.logger.trace(\"Clearing cache entries created by MSAL\");\n        // read inMemoryCache\n        const cacheKeys = this.getKeys();\n        // delete each element\n        cacheKeys.forEach((key) => {\n            this.removeItem(key);\n        });\n        this.emitChange();\n    }\n    /**\n     * Initialize in memory cache from an exisiting cache vault\n     * @param cache - blob formatted cache (JSON)\n     */\n    static generateInMemoryCache(cache) {\n        return _serializer_Deserializer_mjs__WEBPACK_IMPORTED_MODULE_0__.Deserializer.deserializeAllCache(_serializer_Deserializer_mjs__WEBPACK_IMPORTED_MODULE_0__.Deserializer.deserializeJSONBlob(cache));\n    }\n    /**\n     * retrieves the final JSON\n     * @param inMemoryCache - itemised cache read from the JSON\n     */\n    static generateJsonCache(inMemoryCache) {\n        return _serializer_Serializer_mjs__WEBPACK_IMPORTED_MODULE_1__.Serializer.serializeAllCache(inMemoryCache);\n    }\n    /**\n     * Updates a credential's cache key if the current cache key is outdated\n     */\n    updateCredentialCacheKey(currentCacheKey, credential) {\n        const updatedCacheKey = _azure_msal_common__WEBPACK_IMPORTED_MODULE_4__.generateCredentialKey(credential);\n        if (currentCacheKey !== updatedCacheKey) {\n            const cacheItem = this.getItem(currentCacheKey);\n            if (cacheItem) {\n                this.removeItem(currentCacheKey);\n                this.setItem(updatedCacheKey, cacheItem);\n                this.logger.verbose(`Updated an outdated ${credential.credentialType} cache key`);\n                return updatedCacheKey;\n            }\n            else {\n                this.logger.error(`Attempted to update an outdated ${credential.credentialType} cache key but no item matching the outdated key was found in storage`);\n            }\n        }\n        return currentCacheKey;\n    }\n}\n\n\n//# sourceMappingURL=NodeStorage.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/msal-node/dist/cache/NodeStorage.mjs\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/msal-node/dist/cache/TokenCache.mjs":
/*!*****************************************************************!*\
  !*** ./node_modules/@azure/msal-node/dist/cache/TokenCache.mjs ***!
  \*****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   TokenCache: () => (/* binding */ TokenCache)\n/* harmony export */ });\n/* harmony import */ var _azure_msal_common__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @azure/msal-common */ \"(rsc)/./node_modules/@azure/msal-common/dist/cache/persistence/TokenCacheContext.mjs\");\n/* harmony import */ var _azure_msal_common__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @azure/msal-common */ \"(rsc)/./node_modules/@azure/msal-common/dist/cache/entities/AccountEntity.mjs\");\n/* harmony import */ var _serializer_Deserializer_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./serializer/Deserializer.mjs */ \"(rsc)/./node_modules/@azure/msal-node/dist/cache/serializer/Deserializer.mjs\");\n/* harmony import */ var _serializer_Serializer_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./serializer/Serializer.mjs */ \"(rsc)/./node_modules/@azure/msal-node/dist/cache/serializer/Serializer.mjs\");\n/*! @azure/msal-node v2.12.0 2024-07-23 */\n\n\n\n\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\nconst defaultSerializedCache = {\n    Account: {},\n    IdToken: {},\n    AccessToken: {},\n    RefreshToken: {},\n    AppMetadata: {},\n};\n/**\n * In-memory token cache manager\n * @public\n */\nclass TokenCache {\n    constructor(storage, logger, cachePlugin) {\n        this.cacheHasChanged = false;\n        this.storage = storage;\n        this.storage.registerChangeEmitter(this.handleChangeEvent.bind(this));\n        if (cachePlugin) {\n            this.persistence = cachePlugin;\n        }\n        this.logger = logger;\n    }\n    /**\n     * Set to true if cache state has changed since last time serialize or writeToPersistence was called\n     */\n    hasChanged() {\n        return this.cacheHasChanged;\n    }\n    /**\n     * Serializes in memory cache to JSON\n     */\n    serialize() {\n        this.logger.trace(\"Serializing in-memory cache\");\n        let finalState = _serializer_Serializer_mjs__WEBPACK_IMPORTED_MODULE_1__.Serializer.serializeAllCache(this.storage.getInMemoryCache());\n        // if cacheSnapshot not null or empty, merge\n        if (this.cacheSnapshot) {\n            this.logger.trace(\"Reading cache snapshot from disk\");\n            finalState = this.mergeState(JSON.parse(this.cacheSnapshot), finalState);\n        }\n        else {\n            this.logger.trace(\"No cache snapshot to merge\");\n        }\n        this.cacheHasChanged = false;\n        return JSON.stringify(finalState);\n    }\n    /**\n     * Deserializes JSON to in-memory cache. JSON should be in MSAL cache schema format\n     * @param cache - blob formatted cache\n     */\n    deserialize(cache) {\n        this.logger.trace(\"Deserializing JSON to in-memory cache\");\n        this.cacheSnapshot = cache;\n        if (this.cacheSnapshot) {\n            this.logger.trace(\"Reading cache snapshot from disk\");\n            const deserializedCache = _serializer_Deserializer_mjs__WEBPACK_IMPORTED_MODULE_0__.Deserializer.deserializeAllCache(this.overlayDefaults(JSON.parse(this.cacheSnapshot)));\n            this.storage.setInMemoryCache(deserializedCache);\n        }\n        else {\n            this.logger.trace(\"No cache snapshot to deserialize\");\n        }\n    }\n    /**\n     * Fetches the cache key-value map\n     */\n    getKVStore() {\n        return this.storage.getCache();\n    }\n    /**\n     * API that retrieves all accounts currently in cache to the user\n     */\n    async getAllAccounts() {\n        this.logger.trace(\"getAllAccounts called\");\n        let cacheContext;\n        try {\n            if (this.persistence) {\n                cacheContext = new _azure_msal_common__WEBPACK_IMPORTED_MODULE_2__.TokenCacheContext(this, true);\n                await this.persistence.beforeCacheAccess(cacheContext);\n            }\n            return this.storage.getAllAccounts();\n        }\n        finally {\n            if (this.persistence && cacheContext) {\n                await this.persistence.afterCacheAccess(cacheContext);\n            }\n        }\n    }\n    /**\n     * Returns the signed in account matching homeAccountId.\n     * (the account object is created at the time of successful login)\n     * or null when no matching account is found\n     * @param homeAccountId - unique identifier for an account (uid.utid)\n     */\n    async getAccountByHomeId(homeAccountId) {\n        const allAccounts = await this.getAllAccounts();\n        if (homeAccountId && allAccounts && allAccounts.length) {\n            return (allAccounts.filter((accountObj) => accountObj.homeAccountId === homeAccountId)[0] || null);\n        }\n        else {\n            return null;\n        }\n    }\n    /**\n     * Returns the signed in account matching localAccountId.\n     * (the account object is created at the time of successful login)\n     * or null when no matching account is found\n     * @param localAccountId - unique identifier of an account (sub/obj when homeAccountId cannot be populated)\n     */\n    async getAccountByLocalId(localAccountId) {\n        const allAccounts = await this.getAllAccounts();\n        if (localAccountId && allAccounts && allAccounts.length) {\n            return (allAccounts.filter((accountObj) => accountObj.localAccountId === localAccountId)[0] || null);\n        }\n        else {\n            return null;\n        }\n    }\n    /**\n     * API to remove a specific account and the relevant data from cache\n     * @param account - AccountInfo passed by the user\n     */\n    async removeAccount(account) {\n        this.logger.trace(\"removeAccount called\");\n        let cacheContext;\n        try {\n            if (this.persistence) {\n                cacheContext = new _azure_msal_common__WEBPACK_IMPORTED_MODULE_2__.TokenCacheContext(this, true);\n                await this.persistence.beforeCacheAccess(cacheContext);\n            }\n            await this.storage.removeAccount(_azure_msal_common__WEBPACK_IMPORTED_MODULE_3__.AccountEntity.generateAccountCacheKey(account));\n        }\n        finally {\n            if (this.persistence && cacheContext) {\n                await this.persistence.afterCacheAccess(cacheContext);\n            }\n        }\n    }\n    /**\n     * Called when the cache has changed state.\n     */\n    handleChangeEvent() {\n        this.cacheHasChanged = true;\n    }\n    /**\n     * Merge in memory cache with the cache snapshot.\n     * @param oldState - cache before changes\n     * @param currentState - current cache state in the library\n     */\n    mergeState(oldState, currentState) {\n        this.logger.trace(\"Merging in-memory cache with cache snapshot\");\n        const stateAfterRemoval = this.mergeRemovals(oldState, currentState);\n        return this.mergeUpdates(stateAfterRemoval, currentState);\n    }\n    /**\n     * Deep update of oldState based on newState values\n     * @param oldState - cache before changes\n     * @param newState - updated cache\n     */\n    mergeUpdates(oldState, newState) {\n        Object.keys(newState).forEach((newKey) => {\n            const newValue = newState[newKey];\n            // if oldState does not contain value but newValue does, add it\n            if (!oldState.hasOwnProperty(newKey)) {\n                if (newValue !== null) {\n                    oldState[newKey] = newValue;\n                }\n            }\n            else {\n                // both oldState and newState contain the key, do deep update\n                const newValueNotNull = newValue !== null;\n                const newValueIsObject = typeof newValue === \"object\";\n                const newValueIsNotArray = !Array.isArray(newValue);\n                const oldStateNotUndefinedOrNull = typeof oldState[newKey] !== \"undefined\" &&\n                    oldState[newKey] !== null;\n                if (newValueNotNull &&\n                    newValueIsObject &&\n                    newValueIsNotArray &&\n                    oldStateNotUndefinedOrNull) {\n                    this.mergeUpdates(oldState[newKey], newValue);\n                }\n                else {\n                    oldState[newKey] = newValue;\n                }\n            }\n        });\n        return oldState;\n    }\n    /**\n     * Removes entities in oldState that the were removed from newState. If there are any unknown values in root of\n     * oldState that are not recognized, they are left untouched.\n     * @param oldState - cache before changes\n     * @param newState - updated cache\n     */\n    mergeRemovals(oldState, newState) {\n        this.logger.trace(\"Remove updated entries in cache\");\n        const accounts = oldState.Account\n            ? this.mergeRemovalsDict(oldState.Account, newState.Account)\n            : oldState.Account;\n        const accessTokens = oldState.AccessToken\n            ? this.mergeRemovalsDict(oldState.AccessToken, newState.AccessToken)\n            : oldState.AccessToken;\n        const refreshTokens = oldState.RefreshToken\n            ? this.mergeRemovalsDict(oldState.RefreshToken, newState.RefreshToken)\n            : oldState.RefreshToken;\n        const idTokens = oldState.IdToken\n            ? this.mergeRemovalsDict(oldState.IdToken, newState.IdToken)\n            : oldState.IdToken;\n        const appMetadata = oldState.AppMetadata\n            ? this.mergeRemovalsDict(oldState.AppMetadata, newState.AppMetadata)\n            : oldState.AppMetadata;\n        return {\n            ...oldState,\n            Account: accounts,\n            AccessToken: accessTokens,\n            RefreshToken: refreshTokens,\n            IdToken: idTokens,\n            AppMetadata: appMetadata,\n        };\n    }\n    /**\n     * Helper to merge new cache with the old one\n     * @param oldState - cache before changes\n     * @param newState - updated cache\n     */\n    mergeRemovalsDict(oldState, newState) {\n        const finalState = { ...oldState };\n        Object.keys(oldState).forEach((oldKey) => {\n            if (!newState || !newState.hasOwnProperty(oldKey)) {\n                delete finalState[oldKey];\n            }\n        });\n        return finalState;\n    }\n    /**\n     * Helper to overlay as a part of cache merge\n     * @param passedInCache - cache read from the blob\n     */\n    overlayDefaults(passedInCache) {\n        this.logger.trace(\"Overlaying input cache with the default cache\");\n        return {\n            Account: {\n                ...defaultSerializedCache.Account,\n                ...passedInCache.Account,\n            },\n            IdToken: {\n                ...defaultSerializedCache.IdToken,\n                ...passedInCache.IdToken,\n            },\n            AccessToken: {\n                ...defaultSerializedCache.AccessToken,\n                ...passedInCache.AccessToken,\n            },\n            RefreshToken: {\n                ...defaultSerializedCache.RefreshToken,\n                ...passedInCache.RefreshToken,\n            },\n            AppMetadata: {\n                ...defaultSerializedCache.AppMetadata,\n                ...passedInCache.AppMetadata,\n            },\n        };\n    }\n}\n\n\n//# sourceMappingURL=TokenCache.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/msal-node/dist/cache/TokenCache.mjs\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/msal-node/dist/cache/distributed/DistributedCachePlugin.mjs":
/*!*****************************************************************************************!*\
  !*** ./node_modules/@azure/msal-node/dist/cache/distributed/DistributedCachePlugin.mjs ***!
  \*****************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DistributedCachePlugin: () => (/* binding */ DistributedCachePlugin)\n/* harmony export */ });\n/* harmony import */ var _azure_msal_common__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @azure/msal-common */ \"(rsc)/./node_modules/@azure/msal-common/dist/cache/entities/AccountEntity.mjs\");\n/*! @azure/msal-node v2.12.0 2024-07-23 */\n\n\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\nclass DistributedCachePlugin {\n    constructor(client, partitionManager) {\n        this.client = client;\n        this.partitionManager = partitionManager;\n    }\n    async beforeCacheAccess(cacheContext) {\n        const partitionKey = await this.partitionManager.getKey();\n        const cacheData = await this.client.get(partitionKey);\n        cacheContext.tokenCache.deserialize(cacheData);\n    }\n    async afterCacheAccess(cacheContext) {\n        if (cacheContext.cacheHasChanged) {\n            const kvStore = cacheContext.tokenCache.getKVStore();\n            const accountEntities = Object.values(kvStore).filter((value) => _azure_msal_common__WEBPACK_IMPORTED_MODULE_0__.AccountEntity.isAccountEntity(value));\n            if (accountEntities.length > 0) {\n                const accountEntity = accountEntities[0];\n                const partitionKey = await this.partitionManager.extractKey(accountEntity);\n                await this.client.set(partitionKey, cacheContext.tokenCache.serialize());\n            }\n        }\n    }\n}\n\n\n//# sourceMappingURL=DistributedCachePlugin.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtbm9kZS9kaXN0L2NhY2hlL2Rpc3RyaWJ1dGVkL0Rpc3RyaWJ1dGVkQ2FjaGVQbHVnaW4ubWpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQUE7QUFDYTtBQUNzQzs7QUFFbkQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDZFQUE2RSw2REFBYTtBQUMxRjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVrQztBQUNsQyIsInNvdXJjZXMiOlsid2VicGFjazovL2RhbmllbDMtdnAyLy4vbm9kZV9tb2R1bGVzL0BhenVyZS9tc2FsLW5vZGUvZGlzdC9jYWNoZS9kaXN0cmlidXRlZC9EaXN0cmlidXRlZENhY2hlUGx1Z2luLm1qcz8yZjk2Il0sInNvdXJjZXNDb250ZW50IjpbIi8qISBAYXp1cmUvbXNhbC1ub2RlIHYyLjEyLjAgMjAyNC0wNy0yMyAqL1xuJ3VzZSBzdHJpY3QnO1xuaW1wb3J0IHsgQWNjb3VudEVudGl0eSB9IGZyb20gJ0BhenVyZS9tc2FsLWNvbW1vbic7XG5cbi8qXG4gKiBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi4gQWxsIHJpZ2h0cyByZXNlcnZlZC5cbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgTGljZW5zZS5cbiAqL1xuY2xhc3MgRGlzdHJpYnV0ZWRDYWNoZVBsdWdpbiB7XG4gICAgY29uc3RydWN0b3IoY2xpZW50LCBwYXJ0aXRpb25NYW5hZ2VyKSB7XG4gICAgICAgIHRoaXMuY2xpZW50ID0gY2xpZW50O1xuICAgICAgICB0aGlzLnBhcnRpdGlvbk1hbmFnZXIgPSBwYXJ0aXRpb25NYW5hZ2VyO1xuICAgIH1cbiAgICBhc3luYyBiZWZvcmVDYWNoZUFjY2VzcyhjYWNoZUNvbnRleHQpIHtcbiAgICAgICAgY29uc3QgcGFydGl0aW9uS2V5ID0gYXdhaXQgdGhpcy5wYXJ0aXRpb25NYW5hZ2VyLmdldEtleSgpO1xuICAgICAgICBjb25zdCBjYWNoZURhdGEgPSBhd2FpdCB0aGlzLmNsaWVudC5nZXQocGFydGl0aW9uS2V5KTtcbiAgICAgICAgY2FjaGVDb250ZXh0LnRva2VuQ2FjaGUuZGVzZXJpYWxpemUoY2FjaGVEYXRhKTtcbiAgICB9XG4gICAgYXN5bmMgYWZ0ZXJDYWNoZUFjY2VzcyhjYWNoZUNvbnRleHQpIHtcbiAgICAgICAgaWYgKGNhY2hlQ29udGV4dC5jYWNoZUhhc0NoYW5nZWQpIHtcbiAgICAgICAgICAgIGNvbnN0IGt2U3RvcmUgPSBjYWNoZUNvbnRleHQudG9rZW5DYWNoZS5nZXRLVlN0b3JlKCk7XG4gICAgICAgICAgICBjb25zdCBhY2NvdW50RW50aXRpZXMgPSBPYmplY3QudmFsdWVzKGt2U3RvcmUpLmZpbHRlcigodmFsdWUpID0+IEFjY291bnRFbnRpdHkuaXNBY2NvdW50RW50aXR5KHZhbHVlKSk7XG4gICAgICAgICAgICBpZiAoYWNjb3VudEVudGl0aWVzLmxlbmd0aCA+IDApIHtcbiAgICAgICAgICAgICAgICBjb25zdCBhY2NvdW50RW50aXR5ID0gYWNjb3VudEVudGl0aWVzWzBdO1xuICAgICAgICAgICAgICAgIGNvbnN0IHBhcnRpdGlvbktleSA9IGF3YWl0IHRoaXMucGFydGl0aW9uTWFuYWdlci5leHRyYWN0S2V5KGFjY291bnRFbnRpdHkpO1xuICAgICAgICAgICAgICAgIGF3YWl0IHRoaXMuY2xpZW50LnNldChwYXJ0aXRpb25LZXksIGNhY2hlQ29udGV4dC50b2tlbkNhY2hlLnNlcmlhbGl6ZSgpKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cbn1cblxuZXhwb3J0IHsgRGlzdHJpYnV0ZWRDYWNoZVBsdWdpbiB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9RGlzdHJpYnV0ZWRDYWNoZVBsdWdpbi5tanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/msal-node/dist/cache/distributed/DistributedCachePlugin.mjs\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/msal-node/dist/cache/serializer/Deserializer.mjs":
/*!******************************************************************************!*\
  !*** ./node_modules/@azure/msal-node/dist/cache/serializer/Deserializer.mjs ***!
  \******************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Deserializer: () => (/* binding */ Deserializer)\n/* harmony export */ });\n/* harmony import */ var _azure_msal_common__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @azure/msal-common */ \"(rsc)/./node_modules/@azure/msal-common/dist/cache/entities/AccountEntity.mjs\");\n/* harmony import */ var _azure_msal_common__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @azure/msal-common */ \"(rsc)/./node_modules/@azure/msal-common/dist/cache/CacheManager.mjs\");\n/*! @azure/msal-node v2.12.0 2024-07-23 */\n\n\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n/**\n * This class deserializes cache entities read from the file into in memory object types defined internally\n */\nclass Deserializer {\n    /**\n     * Parse the JSON blob in memory and deserialize the content\n     * @param cachedJson\n     */\n    static deserializeJSONBlob(jsonFile) {\n        const deserializedCache = !jsonFile ? {} : JSON.parse(jsonFile);\n        return deserializedCache;\n    }\n    /**\n     * Deserializes accounts to AccountEntity objects\n     * @param accounts\n     */\n    static deserializeAccounts(accounts) {\n        const accountObjects = {};\n        if (accounts) {\n            Object.keys(accounts).map(function (key) {\n                const serializedAcc = accounts[key];\n                const mappedAcc = {\n                    homeAccountId: serializedAcc.home_account_id,\n                    environment: serializedAcc.environment,\n                    realm: serializedAcc.realm,\n                    localAccountId: serializedAcc.local_account_id,\n                    username: serializedAcc.username,\n                    authorityType: serializedAcc.authority_type,\n                    name: serializedAcc.name,\n                    clientInfo: serializedAcc.client_info,\n                    lastModificationTime: serializedAcc.last_modification_time,\n                    lastModificationApp: serializedAcc.last_modification_app,\n                    tenantProfiles: serializedAcc.tenantProfiles?.map((serializedTenantProfile) => {\n                        return JSON.parse(serializedTenantProfile);\n                    }),\n                };\n                const account = new _azure_msal_common__WEBPACK_IMPORTED_MODULE_0__.AccountEntity();\n                _azure_msal_common__WEBPACK_IMPORTED_MODULE_1__.CacheManager.toObject(account, mappedAcc);\n                accountObjects[key] = account;\n            });\n        }\n        return accountObjects;\n    }\n    /**\n     * Deserializes id tokens to IdTokenEntity objects\n     * @param idTokens\n     */\n    static deserializeIdTokens(idTokens) {\n        const idObjects = {};\n        if (idTokens) {\n            Object.keys(idTokens).map(function (key) {\n                const serializedIdT = idTokens[key];\n                const idToken = {\n                    homeAccountId: serializedIdT.home_account_id,\n                    environment: serializedIdT.environment,\n                    credentialType: serializedIdT.credential_type,\n                    clientId: serializedIdT.client_id,\n                    secret: serializedIdT.secret,\n                    realm: serializedIdT.realm,\n                };\n                idObjects[key] = idToken;\n            });\n        }\n        return idObjects;\n    }\n    /**\n     * Deserializes access tokens to AccessTokenEntity objects\n     * @param accessTokens\n     */\n    static deserializeAccessTokens(accessTokens) {\n        const atObjects = {};\n        if (accessTokens) {\n            Object.keys(accessTokens).map(function (key) {\n                const serializedAT = accessTokens[key];\n                const accessToken = {\n                    homeAccountId: serializedAT.home_account_id,\n                    environment: serializedAT.environment,\n                    credentialType: serializedAT.credential_type,\n                    clientId: serializedAT.client_id,\n                    secret: serializedAT.secret,\n                    realm: serializedAT.realm,\n                    target: serializedAT.target,\n                    cachedAt: serializedAT.cached_at,\n                    expiresOn: serializedAT.expires_on,\n                    extendedExpiresOn: serializedAT.extended_expires_on,\n                    refreshOn: serializedAT.refresh_on,\n                    keyId: serializedAT.key_id,\n                    tokenType: serializedAT.token_type,\n                    requestedClaims: serializedAT.requestedClaims,\n                    requestedClaimsHash: serializedAT.requestedClaimsHash,\n                    userAssertionHash: serializedAT.userAssertionHash,\n                };\n                atObjects[key] = accessToken;\n            });\n        }\n        return atObjects;\n    }\n    /**\n     * Deserializes refresh tokens to RefreshTokenEntity objects\n     * @param refreshTokens\n     */\n    static deserializeRefreshTokens(refreshTokens) {\n        const rtObjects = {};\n        if (refreshTokens) {\n            Object.keys(refreshTokens).map(function (key) {\n                const serializedRT = refreshTokens[key];\n                const refreshToken = {\n                    homeAccountId: serializedRT.home_account_id,\n                    environment: serializedRT.environment,\n                    credentialType: serializedRT.credential_type,\n                    clientId: serializedRT.client_id,\n                    secret: serializedRT.secret,\n                    familyId: serializedRT.family_id,\n                    target: serializedRT.target,\n                    realm: serializedRT.realm,\n                };\n                rtObjects[key] = refreshToken;\n            });\n        }\n        return rtObjects;\n    }\n    /**\n     * Deserializes appMetadata to AppMetaData objects\n     * @param appMetadata\n     */\n    static deserializeAppMetadata(appMetadata) {\n        const appMetadataObjects = {};\n        if (appMetadata) {\n            Object.keys(appMetadata).map(function (key) {\n                const serializedAmdt = appMetadata[key];\n                appMetadataObjects[key] = {\n                    clientId: serializedAmdt.client_id,\n                    environment: serializedAmdt.environment,\n                    familyId: serializedAmdt.family_id,\n                };\n            });\n        }\n        return appMetadataObjects;\n    }\n    /**\n     * Deserialize an inMemory Cache\n     * @param jsonCache\n     */\n    static deserializeAllCache(jsonCache) {\n        return {\n            accounts: jsonCache.Account\n                ? this.deserializeAccounts(jsonCache.Account)\n                : {},\n            idTokens: jsonCache.IdToken\n                ? this.deserializeIdTokens(jsonCache.IdToken)\n                : {},\n            accessTokens: jsonCache.AccessToken\n                ? this.deserializeAccessTokens(jsonCache.AccessToken)\n                : {},\n            refreshTokens: jsonCache.RefreshToken\n                ? this.deserializeRefreshTokens(jsonCache.RefreshToken)\n                : {},\n            appMetadata: jsonCache.AppMetadata\n                ? this.deserializeAppMetadata(jsonCache.AppMetadata)\n                : {},\n        };\n    }\n}\n\n\n//# sourceMappingURL=Deserializer.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/msal-node/dist/cache/serializer/Deserializer.mjs\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/msal-node/dist/cache/serializer/Serializer.mjs":
/*!****************************************************************************!*\
  !*** ./node_modules/@azure/msal-node/dist/cache/serializer/Serializer.mjs ***!
  \****************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Serializer: () => (/* binding */ Serializer)\n/* harmony export */ });\n/*! @azure/msal-node v2.12.0 2024-07-23 */\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\nclass Serializer {\n    /**\n     * serialize the JSON blob\n     * @param data\n     */\n    static serializeJSONBlob(data) {\n        return JSON.stringify(data);\n    }\n    /**\n     * Serialize Accounts\n     * @param accCache\n     */\n    static serializeAccounts(accCache) {\n        const accounts = {};\n        Object.keys(accCache).map(function (key) {\n            const accountEntity = accCache[key];\n            accounts[key] = {\n                home_account_id: accountEntity.homeAccountId,\n                environment: accountEntity.environment,\n                realm: accountEntity.realm,\n                local_account_id: accountEntity.localAccountId,\n                username: accountEntity.username,\n                authority_type: accountEntity.authorityType,\n                name: accountEntity.name,\n                client_info: accountEntity.clientInfo,\n                last_modification_time: accountEntity.lastModificationTime,\n                last_modification_app: accountEntity.lastModificationApp,\n                tenantProfiles: accountEntity.tenantProfiles?.map((tenantProfile) => {\n                    return JSON.stringify(tenantProfile);\n                }),\n            };\n        });\n        return accounts;\n    }\n    /**\n     * Serialize IdTokens\n     * @param idTCache\n     */\n    static serializeIdTokens(idTCache) {\n        const idTokens = {};\n        Object.keys(idTCache).map(function (key) {\n            const idTEntity = idTCache[key];\n            idTokens[key] = {\n                home_account_id: idTEntity.homeAccountId,\n                environment: idTEntity.environment,\n                credential_type: idTEntity.credentialType,\n                client_id: idTEntity.clientId,\n                secret: idTEntity.secret,\n                realm: idTEntity.realm,\n            };\n        });\n        return idTokens;\n    }\n    /**\n     * Serializes AccessTokens\n     * @param atCache\n     */\n    static serializeAccessTokens(atCache) {\n        const accessTokens = {};\n        Object.keys(atCache).map(function (key) {\n            const atEntity = atCache[key];\n            accessTokens[key] = {\n                home_account_id: atEntity.homeAccountId,\n                environment: atEntity.environment,\n                credential_type: atEntity.credentialType,\n                client_id: atEntity.clientId,\n                secret: atEntity.secret,\n                realm: atEntity.realm,\n                target: atEntity.target,\n                cached_at: atEntity.cachedAt,\n                expires_on: atEntity.expiresOn,\n                extended_expires_on: atEntity.extendedExpiresOn,\n                refresh_on: atEntity.refreshOn,\n                key_id: atEntity.keyId,\n                token_type: atEntity.tokenType,\n                requestedClaims: atEntity.requestedClaims,\n                requestedClaimsHash: atEntity.requestedClaimsHash,\n                userAssertionHash: atEntity.userAssertionHash,\n            };\n        });\n        return accessTokens;\n    }\n    /**\n     * Serialize refreshTokens\n     * @param rtCache\n     */\n    static serializeRefreshTokens(rtCache) {\n        const refreshTokens = {};\n        Object.keys(rtCache).map(function (key) {\n            const rtEntity = rtCache[key];\n            refreshTokens[key] = {\n                home_account_id: rtEntity.homeAccountId,\n                environment: rtEntity.environment,\n                credential_type: rtEntity.credentialType,\n                client_id: rtEntity.clientId,\n                secret: rtEntity.secret,\n                family_id: rtEntity.familyId,\n                target: rtEntity.target,\n                realm: rtEntity.realm,\n            };\n        });\n        return refreshTokens;\n    }\n    /**\n     * Serialize amdtCache\n     * @param amdtCache\n     */\n    static serializeAppMetadata(amdtCache) {\n        const appMetadata = {};\n        Object.keys(amdtCache).map(function (key) {\n            const amdtEntity = amdtCache[key];\n            appMetadata[key] = {\n                client_id: amdtEntity.clientId,\n                environment: amdtEntity.environment,\n                family_id: amdtEntity.familyId,\n            };\n        });\n        return appMetadata;\n    }\n    /**\n     * Serialize the cache\n     * @param jsonContent\n     */\n    static serializeAllCache(inMemCache) {\n        return {\n            Account: this.serializeAccounts(inMemCache.accounts),\n            IdToken: this.serializeIdTokens(inMemCache.idTokens),\n            AccessToken: this.serializeAccessTokens(inMemCache.accessTokens),\n            RefreshToken: this.serializeRefreshTokens(inMemCache.refreshTokens),\n            AppMetadata: this.serializeAppMetadata(inMemCache.appMetadata),\n        };\n    }\n}\n\n\n//# sourceMappingURL=Serializer.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/msal-node/dist/cache/serializer/Serializer.mjs\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/msal-node/dist/client/ClientApplication.mjs":
/*!*************************************************************************!*\
  !*** ./node_modules/@azure/msal-node/dist/client/ClientApplication.mjs ***!
  \*************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ClientApplication: () => (/* binding */ ClientApplication)\n/* harmony export */ });\n/* harmony import */ var _azure_msal_common__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @azure/msal-common */ \"(rsc)/./node_modules/@azure/msal-common/dist/logger/Logger.mjs\");\n/* harmony import */ var _azure_msal_common__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @azure/msal-common */ \"(rsc)/./node_modules/@azure/msal-common/dist/authority/Authority.mjs\");\n/* harmony import */ var _azure_msal_common__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @azure/msal-common */ \"(rsc)/./node_modules/@azure/msal-common/dist/utils/Constants.mjs\");\n/* harmony import */ var _azure_msal_common__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! @azure/msal-common */ \"(rsc)/./node_modules/@azure/msal-common/dist/client/AuthorizationCodeClient.mjs\");\n/* harmony import */ var _azure_msal_common__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! @azure/msal-common */ \"(rsc)/./node_modules/@azure/msal-common/dist/error/AuthError.mjs\");\n/* harmony import */ var _azure_msal_common__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! @azure/msal-common */ \"(rsc)/./node_modules/@azure/msal-common/dist/client/RefreshTokenClient.mjs\");\n/* harmony import */ var _azure_msal_common__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! @azure/msal-common */ \"(rsc)/./node_modules/@azure/msal-common/dist/client/SilentFlowClient.mjs\");\n/* harmony import */ var _azure_msal_common__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! @azure/msal-common */ \"(rsc)/./node_modules/@azure/msal-common/dist/error/ClientAuthError.mjs\");\n/* harmony import */ var _azure_msal_common__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! @azure/msal-common */ \"(rsc)/./node_modules/@azure/msal-common/dist/error/ClientAuthErrorCodes.mjs\");\n/* harmony import */ var _azure_msal_common__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! @azure/msal-common */ \"(rsc)/./node_modules/@azure/msal-common/dist/utils/ClientAssertionUtils.mjs\");\n/* harmony import */ var _azure_msal_common__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! @azure/msal-common */ \"(rsc)/./node_modules/@azure/msal-common/dist/utils/StringUtils.mjs\");\n/* harmony import */ var _azure_msal_common__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! @azure/msal-common */ \"(rsc)/./node_modules/@azure/msal-common/dist/telemetry/server/ServerTelemetryManager.mjs\");\n/* harmony import */ var _azure_msal_common__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! @azure/msal-common */ \"(rsc)/./node_modules/@azure/msal-common/dist/authority/AuthorityFactory.mjs\");\n/* harmony import */ var _config_Configuration_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../config/Configuration.mjs */ \"(rsc)/./node_modules/@azure/msal-node/dist/config/Configuration.mjs\");\n/* harmony import */ var _crypto_CryptoProvider_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../crypto/CryptoProvider.mjs */ \"(rsc)/./node_modules/@azure/msal-node/dist/crypto/CryptoProvider.mjs\");\n/* harmony import */ var _cache_NodeStorage_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../cache/NodeStorage.mjs */ \"(rsc)/./node_modules/@azure/msal-node/dist/cache/NodeStorage.mjs\");\n/* harmony import */ var _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../utils/Constants.mjs */ \"(rsc)/./node_modules/@azure/msal-node/dist/utils/Constants.mjs\");\n/* harmony import */ var _cache_TokenCache_mjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../cache/TokenCache.mjs */ \"(rsc)/./node_modules/@azure/msal-node/dist/cache/TokenCache.mjs\");\n/* harmony import */ var _ClientAssertion_mjs__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./ClientAssertion.mjs */ \"(rsc)/./node_modules/@azure/msal-node/dist/client/ClientAssertion.mjs\");\n/* harmony import */ var _packageMetadata_mjs__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../packageMetadata.mjs */ \"(rsc)/./node_modules/@azure/msal-node/dist/packageMetadata.mjs\");\n/* harmony import */ var _error_NodeAuthError_mjs__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../error/NodeAuthError.mjs */ \"(rsc)/./node_modules/@azure/msal-node/dist/error/NodeAuthError.mjs\");\n/* harmony import */ var _UsernamePasswordClient_mjs__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./UsernamePasswordClient.mjs */ \"(rsc)/./node_modules/@azure/msal-node/dist/client/UsernamePasswordClient.mjs\");\n/*! @azure/msal-node v2.12.0 2024-07-23 */\n\n\n\n\n\n\n\n\n\n\n\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n/**\n * Base abstract class for all ClientApplications - public and confidential\n * @public\n */\nclass ClientApplication {\n    /**\n     * Constructor for the ClientApplication\n     */\n    constructor(configuration) {\n        this.config = (0,_config_Configuration_mjs__WEBPACK_IMPORTED_MODULE_0__.buildAppConfiguration)(configuration);\n        this.cryptoProvider = new _crypto_CryptoProvider_mjs__WEBPACK_IMPORTED_MODULE_1__.CryptoProvider();\n        this.logger = new _azure_msal_common__WEBPACK_IMPORTED_MODULE_9__.Logger(this.config.system.loggerOptions, _packageMetadata_mjs__WEBPACK_IMPORTED_MODULE_6__.name, _packageMetadata_mjs__WEBPACK_IMPORTED_MODULE_6__.version);\n        this.storage = new _cache_NodeStorage_mjs__WEBPACK_IMPORTED_MODULE_2__.NodeStorage(this.logger, this.config.auth.clientId, this.cryptoProvider, (0,_azure_msal_common__WEBPACK_IMPORTED_MODULE_10__.buildStaticAuthorityOptions)(this.config.auth));\n        this.tokenCache = new _cache_TokenCache_mjs__WEBPACK_IMPORTED_MODULE_4__.TokenCache(this.storage, this.logger, this.config.cache.cachePlugin);\n    }\n    /**\n     * Creates the URL of the authorization request, letting the user input credentials and consent to the\n     * application. The URL targets the /authorize endpoint of the authority configured in the\n     * application object.\n     *\n     * Once the user inputs their credentials and consents, the authority will send a response to the redirect URI\n     * sent in the request and should contain an authorization code, which can then be used to acquire tokens via\n     * `acquireTokenByCode(AuthorizationCodeRequest)`.\n     */\n    async getAuthCodeUrl(request) {\n        this.logger.info(\"getAuthCodeUrl called\", request.correlationId);\n        const validRequest = {\n            ...request,\n            ...(await this.initializeBaseRequest(request)),\n            responseMode: request.responseMode || _azure_msal_common__WEBPACK_IMPORTED_MODULE_11__.ResponseMode.QUERY,\n            authenticationScheme: _azure_msal_common__WEBPACK_IMPORTED_MODULE_11__.AuthenticationScheme.BEARER,\n        };\n        const authClientConfig = await this.buildOauthClientConfiguration(validRequest.authority, validRequest.correlationId, undefined, undefined, request.azureCloudOptions);\n        const authorizationCodeClient = new _azure_msal_common__WEBPACK_IMPORTED_MODULE_12__.AuthorizationCodeClient(authClientConfig);\n        this.logger.verbose(\"Auth code client created\", validRequest.correlationId);\n        return authorizationCodeClient.getAuthCodeUrl(validRequest);\n    }\n    /**\n     * Acquires a token by exchanging the Authorization Code received from the first step of OAuth2.0\n     * Authorization Code flow.\n     *\n     * `getAuthCodeUrl(AuthorizationCodeUrlRequest)` can be used to create the URL for the first step of OAuth2.0\n     * Authorization Code flow. Ensure that values for redirectUri and scopes in AuthorizationCodeUrlRequest and\n     * AuthorizationCodeRequest are the same.\n     */\n    async acquireTokenByCode(request, authCodePayLoad) {\n        this.logger.info(\"acquireTokenByCode called\");\n        if (request.state && authCodePayLoad) {\n            this.logger.info(\"acquireTokenByCode - validating state\");\n            this.validateState(request.state, authCodePayLoad.state || \"\");\n            // eslint-disable-next-line no-param-reassign\n            authCodePayLoad = { ...authCodePayLoad, state: \"\" };\n        }\n        const validRequest = {\n            ...request,\n            ...(await this.initializeBaseRequest(request)),\n            authenticationScheme: _azure_msal_common__WEBPACK_IMPORTED_MODULE_11__.AuthenticationScheme.BEARER,\n        };\n        const serverTelemetryManager = this.initializeServerTelemetryManager(_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_3__.ApiId.acquireTokenByCode, validRequest.correlationId);\n        try {\n            const authClientConfig = await this.buildOauthClientConfiguration(validRequest.authority, validRequest.correlationId, serverTelemetryManager, undefined, request.azureCloudOptions);\n            const authorizationCodeClient = new _azure_msal_common__WEBPACK_IMPORTED_MODULE_12__.AuthorizationCodeClient(authClientConfig);\n            this.logger.verbose(\"Auth code client created\", validRequest.correlationId);\n            return await authorizationCodeClient.acquireToken(validRequest, authCodePayLoad);\n        }\n        catch (e) {\n            if (e instanceof _azure_msal_common__WEBPACK_IMPORTED_MODULE_13__.AuthError) {\n                e.setCorrelationId(validRequest.correlationId);\n            }\n            serverTelemetryManager.cacheFailedRequest(e);\n            throw e;\n        }\n    }\n    /**\n     * Acquires a token by exchanging the refresh token provided for a new set of tokens.\n     *\n     * This API is provided only for scenarios where you would like to migrate from ADAL to MSAL. Otherwise, it is\n     * recommended that you use `acquireTokenSilent()` for silent scenarios. When using `acquireTokenSilent()`, MSAL will\n     * handle the caching and refreshing of tokens automatically.\n     */\n    async acquireTokenByRefreshToken(request) {\n        this.logger.info(\"acquireTokenByRefreshToken called\", request.correlationId);\n        const validRequest = {\n            ...request,\n            ...(await this.initializeBaseRequest(request)),\n            authenticationScheme: _azure_msal_common__WEBPACK_IMPORTED_MODULE_11__.AuthenticationScheme.BEARER,\n        };\n        const serverTelemetryManager = this.initializeServerTelemetryManager(_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_3__.ApiId.acquireTokenByRefreshToken, validRequest.correlationId);\n        try {\n            const refreshTokenClientConfig = await this.buildOauthClientConfiguration(validRequest.authority, validRequest.correlationId, serverTelemetryManager, undefined, request.azureCloudOptions);\n            const refreshTokenClient = new _azure_msal_common__WEBPACK_IMPORTED_MODULE_14__.RefreshTokenClient(refreshTokenClientConfig);\n            this.logger.verbose(\"Refresh token client created\", validRequest.correlationId);\n            return await refreshTokenClient.acquireToken(validRequest);\n        }\n        catch (e) {\n            if (e instanceof _azure_msal_common__WEBPACK_IMPORTED_MODULE_13__.AuthError) {\n                e.setCorrelationId(validRequest.correlationId);\n            }\n            serverTelemetryManager.cacheFailedRequest(e);\n            throw e;\n        }\n    }\n    /**\n     * Acquires a token silently when a user specifies the account the token is requested for.\n     *\n     * This API expects the user to provide an account object and looks into the cache to retrieve the token if present.\n     * There is also an optional \"forceRefresh\" boolean the user can send to bypass the cache for access_token and id_token.\n     * In case the refresh_token is expired or not found, an error is thrown\n     * and the guidance is for the user to call any interactive token acquisition API (eg: `acquireTokenByCode()`).\n     */\n    async acquireTokenSilent(request) {\n        const validRequest = {\n            ...request,\n            ...(await this.initializeBaseRequest(request)),\n            forceRefresh: request.forceRefresh || false,\n        };\n        const serverTelemetryManager = this.initializeServerTelemetryManager(_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_3__.ApiId.acquireTokenSilent, validRequest.correlationId, validRequest.forceRefresh);\n        try {\n            const silentFlowClientConfig = await this.buildOauthClientConfiguration(validRequest.authority, validRequest.correlationId, serverTelemetryManager, undefined, request.azureCloudOptions);\n            const silentFlowClient = new _azure_msal_common__WEBPACK_IMPORTED_MODULE_15__.SilentFlowClient(silentFlowClientConfig);\n            this.logger.verbose(\"Silent flow client created\", validRequest.correlationId);\n            return await silentFlowClient.acquireToken(validRequest);\n        }\n        catch (e) {\n            if (e instanceof _azure_msal_common__WEBPACK_IMPORTED_MODULE_13__.AuthError) {\n                e.setCorrelationId(validRequest.correlationId);\n            }\n            serverTelemetryManager.cacheFailedRequest(e);\n            throw e;\n        }\n    }\n    /**\n     * Acquires tokens with password grant by exchanging client applications username and password for credentials\n     *\n     * The latest OAuth 2.0 Security Best Current Practice disallows the password grant entirely.\n     * More details on this recommendation at https://tools.ietf.org/html/draft-ietf-oauth-security-topics-13#section-3.4\n     * Microsoft's documentation and recommendations are at:\n     * https://docs.microsoft.com/en-us/azure/active-directory/develop/msal-authentication-flows#usernamepassword\n     *\n     * @param request - UsenamePasswordRequest\n     */\n    async acquireTokenByUsernamePassword(request) {\n        this.logger.info(\"acquireTokenByUsernamePassword called\", request.correlationId);\n        const validRequest = {\n            ...request,\n            ...(await this.initializeBaseRequest(request)),\n        };\n        const serverTelemetryManager = this.initializeServerTelemetryManager(_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_3__.ApiId.acquireTokenByUsernamePassword, validRequest.correlationId);\n        try {\n            const usernamePasswordClientConfig = await this.buildOauthClientConfiguration(validRequest.authority, validRequest.correlationId, serverTelemetryManager, undefined, request.azureCloudOptions);\n            const usernamePasswordClient = new _UsernamePasswordClient_mjs__WEBPACK_IMPORTED_MODULE_8__.UsernamePasswordClient(usernamePasswordClientConfig);\n            this.logger.verbose(\"Username password client created\", validRequest.correlationId);\n            return await usernamePasswordClient.acquireToken(validRequest);\n        }\n        catch (e) {\n            if (e instanceof _azure_msal_common__WEBPACK_IMPORTED_MODULE_13__.AuthError) {\n                e.setCorrelationId(validRequest.correlationId);\n            }\n            serverTelemetryManager.cacheFailedRequest(e);\n            throw e;\n        }\n    }\n    /**\n     * Gets the token cache for the application.\n     */\n    getTokenCache() {\n        this.logger.info(\"getTokenCache called\");\n        return this.tokenCache;\n    }\n    /**\n     * Validates OIDC state by comparing the user cached state with the state received from the server.\n     *\n     * This API is provided for scenarios where you would use OAuth2.0 state parameter to mitigate against\n     * CSRF attacks.\n     * For more information about state, visit https://datatracker.ietf.org/doc/html/rfc6819#section-3.6.\n     * @param state\n     * @param cachedState\n     */\n    validateState(state, cachedState) {\n        if (!state) {\n            throw _error_NodeAuthError_mjs__WEBPACK_IMPORTED_MODULE_7__.NodeAuthError.createStateNotFoundError();\n        }\n        if (state !== cachedState) {\n            throw (0,_azure_msal_common__WEBPACK_IMPORTED_MODULE_16__.createClientAuthError)(_azure_msal_common__WEBPACK_IMPORTED_MODULE_17__.stateMismatch);\n        }\n    }\n    /**\n     * Returns the logger instance\n     */\n    getLogger() {\n        return this.logger;\n    }\n    /**\n     * Replaces the default logger set in configurations with new Logger with new configurations\n     * @param logger - Logger instance\n     */\n    setLogger(logger) {\n        this.logger = logger;\n    }\n    /**\n     * Builds the common configuration to be passed to the common component based on the platform configurarion\n     * @param authority - user passed authority in configuration\n     * @param serverTelemetryManager - initializes servertelemetry if passed\n     */\n    async buildOauthClientConfiguration(authority, requestCorrelationId, serverTelemetryManager, azureRegionConfiguration, azureCloudOptions) {\n        this.logger.verbose(\"buildOauthClientConfiguration called\", requestCorrelationId);\n        // precedence - azureCloudInstance + tenant >> authority and request  >> config\n        const userAzureCloudOptions = azureCloudOptions\n            ? azureCloudOptions\n            : this.config.auth.azureCloudOptions;\n        // using null assertion operator as we ensure that all config values have default values in buildConfiguration()\n        const discoveredAuthority = await this.createAuthority(authority, requestCorrelationId, azureRegionConfiguration, userAzureCloudOptions);\n        this.logger.info(`Building oauth client configuration with the following authority: ${discoveredAuthority.tokenEndpoint}.`, requestCorrelationId);\n        serverTelemetryManager?.updateRegionDiscoveryMetadata(discoveredAuthority.regionDiscoveryMetadata);\n        const clientConfiguration = {\n            authOptions: {\n                clientId: this.config.auth.clientId,\n                authority: discoveredAuthority,\n                clientCapabilities: this.config.auth.clientCapabilities,\n            },\n            loggerOptions: {\n                logLevel: this.config.system.loggerOptions.logLevel,\n                loggerCallback: this.config.system.loggerOptions.loggerCallback,\n                piiLoggingEnabled: this.config.system.loggerOptions.piiLoggingEnabled,\n                correlationId: requestCorrelationId,\n            },\n            cacheOptions: {\n                claimsBasedCachingEnabled: this.config.cache.claimsBasedCachingEnabled,\n            },\n            cryptoInterface: this.cryptoProvider,\n            networkInterface: this.config.system.networkClient,\n            storageInterface: this.storage,\n            serverTelemetryManager: serverTelemetryManager,\n            clientCredentials: {\n                clientSecret: this.clientSecret,\n                clientAssertion: await this.getClientAssertion(discoveredAuthority),\n            },\n            libraryInfo: {\n                sku: _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_3__.Constants.MSAL_SKU,\n                version: _packageMetadata_mjs__WEBPACK_IMPORTED_MODULE_6__.version,\n                cpu: process.arch || _azure_msal_common__WEBPACK_IMPORTED_MODULE_11__.Constants.EMPTY_STRING,\n                os: process.platform || _azure_msal_common__WEBPACK_IMPORTED_MODULE_11__.Constants.EMPTY_STRING,\n            },\n            telemetry: this.config.telemetry,\n            persistencePlugin: this.config.cache.cachePlugin,\n            serializableCache: this.tokenCache,\n        };\n        return clientConfiguration;\n    }\n    async getClientAssertion(authority) {\n        if (this.developerProvidedClientAssertion) {\n            this.clientAssertion = _ClientAssertion_mjs__WEBPACK_IMPORTED_MODULE_5__.ClientAssertion.fromAssertion(await (0,_azure_msal_common__WEBPACK_IMPORTED_MODULE_18__.getClientAssertion)(this.developerProvidedClientAssertion, this.config.auth.clientId, authority.tokenEndpoint));\n        }\n        return (this.clientAssertion && {\n            assertion: this.clientAssertion.getJwt(this.cryptoProvider, this.config.auth.clientId, authority.tokenEndpoint),\n            assertionType: _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_3__.Constants.JWT_BEARER_ASSERTION_TYPE,\n        });\n    }\n    /**\n     * Generates a request with the default scopes & generates a correlationId.\n     * @param authRequest - BaseAuthRequest for initialization\n     */\n    async initializeBaseRequest(authRequest) {\n        this.logger.verbose(\"initializeRequestScopes called\", authRequest.correlationId);\n        // Default authenticationScheme to Bearer, log that POP isn't supported yet\n        if (authRequest.authenticationScheme &&\n            authRequest.authenticationScheme === _azure_msal_common__WEBPACK_IMPORTED_MODULE_11__.AuthenticationScheme.POP) {\n            this.logger.verbose(\"Authentication Scheme 'pop' is not supported yet, setting Authentication Scheme to 'Bearer' for request\", authRequest.correlationId);\n        }\n        authRequest.authenticationScheme = _azure_msal_common__WEBPACK_IMPORTED_MODULE_11__.AuthenticationScheme.BEARER;\n        // Set requested claims hash if claims-based caching is enabled and claims were requested\n        if (this.config.cache.claimsBasedCachingEnabled &&\n            authRequest.claims &&\n            // Checks for empty stringified object \"{}\" which doesn't qualify as requested claims\n            !_azure_msal_common__WEBPACK_IMPORTED_MODULE_19__.StringUtils.isEmptyObj(authRequest.claims)) {\n            authRequest.requestedClaimsHash =\n                await this.cryptoProvider.hashString(authRequest.claims);\n        }\n        return {\n            ...authRequest,\n            scopes: [\n                ...((authRequest && authRequest.scopes) || []),\n                ..._azure_msal_common__WEBPACK_IMPORTED_MODULE_11__.OIDC_DEFAULT_SCOPES,\n            ],\n            correlationId: (authRequest && authRequest.correlationId) ||\n                this.cryptoProvider.createNewGuid(),\n            authority: authRequest.authority || this.config.auth.authority,\n        };\n    }\n    /**\n     * Initializes the server telemetry payload\n     * @param apiId - Id for a specific request\n     * @param correlationId - GUID\n     * @param forceRefresh - boolean to indicate network call\n     */\n    initializeServerTelemetryManager(apiId, correlationId, forceRefresh) {\n        const telemetryPayload = {\n            clientId: this.config.auth.clientId,\n            correlationId: correlationId,\n            apiId: apiId,\n            forceRefresh: forceRefresh || false,\n        };\n        return new _azure_msal_common__WEBPACK_IMPORTED_MODULE_20__.ServerTelemetryManager(telemetryPayload, this.storage);\n    }\n    /**\n     * Create authority instance. If authority not passed in request, default to authority set on the application\n     * object. If no authority set in application object, then default to common authority.\n     * @param authorityString - authority from user configuration\n     */\n    async createAuthority(authorityString, requestCorrelationId, azureRegionConfiguration, azureCloudOptions) {\n        this.logger.verbose(\"createAuthority called\", requestCorrelationId);\n        // build authority string based on auth params - azureCloudInstance is prioritized if provided\n        const authorityUrl = _azure_msal_common__WEBPACK_IMPORTED_MODULE_10__.Authority.generateAuthority(authorityString, azureCloudOptions);\n        const authorityOptions = {\n            protocolMode: this.config.auth.protocolMode,\n            knownAuthorities: this.config.auth.knownAuthorities,\n            cloudDiscoveryMetadata: this.config.auth.cloudDiscoveryMetadata,\n            authorityMetadata: this.config.auth.authorityMetadata,\n            azureRegionConfiguration,\n            skipAuthorityMetadataCache: this.config.auth.skipAuthorityMetadataCache,\n        };\n        return _azure_msal_common__WEBPACK_IMPORTED_MODULE_21__.createDiscoveredInstance(authorityUrl, this.config.system.networkClient, this.storage, authorityOptions, this.logger, requestCorrelationId);\n    }\n    /**\n     * Clear the cache\n     */\n    clearCache() {\n        void this.storage.clear();\n    }\n}\n\n\n//# sourceMappingURL=ClientApplication.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtbm9kZS9kaXN0L2NsaWVudC9DbGllbnRBcHBsaWNhdGlvbi5tanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBQTtBQUNhO0FBQzRWO0FBQ3JTO0FBQ047QUFDUDtBQUNHO0FBQ0w7QUFDRztBQUNEO0FBQ0k7QUFDVzs7QUFFdEU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxzQkFBc0IsZ0ZBQXFCO0FBQzNDLGtDQUFrQyxzRUFBYztBQUNoRCwwQkFBMEIsc0RBQU0sbUNBQW1DLHNEQUFJLEVBQUUseURBQU87QUFDaEYsMkJBQTJCLCtEQUFXLDhEQUE4RCxnRkFBMkI7QUFDL0gsOEJBQThCLDZEQUFVO0FBQ3hDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtEQUFrRCw2REFBWTtBQUM5RCxrQ0FBa0MscUVBQW9CO0FBQ3REO0FBQ0E7QUFDQSw0Q0FBNEMsd0VBQXVCO0FBQ25FO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnQ0FBZ0M7QUFDaEM7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrQ0FBa0MscUVBQW9CO0FBQ3REO0FBQ0EsNkVBQTZFLHVEQUFLO0FBQ2xGO0FBQ0E7QUFDQSxnREFBZ0Qsd0VBQXVCO0FBQ3ZFO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNkJBQTZCLDBEQUFTO0FBQ3RDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtDQUFrQyxxRUFBb0I7QUFDdEQ7QUFDQSw2RUFBNkUsdURBQUs7QUFDbEY7QUFDQTtBQUNBLDJDQUEyQyxtRUFBa0I7QUFDN0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQSw2QkFBNkIsMERBQVM7QUFDdEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDZFQUE2RSx1REFBSztBQUNsRjtBQUNBO0FBQ0EseUNBQXlDLGlFQUFnQjtBQUN6RDtBQUNBO0FBQ0E7QUFDQTtBQUNBLDZCQUE2QiwwREFBUztBQUN0QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDZFQUE2RSx1REFBSztBQUNsRjtBQUNBO0FBQ0EsK0NBQStDLCtFQUFzQjtBQUNyRTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDZCQUE2QiwwREFBUztBQUN0QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrQkFBa0IsbUVBQWE7QUFDL0I7QUFDQTtBQUNBLGtCQUFrQiwwRUFBcUIsQ0FBQyw4REFBa0M7QUFDMUU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw4RkFBOEYsa0NBQWtDO0FBQ2hJO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQSxxQkFBcUIsMkRBQVM7QUFDOUIseUJBQXlCLHlEQUFPO0FBQ2hDLHFDQUFxQywwREFBVztBQUNoRCx3Q0FBd0MsMERBQVc7QUFDbkQsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxtQ0FBbUMsaUVBQWUscUJBQXFCLHVFQUFrQjtBQUN6RjtBQUNBO0FBQ0E7QUFDQSwyQkFBMkIsMkRBQVM7QUFDcEMsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlEQUFpRCxxRUFBb0I7QUFDckU7QUFDQTtBQUNBLDJDQUEyQyxxRUFBb0I7QUFDL0Q7QUFDQTtBQUNBO0FBQ0Esc0RBQXNEO0FBQ3RELGFBQWEsNERBQVc7QUFDeEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxtQkFBbUIsb0VBQW1CO0FBQ3RDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbUJBQW1CLHVFQUFzQjtBQUN6QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw2QkFBNkIsMERBQVM7QUFDdEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWUseUVBQXlDO0FBQ3hEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRTZCO0FBQzdCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZGFuaWVsMy12cDIvLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtbm9kZS9kaXN0L2NsaWVudC9DbGllbnRBcHBsaWNhdGlvbi5tanM/NmU2MSJdLCJzb3VyY2VzQ29udGVudCI6WyIvKiEgQGF6dXJlL21zYWwtbm9kZSB2Mi4xMi4wIDIwMjQtMDctMjMgKi9cbid1c2Ugc3RyaWN0JztcbmltcG9ydCB7IExvZ2dlciwgYnVpbGRTdGF0aWNBdXRob3JpdHlPcHRpb25zLCBSZXNwb25zZU1vZGUsIEF1dGhlbnRpY2F0aW9uU2NoZW1lLCBBdXRob3JpemF0aW9uQ29kZUNsaWVudCwgQXV0aEVycm9yLCBSZWZyZXNoVG9rZW5DbGllbnQsIFNpbGVudEZsb3dDbGllbnQsIGNyZWF0ZUNsaWVudEF1dGhFcnJvciwgQ2xpZW50QXV0aEVycm9yQ29kZXMsIENvbnN0YW50cyBhcyBDb25zdGFudHMkMSwgZ2V0Q2xpZW50QXNzZXJ0aW9uLCBTdHJpbmdVdGlscywgT0lEQ19ERUZBVUxUX1NDT1BFUywgU2VydmVyVGVsZW1ldHJ5TWFuYWdlciwgQXV0aG9yaXR5LCBBdXRob3JpdHlGYWN0b3J5IH0gZnJvbSAnQGF6dXJlL21zYWwtY29tbW9uJztcbmltcG9ydCB7IGJ1aWxkQXBwQ29uZmlndXJhdGlvbiB9IGZyb20gJy4uL2NvbmZpZy9Db25maWd1cmF0aW9uLm1qcyc7XG5pbXBvcnQgeyBDcnlwdG9Qcm92aWRlciB9IGZyb20gJy4uL2NyeXB0by9DcnlwdG9Qcm92aWRlci5tanMnO1xuaW1wb3J0IHsgTm9kZVN0b3JhZ2UgfSBmcm9tICcuLi9jYWNoZS9Ob2RlU3RvcmFnZS5tanMnO1xuaW1wb3J0IHsgQXBpSWQsIENvbnN0YW50cyB9IGZyb20gJy4uL3V0aWxzL0NvbnN0YW50cy5tanMnO1xuaW1wb3J0IHsgVG9rZW5DYWNoZSB9IGZyb20gJy4uL2NhY2hlL1Rva2VuQ2FjaGUubWpzJztcbmltcG9ydCB7IENsaWVudEFzc2VydGlvbiB9IGZyb20gJy4vQ2xpZW50QXNzZXJ0aW9uLm1qcyc7XG5pbXBvcnQgeyBuYW1lLCB2ZXJzaW9uIH0gZnJvbSAnLi4vcGFja2FnZU1ldGFkYXRhLm1qcyc7XG5pbXBvcnQgeyBOb2RlQXV0aEVycm9yIH0gZnJvbSAnLi4vZXJyb3IvTm9kZUF1dGhFcnJvci5tanMnO1xuaW1wb3J0IHsgVXNlcm5hbWVQYXNzd29yZENsaWVudCB9IGZyb20gJy4vVXNlcm5hbWVQYXNzd29yZENsaWVudC5tanMnO1xuXG4vKlxuICogQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uIEFsbCByaWdodHMgcmVzZXJ2ZWQuXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIExpY2Vuc2UuXG4gKi9cbi8qKlxuICogQmFzZSBhYnN0cmFjdCBjbGFzcyBmb3IgYWxsIENsaWVudEFwcGxpY2F0aW9ucyAtIHB1YmxpYyBhbmQgY29uZmlkZW50aWFsXG4gKiBAcHVibGljXG4gKi9cbmNsYXNzIENsaWVudEFwcGxpY2F0aW9uIHtcbiAgICAvKipcbiAgICAgKiBDb25zdHJ1Y3RvciBmb3IgdGhlIENsaWVudEFwcGxpY2F0aW9uXG4gICAgICovXG4gICAgY29uc3RydWN0b3IoY29uZmlndXJhdGlvbikge1xuICAgICAgICB0aGlzLmNvbmZpZyA9IGJ1aWxkQXBwQ29uZmlndXJhdGlvbihjb25maWd1cmF0aW9uKTtcbiAgICAgICAgdGhpcy5jcnlwdG9Qcm92aWRlciA9IG5ldyBDcnlwdG9Qcm92aWRlcigpO1xuICAgICAgICB0aGlzLmxvZ2dlciA9IG5ldyBMb2dnZXIodGhpcy5jb25maWcuc3lzdGVtLmxvZ2dlck9wdGlvbnMsIG5hbWUsIHZlcnNpb24pO1xuICAgICAgICB0aGlzLnN0b3JhZ2UgPSBuZXcgTm9kZVN0b3JhZ2UodGhpcy5sb2dnZXIsIHRoaXMuY29uZmlnLmF1dGguY2xpZW50SWQsIHRoaXMuY3J5cHRvUHJvdmlkZXIsIGJ1aWxkU3RhdGljQXV0aG9yaXR5T3B0aW9ucyh0aGlzLmNvbmZpZy5hdXRoKSk7XG4gICAgICAgIHRoaXMudG9rZW5DYWNoZSA9IG5ldyBUb2tlbkNhY2hlKHRoaXMuc3RvcmFnZSwgdGhpcy5sb2dnZXIsIHRoaXMuY29uZmlnLmNhY2hlLmNhY2hlUGx1Z2luKTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogQ3JlYXRlcyB0aGUgVVJMIG9mIHRoZSBhdXRob3JpemF0aW9uIHJlcXVlc3QsIGxldHRpbmcgdGhlIHVzZXIgaW5wdXQgY3JlZGVudGlhbHMgYW5kIGNvbnNlbnQgdG8gdGhlXG4gICAgICogYXBwbGljYXRpb24uIFRoZSBVUkwgdGFyZ2V0cyB0aGUgL2F1dGhvcml6ZSBlbmRwb2ludCBvZiB0aGUgYXV0aG9yaXR5IGNvbmZpZ3VyZWQgaW4gdGhlXG4gICAgICogYXBwbGljYXRpb24gb2JqZWN0LlxuICAgICAqXG4gICAgICogT25jZSB0aGUgdXNlciBpbnB1dHMgdGhlaXIgY3JlZGVudGlhbHMgYW5kIGNvbnNlbnRzLCB0aGUgYXV0aG9yaXR5IHdpbGwgc2VuZCBhIHJlc3BvbnNlIHRvIHRoZSByZWRpcmVjdCBVUklcbiAgICAgKiBzZW50IGluIHRoZSByZXF1ZXN0IGFuZCBzaG91bGQgY29udGFpbiBhbiBhdXRob3JpemF0aW9uIGNvZGUsIHdoaWNoIGNhbiB0aGVuIGJlIHVzZWQgdG8gYWNxdWlyZSB0b2tlbnMgdmlhXG4gICAgICogYGFjcXVpcmVUb2tlbkJ5Q29kZShBdXRob3JpemF0aW9uQ29kZVJlcXVlc3QpYC5cbiAgICAgKi9cbiAgICBhc3luYyBnZXRBdXRoQ29kZVVybChyZXF1ZXN0KSB7XG4gICAgICAgIHRoaXMubG9nZ2VyLmluZm8oXCJnZXRBdXRoQ29kZVVybCBjYWxsZWRcIiwgcmVxdWVzdC5jb3JyZWxhdGlvbklkKTtcbiAgICAgICAgY29uc3QgdmFsaWRSZXF1ZXN0ID0ge1xuICAgICAgICAgICAgLi4ucmVxdWVzdCxcbiAgICAgICAgICAgIC4uLihhd2FpdCB0aGlzLmluaXRpYWxpemVCYXNlUmVxdWVzdChyZXF1ZXN0KSksXG4gICAgICAgICAgICByZXNwb25zZU1vZGU6IHJlcXVlc3QucmVzcG9uc2VNb2RlIHx8IFJlc3BvbnNlTW9kZS5RVUVSWSxcbiAgICAgICAgICAgIGF1dGhlbnRpY2F0aW9uU2NoZW1lOiBBdXRoZW50aWNhdGlvblNjaGVtZS5CRUFSRVIsXG4gICAgICAgIH07XG4gICAgICAgIGNvbnN0IGF1dGhDbGllbnRDb25maWcgPSBhd2FpdCB0aGlzLmJ1aWxkT2F1dGhDbGllbnRDb25maWd1cmF0aW9uKHZhbGlkUmVxdWVzdC5hdXRob3JpdHksIHZhbGlkUmVxdWVzdC5jb3JyZWxhdGlvbklkLCB1bmRlZmluZWQsIHVuZGVmaW5lZCwgcmVxdWVzdC5henVyZUNsb3VkT3B0aW9ucyk7XG4gICAgICAgIGNvbnN0IGF1dGhvcml6YXRpb25Db2RlQ2xpZW50ID0gbmV3IEF1dGhvcml6YXRpb25Db2RlQ2xpZW50KGF1dGhDbGllbnRDb25maWcpO1xuICAgICAgICB0aGlzLmxvZ2dlci52ZXJib3NlKFwiQXV0aCBjb2RlIGNsaWVudCBjcmVhdGVkXCIsIHZhbGlkUmVxdWVzdC5jb3JyZWxhdGlvbklkKTtcbiAgICAgICAgcmV0dXJuIGF1dGhvcml6YXRpb25Db2RlQ2xpZW50LmdldEF1dGhDb2RlVXJsKHZhbGlkUmVxdWVzdCk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIEFjcXVpcmVzIGEgdG9rZW4gYnkgZXhjaGFuZ2luZyB0aGUgQXV0aG9yaXphdGlvbiBDb2RlIHJlY2VpdmVkIGZyb20gdGhlIGZpcnN0IHN0ZXAgb2YgT0F1dGgyLjBcbiAgICAgKiBBdXRob3JpemF0aW9uIENvZGUgZmxvdy5cbiAgICAgKlxuICAgICAqIGBnZXRBdXRoQ29kZVVybChBdXRob3JpemF0aW9uQ29kZVVybFJlcXVlc3QpYCBjYW4gYmUgdXNlZCB0byBjcmVhdGUgdGhlIFVSTCBmb3IgdGhlIGZpcnN0IHN0ZXAgb2YgT0F1dGgyLjBcbiAgICAgKiBBdXRob3JpemF0aW9uIENvZGUgZmxvdy4gRW5zdXJlIHRoYXQgdmFsdWVzIGZvciByZWRpcmVjdFVyaSBhbmQgc2NvcGVzIGluIEF1dGhvcml6YXRpb25Db2RlVXJsUmVxdWVzdCBhbmRcbiAgICAgKiBBdXRob3JpemF0aW9uQ29kZVJlcXVlc3QgYXJlIHRoZSBzYW1lLlxuICAgICAqL1xuICAgIGFzeW5jIGFjcXVpcmVUb2tlbkJ5Q29kZShyZXF1ZXN0LCBhdXRoQ29kZVBheUxvYWQpIHtcbiAgICAgICAgdGhpcy5sb2dnZXIuaW5mbyhcImFjcXVpcmVUb2tlbkJ5Q29kZSBjYWxsZWRcIik7XG4gICAgICAgIGlmIChyZXF1ZXN0LnN0YXRlICYmIGF1dGhDb2RlUGF5TG9hZCkge1xuICAgICAgICAgICAgdGhpcy5sb2dnZXIuaW5mbyhcImFjcXVpcmVUb2tlbkJ5Q29kZSAtIHZhbGlkYXRpbmcgc3RhdGVcIik7XG4gICAgICAgICAgICB0aGlzLnZhbGlkYXRlU3RhdGUocmVxdWVzdC5zdGF0ZSwgYXV0aENvZGVQYXlMb2FkLnN0YXRlIHx8IFwiXCIpO1xuICAgICAgICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLXBhcmFtLXJlYXNzaWduXG4gICAgICAgICAgICBhdXRoQ29kZVBheUxvYWQgPSB7IC4uLmF1dGhDb2RlUGF5TG9hZCwgc3RhdGU6IFwiXCIgfTtcbiAgICAgICAgfVxuICAgICAgICBjb25zdCB2YWxpZFJlcXVlc3QgPSB7XG4gICAgICAgICAgICAuLi5yZXF1ZXN0LFxuICAgICAgICAgICAgLi4uKGF3YWl0IHRoaXMuaW5pdGlhbGl6ZUJhc2VSZXF1ZXN0KHJlcXVlc3QpKSxcbiAgICAgICAgICAgIGF1dGhlbnRpY2F0aW9uU2NoZW1lOiBBdXRoZW50aWNhdGlvblNjaGVtZS5CRUFSRVIsXG4gICAgICAgIH07XG4gICAgICAgIGNvbnN0IHNlcnZlclRlbGVtZXRyeU1hbmFnZXIgPSB0aGlzLmluaXRpYWxpemVTZXJ2ZXJUZWxlbWV0cnlNYW5hZ2VyKEFwaUlkLmFjcXVpcmVUb2tlbkJ5Q29kZSwgdmFsaWRSZXF1ZXN0LmNvcnJlbGF0aW9uSWQpO1xuICAgICAgICB0cnkge1xuICAgICAgICAgICAgY29uc3QgYXV0aENsaWVudENvbmZpZyA9IGF3YWl0IHRoaXMuYnVpbGRPYXV0aENsaWVudENvbmZpZ3VyYXRpb24odmFsaWRSZXF1ZXN0LmF1dGhvcml0eSwgdmFsaWRSZXF1ZXN0LmNvcnJlbGF0aW9uSWQsIHNlcnZlclRlbGVtZXRyeU1hbmFnZXIsIHVuZGVmaW5lZCwgcmVxdWVzdC5henVyZUNsb3VkT3B0aW9ucyk7XG4gICAgICAgICAgICBjb25zdCBhdXRob3JpemF0aW9uQ29kZUNsaWVudCA9IG5ldyBBdXRob3JpemF0aW9uQ29kZUNsaWVudChhdXRoQ2xpZW50Q29uZmlnKTtcbiAgICAgICAgICAgIHRoaXMubG9nZ2VyLnZlcmJvc2UoXCJBdXRoIGNvZGUgY2xpZW50IGNyZWF0ZWRcIiwgdmFsaWRSZXF1ZXN0LmNvcnJlbGF0aW9uSWQpO1xuICAgICAgICAgICAgcmV0dXJuIGF3YWl0IGF1dGhvcml6YXRpb25Db2RlQ2xpZW50LmFjcXVpcmVUb2tlbih2YWxpZFJlcXVlc3QsIGF1dGhDb2RlUGF5TG9hZCk7XG4gICAgICAgIH1cbiAgICAgICAgY2F0Y2ggKGUpIHtcbiAgICAgICAgICAgIGlmIChlIGluc3RhbmNlb2YgQXV0aEVycm9yKSB7XG4gICAgICAgICAgICAgICAgZS5zZXRDb3JyZWxhdGlvbklkKHZhbGlkUmVxdWVzdC5jb3JyZWxhdGlvbklkKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHNlcnZlclRlbGVtZXRyeU1hbmFnZXIuY2FjaGVGYWlsZWRSZXF1ZXN0KGUpO1xuICAgICAgICAgICAgdGhyb3cgZTtcbiAgICAgICAgfVxuICAgIH1cbiAgICAvKipcbiAgICAgKiBBY3F1aXJlcyBhIHRva2VuIGJ5IGV4Y2hhbmdpbmcgdGhlIHJlZnJlc2ggdG9rZW4gcHJvdmlkZWQgZm9yIGEgbmV3IHNldCBvZiB0b2tlbnMuXG4gICAgICpcbiAgICAgKiBUaGlzIEFQSSBpcyBwcm92aWRlZCBvbmx5IGZvciBzY2VuYXJpb3Mgd2hlcmUgeW91IHdvdWxkIGxpa2UgdG8gbWlncmF0ZSBmcm9tIEFEQUwgdG8gTVNBTC4gT3RoZXJ3aXNlLCBpdCBpc1xuICAgICAqIHJlY29tbWVuZGVkIHRoYXQgeW91IHVzZSBgYWNxdWlyZVRva2VuU2lsZW50KClgIGZvciBzaWxlbnQgc2NlbmFyaW9zLiBXaGVuIHVzaW5nIGBhY3F1aXJlVG9rZW5TaWxlbnQoKWAsIE1TQUwgd2lsbFxuICAgICAqIGhhbmRsZSB0aGUgY2FjaGluZyBhbmQgcmVmcmVzaGluZyBvZiB0b2tlbnMgYXV0b21hdGljYWxseS5cbiAgICAgKi9cbiAgICBhc3luYyBhY3F1aXJlVG9rZW5CeVJlZnJlc2hUb2tlbihyZXF1ZXN0KSB7XG4gICAgICAgIHRoaXMubG9nZ2VyLmluZm8oXCJhY3F1aXJlVG9rZW5CeVJlZnJlc2hUb2tlbiBjYWxsZWRcIiwgcmVxdWVzdC5jb3JyZWxhdGlvbklkKTtcbiAgICAgICAgY29uc3QgdmFsaWRSZXF1ZXN0ID0ge1xuICAgICAgICAgICAgLi4ucmVxdWVzdCxcbiAgICAgICAgICAgIC4uLihhd2FpdCB0aGlzLmluaXRpYWxpemVCYXNlUmVxdWVzdChyZXF1ZXN0KSksXG4gICAgICAgICAgICBhdXRoZW50aWNhdGlvblNjaGVtZTogQXV0aGVudGljYXRpb25TY2hlbWUuQkVBUkVSLFxuICAgICAgICB9O1xuICAgICAgICBjb25zdCBzZXJ2ZXJUZWxlbWV0cnlNYW5hZ2VyID0gdGhpcy5pbml0aWFsaXplU2VydmVyVGVsZW1ldHJ5TWFuYWdlcihBcGlJZC5hY3F1aXJlVG9rZW5CeVJlZnJlc2hUb2tlbiwgdmFsaWRSZXF1ZXN0LmNvcnJlbGF0aW9uSWQpO1xuICAgICAgICB0cnkge1xuICAgICAgICAgICAgY29uc3QgcmVmcmVzaFRva2VuQ2xpZW50Q29uZmlnID0gYXdhaXQgdGhpcy5idWlsZE9hdXRoQ2xpZW50Q29uZmlndXJhdGlvbih2YWxpZFJlcXVlc3QuYXV0aG9yaXR5LCB2YWxpZFJlcXVlc3QuY29ycmVsYXRpb25JZCwgc2VydmVyVGVsZW1ldHJ5TWFuYWdlciwgdW5kZWZpbmVkLCByZXF1ZXN0LmF6dXJlQ2xvdWRPcHRpb25zKTtcbiAgICAgICAgICAgIGNvbnN0IHJlZnJlc2hUb2tlbkNsaWVudCA9IG5ldyBSZWZyZXNoVG9rZW5DbGllbnQocmVmcmVzaFRva2VuQ2xpZW50Q29uZmlnKTtcbiAgICAgICAgICAgIHRoaXMubG9nZ2VyLnZlcmJvc2UoXCJSZWZyZXNoIHRva2VuIGNsaWVudCBjcmVhdGVkXCIsIHZhbGlkUmVxdWVzdC5jb3JyZWxhdGlvbklkKTtcbiAgICAgICAgICAgIHJldHVybiBhd2FpdCByZWZyZXNoVG9rZW5DbGllbnQuYWNxdWlyZVRva2VuKHZhbGlkUmVxdWVzdCk7XG4gICAgICAgIH1cbiAgICAgICAgY2F0Y2ggKGUpIHtcbiAgICAgICAgICAgIGlmIChlIGluc3RhbmNlb2YgQXV0aEVycm9yKSB7XG4gICAgICAgICAgICAgICAgZS5zZXRDb3JyZWxhdGlvbklkKHZhbGlkUmVxdWVzdC5jb3JyZWxhdGlvbklkKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHNlcnZlclRlbGVtZXRyeU1hbmFnZXIuY2FjaGVGYWlsZWRSZXF1ZXN0KGUpO1xuICAgICAgICAgICAgdGhyb3cgZTtcbiAgICAgICAgfVxuICAgIH1cbiAgICAvKipcbiAgICAgKiBBY3F1aXJlcyBhIHRva2VuIHNpbGVudGx5IHdoZW4gYSB1c2VyIHNwZWNpZmllcyB0aGUgYWNjb3VudCB0aGUgdG9rZW4gaXMgcmVxdWVzdGVkIGZvci5cbiAgICAgKlxuICAgICAqIFRoaXMgQVBJIGV4cGVjdHMgdGhlIHVzZXIgdG8gcHJvdmlkZSBhbiBhY2NvdW50IG9iamVjdCBhbmQgbG9va3MgaW50byB0aGUgY2FjaGUgdG8gcmV0cmlldmUgdGhlIHRva2VuIGlmIHByZXNlbnQuXG4gICAgICogVGhlcmUgaXMgYWxzbyBhbiBvcHRpb25hbCBcImZvcmNlUmVmcmVzaFwiIGJvb2xlYW4gdGhlIHVzZXIgY2FuIHNlbmQgdG8gYnlwYXNzIHRoZSBjYWNoZSBmb3IgYWNjZXNzX3Rva2VuIGFuZCBpZF90b2tlbi5cbiAgICAgKiBJbiBjYXNlIHRoZSByZWZyZXNoX3Rva2VuIGlzIGV4cGlyZWQgb3Igbm90IGZvdW5kLCBhbiBlcnJvciBpcyB0aHJvd25cbiAgICAgKiBhbmQgdGhlIGd1aWRhbmNlIGlzIGZvciB0aGUgdXNlciB0byBjYWxsIGFueSBpbnRlcmFjdGl2ZSB0b2tlbiBhY3F1aXNpdGlvbiBBUEkgKGVnOiBgYWNxdWlyZVRva2VuQnlDb2RlKClgKS5cbiAgICAgKi9cbiAgICBhc3luYyBhY3F1aXJlVG9rZW5TaWxlbnQocmVxdWVzdCkge1xuICAgICAgICBjb25zdCB2YWxpZFJlcXVlc3QgPSB7XG4gICAgICAgICAgICAuLi5yZXF1ZXN0LFxuICAgICAgICAgICAgLi4uKGF3YWl0IHRoaXMuaW5pdGlhbGl6ZUJhc2VSZXF1ZXN0KHJlcXVlc3QpKSxcbiAgICAgICAgICAgIGZvcmNlUmVmcmVzaDogcmVxdWVzdC5mb3JjZVJlZnJlc2ggfHwgZmFsc2UsXG4gICAgICAgIH07XG4gICAgICAgIGNvbnN0IHNlcnZlclRlbGVtZXRyeU1hbmFnZXIgPSB0aGlzLmluaXRpYWxpemVTZXJ2ZXJUZWxlbWV0cnlNYW5hZ2VyKEFwaUlkLmFjcXVpcmVUb2tlblNpbGVudCwgdmFsaWRSZXF1ZXN0LmNvcnJlbGF0aW9uSWQsIHZhbGlkUmVxdWVzdC5mb3JjZVJlZnJlc2gpO1xuICAgICAgICB0cnkge1xuICAgICAgICAgICAgY29uc3Qgc2lsZW50Rmxvd0NsaWVudENvbmZpZyA9IGF3YWl0IHRoaXMuYnVpbGRPYXV0aENsaWVudENvbmZpZ3VyYXRpb24odmFsaWRSZXF1ZXN0LmF1dGhvcml0eSwgdmFsaWRSZXF1ZXN0LmNvcnJlbGF0aW9uSWQsIHNlcnZlclRlbGVtZXRyeU1hbmFnZXIsIHVuZGVmaW5lZCwgcmVxdWVzdC5henVyZUNsb3VkT3B0aW9ucyk7XG4gICAgICAgICAgICBjb25zdCBzaWxlbnRGbG93Q2xpZW50ID0gbmV3IFNpbGVudEZsb3dDbGllbnQoc2lsZW50Rmxvd0NsaWVudENvbmZpZyk7XG4gICAgICAgICAgICB0aGlzLmxvZ2dlci52ZXJib3NlKFwiU2lsZW50IGZsb3cgY2xpZW50IGNyZWF0ZWRcIiwgdmFsaWRSZXF1ZXN0LmNvcnJlbGF0aW9uSWQpO1xuICAgICAgICAgICAgcmV0dXJuIGF3YWl0IHNpbGVudEZsb3dDbGllbnQuYWNxdWlyZVRva2VuKHZhbGlkUmVxdWVzdCk7XG4gICAgICAgIH1cbiAgICAgICAgY2F0Y2ggKGUpIHtcbiAgICAgICAgICAgIGlmIChlIGluc3RhbmNlb2YgQXV0aEVycm9yKSB7XG4gICAgICAgICAgICAgICAgZS5zZXRDb3JyZWxhdGlvbklkKHZhbGlkUmVxdWVzdC5jb3JyZWxhdGlvbklkKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHNlcnZlclRlbGVtZXRyeU1hbmFnZXIuY2FjaGVGYWlsZWRSZXF1ZXN0KGUpO1xuICAgICAgICAgICAgdGhyb3cgZTtcbiAgICAgICAgfVxuICAgIH1cbiAgICAvKipcbiAgICAgKiBBY3F1aXJlcyB0b2tlbnMgd2l0aCBwYXNzd29yZCBncmFudCBieSBleGNoYW5naW5nIGNsaWVudCBhcHBsaWNhdGlvbnMgdXNlcm5hbWUgYW5kIHBhc3N3b3JkIGZvciBjcmVkZW50aWFsc1xuICAgICAqXG4gICAgICogVGhlIGxhdGVzdCBPQXV0aCAyLjAgU2VjdXJpdHkgQmVzdCBDdXJyZW50IFByYWN0aWNlIGRpc2FsbG93cyB0aGUgcGFzc3dvcmQgZ3JhbnQgZW50aXJlbHkuXG4gICAgICogTW9yZSBkZXRhaWxzIG9uIHRoaXMgcmVjb21tZW5kYXRpb24gYXQgaHR0cHM6Ly90b29scy5pZXRmLm9yZy9odG1sL2RyYWZ0LWlldGYtb2F1dGgtc2VjdXJpdHktdG9waWNzLTEzI3NlY3Rpb24tMy40XG4gICAgICogTWljcm9zb2Z0J3MgZG9jdW1lbnRhdGlvbiBhbmQgcmVjb21tZW5kYXRpb25zIGFyZSBhdDpcbiAgICAgKiBodHRwczovL2RvY3MubWljcm9zb2Z0LmNvbS9lbi11cy9henVyZS9hY3RpdmUtZGlyZWN0b3J5L2RldmVsb3AvbXNhbC1hdXRoZW50aWNhdGlvbi1mbG93cyN1c2VybmFtZXBhc3N3b3JkXG4gICAgICpcbiAgICAgKiBAcGFyYW0gcmVxdWVzdCAtIFVzZW5hbWVQYXNzd29yZFJlcXVlc3RcbiAgICAgKi9cbiAgICBhc3luYyBhY3F1aXJlVG9rZW5CeVVzZXJuYW1lUGFzc3dvcmQocmVxdWVzdCkge1xuICAgICAgICB0aGlzLmxvZ2dlci5pbmZvKFwiYWNxdWlyZVRva2VuQnlVc2VybmFtZVBhc3N3b3JkIGNhbGxlZFwiLCByZXF1ZXN0LmNvcnJlbGF0aW9uSWQpO1xuICAgICAgICBjb25zdCB2YWxpZFJlcXVlc3QgPSB7XG4gICAgICAgICAgICAuLi5yZXF1ZXN0LFxuICAgICAgICAgICAgLi4uKGF3YWl0IHRoaXMuaW5pdGlhbGl6ZUJhc2VSZXF1ZXN0KHJlcXVlc3QpKSxcbiAgICAgICAgfTtcbiAgICAgICAgY29uc3Qgc2VydmVyVGVsZW1ldHJ5TWFuYWdlciA9IHRoaXMuaW5pdGlhbGl6ZVNlcnZlclRlbGVtZXRyeU1hbmFnZXIoQXBpSWQuYWNxdWlyZVRva2VuQnlVc2VybmFtZVBhc3N3b3JkLCB2YWxpZFJlcXVlc3QuY29ycmVsYXRpb25JZCk7XG4gICAgICAgIHRyeSB7XG4gICAgICAgICAgICBjb25zdCB1c2VybmFtZVBhc3N3b3JkQ2xpZW50Q29uZmlnID0gYXdhaXQgdGhpcy5idWlsZE9hdXRoQ2xpZW50Q29uZmlndXJhdGlvbih2YWxpZFJlcXVlc3QuYXV0aG9yaXR5LCB2YWxpZFJlcXVlc3QuY29ycmVsYXRpb25JZCwgc2VydmVyVGVsZW1ldHJ5TWFuYWdlciwgdW5kZWZpbmVkLCByZXF1ZXN0LmF6dXJlQ2xvdWRPcHRpb25zKTtcbiAgICAgICAgICAgIGNvbnN0IHVzZXJuYW1lUGFzc3dvcmRDbGllbnQgPSBuZXcgVXNlcm5hbWVQYXNzd29yZENsaWVudCh1c2VybmFtZVBhc3N3b3JkQ2xpZW50Q29uZmlnKTtcbiAgICAgICAgICAgIHRoaXMubG9nZ2VyLnZlcmJvc2UoXCJVc2VybmFtZSBwYXNzd29yZCBjbGllbnQgY3JlYXRlZFwiLCB2YWxpZFJlcXVlc3QuY29ycmVsYXRpb25JZCk7XG4gICAgICAgICAgICByZXR1cm4gYXdhaXQgdXNlcm5hbWVQYXNzd29yZENsaWVudC5hY3F1aXJlVG9rZW4odmFsaWRSZXF1ZXN0KTtcbiAgICAgICAgfVxuICAgICAgICBjYXRjaCAoZSkge1xuICAgICAgICAgICAgaWYgKGUgaW5zdGFuY2VvZiBBdXRoRXJyb3IpIHtcbiAgICAgICAgICAgICAgICBlLnNldENvcnJlbGF0aW9uSWQodmFsaWRSZXF1ZXN0LmNvcnJlbGF0aW9uSWQpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgc2VydmVyVGVsZW1ldHJ5TWFuYWdlci5jYWNoZUZhaWxlZFJlcXVlc3QoZSk7XG4gICAgICAgICAgICB0aHJvdyBlO1xuICAgICAgICB9XG4gICAgfVxuICAgIC8qKlxuICAgICAqIEdldHMgdGhlIHRva2VuIGNhY2hlIGZvciB0aGUgYXBwbGljYXRpb24uXG4gICAgICovXG4gICAgZ2V0VG9rZW5DYWNoZSgpIHtcbiAgICAgICAgdGhpcy5sb2dnZXIuaW5mbyhcImdldFRva2VuQ2FjaGUgY2FsbGVkXCIpO1xuICAgICAgICByZXR1cm4gdGhpcy50b2tlbkNhY2hlO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBWYWxpZGF0ZXMgT0lEQyBzdGF0ZSBieSBjb21wYXJpbmcgdGhlIHVzZXIgY2FjaGVkIHN0YXRlIHdpdGggdGhlIHN0YXRlIHJlY2VpdmVkIGZyb20gdGhlIHNlcnZlci5cbiAgICAgKlxuICAgICAqIFRoaXMgQVBJIGlzIHByb3ZpZGVkIGZvciBzY2VuYXJpb3Mgd2hlcmUgeW91IHdvdWxkIHVzZSBPQXV0aDIuMCBzdGF0ZSBwYXJhbWV0ZXIgdG8gbWl0aWdhdGUgYWdhaW5zdFxuICAgICAqIENTUkYgYXR0YWNrcy5cbiAgICAgKiBGb3IgbW9yZSBpbmZvcm1hdGlvbiBhYm91dCBzdGF0ZSwgdmlzaXQgaHR0cHM6Ly9kYXRhdHJhY2tlci5pZXRmLm9yZy9kb2MvaHRtbC9yZmM2ODE5I3NlY3Rpb24tMy42LlxuICAgICAqIEBwYXJhbSBzdGF0ZVxuICAgICAqIEBwYXJhbSBjYWNoZWRTdGF0ZVxuICAgICAqL1xuICAgIHZhbGlkYXRlU3RhdGUoc3RhdGUsIGNhY2hlZFN0YXRlKSB7XG4gICAgICAgIGlmICghc3RhdGUpIHtcbiAgICAgICAgICAgIHRocm93IE5vZGVBdXRoRXJyb3IuY3JlYXRlU3RhdGVOb3RGb3VuZEVycm9yKCk7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKHN0YXRlICE9PSBjYWNoZWRTdGF0ZSkge1xuICAgICAgICAgICAgdGhyb3cgY3JlYXRlQ2xpZW50QXV0aEVycm9yKENsaWVudEF1dGhFcnJvckNvZGVzLnN0YXRlTWlzbWF0Y2gpO1xuICAgICAgICB9XG4gICAgfVxuICAgIC8qKlxuICAgICAqIFJldHVybnMgdGhlIGxvZ2dlciBpbnN0YW5jZVxuICAgICAqL1xuICAgIGdldExvZ2dlcigpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMubG9nZ2VyO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBSZXBsYWNlcyB0aGUgZGVmYXVsdCBsb2dnZXIgc2V0IGluIGNvbmZpZ3VyYXRpb25zIHdpdGggbmV3IExvZ2dlciB3aXRoIG5ldyBjb25maWd1cmF0aW9uc1xuICAgICAqIEBwYXJhbSBsb2dnZXIgLSBMb2dnZXIgaW5zdGFuY2VcbiAgICAgKi9cbiAgICBzZXRMb2dnZXIobG9nZ2VyKSB7XG4gICAgICAgIHRoaXMubG9nZ2VyID0gbG9nZ2VyO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBCdWlsZHMgdGhlIGNvbW1vbiBjb25maWd1cmF0aW9uIHRvIGJlIHBhc3NlZCB0byB0aGUgY29tbW9uIGNvbXBvbmVudCBiYXNlZCBvbiB0aGUgcGxhdGZvcm0gY29uZmlndXJhcmlvblxuICAgICAqIEBwYXJhbSBhdXRob3JpdHkgLSB1c2VyIHBhc3NlZCBhdXRob3JpdHkgaW4gY29uZmlndXJhdGlvblxuICAgICAqIEBwYXJhbSBzZXJ2ZXJUZWxlbWV0cnlNYW5hZ2VyIC0gaW5pdGlhbGl6ZXMgc2VydmVydGVsZW1ldHJ5IGlmIHBhc3NlZFxuICAgICAqL1xuICAgIGFzeW5jIGJ1aWxkT2F1dGhDbGllbnRDb25maWd1cmF0aW9uKGF1dGhvcml0eSwgcmVxdWVzdENvcnJlbGF0aW9uSWQsIHNlcnZlclRlbGVtZXRyeU1hbmFnZXIsIGF6dXJlUmVnaW9uQ29uZmlndXJhdGlvbiwgYXp1cmVDbG91ZE9wdGlvbnMpIHtcbiAgICAgICAgdGhpcy5sb2dnZXIudmVyYm9zZShcImJ1aWxkT2F1dGhDbGllbnRDb25maWd1cmF0aW9uIGNhbGxlZFwiLCByZXF1ZXN0Q29ycmVsYXRpb25JZCk7XG4gICAgICAgIC8vIHByZWNlZGVuY2UgLSBhenVyZUNsb3VkSW5zdGFuY2UgKyB0ZW5hbnQgPj4gYXV0aG9yaXR5IGFuZCByZXF1ZXN0ICA+PiBjb25maWdcbiAgICAgICAgY29uc3QgdXNlckF6dXJlQ2xvdWRPcHRpb25zID0gYXp1cmVDbG91ZE9wdGlvbnNcbiAgICAgICAgICAgID8gYXp1cmVDbG91ZE9wdGlvbnNcbiAgICAgICAgICAgIDogdGhpcy5jb25maWcuYXV0aC5henVyZUNsb3VkT3B0aW9ucztcbiAgICAgICAgLy8gdXNpbmcgbnVsbCBhc3NlcnRpb24gb3BlcmF0b3IgYXMgd2UgZW5zdXJlIHRoYXQgYWxsIGNvbmZpZyB2YWx1ZXMgaGF2ZSBkZWZhdWx0IHZhbHVlcyBpbiBidWlsZENvbmZpZ3VyYXRpb24oKVxuICAgICAgICBjb25zdCBkaXNjb3ZlcmVkQXV0aG9yaXR5ID0gYXdhaXQgdGhpcy5jcmVhdGVBdXRob3JpdHkoYXV0aG9yaXR5LCByZXF1ZXN0Q29ycmVsYXRpb25JZCwgYXp1cmVSZWdpb25Db25maWd1cmF0aW9uLCB1c2VyQXp1cmVDbG91ZE9wdGlvbnMpO1xuICAgICAgICB0aGlzLmxvZ2dlci5pbmZvKGBCdWlsZGluZyBvYXV0aCBjbGllbnQgY29uZmlndXJhdGlvbiB3aXRoIHRoZSBmb2xsb3dpbmcgYXV0aG9yaXR5OiAke2Rpc2NvdmVyZWRBdXRob3JpdHkudG9rZW5FbmRwb2ludH0uYCwgcmVxdWVzdENvcnJlbGF0aW9uSWQpO1xuICAgICAgICBzZXJ2ZXJUZWxlbWV0cnlNYW5hZ2VyPy51cGRhdGVSZWdpb25EaXNjb3ZlcnlNZXRhZGF0YShkaXNjb3ZlcmVkQXV0aG9yaXR5LnJlZ2lvbkRpc2NvdmVyeU1ldGFkYXRhKTtcbiAgICAgICAgY29uc3QgY2xpZW50Q29uZmlndXJhdGlvbiA9IHtcbiAgICAgICAgICAgIGF1dGhPcHRpb25zOiB7XG4gICAgICAgICAgICAgICAgY2xpZW50SWQ6IHRoaXMuY29uZmlnLmF1dGguY2xpZW50SWQsXG4gICAgICAgICAgICAgICAgYXV0aG9yaXR5OiBkaXNjb3ZlcmVkQXV0aG9yaXR5LFxuICAgICAgICAgICAgICAgIGNsaWVudENhcGFiaWxpdGllczogdGhpcy5jb25maWcuYXV0aC5jbGllbnRDYXBhYmlsaXRpZXMsXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgbG9nZ2VyT3B0aW9uczoge1xuICAgICAgICAgICAgICAgIGxvZ0xldmVsOiB0aGlzLmNvbmZpZy5zeXN0ZW0ubG9nZ2VyT3B0aW9ucy5sb2dMZXZlbCxcbiAgICAgICAgICAgICAgICBsb2dnZXJDYWxsYmFjazogdGhpcy5jb25maWcuc3lzdGVtLmxvZ2dlck9wdGlvbnMubG9nZ2VyQ2FsbGJhY2ssXG4gICAgICAgICAgICAgICAgcGlpTG9nZ2luZ0VuYWJsZWQ6IHRoaXMuY29uZmlnLnN5c3RlbS5sb2dnZXJPcHRpb25zLnBpaUxvZ2dpbmdFbmFibGVkLFxuICAgICAgICAgICAgICAgIGNvcnJlbGF0aW9uSWQ6IHJlcXVlc3RDb3JyZWxhdGlvbklkLFxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIGNhY2hlT3B0aW9uczoge1xuICAgICAgICAgICAgICAgIGNsYWltc0Jhc2VkQ2FjaGluZ0VuYWJsZWQ6IHRoaXMuY29uZmlnLmNhY2hlLmNsYWltc0Jhc2VkQ2FjaGluZ0VuYWJsZWQsXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgY3J5cHRvSW50ZXJmYWNlOiB0aGlzLmNyeXB0b1Byb3ZpZGVyLFxuICAgICAgICAgICAgbmV0d29ya0ludGVyZmFjZTogdGhpcy5jb25maWcuc3lzdGVtLm5ldHdvcmtDbGllbnQsXG4gICAgICAgICAgICBzdG9yYWdlSW50ZXJmYWNlOiB0aGlzLnN0b3JhZ2UsXG4gICAgICAgICAgICBzZXJ2ZXJUZWxlbWV0cnlNYW5hZ2VyOiBzZXJ2ZXJUZWxlbWV0cnlNYW5hZ2VyLFxuICAgICAgICAgICAgY2xpZW50Q3JlZGVudGlhbHM6IHtcbiAgICAgICAgICAgICAgICBjbGllbnRTZWNyZXQ6IHRoaXMuY2xpZW50U2VjcmV0LFxuICAgICAgICAgICAgICAgIGNsaWVudEFzc2VydGlvbjogYXdhaXQgdGhpcy5nZXRDbGllbnRBc3NlcnRpb24oZGlzY292ZXJlZEF1dGhvcml0eSksXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgbGlicmFyeUluZm86IHtcbiAgICAgICAgICAgICAgICBza3U6IENvbnN0YW50cy5NU0FMX1NLVSxcbiAgICAgICAgICAgICAgICB2ZXJzaW9uOiB2ZXJzaW9uLFxuICAgICAgICAgICAgICAgIGNwdTogcHJvY2Vzcy5hcmNoIHx8IENvbnN0YW50cyQxLkVNUFRZX1NUUklORyxcbiAgICAgICAgICAgICAgICBvczogcHJvY2Vzcy5wbGF0Zm9ybSB8fCBDb25zdGFudHMkMS5FTVBUWV9TVFJJTkcsXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgdGVsZW1ldHJ5OiB0aGlzLmNvbmZpZy50ZWxlbWV0cnksXG4gICAgICAgICAgICBwZXJzaXN0ZW5jZVBsdWdpbjogdGhpcy5jb25maWcuY2FjaGUuY2FjaGVQbHVnaW4sXG4gICAgICAgICAgICBzZXJpYWxpemFibGVDYWNoZTogdGhpcy50b2tlbkNhY2hlLFxuICAgICAgICB9O1xuICAgICAgICByZXR1cm4gY2xpZW50Q29uZmlndXJhdGlvbjtcbiAgICB9XG4gICAgYXN5bmMgZ2V0Q2xpZW50QXNzZXJ0aW9uKGF1dGhvcml0eSkge1xuICAgICAgICBpZiAodGhpcy5kZXZlbG9wZXJQcm92aWRlZENsaWVudEFzc2VydGlvbikge1xuICAgICAgICAgICAgdGhpcy5jbGllbnRBc3NlcnRpb24gPSBDbGllbnRBc3NlcnRpb24uZnJvbUFzc2VydGlvbihhd2FpdCBnZXRDbGllbnRBc3NlcnRpb24odGhpcy5kZXZlbG9wZXJQcm92aWRlZENsaWVudEFzc2VydGlvbiwgdGhpcy5jb25maWcuYXV0aC5jbGllbnRJZCwgYXV0aG9yaXR5LnRva2VuRW5kcG9pbnQpKTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gKHRoaXMuY2xpZW50QXNzZXJ0aW9uICYmIHtcbiAgICAgICAgICAgIGFzc2VydGlvbjogdGhpcy5jbGllbnRBc3NlcnRpb24uZ2V0Snd0KHRoaXMuY3J5cHRvUHJvdmlkZXIsIHRoaXMuY29uZmlnLmF1dGguY2xpZW50SWQsIGF1dGhvcml0eS50b2tlbkVuZHBvaW50KSxcbiAgICAgICAgICAgIGFzc2VydGlvblR5cGU6IENvbnN0YW50cy5KV1RfQkVBUkVSX0FTU0VSVElPTl9UWVBFLFxuICAgICAgICB9KTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogR2VuZXJhdGVzIGEgcmVxdWVzdCB3aXRoIHRoZSBkZWZhdWx0IHNjb3BlcyAmIGdlbmVyYXRlcyBhIGNvcnJlbGF0aW9uSWQuXG4gICAgICogQHBhcmFtIGF1dGhSZXF1ZXN0IC0gQmFzZUF1dGhSZXF1ZXN0IGZvciBpbml0aWFsaXphdGlvblxuICAgICAqL1xuICAgIGFzeW5jIGluaXRpYWxpemVCYXNlUmVxdWVzdChhdXRoUmVxdWVzdCkge1xuICAgICAgICB0aGlzLmxvZ2dlci52ZXJib3NlKFwiaW5pdGlhbGl6ZVJlcXVlc3RTY29wZXMgY2FsbGVkXCIsIGF1dGhSZXF1ZXN0LmNvcnJlbGF0aW9uSWQpO1xuICAgICAgICAvLyBEZWZhdWx0IGF1dGhlbnRpY2F0aW9uU2NoZW1lIHRvIEJlYXJlciwgbG9nIHRoYXQgUE9QIGlzbid0IHN1cHBvcnRlZCB5ZXRcbiAgICAgICAgaWYgKGF1dGhSZXF1ZXN0LmF1dGhlbnRpY2F0aW9uU2NoZW1lICYmXG4gICAgICAgICAgICBhdXRoUmVxdWVzdC5hdXRoZW50aWNhdGlvblNjaGVtZSA9PT0gQXV0aGVudGljYXRpb25TY2hlbWUuUE9QKSB7XG4gICAgICAgICAgICB0aGlzLmxvZ2dlci52ZXJib3NlKFwiQXV0aGVudGljYXRpb24gU2NoZW1lICdwb3AnIGlzIG5vdCBzdXBwb3J0ZWQgeWV0LCBzZXR0aW5nIEF1dGhlbnRpY2F0aW9uIFNjaGVtZSB0byAnQmVhcmVyJyBmb3IgcmVxdWVzdFwiLCBhdXRoUmVxdWVzdC5jb3JyZWxhdGlvbklkKTtcbiAgICAgICAgfVxuICAgICAgICBhdXRoUmVxdWVzdC5hdXRoZW50aWNhdGlvblNjaGVtZSA9IEF1dGhlbnRpY2F0aW9uU2NoZW1lLkJFQVJFUjtcbiAgICAgICAgLy8gU2V0IHJlcXVlc3RlZCBjbGFpbXMgaGFzaCBpZiBjbGFpbXMtYmFzZWQgY2FjaGluZyBpcyBlbmFibGVkIGFuZCBjbGFpbXMgd2VyZSByZXF1ZXN0ZWRcbiAgICAgICAgaWYgKHRoaXMuY29uZmlnLmNhY2hlLmNsYWltc0Jhc2VkQ2FjaGluZ0VuYWJsZWQgJiZcbiAgICAgICAgICAgIGF1dGhSZXF1ZXN0LmNsYWltcyAmJlxuICAgICAgICAgICAgLy8gQ2hlY2tzIGZvciBlbXB0eSBzdHJpbmdpZmllZCBvYmplY3QgXCJ7fVwiIHdoaWNoIGRvZXNuJ3QgcXVhbGlmeSBhcyByZXF1ZXN0ZWQgY2xhaW1zXG4gICAgICAgICAgICAhU3RyaW5nVXRpbHMuaXNFbXB0eU9iaihhdXRoUmVxdWVzdC5jbGFpbXMpKSB7XG4gICAgICAgICAgICBhdXRoUmVxdWVzdC5yZXF1ZXN0ZWRDbGFpbXNIYXNoID1cbiAgICAgICAgICAgICAgICBhd2FpdCB0aGlzLmNyeXB0b1Byb3ZpZGVyLmhhc2hTdHJpbmcoYXV0aFJlcXVlc3QuY2xhaW1zKTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgLi4uYXV0aFJlcXVlc3QsXG4gICAgICAgICAgICBzY29wZXM6IFtcbiAgICAgICAgICAgICAgICAuLi4oKGF1dGhSZXF1ZXN0ICYmIGF1dGhSZXF1ZXN0LnNjb3BlcykgfHwgW10pLFxuICAgICAgICAgICAgICAgIC4uLk9JRENfREVGQVVMVF9TQ09QRVMsXG4gICAgICAgICAgICBdLFxuICAgICAgICAgICAgY29ycmVsYXRpb25JZDogKGF1dGhSZXF1ZXN0ICYmIGF1dGhSZXF1ZXN0LmNvcnJlbGF0aW9uSWQpIHx8XG4gICAgICAgICAgICAgICAgdGhpcy5jcnlwdG9Qcm92aWRlci5jcmVhdGVOZXdHdWlkKCksXG4gICAgICAgICAgICBhdXRob3JpdHk6IGF1dGhSZXF1ZXN0LmF1dGhvcml0eSB8fCB0aGlzLmNvbmZpZy5hdXRoLmF1dGhvcml0eSxcbiAgICAgICAgfTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogSW5pdGlhbGl6ZXMgdGhlIHNlcnZlciB0ZWxlbWV0cnkgcGF5bG9hZFxuICAgICAqIEBwYXJhbSBhcGlJZCAtIElkIGZvciBhIHNwZWNpZmljIHJlcXVlc3RcbiAgICAgKiBAcGFyYW0gY29ycmVsYXRpb25JZCAtIEdVSURcbiAgICAgKiBAcGFyYW0gZm9yY2VSZWZyZXNoIC0gYm9vbGVhbiB0byBpbmRpY2F0ZSBuZXR3b3JrIGNhbGxcbiAgICAgKi9cbiAgICBpbml0aWFsaXplU2VydmVyVGVsZW1ldHJ5TWFuYWdlcihhcGlJZCwgY29ycmVsYXRpb25JZCwgZm9yY2VSZWZyZXNoKSB7XG4gICAgICAgIGNvbnN0IHRlbGVtZXRyeVBheWxvYWQgPSB7XG4gICAgICAgICAgICBjbGllbnRJZDogdGhpcy5jb25maWcuYXV0aC5jbGllbnRJZCxcbiAgICAgICAgICAgIGNvcnJlbGF0aW9uSWQ6IGNvcnJlbGF0aW9uSWQsXG4gICAgICAgICAgICBhcGlJZDogYXBpSWQsXG4gICAgICAgICAgICBmb3JjZVJlZnJlc2g6IGZvcmNlUmVmcmVzaCB8fCBmYWxzZSxcbiAgICAgICAgfTtcbiAgICAgICAgcmV0dXJuIG5ldyBTZXJ2ZXJUZWxlbWV0cnlNYW5hZ2VyKHRlbGVtZXRyeVBheWxvYWQsIHRoaXMuc3RvcmFnZSk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIENyZWF0ZSBhdXRob3JpdHkgaW5zdGFuY2UuIElmIGF1dGhvcml0eSBub3QgcGFzc2VkIGluIHJlcXVlc3QsIGRlZmF1bHQgdG8gYXV0aG9yaXR5IHNldCBvbiB0aGUgYXBwbGljYXRpb25cbiAgICAgKiBvYmplY3QuIElmIG5vIGF1dGhvcml0eSBzZXQgaW4gYXBwbGljYXRpb24gb2JqZWN0LCB0aGVuIGRlZmF1bHQgdG8gY29tbW9uIGF1dGhvcml0eS5cbiAgICAgKiBAcGFyYW0gYXV0aG9yaXR5U3RyaW5nIC0gYXV0aG9yaXR5IGZyb20gdXNlciBjb25maWd1cmF0aW9uXG4gICAgICovXG4gICAgYXN5bmMgY3JlYXRlQXV0aG9yaXR5KGF1dGhvcml0eVN0cmluZywgcmVxdWVzdENvcnJlbGF0aW9uSWQsIGF6dXJlUmVnaW9uQ29uZmlndXJhdGlvbiwgYXp1cmVDbG91ZE9wdGlvbnMpIHtcbiAgICAgICAgdGhpcy5sb2dnZXIudmVyYm9zZShcImNyZWF0ZUF1dGhvcml0eSBjYWxsZWRcIiwgcmVxdWVzdENvcnJlbGF0aW9uSWQpO1xuICAgICAgICAvLyBidWlsZCBhdXRob3JpdHkgc3RyaW5nIGJhc2VkIG9uIGF1dGggcGFyYW1zIC0gYXp1cmVDbG91ZEluc3RhbmNlIGlzIHByaW9yaXRpemVkIGlmIHByb3ZpZGVkXG4gICAgICAgIGNvbnN0IGF1dGhvcml0eVVybCA9IEF1dGhvcml0eS5nZW5lcmF0ZUF1dGhvcml0eShhdXRob3JpdHlTdHJpbmcsIGF6dXJlQ2xvdWRPcHRpb25zKTtcbiAgICAgICAgY29uc3QgYXV0aG9yaXR5T3B0aW9ucyA9IHtcbiAgICAgICAgICAgIHByb3RvY29sTW9kZTogdGhpcy5jb25maWcuYXV0aC5wcm90b2NvbE1vZGUsXG4gICAgICAgICAgICBrbm93bkF1dGhvcml0aWVzOiB0aGlzLmNvbmZpZy5hdXRoLmtub3duQXV0aG9yaXRpZXMsXG4gICAgICAgICAgICBjbG91ZERpc2NvdmVyeU1ldGFkYXRhOiB0aGlzLmNvbmZpZy5hdXRoLmNsb3VkRGlzY292ZXJ5TWV0YWRhdGEsXG4gICAgICAgICAgICBhdXRob3JpdHlNZXRhZGF0YTogdGhpcy5jb25maWcuYXV0aC5hdXRob3JpdHlNZXRhZGF0YSxcbiAgICAgICAgICAgIGF6dXJlUmVnaW9uQ29uZmlndXJhdGlvbixcbiAgICAgICAgICAgIHNraXBBdXRob3JpdHlNZXRhZGF0YUNhY2hlOiB0aGlzLmNvbmZpZy5hdXRoLnNraXBBdXRob3JpdHlNZXRhZGF0YUNhY2hlLFxuICAgICAgICB9O1xuICAgICAgICByZXR1cm4gQXV0aG9yaXR5RmFjdG9yeS5jcmVhdGVEaXNjb3ZlcmVkSW5zdGFuY2UoYXV0aG9yaXR5VXJsLCB0aGlzLmNvbmZpZy5zeXN0ZW0ubmV0d29ya0NsaWVudCwgdGhpcy5zdG9yYWdlLCBhdXRob3JpdHlPcHRpb25zLCB0aGlzLmxvZ2dlciwgcmVxdWVzdENvcnJlbGF0aW9uSWQpO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBDbGVhciB0aGUgY2FjaGVcbiAgICAgKi9cbiAgICBjbGVhckNhY2hlKCkge1xuICAgICAgICB2b2lkIHRoaXMuc3RvcmFnZS5jbGVhcigpO1xuICAgIH1cbn1cblxuZXhwb3J0IHsgQ2xpZW50QXBwbGljYXRpb24gfTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPUNsaWVudEFwcGxpY2F0aW9uLm1qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/msal-node/dist/client/ClientApplication.mjs\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/msal-node/dist/client/ClientAssertion.mjs":
/*!***********************************************************************!*\
  !*** ./node_modules/@azure/msal-node/dist/client/ClientAssertion.mjs ***!
  \***********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ClientAssertion: () => (/* binding */ ClientAssertion)\n/* harmony export */ });\n/* harmony import */ var jsonwebtoken__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! jsonwebtoken */ \"(rsc)/./node_modules/jsonwebtoken/index.js\");\n/* harmony import */ var _azure_msal_common__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @azure/msal-common */ \"(rsc)/./node_modules/@azure/msal-common/dist/error/ClientAuthError.mjs\");\n/* harmony import */ var _azure_msal_common__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @azure/msal-common */ \"(rsc)/./node_modules/@azure/msal-common/dist/error/ClientAuthErrorCodes.mjs\");\n/* harmony import */ var _azure_msal_common__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @azure/msal-common */ \"(rsc)/./node_modules/@azure/msal-common/dist/utils/TimeUtils.mjs\");\n/* harmony import */ var _azure_msal_common__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @azure/msal-common */ \"(rsc)/./node_modules/@azure/msal-common/dist/utils/Constants.mjs\");\n/* harmony import */ var _utils_EncodingUtils_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/EncodingUtils.mjs */ \"(rsc)/./node_modules/@azure/msal-node/dist/utils/EncodingUtils.mjs\");\n/* harmony import */ var _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils/Constants.mjs */ \"(rsc)/./node_modules/@azure/msal-node/dist/utils/Constants.mjs\");\n/*! @azure/msal-node v2.12.0 2024-07-23 */\n\n\n\n\n\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n/**\n * Client assertion of type jwt-bearer used in confidential client flows\n * @public\n */\nclass ClientAssertion {\n    /**\n     * Initialize the ClientAssertion class from the clientAssertion passed by the user\n     * @param assertion - refer https://tools.ietf.org/html/rfc7521\n     */\n    static fromAssertion(assertion) {\n        const clientAssertion = new ClientAssertion();\n        clientAssertion.jwt = assertion;\n        return clientAssertion;\n    }\n    /**\n     * @deprecated Use fromCertificateWithSha256Thumbprint instead, with a SHA-256 thumprint\n     * Initialize the ClientAssertion class from the certificate passed by the user\n     * @param thumbprint - identifier of a certificate\n     * @param privateKey - secret key\n     * @param publicCertificate - electronic document provided to prove the ownership of the public key\n     */\n    static fromCertificate(thumbprint, privateKey, publicCertificate) {\n        const clientAssertion = new ClientAssertion();\n        clientAssertion.privateKey = privateKey;\n        clientAssertion.thumbprint = thumbprint;\n        clientAssertion.useSha256 = false;\n        if (publicCertificate) {\n            clientAssertion.publicCertificate =\n                this.parseCertificate(publicCertificate);\n        }\n        return clientAssertion;\n    }\n    /**\n     * Initialize the ClientAssertion class from the certificate passed by the user\n     * @param thumbprint - identifier of a certificate\n     * @param privateKey - secret key\n     * @param publicCertificate - electronic document provided to prove the ownership of the public key\n     */\n    static fromCertificateWithSha256Thumbprint(thumbprint, privateKey, publicCertificate) {\n        const clientAssertion = new ClientAssertion();\n        clientAssertion.privateKey = privateKey;\n        clientAssertion.thumbprint = thumbprint;\n        clientAssertion.useSha256 = true;\n        if (publicCertificate) {\n            clientAssertion.publicCertificate =\n                this.parseCertificate(publicCertificate);\n        }\n        return clientAssertion;\n    }\n    /**\n     * Update JWT for certificate based clientAssertion, if passed by the user, uses it as is\n     * @param cryptoProvider - library's crypto helper\n     * @param issuer - iss claim\n     * @param jwtAudience - aud claim\n     */\n    getJwt(cryptoProvider, issuer, jwtAudience) {\n        // if assertion was created from certificate, check if jwt is expired and create new one.\n        if (this.privateKey && this.thumbprint) {\n            if (this.jwt &&\n                !this.isExpired() &&\n                issuer === this.issuer &&\n                jwtAudience === this.jwtAudience) {\n                return this.jwt;\n            }\n            return this.createJwt(cryptoProvider, issuer, jwtAudience);\n        }\n        /*\n         * if assertion was created by caller, then we just append it. It is up to the caller to\n         * ensure that it contains necessary claims and that it is not expired.\n         */\n        if (this.jwt) {\n            return this.jwt;\n        }\n        throw (0,_azure_msal_common__WEBPACK_IMPORTED_MODULE_3__.createClientAuthError)(_azure_msal_common__WEBPACK_IMPORTED_MODULE_4__.invalidAssertion);\n    }\n    /**\n     * JWT format and required claims specified: https://tools.ietf.org/html/rfc7523#section-3\n     */\n    createJwt(cryptoProvider, issuer, jwtAudience) {\n        this.issuer = issuer;\n        this.jwtAudience = jwtAudience;\n        const issuedAt = _azure_msal_common__WEBPACK_IMPORTED_MODULE_5__.nowSeconds();\n        this.expirationTime = issuedAt + 600;\n        const algorithm = this.useSha256\n            ? _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_2__.JwtConstants.PSS_256\n            : _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_2__.JwtConstants.RSA_256;\n        const header = {\n            alg: algorithm,\n        };\n        const thumbprintHeader = this.useSha256\n            ? _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_2__.JwtConstants.X5T_256\n            : _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_2__.JwtConstants.X5T;\n        Object.assign(header, {\n            [thumbprintHeader]: _utils_EncodingUtils_mjs__WEBPACK_IMPORTED_MODULE_1__.EncodingUtils.base64EncodeUrl(this.thumbprint, \"hex\"),\n        });\n        if (this.publicCertificate) {\n            Object.assign(header, {\n                [_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_2__.JwtConstants.X5C]: this.publicCertificate,\n            });\n        }\n        const payload = {\n            [_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_2__.JwtConstants.AUDIENCE]: this.jwtAudience,\n            [_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_2__.JwtConstants.EXPIRATION_TIME]: this.expirationTime,\n            [_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_2__.JwtConstants.ISSUER]: this.issuer,\n            [_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_2__.JwtConstants.SUBJECT]: this.issuer,\n            [_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_2__.JwtConstants.NOT_BEFORE]: issuedAt,\n            [_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_2__.JwtConstants.JWT_ID]: cryptoProvider.createNewGuid(),\n        };\n        this.jwt = jsonwebtoken__WEBPACK_IMPORTED_MODULE_0__.sign(payload, this.privateKey, { header });\n        return this.jwt;\n    }\n    /**\n     * Utility API to check expiration\n     */\n    isExpired() {\n        return this.expirationTime < _azure_msal_common__WEBPACK_IMPORTED_MODULE_5__.nowSeconds();\n    }\n    /**\n     * Extracts the raw certs from a given certificate string and returns them in an array.\n     * @param publicCertificate - electronic document provided to prove the ownership of the public key\n     */\n    static parseCertificate(publicCertificate) {\n        /**\n         * This is regex to identify the certs in a given certificate string.\n         * We want to look for the contents between the BEGIN and END certificate strings, without the associated newlines.\n         * The information in parens \"(.+?)\" is the capture group to represent the cert we want isolated.\n         * \".\" means any string character, \"+\" means match 1 or more times, and \"?\" means the shortest match.\n         * The \"g\" at the end of the regex means search the string globally, and the \"s\" enables the \".\" to match newlines.\n         */\n        const regexToFindCerts = /-----BEGIN CERTIFICATE-----\\r*\\n(.+?)\\r*\\n-----END CERTIFICATE-----/gs;\n        const certs = [];\n        let matches;\n        while ((matches = regexToFindCerts.exec(publicCertificate)) !== null) {\n            // matches[1] represents the first parens capture group in the regex.\n            certs.push(matches[1].replace(/\\r*\\n/g, _azure_msal_common__WEBPACK_IMPORTED_MODULE_6__.Constants.EMPTY_STRING));\n        }\n        return certs;\n    }\n}\n\n\n//# sourceMappingURL=ClientAssertion.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/msal-node/dist/client/ClientAssertion.mjs\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/msal-node/dist/client/ClientCredentialClient.mjs":
/*!******************************************************************************!*\
  !*** ./node_modules/@azure/msal-node/dist/client/ClientCredentialClient.mjs ***!
  \******************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ClientCredentialClient: () => (/* binding */ ClientCredentialClient)\n/* harmony export */ });\n/* harmony import */ var _azure_msal_common__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @azure/msal-common */ \"(rsc)/./node_modules/@azure/msal-common/dist/client/BaseClient.mjs\");\n/* harmony import */ var _azure_msal_common__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @azure/msal-common */ \"(rsc)/./node_modules/@azure/msal-common/dist/utils/Constants.mjs\");\n/* harmony import */ var _azure_msal_common__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @azure/msal-common */ \"(rsc)/./node_modules/@azure/msal-common/dist/cache/persistence/TokenCacheContext.mjs\");\n/* harmony import */ var _azure_msal_common__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @azure/msal-common */ \"(rsc)/./node_modules/@azure/msal-common/dist/request/ScopeSet.mjs\");\n/* harmony import */ var _azure_msal_common__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @azure/msal-common */ \"(rsc)/./node_modules/@azure/msal-common/dist/utils/TimeUtils.mjs\");\n/* harmony import */ var _azure_msal_common__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @azure/msal-common */ \"(rsc)/./node_modules/@azure/msal-common/dist/response/ResponseHandler.mjs\");\n/* harmony import */ var _azure_msal_common__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @azure/msal-common */ \"(rsc)/./node_modules/@azure/msal-common/dist/error/ClientAuthError.mjs\");\n/* harmony import */ var _azure_msal_common__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @azure/msal-common */ \"(rsc)/./node_modules/@azure/msal-common/dist/error/ClientAuthErrorCodes.mjs\");\n/* harmony import */ var _azure_msal_common__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @azure/msal-common */ \"(rsc)/./node_modules/@azure/msal-common/dist/url/UrlString.mjs\");\n/* harmony import */ var _azure_msal_common__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @azure/msal-common */ \"(rsc)/./node_modules/@azure/msal-common/dist/request/RequestParameterBuilder.mjs\");\n/* harmony import */ var _azure_msal_common__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @azure/msal-common */ \"(rsc)/./node_modules/@azure/msal-common/dist/utils/ClientAssertionUtils.mjs\");\n/* harmony import */ var _azure_msal_common__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @azure/msal-common */ \"(rsc)/./node_modules/@azure/msal-common/dist/utils/StringUtils.mjs\");\n/*! @azure/msal-node v2.12.0 2024-07-23 */\n\n\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n/**\n * OAuth2.0 client credential grant\n */\nclass ClientCredentialClient extends _azure_msal_common__WEBPACK_IMPORTED_MODULE_0__.BaseClient {\n    constructor(configuration, appTokenProvider) {\n        super(configuration);\n        this.appTokenProvider = appTokenProvider;\n    }\n    /**\n     * Public API to acquire a token with ClientCredential Flow for Confidential clients\n     * @param request\n     */\n    async acquireToken(request) {\n        if (request.skipCache || request.claims) {\n            return this.executeTokenRequest(request, this.authority);\n        }\n        const [cachedAuthenticationResult, lastCacheOutcome] = await this.getCachedAuthenticationResult(request, this.config, this.cryptoUtils, this.authority, this.cacheManager, this.serverTelemetryManager);\n        if (cachedAuthenticationResult) {\n            // if the token is not expired but must be refreshed; get a new one in the background\n            if (lastCacheOutcome === _azure_msal_common__WEBPACK_IMPORTED_MODULE_1__.CacheOutcome.PROACTIVELY_REFRESHED) {\n                this.logger.info(\"ClientCredentialClient:getCachedAuthenticationResult - Cached access token's refreshOn property has been exceeded'. It's not expired, but must be refreshed.\");\n                // refresh the access token in the background\n                const refreshAccessToken = true;\n                await this.executeTokenRequest(request, this.authority, refreshAccessToken);\n            }\n            // return the cached token\n            return cachedAuthenticationResult;\n        }\n        else {\n            return this.executeTokenRequest(request, this.authority);\n        }\n    }\n    /**\n     * looks up cache if the tokens are cached already\n     */\n    async getCachedAuthenticationResult(request, config, cryptoUtils, authority, cacheManager, serverTelemetryManager) {\n        const clientConfiguration = config;\n        const managedIdentityConfiguration = config;\n        let lastCacheOutcome = _azure_msal_common__WEBPACK_IMPORTED_MODULE_1__.CacheOutcome.NOT_APPLICABLE;\n        // read the user-supplied cache into memory, if applicable\n        let cacheContext;\n        if (clientConfiguration.serializableCache &&\n            clientConfiguration.persistencePlugin) {\n            cacheContext = new _azure_msal_common__WEBPACK_IMPORTED_MODULE_2__.TokenCacheContext(clientConfiguration.serializableCache, false);\n            await clientConfiguration.persistencePlugin.beforeCacheAccess(cacheContext);\n        }\n        const cachedAccessToken = this.readAccessTokenFromCache(authority, managedIdentityConfiguration.managedIdentityId?.id ||\n            clientConfiguration.authOptions.clientId, new _azure_msal_common__WEBPACK_IMPORTED_MODULE_3__.ScopeSet(request.scopes || []), cacheManager);\n        if (clientConfiguration.serializableCache &&\n            clientConfiguration.persistencePlugin &&\n            cacheContext) {\n            await clientConfiguration.persistencePlugin.afterCacheAccess(cacheContext);\n        }\n        // must refresh due to non-existent access_token\n        if (!cachedAccessToken) {\n            serverTelemetryManager?.setCacheOutcome(_azure_msal_common__WEBPACK_IMPORTED_MODULE_1__.CacheOutcome.NO_CACHED_ACCESS_TOKEN);\n            return [null, _azure_msal_common__WEBPACK_IMPORTED_MODULE_1__.CacheOutcome.NO_CACHED_ACCESS_TOKEN];\n        }\n        // must refresh due to the expires_in value\n        if (_azure_msal_common__WEBPACK_IMPORTED_MODULE_4__.isTokenExpired(cachedAccessToken.expiresOn, clientConfiguration.systemOptions?.tokenRenewalOffsetSeconds ||\n            _azure_msal_common__WEBPACK_IMPORTED_MODULE_1__.DEFAULT_TOKEN_RENEWAL_OFFSET_SEC)) {\n            serverTelemetryManager?.setCacheOutcome(_azure_msal_common__WEBPACK_IMPORTED_MODULE_1__.CacheOutcome.CACHED_ACCESS_TOKEN_EXPIRED);\n            return [null, _azure_msal_common__WEBPACK_IMPORTED_MODULE_1__.CacheOutcome.CACHED_ACCESS_TOKEN_EXPIRED];\n        }\n        // must refresh (in the background) due to the refresh_in value\n        if (cachedAccessToken.refreshOn &&\n            _azure_msal_common__WEBPACK_IMPORTED_MODULE_4__.isTokenExpired(cachedAccessToken.refreshOn.toString(), 0)) {\n            lastCacheOutcome = _azure_msal_common__WEBPACK_IMPORTED_MODULE_1__.CacheOutcome.PROACTIVELY_REFRESHED;\n            serverTelemetryManager?.setCacheOutcome(_azure_msal_common__WEBPACK_IMPORTED_MODULE_1__.CacheOutcome.PROACTIVELY_REFRESHED);\n        }\n        return [\n            await _azure_msal_common__WEBPACK_IMPORTED_MODULE_5__.ResponseHandler.generateAuthenticationResult(cryptoUtils, authority, {\n                account: null,\n                idToken: null,\n                accessToken: cachedAccessToken,\n                refreshToken: null,\n                appMetadata: null,\n            }, true, request),\n            lastCacheOutcome,\n        ];\n    }\n    /**\n     * Reads access token from the cache\n     */\n    readAccessTokenFromCache(authority, id, scopeSet, cacheManager) {\n        const accessTokenFilter = {\n            homeAccountId: _azure_msal_common__WEBPACK_IMPORTED_MODULE_1__.Constants.EMPTY_STRING,\n            environment: authority.canonicalAuthorityUrlComponents.HostNameAndPort,\n            credentialType: _azure_msal_common__WEBPACK_IMPORTED_MODULE_1__.CredentialType.ACCESS_TOKEN,\n            clientId: id,\n            realm: authority.tenant,\n            target: _azure_msal_common__WEBPACK_IMPORTED_MODULE_3__.ScopeSet.createSearchScopes(scopeSet.asArray()),\n        };\n        const accessTokens = cacheManager.getAccessTokensByFilter(accessTokenFilter);\n        if (accessTokens.length < 1) {\n            return null;\n        }\n        else if (accessTokens.length > 1) {\n            throw (0,_azure_msal_common__WEBPACK_IMPORTED_MODULE_6__.createClientAuthError)(_azure_msal_common__WEBPACK_IMPORTED_MODULE_7__.multipleMatchingTokens);\n        }\n        return accessTokens[0];\n    }\n    /**\n     * Makes a network call to request the token from the service\n     * @param request\n     * @param authority\n     */\n    async executeTokenRequest(request, authority, refreshAccessToken) {\n        let serverTokenResponse;\n        let reqTimestamp;\n        if (this.appTokenProvider) {\n            this.logger.info(\"Using appTokenProvider extensibility.\");\n            const appTokenPropviderParameters = {\n                correlationId: request.correlationId,\n                tenantId: this.config.authOptions.authority.tenant,\n                scopes: request.scopes,\n                claims: request.claims,\n            };\n            reqTimestamp = _azure_msal_common__WEBPACK_IMPORTED_MODULE_4__.nowSeconds();\n            const appTokenProviderResult = await this.appTokenProvider(appTokenPropviderParameters);\n            serverTokenResponse = {\n                access_token: appTokenProviderResult.accessToken,\n                expires_in: appTokenProviderResult.expiresInSeconds,\n                refresh_in: appTokenProviderResult.refreshInSeconds,\n                token_type: _azure_msal_common__WEBPACK_IMPORTED_MODULE_1__.AuthenticationScheme.BEARER,\n            };\n        }\n        else {\n            const queryParametersString = this.createTokenQueryParameters(request);\n            const endpoint = _azure_msal_common__WEBPACK_IMPORTED_MODULE_8__.UrlString.appendQueryString(authority.tokenEndpoint, queryParametersString);\n            const requestBody = await this.createTokenRequestBody(request);\n            const headers = this.createTokenRequestHeaders();\n            const thumbprint = {\n                clientId: this.config.authOptions.clientId,\n                authority: request.authority,\n                scopes: request.scopes,\n                claims: request.claims,\n                authenticationScheme: request.authenticationScheme,\n                resourceRequestMethod: request.resourceRequestMethod,\n                resourceRequestUri: request.resourceRequestUri,\n                shrClaims: request.shrClaims,\n                sshKid: request.sshKid,\n            };\n            this.logger.info(\"Sending token request to endpoint: \" + authority.tokenEndpoint);\n            reqTimestamp = _azure_msal_common__WEBPACK_IMPORTED_MODULE_4__.nowSeconds();\n            const response = await this.executePostToTokenEndpoint(endpoint, requestBody, headers, thumbprint, request.correlationId);\n            serverTokenResponse = response.body;\n            serverTokenResponse.status = response.status;\n        }\n        const responseHandler = new _azure_msal_common__WEBPACK_IMPORTED_MODULE_5__.ResponseHandler(this.config.authOptions.clientId, this.cacheManager, this.cryptoUtils, this.logger, this.config.serializableCache, this.config.persistencePlugin);\n        responseHandler.validateTokenResponse(serverTokenResponse, refreshAccessToken);\n        const tokenResponse = await responseHandler.handleServerTokenResponse(serverTokenResponse, this.authority, reqTimestamp, request);\n        return tokenResponse;\n    }\n    /**\n     * generate the request to the server in the acceptable format\n     * @param request\n     */\n    async createTokenRequestBody(request) {\n        const parameterBuilder = new _azure_msal_common__WEBPACK_IMPORTED_MODULE_9__.RequestParameterBuilder();\n        parameterBuilder.addClientId(this.config.authOptions.clientId);\n        parameterBuilder.addScopes(request.scopes, false);\n        parameterBuilder.addGrantType(_azure_msal_common__WEBPACK_IMPORTED_MODULE_1__.GrantType.CLIENT_CREDENTIALS_GRANT);\n        parameterBuilder.addLibraryInfo(this.config.libraryInfo);\n        parameterBuilder.addApplicationTelemetry(this.config.telemetry.application);\n        parameterBuilder.addThrottling();\n        if (this.serverTelemetryManager) {\n            parameterBuilder.addServerTelemetry(this.serverTelemetryManager);\n        }\n        const correlationId = request.correlationId ||\n            this.config.cryptoInterface.createNewGuid();\n        parameterBuilder.addCorrelationId(correlationId);\n        if (this.config.clientCredentials.clientSecret) {\n            parameterBuilder.addClientSecret(this.config.clientCredentials.clientSecret);\n        }\n        // Use clientAssertion from request, fallback to client assertion in base configuration\n        const clientAssertion = request.clientAssertion ||\n            this.config.clientCredentials.clientAssertion;\n        if (clientAssertion) {\n            parameterBuilder.addClientAssertion(await (0,_azure_msal_common__WEBPACK_IMPORTED_MODULE_10__.getClientAssertion)(clientAssertion.assertion, this.config.authOptions.clientId, request.resourceRequestUri));\n            parameterBuilder.addClientAssertionType(clientAssertion.assertionType);\n        }\n        if (!_azure_msal_common__WEBPACK_IMPORTED_MODULE_11__.StringUtils.isEmptyObj(request.claims) ||\n            (this.config.authOptions.clientCapabilities &&\n                this.config.authOptions.clientCapabilities.length > 0)) {\n            parameterBuilder.addClaims(request.claims, this.config.authOptions.clientCapabilities);\n        }\n        return parameterBuilder.createQueryString();\n    }\n}\n\n\n//# sourceMappingURL=ClientCredentialClient.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/msal-node/dist/client/ClientCredentialClient.mjs\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/msal-node/dist/client/ConfidentialClientApplication.mjs":
/*!*************************************************************************************!*\
  !*** ./node_modules/@azure/msal-node/dist/client/ConfidentialClientApplication.mjs ***!
  \*************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ConfidentialClientApplication: () => (/* binding */ ConfidentialClientApplication)\n/* harmony export */ });\n/* harmony import */ var _ClientApplication_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ClientApplication.mjs */ \"(rsc)/./node_modules/@azure/msal-node/dist/client/ClientApplication.mjs\");\n/* harmony import */ var _ClientAssertion_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./ClientAssertion.mjs */ \"(rsc)/./node_modules/@azure/msal-node/dist/client/ClientAssertion.mjs\");\n/* harmony import */ var _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils/Constants.mjs */ \"(rsc)/./node_modules/@azure/msal-node/dist/utils/Constants.mjs\");\n/* harmony import */ var _azure_msal_common__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @azure/msal-common */ \"(rsc)/./node_modules/@azure/msal-common/dist/utils/ClientAssertionUtils.mjs\");\n/* harmony import */ var _azure_msal_common__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @azure/msal-common */ \"(rsc)/./node_modules/@azure/msal-common/dist/utils/Constants.mjs\");\n/* harmony import */ var _azure_msal_common__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @azure/msal-common */ \"(rsc)/./node_modules/@azure/msal-common/dist/url/UrlString.mjs\");\n/* harmony import */ var _azure_msal_common__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @azure/msal-common */ \"(rsc)/./node_modules/@azure/msal-common/dist/error/ClientAuthError.mjs\");\n/* harmony import */ var _azure_msal_common__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @azure/msal-common */ \"(rsc)/./node_modules/@azure/msal-common/dist/error/ClientAuthErrorCodes.mjs\");\n/* harmony import */ var _azure_msal_common__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @azure/msal-common */ \"(rsc)/./node_modules/@azure/msal-common/dist/error/AuthError.mjs\");\n/* harmony import */ var _ClientCredentialClient_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./ClientCredentialClient.mjs */ \"(rsc)/./node_modules/@azure/msal-node/dist/client/ClientCredentialClient.mjs\");\n/* harmony import */ var _OnBehalfOfClient_mjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./OnBehalfOfClient.mjs */ \"(rsc)/./node_modules/@azure/msal-node/dist/client/OnBehalfOfClient.mjs\");\n/*! @azure/msal-node v2.12.0 2024-07-23 */\n\n\n\n\n\n\n\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n// AADAuthorityConstants\n/**\n *  This class is to be used to acquire tokens for confidential client applications (webApp, webAPI). Confidential client applications\n *  will configure application secrets, client certificates/assertions as applicable\n * @public\n */\nclass ConfidentialClientApplication extends _ClientApplication_mjs__WEBPACK_IMPORTED_MODULE_0__.ClientApplication {\n    /**\n     * Constructor for the ConfidentialClientApplication\n     *\n     * Required attributes in the Configuration object are:\n     * - clientID: the application ID of your application. You can obtain one by registering your application with our application registration portal\n     * - authority: the authority URL for your application.\n     * - client credential: Must set either client secret, certificate, or assertion for confidential clients. You can obtain a client secret from the application registration portal.\n     *\n     * In Azure AD, authority is a URL indicating of the form https://login.microsoftonline.com/\\{Enter_the_Tenant_Info_Here\\}.\n     * If your application supports Accounts in one organizational directory, replace \"Enter_the_Tenant_Info_Here\" value with the Tenant Id or Tenant name (for example, contoso.microsoft.com).\n     * If your application supports Accounts in any organizational directory, replace \"Enter_the_Tenant_Info_Here\" value with organizations.\n     * If your application supports Accounts in any organizational directory and personal Microsoft accounts, replace \"Enter_the_Tenant_Info_Here\" value with common.\n     * To restrict support to Personal Microsoft accounts only, replace \"Enter_the_Tenant_Info_Here\" value with consumers.\n     *\n     * In Azure B2C, authority is of the form https://\\{instance\\}/tfp/\\{tenant\\}/\\{policyName\\}/\n     * Full B2C functionality will be available in this library in future versions.\n     *\n     * @param Configuration - configuration object for the MSAL ConfidentialClientApplication instance\n     */\n    constructor(configuration) {\n        super(configuration);\n        this.setClientCredential();\n        this.appTokenProvider = undefined;\n    }\n    /**\n     * This extensibility point only works for the client_credential flow, i.e. acquireTokenByClientCredential and\n     * is meant for Azure SDK to enhance Managed Identity support.\n     *\n     * @param IAppTokenProvider  - Extensibility interface, which allows the app developer to return a token from a custom source.\n     */\n    SetAppTokenProvider(provider) {\n        this.appTokenProvider = provider;\n    }\n    /**\n     * Acquires tokens from the authority for the application (not for an end user).\n     */\n    async acquireTokenByClientCredential(request) {\n        this.logger.info(\"acquireTokenByClientCredential called\", request.correlationId);\n        // If there is a client assertion present in the request, it overrides the one present in the client configuration\n        let clientAssertion;\n        if (request.clientAssertion) {\n            clientAssertion = {\n                assertion: await (0,_azure_msal_common__WEBPACK_IMPORTED_MODULE_5__.getClientAssertion)(request.clientAssertion, this.config.auth.clientId\n                // tokenEndpoint will be undefined. resourceRequestUri is omitted in ClientCredentialRequest\n                ),\n                assertionType: _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_2__.Constants.JWT_BEARER_ASSERTION_TYPE,\n            };\n        }\n        const baseRequest = await this.initializeBaseRequest(request);\n        // valid base request should not contain oidc scopes in this grant type\n        const validBaseRequest = {\n            ...baseRequest,\n            scopes: baseRequest.scopes.filter((scope) => !_azure_msal_common__WEBPACK_IMPORTED_MODULE_6__.OIDC_DEFAULT_SCOPES.includes(scope)),\n        };\n        const validRequest = {\n            ...request,\n            ...validBaseRequest,\n            clientAssertion,\n        };\n        /*\n         * valid request should not have \"common\" or \"organizations\" in lieu of the tenant_id in the authority in the auth configuration\n         * example authority: \"https://login.microsoftonline.com/TenantId\",\n         */\n        const authority = new _azure_msal_common__WEBPACK_IMPORTED_MODULE_7__.UrlString(validRequest.authority);\n        const tenantId = authority.getUrlComponents().PathSegments[0];\n        if (Object.values(_azure_msal_common__WEBPACK_IMPORTED_MODULE_6__.AADAuthorityConstants).includes(tenantId)) {\n            throw (0,_azure_msal_common__WEBPACK_IMPORTED_MODULE_8__.createClientAuthError)(_azure_msal_common__WEBPACK_IMPORTED_MODULE_9__.missingTenantIdError);\n        }\n        const azureRegionConfiguration = {\n            azureRegion: validRequest.azureRegion,\n            environmentRegion: process.env[_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_2__.REGION_ENVIRONMENT_VARIABLE],\n        };\n        const serverTelemetryManager = this.initializeServerTelemetryManager(_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_2__.ApiId.acquireTokenByClientCredential, validRequest.correlationId, validRequest.skipCache);\n        try {\n            const clientCredentialConfig = await this.buildOauthClientConfiguration(validRequest.authority, validRequest.correlationId, serverTelemetryManager, azureRegionConfiguration, request.azureCloudOptions);\n            const clientCredentialClient = new _ClientCredentialClient_mjs__WEBPACK_IMPORTED_MODULE_3__.ClientCredentialClient(clientCredentialConfig, this.appTokenProvider);\n            this.logger.verbose(\"Client credential client created\", validRequest.correlationId);\n            return await clientCredentialClient.acquireToken(validRequest);\n        }\n        catch (e) {\n            if (e instanceof _azure_msal_common__WEBPACK_IMPORTED_MODULE_10__.AuthError) {\n                e.setCorrelationId(validRequest.correlationId);\n            }\n            serverTelemetryManager.cacheFailedRequest(e);\n            throw e;\n        }\n    }\n    /**\n     * Acquires tokens from the authority for the application.\n     *\n     * Used in scenarios where the current app is a middle-tier service which was called with a token\n     * representing an end user. The current app can use the token (oboAssertion) to request another\n     * token to access downstream web API, on behalf of that user.\n     *\n     * The current middle-tier app has no user interaction to obtain consent.\n     * See how to gain consent upfront for your middle-tier app from this article.\n     * https://docs.microsoft.com/en-us/azure/active-directory/develop/v2-oauth2-on-behalf-of-flow#gaining-consent-for-the-middle-tier-application\n     */\n    async acquireTokenOnBehalfOf(request) {\n        this.logger.info(\"acquireTokenOnBehalfOf called\", request.correlationId);\n        const validRequest = {\n            ...request,\n            ...(await this.initializeBaseRequest(request)),\n        };\n        try {\n            const onBehalfOfConfig = await this.buildOauthClientConfiguration(validRequest.authority, validRequest.correlationId, undefined, undefined, request.azureCloudOptions);\n            const oboClient = new _OnBehalfOfClient_mjs__WEBPACK_IMPORTED_MODULE_4__.OnBehalfOfClient(onBehalfOfConfig);\n            this.logger.verbose(\"On behalf of client created\", validRequest.correlationId);\n            return await oboClient.acquireToken(validRequest);\n        }\n        catch (e) {\n            if (e instanceof _azure_msal_common__WEBPACK_IMPORTED_MODULE_10__.AuthError) {\n                e.setCorrelationId(validRequest.correlationId);\n            }\n            throw e;\n        }\n    }\n    setClientCredential() {\n        const clientSecretNotEmpty = !!this.config.auth.clientSecret;\n        const clientAssertionNotEmpty = !!this.config.auth.clientAssertion;\n        const certificateNotEmpty = (!!this.config.auth.clientCertificate.thumbprint ||\n            !!this.config.auth.clientCertificate.thumbprintSha256) &&\n            !!this.config.auth.clientCertificate.privateKey;\n        /*\n         * If app developer configures this callback, they don't need a credential\n         * i.e. AzureSDK can get token from Managed Identity without a cert / secret\n         */\n        if (this.appTokenProvider) {\n            return;\n        }\n        // Check that at most one credential is set on the application\n        if ((clientSecretNotEmpty && clientAssertionNotEmpty) ||\n            (clientAssertionNotEmpty && certificateNotEmpty) ||\n            (clientSecretNotEmpty && certificateNotEmpty)) {\n            throw (0,_azure_msal_common__WEBPACK_IMPORTED_MODULE_8__.createClientAuthError)(_azure_msal_common__WEBPACK_IMPORTED_MODULE_9__.invalidClientCredential);\n        }\n        if (this.config.auth.clientSecret) {\n            this.clientSecret = this.config.auth.clientSecret;\n            return;\n        }\n        if (this.config.auth.clientAssertion) {\n            this.developerProvidedClientAssertion =\n                this.config.auth.clientAssertion;\n            return;\n        }\n        if (!certificateNotEmpty) {\n            throw (0,_azure_msal_common__WEBPACK_IMPORTED_MODULE_8__.createClientAuthError)(_azure_msal_common__WEBPACK_IMPORTED_MODULE_9__.invalidClientCredential);\n        }\n        else {\n            this.clientAssertion = !!this.config.auth.clientCertificate\n                .thumbprintSha256\n                ? _ClientAssertion_mjs__WEBPACK_IMPORTED_MODULE_1__.ClientAssertion.fromCertificateWithSha256Thumbprint(this.config.auth.clientCertificate.thumbprintSha256, this.config.auth.clientCertificate.privateKey, this.config.auth.clientCertificate.x5c)\n                : _ClientAssertion_mjs__WEBPACK_IMPORTED_MODULE_1__.ClientAssertion.fromCertificate(\n                // guaranteed to be a string, due to prior error checking in this function\n                this.config.auth.clientCertificate.thumbprint, this.config.auth.clientCertificate.privateKey, this.config.auth.clientCertificate.x5c);\n        }\n    }\n}\n\n\n//# sourceMappingURL=ConfidentialClientApplication.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/msal-node/dist/client/ConfidentialClientApplication.mjs\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/msal-node/dist/client/DeviceCodeClient.mjs":
/*!************************************************************************!*\
  !*** ./node_modules/@azure/msal-node/dist/client/DeviceCodeClient.mjs ***!
  \************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DeviceCodeClient: () => (/* binding */ DeviceCodeClient)\n/* harmony export */ });\n/* harmony import */ var _azure_msal_common__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @azure/msal-common */ \"(rsc)/./node_modules/@azure/msal-common/dist/client/BaseClient.mjs\");\n/* harmony import */ var _azure_msal_common__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @azure/msal-common */ \"(rsc)/./node_modules/@azure/msal-common/dist/utils/TimeUtils.mjs\");\n/* harmony import */ var _azure_msal_common__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @azure/msal-common */ \"(rsc)/./node_modules/@azure/msal-common/dist/response/ResponseHandler.mjs\");\n/* harmony import */ var _azure_msal_common__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @azure/msal-common */ \"(rsc)/./node_modules/@azure/msal-common/dist/url/UrlString.mjs\");\n/* harmony import */ var _azure_msal_common__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @azure/msal-common */ \"(rsc)/./node_modules/@azure/msal-common/dist/request/RequestParameterBuilder.mjs\");\n/* harmony import */ var _azure_msal_common__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @azure/msal-common */ \"(rsc)/./node_modules/@azure/msal-common/dist/error/ClientAuthError.mjs\");\n/* harmony import */ var _azure_msal_common__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @azure/msal-common */ \"(rsc)/./node_modules/@azure/msal-common/dist/error/ClientAuthErrorCodes.mjs\");\n/* harmony import */ var _azure_msal_common__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @azure/msal-common */ \"(rsc)/./node_modules/@azure/msal-common/dist/utils/Constants.mjs\");\n/* harmony import */ var _azure_msal_common__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @azure/msal-common */ \"(rsc)/./node_modules/@azure/msal-common/dist/error/AuthError.mjs\");\n/* harmony import */ var _azure_msal_common__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @azure/msal-common */ \"(rsc)/./node_modules/@azure/msal-common/dist/error/AuthErrorCodes.mjs\");\n/* harmony import */ var _azure_msal_common__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @azure/msal-common */ \"(rsc)/./node_modules/@azure/msal-common/dist/utils/StringUtils.mjs\");\n/*! @azure/msal-node v2.12.0 2024-07-23 */\n\n\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n/**\n * OAuth2.0 Device code client\n */\nclass DeviceCodeClient extends _azure_msal_common__WEBPACK_IMPORTED_MODULE_0__.BaseClient {\n    constructor(configuration) {\n        super(configuration);\n    }\n    /**\n     * Gets device code from device code endpoint, calls back to with device code response, and\n     * polls token endpoint to exchange device code for tokens\n     * @param request\n     */\n    async acquireToken(request) {\n        const deviceCodeResponse = await this.getDeviceCode(request);\n        request.deviceCodeCallback(deviceCodeResponse);\n        const reqTimestamp = _azure_msal_common__WEBPACK_IMPORTED_MODULE_1__.nowSeconds();\n        const response = await this.acquireTokenWithDeviceCode(request, deviceCodeResponse);\n        const responseHandler = new _azure_msal_common__WEBPACK_IMPORTED_MODULE_2__.ResponseHandler(this.config.authOptions.clientId, this.cacheManager, this.cryptoUtils, this.logger, this.config.serializableCache, this.config.persistencePlugin);\n        // Validate response. This function throws a server error if an error is returned by the server.\n        responseHandler.validateTokenResponse(response);\n        return responseHandler.handleServerTokenResponse(response, this.authority, reqTimestamp, request);\n    }\n    /**\n     * Creates device code request and executes http GET\n     * @param request\n     */\n    async getDeviceCode(request) {\n        const queryParametersString = this.createExtraQueryParameters(request);\n        const endpoint = _azure_msal_common__WEBPACK_IMPORTED_MODULE_3__.UrlString.appendQueryString(this.authority.deviceCodeEndpoint, queryParametersString);\n        const queryString = this.createQueryString(request);\n        const headers = this.createTokenRequestHeaders();\n        const thumbprint = {\n            clientId: this.config.authOptions.clientId,\n            authority: request.authority,\n            scopes: request.scopes,\n            claims: request.claims,\n            authenticationScheme: request.authenticationScheme,\n            resourceRequestMethod: request.resourceRequestMethod,\n            resourceRequestUri: request.resourceRequestUri,\n            shrClaims: request.shrClaims,\n            sshKid: request.sshKid,\n        };\n        return this.executePostRequestToDeviceCodeEndpoint(endpoint, queryString, headers, thumbprint);\n    }\n    /**\n     * Creates query string for the device code request\n     * @param request\n     */\n    createExtraQueryParameters(request) {\n        const parameterBuilder = new _azure_msal_common__WEBPACK_IMPORTED_MODULE_4__.RequestParameterBuilder();\n        if (request.extraQueryParameters) {\n            parameterBuilder.addExtraQueryParameters(request.extraQueryParameters);\n        }\n        return parameterBuilder.createQueryString();\n    }\n    /**\n     * Executes POST request to device code endpoint\n     * @param deviceCodeEndpoint\n     * @param queryString\n     * @param headers\n     */\n    async executePostRequestToDeviceCodeEndpoint(deviceCodeEndpoint, queryString, headers, thumbprint) {\n        const { body: { user_code: userCode, device_code: deviceCode, verification_uri: verificationUri, expires_in: expiresIn, interval, message, }, } = await this.networkManager.sendPostRequest(thumbprint, deviceCodeEndpoint, {\n            body: queryString,\n            headers: headers,\n        });\n        return {\n            userCode,\n            deviceCode,\n            verificationUri,\n            expiresIn,\n            interval,\n            message,\n        };\n    }\n    /**\n     * Create device code endpoint query parameters and returns string\n     */\n    createQueryString(request) {\n        const parameterBuilder = new _azure_msal_common__WEBPACK_IMPORTED_MODULE_4__.RequestParameterBuilder();\n        parameterBuilder.addScopes(request.scopes);\n        parameterBuilder.addClientId(this.config.authOptions.clientId);\n        if (request.extraQueryParameters) {\n            parameterBuilder.addExtraQueryParameters(request.extraQueryParameters);\n        }\n        if (request.claims ||\n            (this.config.authOptions.clientCapabilities &&\n                this.config.authOptions.clientCapabilities.length > 0)) {\n            parameterBuilder.addClaims(request.claims, this.config.authOptions.clientCapabilities);\n        }\n        return parameterBuilder.createQueryString();\n    }\n    /**\n     * Breaks the polling with specific conditions.\n     * @param request CommonDeviceCodeRequest\n     * @param deviceCodeResponse DeviceCodeResponse\n     */\n    continuePolling(deviceCodeExpirationTime, userSpecifiedTimeout, userSpecifiedCancelFlag) {\n        if (userSpecifiedCancelFlag) {\n            this.logger.error(\"Token request cancelled by setting DeviceCodeRequest.cancel = true\");\n            throw (0,_azure_msal_common__WEBPACK_IMPORTED_MODULE_5__.createClientAuthError)(_azure_msal_common__WEBPACK_IMPORTED_MODULE_6__.deviceCodePollingCancelled);\n        }\n        else if (userSpecifiedTimeout &&\n            userSpecifiedTimeout < deviceCodeExpirationTime &&\n            _azure_msal_common__WEBPACK_IMPORTED_MODULE_1__.nowSeconds() > userSpecifiedTimeout) {\n            this.logger.error(`User defined timeout for device code polling reached. The timeout was set for ${userSpecifiedTimeout}`);\n            throw (0,_azure_msal_common__WEBPACK_IMPORTED_MODULE_5__.createClientAuthError)(_azure_msal_common__WEBPACK_IMPORTED_MODULE_6__.userTimeoutReached);\n        }\n        else if (_azure_msal_common__WEBPACK_IMPORTED_MODULE_1__.nowSeconds() > deviceCodeExpirationTime) {\n            if (userSpecifiedTimeout) {\n                this.logger.verbose(`User specified timeout ignored as the device code has expired before the timeout elapsed. The user specified timeout was set for ${userSpecifiedTimeout}`);\n            }\n            this.logger.error(`Device code expired. Expiration time of device code was ${deviceCodeExpirationTime}`);\n            throw (0,_azure_msal_common__WEBPACK_IMPORTED_MODULE_5__.createClientAuthError)(_azure_msal_common__WEBPACK_IMPORTED_MODULE_6__.deviceCodeExpired);\n        }\n        return true;\n    }\n    /**\n     * Creates token request with device code response and polls token endpoint at interval set by the device code\n     * response\n     * @param request\n     * @param deviceCodeResponse\n     */\n    async acquireTokenWithDeviceCode(request, deviceCodeResponse) {\n        const queryParametersString = this.createTokenQueryParameters(request);\n        const endpoint = _azure_msal_common__WEBPACK_IMPORTED_MODULE_3__.UrlString.appendQueryString(this.authority.tokenEndpoint, queryParametersString);\n        const requestBody = this.createTokenRequestBody(request, deviceCodeResponse);\n        const headers = this.createTokenRequestHeaders();\n        const userSpecifiedTimeout = request.timeout\n            ? _azure_msal_common__WEBPACK_IMPORTED_MODULE_1__.nowSeconds() + request.timeout\n            : undefined;\n        const deviceCodeExpirationTime = _azure_msal_common__WEBPACK_IMPORTED_MODULE_1__.nowSeconds() + deviceCodeResponse.expiresIn;\n        const pollingIntervalMilli = deviceCodeResponse.interval * 1000;\n        /*\n         * Poll token endpoint while (device code is not expired AND operation has not been cancelled by\n         * setting CancellationToken.cancel = true). POST request is sent at interval set by pollingIntervalMilli\n         */\n        while (this.continuePolling(deviceCodeExpirationTime, userSpecifiedTimeout, request.cancel)) {\n            const thumbprint = {\n                clientId: this.config.authOptions.clientId,\n                authority: request.authority,\n                scopes: request.scopes,\n                claims: request.claims,\n                authenticationScheme: request.authenticationScheme,\n                resourceRequestMethod: request.resourceRequestMethod,\n                resourceRequestUri: request.resourceRequestUri,\n                shrClaims: request.shrClaims,\n                sshKid: request.sshKid,\n            };\n            const response = await this.executePostToTokenEndpoint(endpoint, requestBody, headers, thumbprint, request.correlationId);\n            if (response.body && response.body.error) {\n                // user authorization is pending. Sleep for polling interval and try again\n                if (response.body.error === _azure_msal_common__WEBPACK_IMPORTED_MODULE_7__.Constants.AUTHORIZATION_PENDING) {\n                    this.logger.info(\"Authorization pending. Continue polling.\");\n                    await _azure_msal_common__WEBPACK_IMPORTED_MODULE_1__.delay(pollingIntervalMilli);\n                }\n                else {\n                    // for any other error, throw\n                    this.logger.info(\"Unexpected error in polling from the server\");\n                    throw (0,_azure_msal_common__WEBPACK_IMPORTED_MODULE_8__.createAuthError)(_azure_msal_common__WEBPACK_IMPORTED_MODULE_9__.postRequestFailed, response.body.error);\n                }\n            }\n            else {\n                this.logger.verbose(\"Authorization completed successfully. Polling stopped.\");\n                return response.body;\n            }\n        }\n        /*\n         * The above code should've thrown by this point, but to satisfy TypeScript,\n         * and in the rare case the conditionals in continuePolling() may not catch everything...\n         */\n        this.logger.error(\"Polling stopped for unknown reasons.\");\n        throw (0,_azure_msal_common__WEBPACK_IMPORTED_MODULE_5__.createClientAuthError)(_azure_msal_common__WEBPACK_IMPORTED_MODULE_6__.deviceCodeUnknownError);\n    }\n    /**\n     * Creates query parameters and converts to string.\n     * @param request\n     * @param deviceCodeResponse\n     */\n    createTokenRequestBody(request, deviceCodeResponse) {\n        const requestParameters = new _azure_msal_common__WEBPACK_IMPORTED_MODULE_4__.RequestParameterBuilder();\n        requestParameters.addScopes(request.scopes);\n        requestParameters.addClientId(this.config.authOptions.clientId);\n        requestParameters.addGrantType(_azure_msal_common__WEBPACK_IMPORTED_MODULE_7__.GrantType.DEVICE_CODE_GRANT);\n        requestParameters.addDeviceCode(deviceCodeResponse.deviceCode);\n        const correlationId = request.correlationId ||\n            this.config.cryptoInterface.createNewGuid();\n        requestParameters.addCorrelationId(correlationId);\n        requestParameters.addClientInfo();\n        requestParameters.addLibraryInfo(this.config.libraryInfo);\n        requestParameters.addApplicationTelemetry(this.config.telemetry.application);\n        requestParameters.addThrottling();\n        if (this.serverTelemetryManager) {\n            requestParameters.addServerTelemetry(this.serverTelemetryManager);\n        }\n        if (!_azure_msal_common__WEBPACK_IMPORTED_MODULE_10__.StringUtils.isEmptyObj(request.claims) ||\n            (this.config.authOptions.clientCapabilities &&\n                this.config.authOptions.clientCapabilities.length > 0)) {\n            requestParameters.addClaims(request.claims, this.config.authOptions.clientCapabilities);\n        }\n        return requestParameters.createQueryString();\n    }\n}\n\n\n//# sourceMappingURL=DeviceCodeClient.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/msal-node/dist/client/DeviceCodeClient.mjs\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/msal-node/dist/client/ManagedIdentityApplication.mjs":
/*!**********************************************************************************!*\
  !*** ./node_modules/@azure/msal-node/dist/client/ManagedIdentityApplication.mjs ***!
  \**********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ManagedIdentityApplication: () => (/* binding */ ManagedIdentityApplication)\n/* harmony export */ });\n/* harmony import */ var _azure_msal_common__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @azure/msal-common */ \"(rsc)/./node_modules/@azure/msal-common/dist/logger/Logger.mjs\");\n/* harmony import */ var _azure_msal_common__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @azure/msal-common */ \"(rsc)/./node_modules/@azure/msal-common/dist/utils/Constants.mjs\");\n/* harmony import */ var _azure_msal_common__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @azure/msal-common */ \"(rsc)/./node_modules/@azure/msal-common/dist/crypto/ICrypto.mjs\");\n/* harmony import */ var _azure_msal_common__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @azure/msal-common */ \"(rsc)/./node_modules/@azure/msal-common/dist/authority/ProtocolMode.mjs\");\n/* harmony import */ var _azure_msal_common__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @azure/msal-common */ \"(rsc)/./node_modules/@azure/msal-common/dist/authority/Authority.mjs\");\n/* harmony import */ var _azure_msal_common__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! @azure/msal-common */ \"(rsc)/./node_modules/@azure/msal-common/dist/error/ClientConfigurationError.mjs\");\n/* harmony import */ var _azure_msal_common__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! @azure/msal-common */ \"(rsc)/./node_modules/@azure/msal-common/dist/error/ClientConfigurationErrorCodes.mjs\");\n/* harmony import */ var _config_Configuration_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../config/Configuration.mjs */ \"(rsc)/./node_modules/@azure/msal-node/dist/config/Configuration.mjs\");\n/* harmony import */ var _packageMetadata_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../packageMetadata.mjs */ \"(rsc)/./node_modules/@azure/msal-node/dist/packageMetadata.mjs\");\n/* harmony import */ var _crypto_CryptoProvider_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../crypto/CryptoProvider.mjs */ \"(rsc)/./node_modules/@azure/msal-node/dist/crypto/CryptoProvider.mjs\");\n/* harmony import */ var _ClientCredentialClient_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./ClientCredentialClient.mjs */ \"(rsc)/./node_modules/@azure/msal-node/dist/client/ClientCredentialClient.mjs\");\n/* harmony import */ var _ManagedIdentityClient_mjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./ManagedIdentityClient.mjs */ \"(rsc)/./node_modules/@azure/msal-node/dist/client/ManagedIdentityClient.mjs\");\n/* harmony import */ var _cache_NodeStorage_mjs__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../cache/NodeStorage.mjs */ \"(rsc)/./node_modules/@azure/msal-node/dist/cache/NodeStorage.mjs\");\n/* harmony import */ var _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../utils/Constants.mjs */ \"(rsc)/./node_modules/@azure/msal-node/dist/utils/Constants.mjs\");\n/*! @azure/msal-node v2.12.0 2024-07-23 */\n\n\n\n\n\n\n\n\n\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n/**\n * Class to initialize a managed identity and identify the service\n * @public\n */\nclass ManagedIdentityApplication {\n    constructor(configuration) {\n        // undefined config means the managed identity is system-assigned\n        this.config = (0,_config_Configuration_mjs__WEBPACK_IMPORTED_MODULE_0__.buildManagedIdentityConfiguration)(configuration || {});\n        this.logger = new _azure_msal_common__WEBPACK_IMPORTED_MODULE_7__.Logger(this.config.system.loggerOptions, _packageMetadata_mjs__WEBPACK_IMPORTED_MODULE_1__.name, _packageMetadata_mjs__WEBPACK_IMPORTED_MODULE_1__.version);\n        const fakeStatusAuthorityOptions = {\n            canonicalAuthority: _azure_msal_common__WEBPACK_IMPORTED_MODULE_8__.Constants.DEFAULT_AUTHORITY,\n        };\n        if (!ManagedIdentityApplication.nodeStorage) {\n            ManagedIdentityApplication.nodeStorage = new _cache_NodeStorage_mjs__WEBPACK_IMPORTED_MODULE_5__.NodeStorage(this.logger, this.config.managedIdentityId.id, _azure_msal_common__WEBPACK_IMPORTED_MODULE_9__.DEFAULT_CRYPTO_IMPLEMENTATION, fakeStatusAuthorityOptions);\n        }\n        this.networkClient = this.config.system.networkClient;\n        this.cryptoProvider = new _crypto_CryptoProvider_mjs__WEBPACK_IMPORTED_MODULE_2__.CryptoProvider();\n        const fakeAuthorityOptions = {\n            protocolMode: _azure_msal_common__WEBPACK_IMPORTED_MODULE_10__.ProtocolMode.AAD,\n            knownAuthorities: [_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_6__.DEFAULT_AUTHORITY_FOR_MANAGED_IDENTITY],\n            cloudDiscoveryMetadata: \"\",\n            authorityMetadata: \"\",\n        };\n        this.fakeAuthority = new _azure_msal_common__WEBPACK_IMPORTED_MODULE_11__.Authority(_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_6__.DEFAULT_AUTHORITY_FOR_MANAGED_IDENTITY, this.networkClient, ManagedIdentityApplication.nodeStorage, fakeAuthorityOptions, this.logger, this.cryptoProvider.createNewGuid(), // correlationID\n        undefined, true);\n        this.fakeClientCredentialClient = new _ClientCredentialClient_mjs__WEBPACK_IMPORTED_MODULE_3__.ClientCredentialClient({\n            authOptions: {\n                clientId: this.config.managedIdentityId.id,\n                authority: this.fakeAuthority,\n            },\n        });\n        this.managedIdentityClient = new _ManagedIdentityClient_mjs__WEBPACK_IMPORTED_MODULE_4__.ManagedIdentityClient(this.logger, ManagedIdentityApplication.nodeStorage, this.networkClient, this.cryptoProvider);\n    }\n    /**\n     * Acquire an access token from the cache or the managed identity\n     * @param managedIdentityRequest - the ManagedIdentityRequestParams object passed in by the developer\n     * @returns the access token\n     */\n    async acquireToken(managedIdentityRequestParams) {\n        if (!managedIdentityRequestParams.resource) {\n            throw (0,_azure_msal_common__WEBPACK_IMPORTED_MODULE_12__.createClientConfigurationError)(_azure_msal_common__WEBPACK_IMPORTED_MODULE_13__.urlEmptyError);\n        }\n        const managedIdentityRequest = {\n            forceRefresh: managedIdentityRequestParams.forceRefresh,\n            resource: managedIdentityRequestParams.resource.replace(\"/.default\", \"\"),\n            scopes: [\n                managedIdentityRequestParams.resource.replace(\"/.default\", \"\"),\n            ],\n            authority: this.fakeAuthority.canonicalAuthority,\n            correlationId: this.cryptoProvider.createNewGuid(),\n        };\n        if (managedIdentityRequest.forceRefresh) {\n            // make a network call to the managed identity source\n            return this.managedIdentityClient.sendManagedIdentityTokenRequest(managedIdentityRequest, this.config.managedIdentityId, this.fakeAuthority);\n        }\n        const [cachedAuthenticationResult, lastCacheOutcome] = await this.fakeClientCredentialClient.getCachedAuthenticationResult(managedIdentityRequest, this.config, this.cryptoProvider, this.fakeAuthority, ManagedIdentityApplication.nodeStorage);\n        if (cachedAuthenticationResult) {\n            // if the token is not expired but must be refreshed; get a new one in the background\n            if (lastCacheOutcome === _azure_msal_common__WEBPACK_IMPORTED_MODULE_8__.CacheOutcome.PROACTIVELY_REFRESHED) {\n                this.logger.info(\"ClientCredentialClient:getCachedAuthenticationResult - Cached access token's refreshOn property has been exceeded'. It's not expired, but must be refreshed.\");\n                // make a network call to the managed identity source; refresh the access token in the background\n                const refreshAccessToken = true;\n                await this.managedIdentityClient.sendManagedIdentityTokenRequest(managedIdentityRequest, this.config.managedIdentityId, this.fakeAuthority, refreshAccessToken);\n            }\n            return cachedAuthenticationResult;\n        }\n        else {\n            // make a network call to the managed identity source\n            return this.managedIdentityClient.sendManagedIdentityTokenRequest(managedIdentityRequest, this.config.managedIdentityId, this.fakeAuthority);\n        }\n    }\n    /**\n     * Determine the Managed Identity Source based on available environment variables. This API is consumed by Azure Identity SDK.\n     * @returns ManagedIdentitySourceNames - The Managed Identity source's name\n     */\n    getManagedIdentitySource() {\n        return (_ManagedIdentityClient_mjs__WEBPACK_IMPORTED_MODULE_4__.ManagedIdentityClient.sourceName ||\n            this.managedIdentityClient.getManagedIdentitySource());\n    }\n}\n\n\n//# sourceMappingURL=ManagedIdentityApplication.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/msal-node/dist/client/ManagedIdentityApplication.mjs\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/msal-node/dist/client/ManagedIdentityClient.mjs":
/*!*****************************************************************************!*\
  !*** ./node_modules/@azure/msal-node/dist/client/ManagedIdentityClient.mjs ***!
  \*****************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ManagedIdentityClient: () => (/* binding */ ManagedIdentityClient)\n/* harmony export */ });\n/* harmony import */ var _ManagedIdentitySources_AppService_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ManagedIdentitySources/AppService.mjs */ \"(rsc)/./node_modules/@azure/msal-node/dist/client/ManagedIdentitySources/AppService.mjs\");\n/* harmony import */ var _ManagedIdentitySources_AzureArc_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./ManagedIdentitySources/AzureArc.mjs */ \"(rsc)/./node_modules/@azure/msal-node/dist/client/ManagedIdentitySources/AzureArc.mjs\");\n/* harmony import */ var _ManagedIdentitySources_CloudShell_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./ManagedIdentitySources/CloudShell.mjs */ \"(rsc)/./node_modules/@azure/msal-node/dist/client/ManagedIdentitySources/CloudShell.mjs\");\n/* harmony import */ var _ManagedIdentitySources_Imds_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./ManagedIdentitySources/Imds.mjs */ \"(rsc)/./node_modules/@azure/msal-node/dist/client/ManagedIdentitySources/Imds.mjs\");\n/* harmony import */ var _ManagedIdentitySources_ServiceFabric_mjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./ManagedIdentitySources/ServiceFabric.mjs */ \"(rsc)/./node_modules/@azure/msal-node/dist/client/ManagedIdentitySources/ServiceFabric.mjs\");\n/* harmony import */ var _error_ManagedIdentityError_mjs__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../error/ManagedIdentityError.mjs */ \"(rsc)/./node_modules/@azure/msal-node/dist/error/ManagedIdentityError.mjs\");\n/* harmony import */ var _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../utils/Constants.mjs */ \"(rsc)/./node_modules/@azure/msal-node/dist/utils/Constants.mjs\");\n/* harmony import */ var _error_ManagedIdentityErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../error/ManagedIdentityErrorCodes.mjs */ \"(rsc)/./node_modules/@azure/msal-node/dist/error/ManagedIdentityErrorCodes.mjs\");\n/*! @azure/msal-node v2.12.0 2024-07-23 */\n\n\n\n\n\n\n\n\n\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n/*\n * Class to initialize a managed identity and identify the service.\n * Original source of code: https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/identity/Azure.Identity/src/ManagedIdentityClient.cs\n */\nclass ManagedIdentityClient {\n    constructor(logger, nodeStorage, networkClient, cryptoProvider) {\n        this.logger = logger;\n        this.nodeStorage = nodeStorage;\n        this.networkClient = networkClient;\n        this.cryptoProvider = cryptoProvider;\n    }\n    async sendManagedIdentityTokenRequest(managedIdentityRequest, managedIdentityId, fakeAuthority, refreshAccessToken) {\n        if (!ManagedIdentityClient.identitySource) {\n            ManagedIdentityClient.identitySource =\n                this.selectManagedIdentitySource(this.logger, this.nodeStorage, this.networkClient, this.cryptoProvider, managedIdentityId);\n        }\n        return ManagedIdentityClient.identitySource.acquireTokenWithManagedIdentity(managedIdentityRequest, managedIdentityId, fakeAuthority, refreshAccessToken);\n    }\n    allEnvironmentVariablesAreDefined(environmentVariables) {\n        return Object.values(environmentVariables).every((environmentVariable) => {\n            return environmentVariable !== undefined;\n        });\n    }\n    /**\n     * Determine the Managed Identity Source based on available environment variables. This API is consumed by ManagedIdentityApplication's getManagedIdentitySource.\n     * @returns ManagedIdentitySourceNames - The Managed Identity source's name\n     */\n    getManagedIdentitySource() {\n        ManagedIdentityClient.sourceName =\n            this.allEnvironmentVariablesAreDefined(_ManagedIdentitySources_ServiceFabric_mjs__WEBPACK_IMPORTED_MODULE_4__.ServiceFabric.getEnvironmentVariables())\n                ? _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_6__.ManagedIdentitySourceNames.SERVICE_FABRIC\n                : this.allEnvironmentVariablesAreDefined(_ManagedIdentitySources_AppService_mjs__WEBPACK_IMPORTED_MODULE_0__.AppService.getEnvironmentVariables())\n                    ? _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_6__.ManagedIdentitySourceNames.APP_SERVICE\n                    : this.allEnvironmentVariablesAreDefined(_ManagedIdentitySources_CloudShell_mjs__WEBPACK_IMPORTED_MODULE_2__.CloudShell.getEnvironmentVariables())\n                        ? _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_6__.ManagedIdentitySourceNames.CLOUD_SHELL\n                        : this.allEnvironmentVariablesAreDefined(_ManagedIdentitySources_AzureArc_mjs__WEBPACK_IMPORTED_MODULE_1__.AzureArc.getEnvironmentVariables())\n                            ? _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_6__.ManagedIdentitySourceNames.AZURE_ARC\n                            : _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_6__.ManagedIdentitySourceNames.DEFAULT_TO_IMDS;\n        return ManagedIdentityClient.sourceName;\n    }\n    /**\n     * Tries to create a managed identity source for all sources\n     * @returns the managed identity Source\n     */\n    selectManagedIdentitySource(logger, nodeStorage, networkClient, cryptoProvider, managedIdentityId) {\n        const source = _ManagedIdentitySources_ServiceFabric_mjs__WEBPACK_IMPORTED_MODULE_4__.ServiceFabric.tryCreate(logger, nodeStorage, networkClient, cryptoProvider, managedIdentityId) ||\n            _ManagedIdentitySources_AppService_mjs__WEBPACK_IMPORTED_MODULE_0__.AppService.tryCreate(logger, nodeStorage, networkClient, cryptoProvider) ||\n            _ManagedIdentitySources_CloudShell_mjs__WEBPACK_IMPORTED_MODULE_2__.CloudShell.tryCreate(logger, nodeStorage, networkClient, cryptoProvider, managedIdentityId) ||\n            _ManagedIdentitySources_AzureArc_mjs__WEBPACK_IMPORTED_MODULE_1__.AzureArc.tryCreate(logger, nodeStorage, networkClient, cryptoProvider, managedIdentityId) ||\n            _ManagedIdentitySources_Imds_mjs__WEBPACK_IMPORTED_MODULE_3__.Imds.tryCreate(logger, nodeStorage, networkClient, cryptoProvider);\n        if (!source) {\n            throw (0,_error_ManagedIdentityError_mjs__WEBPACK_IMPORTED_MODULE_5__.createManagedIdentityError)(_error_ManagedIdentityErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_7__.unableToCreateSource);\n        }\n        return source;\n    }\n}\n\n\n//# sourceMappingURL=ManagedIdentityClient.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtbm9kZS9kaXN0L2NsaWVudC9NYW5hZ2VkSWRlbnRpdHlDbGllbnQubWpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7OztBQUFBO0FBQ2E7QUFDd0Q7QUFDSjtBQUNJO0FBQ1o7QUFDa0I7QUFDSTtBQUNYO0FBQ1U7O0FBRTlFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbURBQW1ELG9GQUFhO0FBQ2hFLGtCQUFrQiw0RUFBMEI7QUFDNUMseURBQXlELDhFQUFVO0FBQ25FLHNCQUFzQiw0RUFBMEI7QUFDaEQsNkRBQTZELDhFQUFVO0FBQ3ZFLDBCQUEwQiw0RUFBMEI7QUFDcEQsaUVBQWlFLDBFQUFRO0FBQ3pFLDhCQUE4Qiw0RUFBMEI7QUFDeEQsOEJBQThCLDRFQUEwQjtBQUN4RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHVCQUF1QixvRkFBYTtBQUNwQyxZQUFZLDhFQUFVO0FBQ3RCLFlBQVksOEVBQVU7QUFDdEIsWUFBWSwwRUFBUTtBQUNwQixZQUFZLGtFQUFJO0FBQ2hCO0FBQ0Esa0JBQWtCLDJGQUEwQixDQUFDLHNGQUFvQjtBQUNqRTtBQUNBO0FBQ0E7QUFDQTs7QUFFaUM7QUFDakMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9kYW5pZWwzLXZwMi8uL25vZGVfbW9kdWxlcy9AYXp1cmUvbXNhbC1ub2RlL2Rpc3QvY2xpZW50L01hbmFnZWRJZGVudGl0eUNsaWVudC5tanM/NzhkNSJdLCJzb3VyY2VzQ29udGVudCI6WyIvKiEgQGF6dXJlL21zYWwtbm9kZSB2Mi4xMi4wIDIwMjQtMDctMjMgKi9cbid1c2Ugc3RyaWN0JztcbmltcG9ydCB7IEFwcFNlcnZpY2UgfSBmcm9tICcuL01hbmFnZWRJZGVudGl0eVNvdXJjZXMvQXBwU2VydmljZS5tanMnO1xuaW1wb3J0IHsgQXp1cmVBcmMgfSBmcm9tICcuL01hbmFnZWRJZGVudGl0eVNvdXJjZXMvQXp1cmVBcmMubWpzJztcbmltcG9ydCB7IENsb3VkU2hlbGwgfSBmcm9tICcuL01hbmFnZWRJZGVudGl0eVNvdXJjZXMvQ2xvdWRTaGVsbC5tanMnO1xuaW1wb3J0IHsgSW1kcyB9IGZyb20gJy4vTWFuYWdlZElkZW50aXR5U291cmNlcy9JbWRzLm1qcyc7XG5pbXBvcnQgeyBTZXJ2aWNlRmFicmljIH0gZnJvbSAnLi9NYW5hZ2VkSWRlbnRpdHlTb3VyY2VzL1NlcnZpY2VGYWJyaWMubWpzJztcbmltcG9ydCB7IGNyZWF0ZU1hbmFnZWRJZGVudGl0eUVycm9yIH0gZnJvbSAnLi4vZXJyb3IvTWFuYWdlZElkZW50aXR5RXJyb3IubWpzJztcbmltcG9ydCB7IE1hbmFnZWRJZGVudGl0eVNvdXJjZU5hbWVzIH0gZnJvbSAnLi4vdXRpbHMvQ29uc3RhbnRzLm1qcyc7XG5pbXBvcnQgeyB1bmFibGVUb0NyZWF0ZVNvdXJjZSB9IGZyb20gJy4uL2Vycm9yL01hbmFnZWRJZGVudGl0eUVycm9yQ29kZXMubWpzJztcblxuLypcbiAqIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLiBBbGwgcmlnaHRzIHJlc2VydmVkLlxuICogTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBMaWNlbnNlLlxuICovXG4vKlxuICogQ2xhc3MgdG8gaW5pdGlhbGl6ZSBhIG1hbmFnZWQgaWRlbnRpdHkgYW5kIGlkZW50aWZ5IHRoZSBzZXJ2aWNlLlxuICogT3JpZ2luYWwgc291cmNlIG9mIGNvZGU6IGh0dHBzOi8vZ2l0aHViLmNvbS9BenVyZS9henVyZS1zZGstZm9yLW5ldC9ibG9iL21haW4vc2RrL2lkZW50aXR5L0F6dXJlLklkZW50aXR5L3NyYy9NYW5hZ2VkSWRlbnRpdHlDbGllbnQuY3NcbiAqL1xuY2xhc3MgTWFuYWdlZElkZW50aXR5Q2xpZW50IHtcbiAgICBjb25zdHJ1Y3Rvcihsb2dnZXIsIG5vZGVTdG9yYWdlLCBuZXR3b3JrQ2xpZW50LCBjcnlwdG9Qcm92aWRlcikge1xuICAgICAgICB0aGlzLmxvZ2dlciA9IGxvZ2dlcjtcbiAgICAgICAgdGhpcy5ub2RlU3RvcmFnZSA9IG5vZGVTdG9yYWdlO1xuICAgICAgICB0aGlzLm5ldHdvcmtDbGllbnQgPSBuZXR3b3JrQ2xpZW50O1xuICAgICAgICB0aGlzLmNyeXB0b1Byb3ZpZGVyID0gY3J5cHRvUHJvdmlkZXI7XG4gICAgfVxuICAgIGFzeW5jIHNlbmRNYW5hZ2VkSWRlbnRpdHlUb2tlblJlcXVlc3QobWFuYWdlZElkZW50aXR5UmVxdWVzdCwgbWFuYWdlZElkZW50aXR5SWQsIGZha2VBdXRob3JpdHksIHJlZnJlc2hBY2Nlc3NUb2tlbikge1xuICAgICAgICBpZiAoIU1hbmFnZWRJZGVudGl0eUNsaWVudC5pZGVudGl0eVNvdXJjZSkge1xuICAgICAgICAgICAgTWFuYWdlZElkZW50aXR5Q2xpZW50LmlkZW50aXR5U291cmNlID1cbiAgICAgICAgICAgICAgICB0aGlzLnNlbGVjdE1hbmFnZWRJZGVudGl0eVNvdXJjZSh0aGlzLmxvZ2dlciwgdGhpcy5ub2RlU3RvcmFnZSwgdGhpcy5uZXR3b3JrQ2xpZW50LCB0aGlzLmNyeXB0b1Byb3ZpZGVyLCBtYW5hZ2VkSWRlbnRpdHlJZCk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIE1hbmFnZWRJZGVudGl0eUNsaWVudC5pZGVudGl0eVNvdXJjZS5hY3F1aXJlVG9rZW5XaXRoTWFuYWdlZElkZW50aXR5KG1hbmFnZWRJZGVudGl0eVJlcXVlc3QsIG1hbmFnZWRJZGVudGl0eUlkLCBmYWtlQXV0aG9yaXR5LCByZWZyZXNoQWNjZXNzVG9rZW4pO1xuICAgIH1cbiAgICBhbGxFbnZpcm9ubWVudFZhcmlhYmxlc0FyZURlZmluZWQoZW52aXJvbm1lbnRWYXJpYWJsZXMpIHtcbiAgICAgICAgcmV0dXJuIE9iamVjdC52YWx1ZXMoZW52aXJvbm1lbnRWYXJpYWJsZXMpLmV2ZXJ5KChlbnZpcm9ubWVudFZhcmlhYmxlKSA9PiB7XG4gICAgICAgICAgICByZXR1cm4gZW52aXJvbm1lbnRWYXJpYWJsZSAhPT0gdW5kZWZpbmVkO1xuICAgICAgICB9KTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogRGV0ZXJtaW5lIHRoZSBNYW5hZ2VkIElkZW50aXR5IFNvdXJjZSBiYXNlZCBvbiBhdmFpbGFibGUgZW52aXJvbm1lbnQgdmFyaWFibGVzLiBUaGlzIEFQSSBpcyBjb25zdW1lZCBieSBNYW5hZ2VkSWRlbnRpdHlBcHBsaWNhdGlvbidzIGdldE1hbmFnZWRJZGVudGl0eVNvdXJjZS5cbiAgICAgKiBAcmV0dXJucyBNYW5hZ2VkSWRlbnRpdHlTb3VyY2VOYW1lcyAtIFRoZSBNYW5hZ2VkIElkZW50aXR5IHNvdXJjZSdzIG5hbWVcbiAgICAgKi9cbiAgICBnZXRNYW5hZ2VkSWRlbnRpdHlTb3VyY2UoKSB7XG4gICAgICAgIE1hbmFnZWRJZGVudGl0eUNsaWVudC5zb3VyY2VOYW1lID1cbiAgICAgICAgICAgIHRoaXMuYWxsRW52aXJvbm1lbnRWYXJpYWJsZXNBcmVEZWZpbmVkKFNlcnZpY2VGYWJyaWMuZ2V0RW52aXJvbm1lbnRWYXJpYWJsZXMoKSlcbiAgICAgICAgICAgICAgICA/IE1hbmFnZWRJZGVudGl0eVNvdXJjZU5hbWVzLlNFUlZJQ0VfRkFCUklDXG4gICAgICAgICAgICAgICAgOiB0aGlzLmFsbEVudmlyb25tZW50VmFyaWFibGVzQXJlRGVmaW5lZChBcHBTZXJ2aWNlLmdldEVudmlyb25tZW50VmFyaWFibGVzKCkpXG4gICAgICAgICAgICAgICAgICAgID8gTWFuYWdlZElkZW50aXR5U291cmNlTmFtZXMuQVBQX1NFUlZJQ0VcbiAgICAgICAgICAgICAgICAgICAgOiB0aGlzLmFsbEVudmlyb25tZW50VmFyaWFibGVzQXJlRGVmaW5lZChDbG91ZFNoZWxsLmdldEVudmlyb25tZW50VmFyaWFibGVzKCkpXG4gICAgICAgICAgICAgICAgICAgICAgICA/IE1hbmFnZWRJZGVudGl0eVNvdXJjZU5hbWVzLkNMT1VEX1NIRUxMXG4gICAgICAgICAgICAgICAgICAgICAgICA6IHRoaXMuYWxsRW52aXJvbm1lbnRWYXJpYWJsZXNBcmVEZWZpbmVkKEF6dXJlQXJjLmdldEVudmlyb25tZW50VmFyaWFibGVzKCkpXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPyBNYW5hZ2VkSWRlbnRpdHlTb3VyY2VOYW1lcy5BWlVSRV9BUkNcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA6IE1hbmFnZWRJZGVudGl0eVNvdXJjZU5hbWVzLkRFRkFVTFRfVE9fSU1EUztcbiAgICAgICAgcmV0dXJuIE1hbmFnZWRJZGVudGl0eUNsaWVudC5zb3VyY2VOYW1lO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBUcmllcyB0byBjcmVhdGUgYSBtYW5hZ2VkIGlkZW50aXR5IHNvdXJjZSBmb3IgYWxsIHNvdXJjZXNcbiAgICAgKiBAcmV0dXJucyB0aGUgbWFuYWdlZCBpZGVudGl0eSBTb3VyY2VcbiAgICAgKi9cbiAgICBzZWxlY3RNYW5hZ2VkSWRlbnRpdHlTb3VyY2UobG9nZ2VyLCBub2RlU3RvcmFnZSwgbmV0d29ya0NsaWVudCwgY3J5cHRvUHJvdmlkZXIsIG1hbmFnZWRJZGVudGl0eUlkKSB7XG4gICAgICAgIGNvbnN0IHNvdXJjZSA9IFNlcnZpY2VGYWJyaWMudHJ5Q3JlYXRlKGxvZ2dlciwgbm9kZVN0b3JhZ2UsIG5ldHdvcmtDbGllbnQsIGNyeXB0b1Byb3ZpZGVyLCBtYW5hZ2VkSWRlbnRpdHlJZCkgfHxcbiAgICAgICAgICAgIEFwcFNlcnZpY2UudHJ5Q3JlYXRlKGxvZ2dlciwgbm9kZVN0b3JhZ2UsIG5ldHdvcmtDbGllbnQsIGNyeXB0b1Byb3ZpZGVyKSB8fFxuICAgICAgICAgICAgQ2xvdWRTaGVsbC50cnlDcmVhdGUobG9nZ2VyLCBub2RlU3RvcmFnZSwgbmV0d29ya0NsaWVudCwgY3J5cHRvUHJvdmlkZXIsIG1hbmFnZWRJZGVudGl0eUlkKSB8fFxuICAgICAgICAgICAgQXp1cmVBcmMudHJ5Q3JlYXRlKGxvZ2dlciwgbm9kZVN0b3JhZ2UsIG5ldHdvcmtDbGllbnQsIGNyeXB0b1Byb3ZpZGVyLCBtYW5hZ2VkSWRlbnRpdHlJZCkgfHxcbiAgICAgICAgICAgIEltZHMudHJ5Q3JlYXRlKGxvZ2dlciwgbm9kZVN0b3JhZ2UsIG5ldHdvcmtDbGllbnQsIGNyeXB0b1Byb3ZpZGVyKTtcbiAgICAgICAgaWYgKCFzb3VyY2UpIHtcbiAgICAgICAgICAgIHRocm93IGNyZWF0ZU1hbmFnZWRJZGVudGl0eUVycm9yKHVuYWJsZVRvQ3JlYXRlU291cmNlKTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gc291cmNlO1xuICAgIH1cbn1cblxuZXhwb3J0IHsgTWFuYWdlZElkZW50aXR5Q2xpZW50IH07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1NYW5hZ2VkSWRlbnRpdHlDbGllbnQubWpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/msal-node/dist/client/ManagedIdentityClient.mjs\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/msal-node/dist/client/ManagedIdentitySources/AppService.mjs":
/*!*****************************************************************************************!*\
  !*** ./node_modules/@azure/msal-node/dist/client/ManagedIdentitySources/AppService.mjs ***!
  \*****************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AppService: () => (/* binding */ AppService)\n/* harmony export */ });\n/* harmony import */ var _BaseManagedIdentitySource_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./BaseManagedIdentitySource.mjs */ \"(rsc)/./node_modules/@azure/msal-node/dist/client/ManagedIdentitySources/BaseManagedIdentitySource.mjs\");\n/* harmony import */ var _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/Constants.mjs */ \"(rsc)/./node_modules/@azure/msal-node/dist/utils/Constants.mjs\");\n/* harmony import */ var _config_ManagedIdentityRequestParameters_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../config/ManagedIdentityRequestParameters.mjs */ \"(rsc)/./node_modules/@azure/msal-node/dist/config/ManagedIdentityRequestParameters.mjs\");\n/*! @azure/msal-node v2.12.0 2024-07-23 */\n\n\n\n\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n// MSI Constants. Docs for MSI are available here https://docs.microsoft.com/azure/app-service/overview-managed-identity\nconst APP_SERVICE_MSI_API_VERSION = \"2019-08-01\";\n/**\n * Original source of code: https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/identity/Azure.Identity/src/AppServiceManagedIdentitySource.cs\n */\nclass AppService extends _BaseManagedIdentitySource_mjs__WEBPACK_IMPORTED_MODULE_0__.BaseManagedIdentitySource {\n    constructor(logger, nodeStorage, networkClient, cryptoProvider, identityEndpoint, identityHeader) {\n        super(logger, nodeStorage, networkClient, cryptoProvider);\n        this.identityEndpoint = identityEndpoint;\n        this.identityHeader = identityHeader;\n    }\n    static getEnvironmentVariables() {\n        const identityEndpoint = process.env[_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_1__.ManagedIdentityEnvironmentVariableNames.IDENTITY_ENDPOINT];\n        const identityHeader = process.env[_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_1__.ManagedIdentityEnvironmentVariableNames.IDENTITY_HEADER];\n        return [identityEndpoint, identityHeader];\n    }\n    static tryCreate(logger, nodeStorage, networkClient, cryptoProvider) {\n        const [identityEndpoint, identityHeader] = AppService.getEnvironmentVariables();\n        // if either of the identity endpoint or identity header variables are undefined, this MSI provider is unavailable.\n        if (!identityEndpoint || !identityHeader) {\n            logger.info(`[Managed Identity] ${_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_1__.ManagedIdentitySourceNames.APP_SERVICE} managed identity is unavailable because one or both of the '${_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_1__.ManagedIdentityEnvironmentVariableNames.IDENTITY_HEADER}' and '${_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_1__.ManagedIdentityEnvironmentVariableNames.IDENTITY_ENDPOINT}' environment variables are not defined.`);\n            return null;\n        }\n        const validatedIdentityEndpoint = AppService.getValidatedEnvVariableUrlString(_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_1__.ManagedIdentityEnvironmentVariableNames.IDENTITY_ENDPOINT, identityEndpoint, _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_1__.ManagedIdentitySourceNames.APP_SERVICE, logger);\n        logger.info(`[Managed Identity] Environment variables validation passed for ${_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_1__.ManagedIdentitySourceNames.APP_SERVICE} managed identity. Endpoint URI: ${validatedIdentityEndpoint}. Creating ${_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_1__.ManagedIdentitySourceNames.APP_SERVICE} managed identity.`);\n        return new AppService(logger, nodeStorage, networkClient, cryptoProvider, identityEndpoint, identityHeader);\n    }\n    createRequest(resource, managedIdentityId) {\n        const request = new _config_ManagedIdentityRequestParameters_mjs__WEBPACK_IMPORTED_MODULE_2__.ManagedIdentityRequestParameters(_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_1__.HttpMethod.GET, this.identityEndpoint);\n        request.headers[_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_1__.APP_SERVICE_SECRET_HEADER_NAME] = this.identityHeader;\n        request.queryParameters[_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_1__.API_VERSION_QUERY_PARAMETER_NAME] =\n            APP_SERVICE_MSI_API_VERSION;\n        request.queryParameters[_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_1__.RESOURCE_BODY_OR_QUERY_PARAMETER_NAME] =\n            resource;\n        if (managedIdentityId.idType !== _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_1__.ManagedIdentityIdType.SYSTEM_ASSIGNED) {\n            request.queryParameters[this.getManagedIdentityUserAssignedIdQueryParameterKey(managedIdentityId.idType)] = managedIdentityId.id;\n        }\n        // bodyParameters calculated in BaseManagedIdentity.acquireTokenWithManagedIdentity\n        return request;\n    }\n}\n\n\n//# sourceMappingURL=AppService.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtbm9kZS9kaXN0L2NsaWVudC9NYW5hZ2VkSWRlbnRpdHlTb3VyY2VzL0FwcFNlcnZpY2UubWpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTtBQUNhO0FBQytEO0FBQ2dMO0FBQ3ZKOztBQUVyRztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx5QkFBeUIscUZBQXlCO0FBQ2xEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDZDQUE2Qyx5RkFBdUM7QUFDcEYsMkNBQTJDLHlGQUF1QztBQUNsRjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw4Q0FBOEMsNEVBQTBCLGNBQWMsOERBQThELHlGQUF1QyxpQkFBaUIsU0FBUyx5RkFBdUMsbUJBQW1CO0FBQy9RO0FBQ0E7QUFDQSxzRkFBc0YseUZBQXVDLHNDQUFzQyw0RUFBMEI7QUFDN0wsc0ZBQXNGLDRFQUEwQixjQUFjLGtDQUFrQywwQkFBMEIsYUFBYSw0RUFBMEIsY0FBYztBQUMvTztBQUNBO0FBQ0E7QUFDQSw0QkFBNEIsMEdBQWdDLENBQUMsNERBQVU7QUFDdkUsd0JBQXdCLGdGQUE4QjtBQUN0RCxnQ0FBZ0Msa0ZBQWdDO0FBQ2hFO0FBQ0EsZ0NBQWdDLHVGQUFxQztBQUNyRTtBQUNBLHlDQUF5Qyx1RUFBcUI7QUFDOUQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVzQjtBQUN0QiIsInNvdXJjZXMiOlsid2VicGFjazovL2RhbmllbDMtdnAyLy4vbm9kZV9tb2R1bGVzL0BhenVyZS9tc2FsLW5vZGUvZGlzdC9jbGllbnQvTWFuYWdlZElkZW50aXR5U291cmNlcy9BcHBTZXJ2aWNlLm1qcz8yOGIxIl0sInNvdXJjZXNDb250ZW50IjpbIi8qISBAYXp1cmUvbXNhbC1ub2RlIHYyLjEyLjAgMjAyNC0wNy0yMyAqL1xuJ3VzZSBzdHJpY3QnO1xuaW1wb3J0IHsgQmFzZU1hbmFnZWRJZGVudGl0eVNvdXJjZSB9IGZyb20gJy4vQmFzZU1hbmFnZWRJZGVudGl0eVNvdXJjZS5tanMnO1xuaW1wb3J0IHsgTWFuYWdlZElkZW50aXR5RW52aXJvbm1lbnRWYXJpYWJsZU5hbWVzLCBNYW5hZ2VkSWRlbnRpdHlTb3VyY2VOYW1lcywgQVBQX1NFUlZJQ0VfU0VDUkVUX0hFQURFUl9OQU1FLCBBUElfVkVSU0lPTl9RVUVSWV9QQVJBTUVURVJfTkFNRSwgUkVTT1VSQ0VfQk9EWV9PUl9RVUVSWV9QQVJBTUVURVJfTkFNRSwgTWFuYWdlZElkZW50aXR5SWRUeXBlLCBIdHRwTWV0aG9kIH0gZnJvbSAnLi4vLi4vdXRpbHMvQ29uc3RhbnRzLm1qcyc7XG5pbXBvcnQgeyBNYW5hZ2VkSWRlbnRpdHlSZXF1ZXN0UGFyYW1ldGVycyB9IGZyb20gJy4uLy4uL2NvbmZpZy9NYW5hZ2VkSWRlbnRpdHlSZXF1ZXN0UGFyYW1ldGVycy5tanMnO1xuXG4vKlxuICogQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uIEFsbCByaWdodHMgcmVzZXJ2ZWQuXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIExpY2Vuc2UuXG4gKi9cbi8vIE1TSSBDb25zdGFudHMuIERvY3MgZm9yIE1TSSBhcmUgYXZhaWxhYmxlIGhlcmUgaHR0cHM6Ly9kb2NzLm1pY3Jvc29mdC5jb20vYXp1cmUvYXBwLXNlcnZpY2Uvb3ZlcnZpZXctbWFuYWdlZC1pZGVudGl0eVxuY29uc3QgQVBQX1NFUlZJQ0VfTVNJX0FQSV9WRVJTSU9OID0gXCIyMDE5LTA4LTAxXCI7XG4vKipcbiAqIE9yaWdpbmFsIHNvdXJjZSBvZiBjb2RlOiBodHRwczovL2dpdGh1Yi5jb20vQXp1cmUvYXp1cmUtc2RrLWZvci1uZXQvYmxvYi9tYWluL3Nkay9pZGVudGl0eS9BenVyZS5JZGVudGl0eS9zcmMvQXBwU2VydmljZU1hbmFnZWRJZGVudGl0eVNvdXJjZS5jc1xuICovXG5jbGFzcyBBcHBTZXJ2aWNlIGV4dGVuZHMgQmFzZU1hbmFnZWRJZGVudGl0eVNvdXJjZSB7XG4gICAgY29uc3RydWN0b3IobG9nZ2VyLCBub2RlU3RvcmFnZSwgbmV0d29ya0NsaWVudCwgY3J5cHRvUHJvdmlkZXIsIGlkZW50aXR5RW5kcG9pbnQsIGlkZW50aXR5SGVhZGVyKSB7XG4gICAgICAgIHN1cGVyKGxvZ2dlciwgbm9kZVN0b3JhZ2UsIG5ldHdvcmtDbGllbnQsIGNyeXB0b1Byb3ZpZGVyKTtcbiAgICAgICAgdGhpcy5pZGVudGl0eUVuZHBvaW50ID0gaWRlbnRpdHlFbmRwb2ludDtcbiAgICAgICAgdGhpcy5pZGVudGl0eUhlYWRlciA9IGlkZW50aXR5SGVhZGVyO1xuICAgIH1cbiAgICBzdGF0aWMgZ2V0RW52aXJvbm1lbnRWYXJpYWJsZXMoKSB7XG4gICAgICAgIGNvbnN0IGlkZW50aXR5RW5kcG9pbnQgPSBwcm9jZXNzLmVudltNYW5hZ2VkSWRlbnRpdHlFbnZpcm9ubWVudFZhcmlhYmxlTmFtZXMuSURFTlRJVFlfRU5EUE9JTlRdO1xuICAgICAgICBjb25zdCBpZGVudGl0eUhlYWRlciA9IHByb2Nlc3MuZW52W01hbmFnZWRJZGVudGl0eUVudmlyb25tZW50VmFyaWFibGVOYW1lcy5JREVOVElUWV9IRUFERVJdO1xuICAgICAgICByZXR1cm4gW2lkZW50aXR5RW5kcG9pbnQsIGlkZW50aXR5SGVhZGVyXTtcbiAgICB9XG4gICAgc3RhdGljIHRyeUNyZWF0ZShsb2dnZXIsIG5vZGVTdG9yYWdlLCBuZXR3b3JrQ2xpZW50LCBjcnlwdG9Qcm92aWRlcikge1xuICAgICAgICBjb25zdCBbaWRlbnRpdHlFbmRwb2ludCwgaWRlbnRpdHlIZWFkZXJdID0gQXBwU2VydmljZS5nZXRFbnZpcm9ubWVudFZhcmlhYmxlcygpO1xuICAgICAgICAvLyBpZiBlaXRoZXIgb2YgdGhlIGlkZW50aXR5IGVuZHBvaW50IG9yIGlkZW50aXR5IGhlYWRlciB2YXJpYWJsZXMgYXJlIHVuZGVmaW5lZCwgdGhpcyBNU0kgcHJvdmlkZXIgaXMgdW5hdmFpbGFibGUuXG4gICAgICAgIGlmICghaWRlbnRpdHlFbmRwb2ludCB8fCAhaWRlbnRpdHlIZWFkZXIpIHtcbiAgICAgICAgICAgIGxvZ2dlci5pbmZvKGBbTWFuYWdlZCBJZGVudGl0eV0gJHtNYW5hZ2VkSWRlbnRpdHlTb3VyY2VOYW1lcy5BUFBfU0VSVklDRX0gbWFuYWdlZCBpZGVudGl0eSBpcyB1bmF2YWlsYWJsZSBiZWNhdXNlIG9uZSBvciBib3RoIG9mIHRoZSAnJHtNYW5hZ2VkSWRlbnRpdHlFbnZpcm9ubWVudFZhcmlhYmxlTmFtZXMuSURFTlRJVFlfSEVBREVSfScgYW5kICcke01hbmFnZWRJZGVudGl0eUVudmlyb25tZW50VmFyaWFibGVOYW1lcy5JREVOVElUWV9FTkRQT0lOVH0nIGVudmlyb25tZW50IHZhcmlhYmxlcyBhcmUgbm90IGRlZmluZWQuYCk7XG4gICAgICAgICAgICByZXR1cm4gbnVsbDtcbiAgICAgICAgfVxuICAgICAgICBjb25zdCB2YWxpZGF0ZWRJZGVudGl0eUVuZHBvaW50ID0gQXBwU2VydmljZS5nZXRWYWxpZGF0ZWRFbnZWYXJpYWJsZVVybFN0cmluZyhNYW5hZ2VkSWRlbnRpdHlFbnZpcm9ubWVudFZhcmlhYmxlTmFtZXMuSURFTlRJVFlfRU5EUE9JTlQsIGlkZW50aXR5RW5kcG9pbnQsIE1hbmFnZWRJZGVudGl0eVNvdXJjZU5hbWVzLkFQUF9TRVJWSUNFLCBsb2dnZXIpO1xuICAgICAgICBsb2dnZXIuaW5mbyhgW01hbmFnZWQgSWRlbnRpdHldIEVudmlyb25tZW50IHZhcmlhYmxlcyB2YWxpZGF0aW9uIHBhc3NlZCBmb3IgJHtNYW5hZ2VkSWRlbnRpdHlTb3VyY2VOYW1lcy5BUFBfU0VSVklDRX0gbWFuYWdlZCBpZGVudGl0eS4gRW5kcG9pbnQgVVJJOiAke3ZhbGlkYXRlZElkZW50aXR5RW5kcG9pbnR9LiBDcmVhdGluZyAke01hbmFnZWRJZGVudGl0eVNvdXJjZU5hbWVzLkFQUF9TRVJWSUNFfSBtYW5hZ2VkIGlkZW50aXR5LmApO1xuICAgICAgICByZXR1cm4gbmV3IEFwcFNlcnZpY2UobG9nZ2VyLCBub2RlU3RvcmFnZSwgbmV0d29ya0NsaWVudCwgY3J5cHRvUHJvdmlkZXIsIGlkZW50aXR5RW5kcG9pbnQsIGlkZW50aXR5SGVhZGVyKTtcbiAgICB9XG4gICAgY3JlYXRlUmVxdWVzdChyZXNvdXJjZSwgbWFuYWdlZElkZW50aXR5SWQpIHtcbiAgICAgICAgY29uc3QgcmVxdWVzdCA9IG5ldyBNYW5hZ2VkSWRlbnRpdHlSZXF1ZXN0UGFyYW1ldGVycyhIdHRwTWV0aG9kLkdFVCwgdGhpcy5pZGVudGl0eUVuZHBvaW50KTtcbiAgICAgICAgcmVxdWVzdC5oZWFkZXJzW0FQUF9TRVJWSUNFX1NFQ1JFVF9IRUFERVJfTkFNRV0gPSB0aGlzLmlkZW50aXR5SGVhZGVyO1xuICAgICAgICByZXF1ZXN0LnF1ZXJ5UGFyYW1ldGVyc1tBUElfVkVSU0lPTl9RVUVSWV9QQVJBTUVURVJfTkFNRV0gPVxuICAgICAgICAgICAgQVBQX1NFUlZJQ0VfTVNJX0FQSV9WRVJTSU9OO1xuICAgICAgICByZXF1ZXN0LnF1ZXJ5UGFyYW1ldGVyc1tSRVNPVVJDRV9CT0RZX09SX1FVRVJZX1BBUkFNRVRFUl9OQU1FXSA9XG4gICAgICAgICAgICByZXNvdXJjZTtcbiAgICAgICAgaWYgKG1hbmFnZWRJZGVudGl0eUlkLmlkVHlwZSAhPT0gTWFuYWdlZElkZW50aXR5SWRUeXBlLlNZU1RFTV9BU1NJR05FRCkge1xuICAgICAgICAgICAgcmVxdWVzdC5xdWVyeVBhcmFtZXRlcnNbdGhpcy5nZXRNYW5hZ2VkSWRlbnRpdHlVc2VyQXNzaWduZWRJZFF1ZXJ5UGFyYW1ldGVyS2V5KG1hbmFnZWRJZGVudGl0eUlkLmlkVHlwZSldID0gbWFuYWdlZElkZW50aXR5SWQuaWQ7XG4gICAgICAgIH1cbiAgICAgICAgLy8gYm9keVBhcmFtZXRlcnMgY2FsY3VsYXRlZCBpbiBCYXNlTWFuYWdlZElkZW50aXR5LmFjcXVpcmVUb2tlbldpdGhNYW5hZ2VkSWRlbnRpdHlcbiAgICAgICAgcmV0dXJuIHJlcXVlc3Q7XG4gICAgfVxufVxuXG5leHBvcnQgeyBBcHBTZXJ2aWNlIH07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1BcHBTZXJ2aWNlLm1qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/msal-node/dist/client/ManagedIdentitySources/AppService.mjs\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/msal-node/dist/client/ManagedIdentitySources/AzureArc.mjs":
/*!***************************************************************************************!*\
  !*** ./node_modules/@azure/msal-node/dist/client/ManagedIdentitySources/AzureArc.mjs ***!
  \***************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ARC_API_VERSION: () => (/* binding */ ARC_API_VERSION),\n/* harmony export */   AzureArc: () => (/* binding */ AzureArc),\n/* harmony export */   SUPPORTED_AZURE_ARC_PLATFORMS: () => (/* binding */ SUPPORTED_AZURE_ARC_PLATFORMS)\n/* harmony export */ });\n/* harmony import */ var _azure_msal_common__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @azure/msal-common */ \"(rsc)/./node_modules/@azure/msal-common/dist/utils/Constants.mjs\");\n/* harmony import */ var _azure_msal_common__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @azure/msal-common */ \"(rsc)/./node_modules/@azure/msal-common/dist/error/AuthError.mjs\");\n/* harmony import */ var _azure_msal_common__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @azure/msal-common */ \"(rsc)/./node_modules/@azure/msal-common/dist/error/ClientAuthError.mjs\");\n/* harmony import */ var _azure_msal_common__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @azure/msal-common */ \"(rsc)/./node_modules/@azure/msal-common/dist/error/ClientAuthErrorCodes.mjs\");\n/* harmony import */ var _config_ManagedIdentityRequestParameters_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../config/ManagedIdentityRequestParameters.mjs */ \"(rsc)/./node_modules/@azure/msal-node/dist/config/ManagedIdentityRequestParameters.mjs\");\n/* harmony import */ var _BaseManagedIdentitySource_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./BaseManagedIdentitySource.mjs */ \"(rsc)/./node_modules/@azure/msal-node/dist/client/ManagedIdentitySources/BaseManagedIdentitySource.mjs\");\n/* harmony import */ var _error_ManagedIdentityError_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../error/ManagedIdentityError.mjs */ \"(rsc)/./node_modules/@azure/msal-node/dist/error/ManagedIdentityError.mjs\");\n/* harmony import */ var _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../utils/Constants.mjs */ \"(rsc)/./node_modules/@azure/msal-node/dist/utils/Constants.mjs\");\n/* harmony import */ var fs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! fs */ \"fs\");\n/* harmony import */ var path__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! path */ \"path\");\n/* harmony import */ var _error_ManagedIdentityErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../error/ManagedIdentityErrorCodes.mjs */ \"(rsc)/./node_modules/@azure/msal-node/dist/error/ManagedIdentityErrorCodes.mjs\");\n/*! @azure/msal-node v2.12.0 2024-07-23 */\n\n\n\n\n\n\n\n\n\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\nconst ARC_API_VERSION = \"2019-11-01\";\nconst SUPPORTED_AZURE_ARC_PLATFORMS = {\n    win32: `${process.env[\"ProgramData\"]}\\\\AzureConnectedMachineAgent\\\\Tokens\\\\`,\n    linux: \"/var/opt/azcmagent/tokens/\",\n};\n/**\n * Original source of code: https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/identity/Azure.Identity/src/AzureArcManagedIdentitySource.cs\n */\nclass AzureArc extends _BaseManagedIdentitySource_mjs__WEBPACK_IMPORTED_MODULE_1__.BaseManagedIdentitySource {\n    constructor(logger, nodeStorage, networkClient, cryptoProvider, identityEndpoint) {\n        super(logger, nodeStorage, networkClient, cryptoProvider);\n        this.identityEndpoint = identityEndpoint;\n    }\n    static getEnvironmentVariables() {\n        const identityEndpoint = process.env[_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_3__.ManagedIdentityEnvironmentVariableNames.IDENTITY_ENDPOINT];\n        const imdsEndpoint = process.env[_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_3__.ManagedIdentityEnvironmentVariableNames.IMDS_ENDPOINT];\n        return [identityEndpoint, imdsEndpoint];\n    }\n    static tryCreate(logger, nodeStorage, networkClient, cryptoProvider, managedIdentityId) {\n        const [identityEndpoint, imdsEndpoint] = AzureArc.getEnvironmentVariables();\n        // if either of the identity or imds endpoints are undefined, this MSI provider is unavailable.\n        if (!identityEndpoint || !imdsEndpoint) {\n            logger.info(`[Managed Identity] ${_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_3__.ManagedIdentitySourceNames.AZURE_ARC} managed identity is unavailable because one or both of the '${_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_3__.ManagedIdentityEnvironmentVariableNames.IDENTITY_ENDPOINT}' and '${_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_3__.ManagedIdentityEnvironmentVariableNames.IMDS_ENDPOINT}' environment variables are not defined.`);\n            return null;\n        }\n        const validatedIdentityEndpoint = AzureArc.getValidatedEnvVariableUrlString(_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_3__.ManagedIdentityEnvironmentVariableNames.IDENTITY_ENDPOINT, identityEndpoint, _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_3__.ManagedIdentitySourceNames.AZURE_ARC, logger);\n        // remove trailing slash\n        validatedIdentityEndpoint.endsWith(\"/\")\n            ? validatedIdentityEndpoint.slice(0, -1)\n            : validatedIdentityEndpoint;\n        AzureArc.getValidatedEnvVariableUrlString(_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_3__.ManagedIdentityEnvironmentVariableNames.IMDS_ENDPOINT, imdsEndpoint, _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_3__.ManagedIdentitySourceNames.AZURE_ARC, logger);\n        logger.info(`[Managed Identity] Environment variables validation passed for ${_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_3__.ManagedIdentitySourceNames.AZURE_ARC} managed identity. Endpoint URI: ${validatedIdentityEndpoint}. Creating ${_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_3__.ManagedIdentitySourceNames.AZURE_ARC} managed identity.`);\n        if (managedIdentityId.idType !== _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_3__.ManagedIdentityIdType.SYSTEM_ASSIGNED) {\n            throw (0,_error_ManagedIdentityError_mjs__WEBPACK_IMPORTED_MODULE_2__.createManagedIdentityError)(_error_ManagedIdentityErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_6__.unableToCreateAzureArc);\n        }\n        return new AzureArc(logger, nodeStorage, networkClient, cryptoProvider, identityEndpoint);\n    }\n    createRequest(resource) {\n        const request = new _config_ManagedIdentityRequestParameters_mjs__WEBPACK_IMPORTED_MODULE_0__.ManagedIdentityRequestParameters(_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_3__.HttpMethod.GET, this.identityEndpoint.replace(\"localhost\", \"127.0.0.1\"));\n        request.headers[_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_3__.METADATA_HEADER_NAME] = \"true\";\n        request.queryParameters[_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_3__.API_VERSION_QUERY_PARAMETER_NAME] =\n            ARC_API_VERSION;\n        request.queryParameters[_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_3__.RESOURCE_BODY_OR_QUERY_PARAMETER_NAME] =\n            resource;\n        // bodyParameters calculated in BaseManagedIdentity.acquireTokenWithManagedIdentity\n        return request;\n    }\n    async getServerTokenResponseAsync(originalResponse, networkClient, networkRequest, networkRequestOptions) {\n        let retryResponse;\n        if (originalResponse.status === _azure_msal_common__WEBPACK_IMPORTED_MODULE_7__.HttpStatus.UNAUTHORIZED) {\n            const wwwAuthHeader = originalResponse.headers[\"www-authenticate\"];\n            if (!wwwAuthHeader) {\n                throw (0,_error_ManagedIdentityError_mjs__WEBPACK_IMPORTED_MODULE_2__.createManagedIdentityError)(_error_ManagedIdentityErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_6__.wwwAuthenticateHeaderMissing);\n            }\n            if (!wwwAuthHeader.includes(\"Basic realm=\")) {\n                throw (0,_error_ManagedIdentityError_mjs__WEBPACK_IMPORTED_MODULE_2__.createManagedIdentityError)(_error_ManagedIdentityErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_6__.wwwAuthenticateHeaderUnsupportedFormat);\n            }\n            const secretFilePath = wwwAuthHeader.split(\"Basic realm=\")[1];\n            // throw an error if the managed identity application is not being run on Windows or Linux\n            if (!SUPPORTED_AZURE_ARC_PLATFORMS.hasOwnProperty(process.platform)) {\n                throw (0,_error_ManagedIdentityError_mjs__WEBPACK_IMPORTED_MODULE_2__.createManagedIdentityError)(_error_ManagedIdentityErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_6__.platformNotSupported);\n            }\n            // get the expected Windows or Linux file path)\n            const expectedSecretFilePath = SUPPORTED_AZURE_ARC_PLATFORMS[process.platform];\n            // throw an error if the file in the file path is not a .key file\n            const fileName = path__WEBPACK_IMPORTED_MODULE_5__.basename(secretFilePath);\n            if (!fileName.endsWith(\".key\")) {\n                throw (0,_error_ManagedIdentityError_mjs__WEBPACK_IMPORTED_MODULE_2__.createManagedIdentityError)(_error_ManagedIdentityErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_6__.invalidFileExtension);\n            }\n            /*\n             * throw an error if the file path from the www-authenticate header does not match the\n             * expected file path for the platform (Windows or Linux) the managed identity application\n             * is running on\n             */\n            if (expectedSecretFilePath + fileName !== secretFilePath) {\n                throw (0,_error_ManagedIdentityError_mjs__WEBPACK_IMPORTED_MODULE_2__.createManagedIdentityError)(_error_ManagedIdentityErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_6__.invalidFilePath);\n            }\n            let secretFileSize;\n            // attempt to get the secret file's size, in bytes\n            try {\n                secretFileSize = await (0,fs__WEBPACK_IMPORTED_MODULE_4__.statSync)(secretFilePath).size;\n            }\n            catch (e) {\n                throw (0,_error_ManagedIdentityError_mjs__WEBPACK_IMPORTED_MODULE_2__.createManagedIdentityError)(_error_ManagedIdentityErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_6__.unableToReadSecretFile);\n            }\n            // throw an error if the secret file's size is greater than 4096 bytes\n            if (secretFileSize > _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_3__.AZURE_ARC_SECRET_FILE_MAX_SIZE_BYTES) {\n                throw (0,_error_ManagedIdentityError_mjs__WEBPACK_IMPORTED_MODULE_2__.createManagedIdentityError)(_error_ManagedIdentityErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_6__.invalidSecret);\n            }\n            // attempt to read the contents of the secret file\n            let secret;\n            try {\n                secret = (0,fs__WEBPACK_IMPORTED_MODULE_4__.readFileSync)(secretFilePath, \"utf-8\");\n            }\n            catch (e) {\n                throw (0,_error_ManagedIdentityError_mjs__WEBPACK_IMPORTED_MODULE_2__.createManagedIdentityError)(_error_ManagedIdentityErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_6__.unableToReadSecretFile);\n            }\n            const authHeaderValue = `Basic ${secret}`;\n            this.logger.info(`[Managed Identity] Adding authorization header to the request.`);\n            networkRequest.headers[_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_3__.AUTHORIZATION_HEADER_NAME] = authHeaderValue;\n            try {\n                retryResponse =\n                    await networkClient.sendGetRequestAsync(networkRequest.computeUri(), networkRequestOptions);\n            }\n            catch (error) {\n                if (error instanceof _azure_msal_common__WEBPACK_IMPORTED_MODULE_8__.AuthError) {\n                    throw error;\n                }\n                else {\n                    throw (0,_azure_msal_common__WEBPACK_IMPORTED_MODULE_9__.createClientAuthError)(_azure_msal_common__WEBPACK_IMPORTED_MODULE_10__.networkError);\n                }\n            }\n        }\n        return this.getServerTokenResponse(retryResponse || originalResponse);\n    }\n}\n\n\n//# sourceMappingURL=AzureArc.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/msal-node/dist/client/ManagedIdentitySources/AzureArc.mjs\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/msal-node/dist/client/ManagedIdentitySources/BaseManagedIdentitySource.mjs":
/*!********************************************************************************************************!*\
  !*** ./node_modules/@azure/msal-node/dist/client/ManagedIdentitySources/BaseManagedIdentitySource.mjs ***!
  \********************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   BaseManagedIdentitySource: () => (/* binding */ BaseManagedIdentitySource),\n/* harmony export */   ManagedIdentityUserAssignedIdQueryParameterNames: () => (/* binding */ ManagedIdentityUserAssignedIdQueryParameterNames)\n/* harmony export */ });\n/* harmony import */ var _azure_msal_common__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @azure/msal-common */ \"(rsc)/./node_modules/@azure/msal-common/dist/utils/TimeUtils.mjs\");\n/* harmony import */ var _azure_msal_common__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @azure/msal-common */ \"(rsc)/./node_modules/@azure/msal-common/dist/utils/Constants.mjs\");\n/* harmony import */ var _azure_msal_common__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @azure/msal-common */ \"(rsc)/./node_modules/@azure/msal-common/dist/error/AuthError.mjs\");\n/* harmony import */ var _azure_msal_common__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @azure/msal-common */ \"(rsc)/./node_modules/@azure/msal-common/dist/error/ClientAuthError.mjs\");\n/* harmony import */ var _azure_msal_common__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @azure/msal-common */ \"(rsc)/./node_modules/@azure/msal-common/dist/error/ClientAuthErrorCodes.mjs\");\n/* harmony import */ var _azure_msal_common__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @azure/msal-common */ \"(rsc)/./node_modules/@azure/msal-common/dist/response/ResponseHandler.mjs\");\n/* harmony import */ var _azure_msal_common__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @azure/msal-common */ \"(rsc)/./node_modules/@azure/msal-common/dist/url/UrlString.mjs\");\n/* harmony import */ var _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/Constants.mjs */ \"(rsc)/./node_modules/@azure/msal-node/dist/utils/Constants.mjs\");\n/* harmony import */ var _error_ManagedIdentityError_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../error/ManagedIdentityError.mjs */ \"(rsc)/./node_modules/@azure/msal-node/dist/error/ManagedIdentityError.mjs\");\n/* harmony import */ var _error_ManagedIdentityErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../error/ManagedIdentityErrorCodes.mjs */ \"(rsc)/./node_modules/@azure/msal-node/dist/error/ManagedIdentityErrorCodes.mjs\");\n/*! @azure/msal-node v2.12.0 2024-07-23 */\n\n\n\n\n\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n/**\n * Managed Identity User Assigned Id Query Parameter Names\n */\nconst ManagedIdentityUserAssignedIdQueryParameterNames = {\n    MANAGED_IDENTITY_CLIENT_ID: \"client_id\",\n    MANAGED_IDENTITY_OBJECT_ID: \"object_id\",\n    MANAGED_IDENTITY_RESOURCE_ID: \"mi_res_id\",\n};\nclass BaseManagedIdentitySource {\n    constructor(logger, nodeStorage, networkClient, cryptoProvider) {\n        this.logger = logger;\n        this.nodeStorage = nodeStorage;\n        this.networkClient = networkClient;\n        this.cryptoProvider = cryptoProvider;\n    }\n    async getServerTokenResponseAsync(response, \n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    _networkClient, \n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    _networkRequest, \n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    _networkRequestOptions) {\n        return this.getServerTokenResponse(response);\n    }\n    getServerTokenResponse(response) {\n        let refreshIn, expiresIn;\n        if (response.body.expires_on) {\n            expiresIn = response.body.expires_on - _azure_msal_common__WEBPACK_IMPORTED_MODULE_3__.nowSeconds();\n            // compute refresh_in as 1/2 of expires_in, but only if expires_in > 2h\n            if (expiresIn > 2 * 3600) {\n                refreshIn = expiresIn / 2;\n            }\n        }\n        const serverTokenResponse = {\n            status: response.status,\n            // success\n            access_token: response.body.access_token,\n            expires_in: expiresIn,\n            scope: response.body.resource,\n            token_type: response.body.token_type,\n            refresh_in: refreshIn,\n            // error\n            correlation_id: response.body.correlation_id || response.body.correlationId,\n            error: typeof response.body.error === \"string\"\n                ? response.body.error\n                : response.body.error?.code,\n            error_description: response.body.message ||\n                (typeof response.body.error === \"string\"\n                    ? response.body.error_description\n                    : response.body.error?.message),\n            error_codes: response.body.error_codes,\n            timestamp: response.body.timestamp,\n            trace_id: response.body.trace_id,\n        };\n        return serverTokenResponse;\n    }\n    async acquireTokenWithManagedIdentity(managedIdentityRequest, managedIdentityId, fakeAuthority, refreshAccessToken) {\n        const networkRequest = this.createRequest(managedIdentityRequest.resource, managedIdentityId);\n        const headers = networkRequest.headers;\n        headers[_azure_msal_common__WEBPACK_IMPORTED_MODULE_4__.HeaderNames.CONTENT_TYPE] = _azure_msal_common__WEBPACK_IMPORTED_MODULE_4__.Constants.URL_FORM_CONTENT_TYPE;\n        const networkRequestOptions = { headers };\n        if (Object.keys(networkRequest.bodyParameters).length) {\n            networkRequestOptions.body =\n                networkRequest.computeParametersBodyString();\n        }\n        const reqTimestamp = _azure_msal_common__WEBPACK_IMPORTED_MODULE_3__.nowSeconds();\n        let response;\n        try {\n            // Sources that send POST requests: Cloud Shell\n            if (networkRequest.httpMethod === _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.HttpMethod.POST) {\n                response =\n                    await this.networkClient.sendPostRequestAsync(networkRequest.computeUri(), networkRequestOptions);\n                // Sources that send GET requests: App Service, Azure Arc, IMDS, Service Fabric\n            }\n            else {\n                response =\n                    await this.networkClient.sendGetRequestAsync(networkRequest.computeUri(), networkRequestOptions);\n            }\n        }\n        catch (error) {\n            if (error instanceof _azure_msal_common__WEBPACK_IMPORTED_MODULE_5__.AuthError) {\n                throw error;\n            }\n            else {\n                throw (0,_azure_msal_common__WEBPACK_IMPORTED_MODULE_6__.createClientAuthError)(_azure_msal_common__WEBPACK_IMPORTED_MODULE_7__.networkError);\n            }\n        }\n        const responseHandler = new _azure_msal_common__WEBPACK_IMPORTED_MODULE_8__.ResponseHandler(managedIdentityId.id, this.nodeStorage, this.cryptoProvider, this.logger, null, null);\n        const serverTokenResponse = await this.getServerTokenResponseAsync(response, this.networkClient, networkRequest, networkRequestOptions);\n        responseHandler.validateTokenResponse(serverTokenResponse, refreshAccessToken);\n        // caches the token\n        return responseHandler.handleServerTokenResponse(serverTokenResponse, fakeAuthority, reqTimestamp, managedIdentityRequest);\n    }\n    getManagedIdentityUserAssignedIdQueryParameterKey(managedIdentityIdType) {\n        switch (managedIdentityIdType) {\n            case _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.ManagedIdentityIdType.USER_ASSIGNED_CLIENT_ID:\n                this.logger.info(\"[Managed Identity] Adding user assigned client id to the request.\");\n                return ManagedIdentityUserAssignedIdQueryParameterNames.MANAGED_IDENTITY_CLIENT_ID;\n            case _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.ManagedIdentityIdType.USER_ASSIGNED_RESOURCE_ID:\n                this.logger.info(\"[Managed Identity] Adding user assigned resource id to the request.\");\n                return ManagedIdentityUserAssignedIdQueryParameterNames.MANAGED_IDENTITY_RESOURCE_ID;\n            case _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.ManagedIdentityIdType.USER_ASSIGNED_OBJECT_ID:\n                this.logger.info(\"[Managed Identity] Adding user assigned object id to the request.\");\n                return ManagedIdentityUserAssignedIdQueryParameterNames.MANAGED_IDENTITY_OBJECT_ID;\n            default:\n                throw (0,_error_ManagedIdentityError_mjs__WEBPACK_IMPORTED_MODULE_1__.createManagedIdentityError)(_error_ManagedIdentityErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_2__.invalidManagedIdentityIdType);\n        }\n    }\n}\nBaseManagedIdentitySource.getValidatedEnvVariableUrlString = (envVariableStringName, envVariable, sourceName, logger) => {\n    try {\n        return new _azure_msal_common__WEBPACK_IMPORTED_MODULE_9__.UrlString(envVariable).urlString;\n    }\n    catch (error) {\n        logger.info(`[Managed Identity] ${sourceName} managed identity is unavailable because the '${envVariableStringName}' environment variable is malformed.`);\n        throw (0,_error_ManagedIdentityError_mjs__WEBPACK_IMPORTED_MODULE_1__.createManagedIdentityError)(_error_ManagedIdentityErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_2__.MsiEnvironmentVariableUrlMalformedErrorCodes[envVariableStringName]);\n    }\n};\n\n\n//# sourceMappingURL=BaseManagedIdentitySource.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtbm9kZS9kaXN0L2NsaWVudC9NYW5hZ2VkSWRlbnRpdHlTb3VyY2VzL0Jhc2VNYW5hZ2VkSWRlbnRpdHlTb3VyY2UubWpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7OztBQUFBO0FBQ2E7QUFDOEk7QUFDN0U7QUFDSTtBQUNxRDs7QUFFdkk7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxtREFBbUQsMERBQW9CO0FBQ3ZFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0JBQWdCLDJEQUFXLGlCQUFpQix5REFBUztBQUNyRCx3Q0FBd0M7QUFDeEM7QUFDQTtBQUNBO0FBQ0E7QUFDQSw2QkFBNkIsMERBQW9CO0FBQ2pEO0FBQ0E7QUFDQTtBQUNBLDhDQUE4Qyw0REFBVTtBQUN4RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlDQUFpQyx5REFBUztBQUMxQztBQUNBO0FBQ0E7QUFDQSxzQkFBc0IseUVBQXFCLENBQUMsNERBQWlDO0FBQzdFO0FBQ0E7QUFDQSxvQ0FBb0MsK0RBQWU7QUFDbkQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUIsdUVBQXFCO0FBQ3RDO0FBQ0E7QUFDQSxpQkFBaUIsdUVBQXFCO0FBQ3RDO0FBQ0E7QUFDQSxpQkFBaUIsdUVBQXFCO0FBQ3RDO0FBQ0E7QUFDQTtBQUNBLHNCQUFzQiwyRkFBMEIsQ0FBQyw4RkFBNEI7QUFDN0U7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG1CQUFtQix5REFBUztBQUM1QjtBQUNBO0FBQ0EsMENBQTBDLFlBQVksK0NBQStDLHNCQUFzQjtBQUMzSCxjQUFjLDJGQUEwQixDQUFDLDhHQUE0QztBQUNyRjtBQUNBOztBQUV1RjtBQUN2RiIsInNvdXJjZXMiOlsid2VicGFjazovL2RhbmllbDMtdnAyLy4vbm9kZV9tb2R1bGVzL0BhenVyZS9tc2FsLW5vZGUvZGlzdC9jbGllbnQvTWFuYWdlZElkZW50aXR5U291cmNlcy9CYXNlTWFuYWdlZElkZW50aXR5U291cmNlLm1qcz80NmI0Il0sInNvdXJjZXNDb250ZW50IjpbIi8qISBAYXp1cmUvbXNhbC1ub2RlIHYyLjEyLjAgMjAyNC0wNy0yMyAqL1xuJ3VzZSBzdHJpY3QnO1xuaW1wb3J0IHsgVGltZVV0aWxzLCBIZWFkZXJOYW1lcywgQ29uc3RhbnRzLCBBdXRoRXJyb3IsIGNyZWF0ZUNsaWVudEF1dGhFcnJvciwgQ2xpZW50QXV0aEVycm9yQ29kZXMsIFJlc3BvbnNlSGFuZGxlciwgVXJsU3RyaW5nIH0gZnJvbSAnQGF6dXJlL21zYWwtY29tbW9uJztcbmltcG9ydCB7IEh0dHBNZXRob2QsIE1hbmFnZWRJZGVudGl0eUlkVHlwZSB9IGZyb20gJy4uLy4uL3V0aWxzL0NvbnN0YW50cy5tanMnO1xuaW1wb3J0IHsgY3JlYXRlTWFuYWdlZElkZW50aXR5RXJyb3IgfSBmcm9tICcuLi8uLi9lcnJvci9NYW5hZ2VkSWRlbnRpdHlFcnJvci5tanMnO1xuaW1wb3J0IHsgaW52YWxpZE1hbmFnZWRJZGVudGl0eUlkVHlwZSwgTXNpRW52aXJvbm1lbnRWYXJpYWJsZVVybE1hbGZvcm1lZEVycm9yQ29kZXMgfSBmcm9tICcuLi8uLi9lcnJvci9NYW5hZ2VkSWRlbnRpdHlFcnJvckNvZGVzLm1qcyc7XG5cbi8qXG4gKiBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi4gQWxsIHJpZ2h0cyByZXNlcnZlZC5cbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgTGljZW5zZS5cbiAqL1xuLyoqXG4gKiBNYW5hZ2VkIElkZW50aXR5IFVzZXIgQXNzaWduZWQgSWQgUXVlcnkgUGFyYW1ldGVyIE5hbWVzXG4gKi9cbmNvbnN0IE1hbmFnZWRJZGVudGl0eVVzZXJBc3NpZ25lZElkUXVlcnlQYXJhbWV0ZXJOYW1lcyA9IHtcbiAgICBNQU5BR0VEX0lERU5USVRZX0NMSUVOVF9JRDogXCJjbGllbnRfaWRcIixcbiAgICBNQU5BR0VEX0lERU5USVRZX09CSkVDVF9JRDogXCJvYmplY3RfaWRcIixcbiAgICBNQU5BR0VEX0lERU5USVRZX1JFU09VUkNFX0lEOiBcIm1pX3Jlc19pZFwiLFxufTtcbmNsYXNzIEJhc2VNYW5hZ2VkSWRlbnRpdHlTb3VyY2Uge1xuICAgIGNvbnN0cnVjdG9yKGxvZ2dlciwgbm9kZVN0b3JhZ2UsIG5ldHdvcmtDbGllbnQsIGNyeXB0b1Byb3ZpZGVyKSB7XG4gICAgICAgIHRoaXMubG9nZ2VyID0gbG9nZ2VyO1xuICAgICAgICB0aGlzLm5vZGVTdG9yYWdlID0gbm9kZVN0b3JhZ2U7XG4gICAgICAgIHRoaXMubmV0d29ya0NsaWVudCA9IG5ldHdvcmtDbGllbnQ7XG4gICAgICAgIHRoaXMuY3J5cHRvUHJvdmlkZXIgPSBjcnlwdG9Qcm92aWRlcjtcbiAgICB9XG4gICAgYXN5bmMgZ2V0U2VydmVyVG9rZW5SZXNwb25zZUFzeW5jKHJlc3BvbnNlLCBcbiAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgQHR5cGVzY3JpcHQtZXNsaW50L25vLXVudXNlZC12YXJzXG4gICAgX25ldHdvcmtDbGllbnQsIFxuICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBAdHlwZXNjcmlwdC1lc2xpbnQvbm8tdW51c2VkLXZhcnNcbiAgICBfbmV0d29ya1JlcXVlc3QsIFxuICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBAdHlwZXNjcmlwdC1lc2xpbnQvbm8tdW51c2VkLXZhcnNcbiAgICBfbmV0d29ya1JlcXVlc3RPcHRpb25zKSB7XG4gICAgICAgIHJldHVybiB0aGlzLmdldFNlcnZlclRva2VuUmVzcG9uc2UocmVzcG9uc2UpO1xuICAgIH1cbiAgICBnZXRTZXJ2ZXJUb2tlblJlc3BvbnNlKHJlc3BvbnNlKSB7XG4gICAgICAgIGxldCByZWZyZXNoSW4sIGV4cGlyZXNJbjtcbiAgICAgICAgaWYgKHJlc3BvbnNlLmJvZHkuZXhwaXJlc19vbikge1xuICAgICAgICAgICAgZXhwaXJlc0luID0gcmVzcG9uc2UuYm9keS5leHBpcmVzX29uIC0gVGltZVV0aWxzLm5vd1NlY29uZHMoKTtcbiAgICAgICAgICAgIC8vIGNvbXB1dGUgcmVmcmVzaF9pbiBhcyAxLzIgb2YgZXhwaXJlc19pbiwgYnV0IG9ubHkgaWYgZXhwaXJlc19pbiA+IDJoXG4gICAgICAgICAgICBpZiAoZXhwaXJlc0luID4gMiAqIDM2MDApIHtcbiAgICAgICAgICAgICAgICByZWZyZXNoSW4gPSBleHBpcmVzSW4gLyAyO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIGNvbnN0IHNlcnZlclRva2VuUmVzcG9uc2UgPSB7XG4gICAgICAgICAgICBzdGF0dXM6IHJlc3BvbnNlLnN0YXR1cyxcbiAgICAgICAgICAgIC8vIHN1Y2Nlc3NcbiAgICAgICAgICAgIGFjY2Vzc190b2tlbjogcmVzcG9uc2UuYm9keS5hY2Nlc3NfdG9rZW4sXG4gICAgICAgICAgICBleHBpcmVzX2luOiBleHBpcmVzSW4sXG4gICAgICAgICAgICBzY29wZTogcmVzcG9uc2UuYm9keS5yZXNvdXJjZSxcbiAgICAgICAgICAgIHRva2VuX3R5cGU6IHJlc3BvbnNlLmJvZHkudG9rZW5fdHlwZSxcbiAgICAgICAgICAgIHJlZnJlc2hfaW46IHJlZnJlc2hJbixcbiAgICAgICAgICAgIC8vIGVycm9yXG4gICAgICAgICAgICBjb3JyZWxhdGlvbl9pZDogcmVzcG9uc2UuYm9keS5jb3JyZWxhdGlvbl9pZCB8fCByZXNwb25zZS5ib2R5LmNvcnJlbGF0aW9uSWQsXG4gICAgICAgICAgICBlcnJvcjogdHlwZW9mIHJlc3BvbnNlLmJvZHkuZXJyb3IgPT09IFwic3RyaW5nXCJcbiAgICAgICAgICAgICAgICA/IHJlc3BvbnNlLmJvZHkuZXJyb3JcbiAgICAgICAgICAgICAgICA6IHJlc3BvbnNlLmJvZHkuZXJyb3I/LmNvZGUsXG4gICAgICAgICAgICBlcnJvcl9kZXNjcmlwdGlvbjogcmVzcG9uc2UuYm9keS5tZXNzYWdlIHx8XG4gICAgICAgICAgICAgICAgKHR5cGVvZiByZXNwb25zZS5ib2R5LmVycm9yID09PSBcInN0cmluZ1wiXG4gICAgICAgICAgICAgICAgICAgID8gcmVzcG9uc2UuYm9keS5lcnJvcl9kZXNjcmlwdGlvblxuICAgICAgICAgICAgICAgICAgICA6IHJlc3BvbnNlLmJvZHkuZXJyb3I/Lm1lc3NhZ2UpLFxuICAgICAgICAgICAgZXJyb3JfY29kZXM6IHJlc3BvbnNlLmJvZHkuZXJyb3JfY29kZXMsXG4gICAgICAgICAgICB0aW1lc3RhbXA6IHJlc3BvbnNlLmJvZHkudGltZXN0YW1wLFxuICAgICAgICAgICAgdHJhY2VfaWQ6IHJlc3BvbnNlLmJvZHkudHJhY2VfaWQsXG4gICAgICAgIH07XG4gICAgICAgIHJldHVybiBzZXJ2ZXJUb2tlblJlc3BvbnNlO1xuICAgIH1cbiAgICBhc3luYyBhY3F1aXJlVG9rZW5XaXRoTWFuYWdlZElkZW50aXR5KG1hbmFnZWRJZGVudGl0eVJlcXVlc3QsIG1hbmFnZWRJZGVudGl0eUlkLCBmYWtlQXV0aG9yaXR5LCByZWZyZXNoQWNjZXNzVG9rZW4pIHtcbiAgICAgICAgY29uc3QgbmV0d29ya1JlcXVlc3QgPSB0aGlzLmNyZWF0ZVJlcXVlc3QobWFuYWdlZElkZW50aXR5UmVxdWVzdC5yZXNvdXJjZSwgbWFuYWdlZElkZW50aXR5SWQpO1xuICAgICAgICBjb25zdCBoZWFkZXJzID0gbmV0d29ya1JlcXVlc3QuaGVhZGVycztcbiAgICAgICAgaGVhZGVyc1tIZWFkZXJOYW1lcy5DT05URU5UX1RZUEVdID0gQ29uc3RhbnRzLlVSTF9GT1JNX0NPTlRFTlRfVFlQRTtcbiAgICAgICAgY29uc3QgbmV0d29ya1JlcXVlc3RPcHRpb25zID0geyBoZWFkZXJzIH07XG4gICAgICAgIGlmIChPYmplY3Qua2V5cyhuZXR3b3JrUmVxdWVzdC5ib2R5UGFyYW1ldGVycykubGVuZ3RoKSB7XG4gICAgICAgICAgICBuZXR3b3JrUmVxdWVzdE9wdGlvbnMuYm9keSA9XG4gICAgICAgICAgICAgICAgbmV0d29ya1JlcXVlc3QuY29tcHV0ZVBhcmFtZXRlcnNCb2R5U3RyaW5nKCk7XG4gICAgICAgIH1cbiAgICAgICAgY29uc3QgcmVxVGltZXN0YW1wID0gVGltZVV0aWxzLm5vd1NlY29uZHMoKTtcbiAgICAgICAgbGV0IHJlc3BvbnNlO1xuICAgICAgICB0cnkge1xuICAgICAgICAgICAgLy8gU291cmNlcyB0aGF0IHNlbmQgUE9TVCByZXF1ZXN0czogQ2xvdWQgU2hlbGxcbiAgICAgICAgICAgIGlmIChuZXR3b3JrUmVxdWVzdC5odHRwTWV0aG9kID09PSBIdHRwTWV0aG9kLlBPU1QpIHtcbiAgICAgICAgICAgICAgICByZXNwb25zZSA9XG4gICAgICAgICAgICAgICAgICAgIGF3YWl0IHRoaXMubmV0d29ya0NsaWVudC5zZW5kUG9zdFJlcXVlc3RBc3luYyhuZXR3b3JrUmVxdWVzdC5jb21wdXRlVXJpKCksIG5ldHdvcmtSZXF1ZXN0T3B0aW9ucyk7XG4gICAgICAgICAgICAgICAgLy8gU291cmNlcyB0aGF0IHNlbmQgR0VUIHJlcXVlc3RzOiBBcHAgU2VydmljZSwgQXp1cmUgQXJjLCBJTURTLCBTZXJ2aWNlIEZhYnJpY1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgcmVzcG9uc2UgPVxuICAgICAgICAgICAgICAgICAgICBhd2FpdCB0aGlzLm5ldHdvcmtDbGllbnQuc2VuZEdldFJlcXVlc3RBc3luYyhuZXR3b3JrUmVxdWVzdC5jb21wdXRlVXJpKCksIG5ldHdvcmtSZXF1ZXN0T3B0aW9ucyk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgY2F0Y2ggKGVycm9yKSB7XG4gICAgICAgICAgICBpZiAoZXJyb3IgaW5zdGFuY2VvZiBBdXRoRXJyb3IpIHtcbiAgICAgICAgICAgICAgICB0aHJvdyBlcnJvcjtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgIHRocm93IGNyZWF0ZUNsaWVudEF1dGhFcnJvcihDbGllbnRBdXRoRXJyb3JDb2Rlcy5uZXR3b3JrRXJyb3IpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIGNvbnN0IHJlc3BvbnNlSGFuZGxlciA9IG5ldyBSZXNwb25zZUhhbmRsZXIobWFuYWdlZElkZW50aXR5SWQuaWQsIHRoaXMubm9kZVN0b3JhZ2UsIHRoaXMuY3J5cHRvUHJvdmlkZXIsIHRoaXMubG9nZ2VyLCBudWxsLCBudWxsKTtcbiAgICAgICAgY29uc3Qgc2VydmVyVG9rZW5SZXNwb25zZSA9IGF3YWl0IHRoaXMuZ2V0U2VydmVyVG9rZW5SZXNwb25zZUFzeW5jKHJlc3BvbnNlLCB0aGlzLm5ldHdvcmtDbGllbnQsIG5ldHdvcmtSZXF1ZXN0LCBuZXR3b3JrUmVxdWVzdE9wdGlvbnMpO1xuICAgICAgICByZXNwb25zZUhhbmRsZXIudmFsaWRhdGVUb2tlblJlc3BvbnNlKHNlcnZlclRva2VuUmVzcG9uc2UsIHJlZnJlc2hBY2Nlc3NUb2tlbik7XG4gICAgICAgIC8vIGNhY2hlcyB0aGUgdG9rZW5cbiAgICAgICAgcmV0dXJuIHJlc3BvbnNlSGFuZGxlci5oYW5kbGVTZXJ2ZXJUb2tlblJlc3BvbnNlKHNlcnZlclRva2VuUmVzcG9uc2UsIGZha2VBdXRob3JpdHksIHJlcVRpbWVzdGFtcCwgbWFuYWdlZElkZW50aXR5UmVxdWVzdCk7XG4gICAgfVxuICAgIGdldE1hbmFnZWRJZGVudGl0eVVzZXJBc3NpZ25lZElkUXVlcnlQYXJhbWV0ZXJLZXkobWFuYWdlZElkZW50aXR5SWRUeXBlKSB7XG4gICAgICAgIHN3aXRjaCAobWFuYWdlZElkZW50aXR5SWRUeXBlKSB7XG4gICAgICAgICAgICBjYXNlIE1hbmFnZWRJZGVudGl0eUlkVHlwZS5VU0VSX0FTU0lHTkVEX0NMSUVOVF9JRDpcbiAgICAgICAgICAgICAgICB0aGlzLmxvZ2dlci5pbmZvKFwiW01hbmFnZWQgSWRlbnRpdHldIEFkZGluZyB1c2VyIGFzc2lnbmVkIGNsaWVudCBpZCB0byB0aGUgcmVxdWVzdC5cIik7XG4gICAgICAgICAgICAgICAgcmV0dXJuIE1hbmFnZWRJZGVudGl0eVVzZXJBc3NpZ25lZElkUXVlcnlQYXJhbWV0ZXJOYW1lcy5NQU5BR0VEX0lERU5USVRZX0NMSUVOVF9JRDtcbiAgICAgICAgICAgIGNhc2UgTWFuYWdlZElkZW50aXR5SWRUeXBlLlVTRVJfQVNTSUdORURfUkVTT1VSQ0VfSUQ6XG4gICAgICAgICAgICAgICAgdGhpcy5sb2dnZXIuaW5mbyhcIltNYW5hZ2VkIElkZW50aXR5XSBBZGRpbmcgdXNlciBhc3NpZ25lZCByZXNvdXJjZSBpZCB0byB0aGUgcmVxdWVzdC5cIik7XG4gICAgICAgICAgICAgICAgcmV0dXJuIE1hbmFnZWRJZGVudGl0eVVzZXJBc3NpZ25lZElkUXVlcnlQYXJhbWV0ZXJOYW1lcy5NQU5BR0VEX0lERU5USVRZX1JFU09VUkNFX0lEO1xuICAgICAgICAgICAgY2FzZSBNYW5hZ2VkSWRlbnRpdHlJZFR5cGUuVVNFUl9BU1NJR05FRF9PQkpFQ1RfSUQ6XG4gICAgICAgICAgICAgICAgdGhpcy5sb2dnZXIuaW5mbyhcIltNYW5hZ2VkIElkZW50aXR5XSBBZGRpbmcgdXNlciBhc3NpZ25lZCBvYmplY3QgaWQgdG8gdGhlIHJlcXVlc3QuXCIpO1xuICAgICAgICAgICAgICAgIHJldHVybiBNYW5hZ2VkSWRlbnRpdHlVc2VyQXNzaWduZWRJZFF1ZXJ5UGFyYW1ldGVyTmFtZXMuTUFOQUdFRF9JREVOVElUWV9PQkpFQ1RfSUQ7XG4gICAgICAgICAgICBkZWZhdWx0OlxuICAgICAgICAgICAgICAgIHRocm93IGNyZWF0ZU1hbmFnZWRJZGVudGl0eUVycm9yKGludmFsaWRNYW5hZ2VkSWRlbnRpdHlJZFR5cGUpO1xuICAgICAgICB9XG4gICAgfVxufVxuQmFzZU1hbmFnZWRJZGVudGl0eVNvdXJjZS5nZXRWYWxpZGF0ZWRFbnZWYXJpYWJsZVVybFN0cmluZyA9IChlbnZWYXJpYWJsZVN0cmluZ05hbWUsIGVudlZhcmlhYmxlLCBzb3VyY2VOYW1lLCBsb2dnZXIpID0+IHtcbiAgICB0cnkge1xuICAgICAgICByZXR1cm4gbmV3IFVybFN0cmluZyhlbnZWYXJpYWJsZSkudXJsU3RyaW5nO1xuICAgIH1cbiAgICBjYXRjaCAoZXJyb3IpIHtcbiAgICAgICAgbG9nZ2VyLmluZm8oYFtNYW5hZ2VkIElkZW50aXR5XSAke3NvdXJjZU5hbWV9IG1hbmFnZWQgaWRlbnRpdHkgaXMgdW5hdmFpbGFibGUgYmVjYXVzZSB0aGUgJyR7ZW52VmFyaWFibGVTdHJpbmdOYW1lfScgZW52aXJvbm1lbnQgdmFyaWFibGUgaXMgbWFsZm9ybWVkLmApO1xuICAgICAgICB0aHJvdyBjcmVhdGVNYW5hZ2VkSWRlbnRpdHlFcnJvcihNc2lFbnZpcm9ubWVudFZhcmlhYmxlVXJsTWFsZm9ybWVkRXJyb3JDb2Rlc1tlbnZWYXJpYWJsZVN0cmluZ05hbWVdKTtcbiAgICB9XG59O1xuXG5leHBvcnQgeyBCYXNlTWFuYWdlZElkZW50aXR5U291cmNlLCBNYW5hZ2VkSWRlbnRpdHlVc2VyQXNzaWduZWRJZFF1ZXJ5UGFyYW1ldGVyTmFtZXMgfTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPUJhc2VNYW5hZ2VkSWRlbnRpdHlTb3VyY2UubWpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/msal-node/dist/client/ManagedIdentitySources/BaseManagedIdentitySource.mjs\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/msal-node/dist/client/ManagedIdentitySources/CloudShell.mjs":
/*!*****************************************************************************************!*\
  !*** ./node_modules/@azure/msal-node/dist/client/ManagedIdentitySources/CloudShell.mjs ***!
  \*****************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   CloudShell: () => (/* binding */ CloudShell)\n/* harmony export */ });\n/* harmony import */ var _config_ManagedIdentityRequestParameters_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../config/ManagedIdentityRequestParameters.mjs */ \"(rsc)/./node_modules/@azure/msal-node/dist/config/ManagedIdentityRequestParameters.mjs\");\n/* harmony import */ var _BaseManagedIdentitySource_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./BaseManagedIdentitySource.mjs */ \"(rsc)/./node_modules/@azure/msal-node/dist/client/ManagedIdentitySources/BaseManagedIdentitySource.mjs\");\n/* harmony import */ var _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../utils/Constants.mjs */ \"(rsc)/./node_modules/@azure/msal-node/dist/utils/Constants.mjs\");\n/* harmony import */ var _error_ManagedIdentityError_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../error/ManagedIdentityError.mjs */ \"(rsc)/./node_modules/@azure/msal-node/dist/error/ManagedIdentityError.mjs\");\n/* harmony import */ var _error_ManagedIdentityErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../error/ManagedIdentityErrorCodes.mjs */ \"(rsc)/./node_modules/@azure/msal-node/dist/error/ManagedIdentityErrorCodes.mjs\");\n/*! @azure/msal-node v2.12.0 2024-07-23 */\n\n\n\n\n\n\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n/**\n * Original source of code: https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/identity/Azure.Identity/src/CloudShellManagedIdentitySource.cs\n */\nclass CloudShell extends _BaseManagedIdentitySource_mjs__WEBPACK_IMPORTED_MODULE_1__.BaseManagedIdentitySource {\n    constructor(logger, nodeStorage, networkClient, cryptoProvider, msiEndpoint) {\n        super(logger, nodeStorage, networkClient, cryptoProvider);\n        this.msiEndpoint = msiEndpoint;\n    }\n    static getEnvironmentVariables() {\n        const msiEndpoint = process.env[_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_2__.ManagedIdentityEnvironmentVariableNames.MSI_ENDPOINT];\n        return [msiEndpoint];\n    }\n    static tryCreate(logger, nodeStorage, networkClient, cryptoProvider, managedIdentityId) {\n        const [msiEndpoint] = CloudShell.getEnvironmentVariables();\n        // if the msi endpoint environment variable is undefined, this MSI provider is unavailable.\n        if (!msiEndpoint) {\n            logger.info(`[Managed Identity] ${_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_2__.ManagedIdentitySourceNames.CLOUD_SHELL} managed identity is unavailable because the '${_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_2__.ManagedIdentityEnvironmentVariableNames.MSI_ENDPOINT} environment variable is not defined.`);\n            return null;\n        }\n        const validatedMsiEndpoint = CloudShell.getValidatedEnvVariableUrlString(_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_2__.ManagedIdentityEnvironmentVariableNames.MSI_ENDPOINT, msiEndpoint, _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_2__.ManagedIdentitySourceNames.CLOUD_SHELL, logger);\n        logger.info(`[Managed Identity] Environment variable validation passed for ${_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_2__.ManagedIdentitySourceNames.CLOUD_SHELL} managed identity. Endpoint URI: ${validatedMsiEndpoint}. Creating ${_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_2__.ManagedIdentitySourceNames.CLOUD_SHELL} managed identity.`);\n        if (managedIdentityId.idType !== _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_2__.ManagedIdentityIdType.SYSTEM_ASSIGNED) {\n            throw (0,_error_ManagedIdentityError_mjs__WEBPACK_IMPORTED_MODULE_3__.createManagedIdentityError)(_error_ManagedIdentityErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_4__.unableToCreateCloudShell);\n        }\n        return new CloudShell(logger, nodeStorage, networkClient, cryptoProvider, msiEndpoint);\n    }\n    createRequest(resource) {\n        const request = new _config_ManagedIdentityRequestParameters_mjs__WEBPACK_IMPORTED_MODULE_0__.ManagedIdentityRequestParameters(_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_2__.HttpMethod.POST, this.msiEndpoint);\n        request.headers[_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_2__.METADATA_HEADER_NAME] = \"true\";\n        request.bodyParameters[_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_2__.RESOURCE_BODY_OR_QUERY_PARAMETER_NAME] =\n            resource;\n        return request;\n    }\n}\n\n\n//# sourceMappingURL=CloudShell.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtbm9kZS9kaXN0L2NsaWVudC9NYW5hZ2VkSWRlbnRpdHlTb3VyY2VzL0Nsb3VkU2hlbGwubWpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUFBO0FBQ2E7QUFDd0Y7QUFDekI7QUFDb0k7QUFDOUg7QUFDRzs7QUFFckY7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx5QkFBeUIscUZBQXlCO0FBQ2xEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx3Q0FBd0MseUZBQXVDO0FBQy9FO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDhDQUE4Qyw0RUFBMEIsY0FBYywrQ0FBK0MseUZBQXVDLGVBQWU7QUFDM0w7QUFDQTtBQUNBLGlGQUFpRix5RkFBdUMsNEJBQTRCLDRFQUEwQjtBQUM5SyxxRkFBcUYsNEVBQTBCLGNBQWMsa0NBQWtDLHFCQUFxQixhQUFhLDRFQUEwQixjQUFjO0FBQ3pPLHlDQUF5Qyx1RUFBcUI7QUFDOUQsa0JBQWtCLDJGQUEwQixDQUFDLDBGQUF3QjtBQUNyRTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDRCQUE0QiwwR0FBZ0MsQ0FBQyw0REFBVTtBQUN2RSx3QkFBd0Isc0VBQW9CO0FBQzVDLCtCQUErQix1RkFBcUM7QUFDcEU7QUFDQTtBQUNBO0FBQ0E7O0FBRXNCO0FBQ3RCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZGFuaWVsMy12cDIvLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtbm9kZS9kaXN0L2NsaWVudC9NYW5hZ2VkSWRlbnRpdHlTb3VyY2VzL0Nsb3VkU2hlbGwubWpzPzRlZTAiXSwic291cmNlc0NvbnRlbnQiOlsiLyohIEBhenVyZS9tc2FsLW5vZGUgdjIuMTIuMCAyMDI0LTA3LTIzICovXG4ndXNlIHN0cmljdCc7XG5pbXBvcnQgeyBNYW5hZ2VkSWRlbnRpdHlSZXF1ZXN0UGFyYW1ldGVycyB9IGZyb20gJy4uLy4uL2NvbmZpZy9NYW5hZ2VkSWRlbnRpdHlSZXF1ZXN0UGFyYW1ldGVycy5tanMnO1xuaW1wb3J0IHsgQmFzZU1hbmFnZWRJZGVudGl0eVNvdXJjZSB9IGZyb20gJy4vQmFzZU1hbmFnZWRJZGVudGl0eVNvdXJjZS5tanMnO1xuaW1wb3J0IHsgTWFuYWdlZElkZW50aXR5RW52aXJvbm1lbnRWYXJpYWJsZU5hbWVzLCBNYW5hZ2VkSWRlbnRpdHlTb3VyY2VOYW1lcywgTWFuYWdlZElkZW50aXR5SWRUeXBlLCBNRVRBREFUQV9IRUFERVJfTkFNRSwgUkVTT1VSQ0VfQk9EWV9PUl9RVUVSWV9QQVJBTUVURVJfTkFNRSwgSHR0cE1ldGhvZCB9IGZyb20gJy4uLy4uL3V0aWxzL0NvbnN0YW50cy5tanMnO1xuaW1wb3J0IHsgY3JlYXRlTWFuYWdlZElkZW50aXR5RXJyb3IgfSBmcm9tICcuLi8uLi9lcnJvci9NYW5hZ2VkSWRlbnRpdHlFcnJvci5tanMnO1xuaW1wb3J0IHsgdW5hYmxlVG9DcmVhdGVDbG91ZFNoZWxsIH0gZnJvbSAnLi4vLi4vZXJyb3IvTWFuYWdlZElkZW50aXR5RXJyb3JDb2Rlcy5tanMnO1xuXG4vKlxuICogQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uIEFsbCByaWdodHMgcmVzZXJ2ZWQuXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIExpY2Vuc2UuXG4gKi9cbi8qKlxuICogT3JpZ2luYWwgc291cmNlIG9mIGNvZGU6IGh0dHBzOi8vZ2l0aHViLmNvbS9BenVyZS9henVyZS1zZGstZm9yLW5ldC9ibG9iL21haW4vc2RrL2lkZW50aXR5L0F6dXJlLklkZW50aXR5L3NyYy9DbG91ZFNoZWxsTWFuYWdlZElkZW50aXR5U291cmNlLmNzXG4gKi9cbmNsYXNzIENsb3VkU2hlbGwgZXh0ZW5kcyBCYXNlTWFuYWdlZElkZW50aXR5U291cmNlIHtcbiAgICBjb25zdHJ1Y3Rvcihsb2dnZXIsIG5vZGVTdG9yYWdlLCBuZXR3b3JrQ2xpZW50LCBjcnlwdG9Qcm92aWRlciwgbXNpRW5kcG9pbnQpIHtcbiAgICAgICAgc3VwZXIobG9nZ2VyLCBub2RlU3RvcmFnZSwgbmV0d29ya0NsaWVudCwgY3J5cHRvUHJvdmlkZXIpO1xuICAgICAgICB0aGlzLm1zaUVuZHBvaW50ID0gbXNpRW5kcG9pbnQ7XG4gICAgfVxuICAgIHN0YXRpYyBnZXRFbnZpcm9ubWVudFZhcmlhYmxlcygpIHtcbiAgICAgICAgY29uc3QgbXNpRW5kcG9pbnQgPSBwcm9jZXNzLmVudltNYW5hZ2VkSWRlbnRpdHlFbnZpcm9ubWVudFZhcmlhYmxlTmFtZXMuTVNJX0VORFBPSU5UXTtcbiAgICAgICAgcmV0dXJuIFttc2lFbmRwb2ludF07XG4gICAgfVxuICAgIHN0YXRpYyB0cnlDcmVhdGUobG9nZ2VyLCBub2RlU3RvcmFnZSwgbmV0d29ya0NsaWVudCwgY3J5cHRvUHJvdmlkZXIsIG1hbmFnZWRJZGVudGl0eUlkKSB7XG4gICAgICAgIGNvbnN0IFttc2lFbmRwb2ludF0gPSBDbG91ZFNoZWxsLmdldEVudmlyb25tZW50VmFyaWFibGVzKCk7XG4gICAgICAgIC8vIGlmIHRoZSBtc2kgZW5kcG9pbnQgZW52aXJvbm1lbnQgdmFyaWFibGUgaXMgdW5kZWZpbmVkLCB0aGlzIE1TSSBwcm92aWRlciBpcyB1bmF2YWlsYWJsZS5cbiAgICAgICAgaWYgKCFtc2lFbmRwb2ludCkge1xuICAgICAgICAgICAgbG9nZ2VyLmluZm8oYFtNYW5hZ2VkIElkZW50aXR5XSAke01hbmFnZWRJZGVudGl0eVNvdXJjZU5hbWVzLkNMT1VEX1NIRUxMfSBtYW5hZ2VkIGlkZW50aXR5IGlzIHVuYXZhaWxhYmxlIGJlY2F1c2UgdGhlICcke01hbmFnZWRJZGVudGl0eUVudmlyb25tZW50VmFyaWFibGVOYW1lcy5NU0lfRU5EUE9JTlR9IGVudmlyb25tZW50IHZhcmlhYmxlIGlzIG5vdCBkZWZpbmVkLmApO1xuICAgICAgICAgICAgcmV0dXJuIG51bGw7XG4gICAgICAgIH1cbiAgICAgICAgY29uc3QgdmFsaWRhdGVkTXNpRW5kcG9pbnQgPSBDbG91ZFNoZWxsLmdldFZhbGlkYXRlZEVudlZhcmlhYmxlVXJsU3RyaW5nKE1hbmFnZWRJZGVudGl0eUVudmlyb25tZW50VmFyaWFibGVOYW1lcy5NU0lfRU5EUE9JTlQsIG1zaUVuZHBvaW50LCBNYW5hZ2VkSWRlbnRpdHlTb3VyY2VOYW1lcy5DTE9VRF9TSEVMTCwgbG9nZ2VyKTtcbiAgICAgICAgbG9nZ2VyLmluZm8oYFtNYW5hZ2VkIElkZW50aXR5XSBFbnZpcm9ubWVudCB2YXJpYWJsZSB2YWxpZGF0aW9uIHBhc3NlZCBmb3IgJHtNYW5hZ2VkSWRlbnRpdHlTb3VyY2VOYW1lcy5DTE9VRF9TSEVMTH0gbWFuYWdlZCBpZGVudGl0eS4gRW5kcG9pbnQgVVJJOiAke3ZhbGlkYXRlZE1zaUVuZHBvaW50fS4gQ3JlYXRpbmcgJHtNYW5hZ2VkSWRlbnRpdHlTb3VyY2VOYW1lcy5DTE9VRF9TSEVMTH0gbWFuYWdlZCBpZGVudGl0eS5gKTtcbiAgICAgICAgaWYgKG1hbmFnZWRJZGVudGl0eUlkLmlkVHlwZSAhPT0gTWFuYWdlZElkZW50aXR5SWRUeXBlLlNZU1RFTV9BU1NJR05FRCkge1xuICAgICAgICAgICAgdGhyb3cgY3JlYXRlTWFuYWdlZElkZW50aXR5RXJyb3IodW5hYmxlVG9DcmVhdGVDbG91ZFNoZWxsKTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gbmV3IENsb3VkU2hlbGwobG9nZ2VyLCBub2RlU3RvcmFnZSwgbmV0d29ya0NsaWVudCwgY3J5cHRvUHJvdmlkZXIsIG1zaUVuZHBvaW50KTtcbiAgICB9XG4gICAgY3JlYXRlUmVxdWVzdChyZXNvdXJjZSkge1xuICAgICAgICBjb25zdCByZXF1ZXN0ID0gbmV3IE1hbmFnZWRJZGVudGl0eVJlcXVlc3RQYXJhbWV0ZXJzKEh0dHBNZXRob2QuUE9TVCwgdGhpcy5tc2lFbmRwb2ludCk7XG4gICAgICAgIHJlcXVlc3QuaGVhZGVyc1tNRVRBREFUQV9IRUFERVJfTkFNRV0gPSBcInRydWVcIjtcbiAgICAgICAgcmVxdWVzdC5ib2R5UGFyYW1ldGVyc1tSRVNPVVJDRV9CT0RZX09SX1FVRVJZX1BBUkFNRVRFUl9OQU1FXSA9XG4gICAgICAgICAgICByZXNvdXJjZTtcbiAgICAgICAgcmV0dXJuIHJlcXVlc3Q7XG4gICAgfVxufVxuXG5leHBvcnQgeyBDbG91ZFNoZWxsIH07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1DbG91ZFNoZWxsLm1qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/msal-node/dist/client/ManagedIdentitySources/CloudShell.mjs\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/msal-node/dist/client/ManagedIdentitySources/Imds.mjs":
/*!***********************************************************************************!*\
  !*** ./node_modules/@azure/msal-node/dist/client/ManagedIdentitySources/Imds.mjs ***!
  \***********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Imds: () => (/* binding */ Imds)\n/* harmony export */ });\n/* harmony import */ var _config_ManagedIdentityRequestParameters_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../config/ManagedIdentityRequestParameters.mjs */ \"(rsc)/./node_modules/@azure/msal-node/dist/config/ManagedIdentityRequestParameters.mjs\");\n/* harmony import */ var _BaseManagedIdentitySource_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./BaseManagedIdentitySource.mjs */ \"(rsc)/./node_modules/@azure/msal-node/dist/client/ManagedIdentitySources/BaseManagedIdentitySource.mjs\");\n/* harmony import */ var _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../utils/Constants.mjs */ \"(rsc)/./node_modules/@azure/msal-node/dist/utils/Constants.mjs\");\n/*! @azure/msal-node v2.12.0 2024-07-23 */\n\n\n\n\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n// IMDS constants. Docs for IMDS are available here https://docs.microsoft.com/azure/active-directory/managed-identities-azure-resources/how-to-use-vm-token#get-a-token-using-http\nconst IMDS_TOKEN_PATH = \"/metadata/identity/oauth2/token\";\nconst DEFAULT_IMDS_ENDPOINT = `http://169.254.169.254${IMDS_TOKEN_PATH}`;\nconst IMDS_API_VERSION = \"2018-02-01\";\n// Original source of code: https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/identity/Azure.Identity/src/ImdsManagedIdentitySource.cs\nclass Imds extends _BaseManagedIdentitySource_mjs__WEBPACK_IMPORTED_MODULE_1__.BaseManagedIdentitySource {\n    constructor(logger, nodeStorage, networkClient, cryptoProvider, identityEndpoint) {\n        super(logger, nodeStorage, networkClient, cryptoProvider);\n        this.identityEndpoint = identityEndpoint;\n    }\n    static tryCreate(logger, nodeStorage, networkClient, cryptoProvider) {\n        let validatedIdentityEndpoint;\n        if (process.env[_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_2__.ManagedIdentityEnvironmentVariableNames\n            .AZURE_POD_IDENTITY_AUTHORITY_HOST]) {\n            logger.info(`[Managed Identity] Environment variable ${_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_2__.ManagedIdentityEnvironmentVariableNames.AZURE_POD_IDENTITY_AUTHORITY_HOST} for ${_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_2__.ManagedIdentitySourceNames.IMDS} returned endpoint: ${process.env[_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_2__.ManagedIdentityEnvironmentVariableNames\n                .AZURE_POD_IDENTITY_AUTHORITY_HOST]}`);\n            validatedIdentityEndpoint = Imds.getValidatedEnvVariableUrlString(_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_2__.ManagedIdentityEnvironmentVariableNames.AZURE_POD_IDENTITY_AUTHORITY_HOST, `${process.env[_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_2__.ManagedIdentityEnvironmentVariableNames\n                .AZURE_POD_IDENTITY_AUTHORITY_HOST]}${IMDS_TOKEN_PATH}`, _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_2__.ManagedIdentitySourceNames.IMDS, logger);\n        }\n        else {\n            logger.info(`[Managed Identity] Unable to find ${_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_2__.ManagedIdentityEnvironmentVariableNames.AZURE_POD_IDENTITY_AUTHORITY_HOST} environment variable for ${_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_2__.ManagedIdentitySourceNames.IMDS}, using the default endpoint.`);\n            validatedIdentityEndpoint = DEFAULT_IMDS_ENDPOINT;\n        }\n        return new Imds(logger, nodeStorage, networkClient, cryptoProvider, validatedIdentityEndpoint);\n    }\n    createRequest(resource, managedIdentityId) {\n        const request = new _config_ManagedIdentityRequestParameters_mjs__WEBPACK_IMPORTED_MODULE_0__.ManagedIdentityRequestParameters(_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_2__.HttpMethod.GET, this.identityEndpoint);\n        request.headers[_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_2__.METADATA_HEADER_NAME] = \"true\";\n        request.queryParameters[_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_2__.API_VERSION_QUERY_PARAMETER_NAME] =\n            IMDS_API_VERSION;\n        request.queryParameters[_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_2__.RESOURCE_BODY_OR_QUERY_PARAMETER_NAME] =\n            resource;\n        if (managedIdentityId.idType !== _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_2__.ManagedIdentityIdType.SYSTEM_ASSIGNED) {\n            request.queryParameters[this.getManagedIdentityUserAssignedIdQueryParameterKey(managedIdentityId.idType)] = managedIdentityId.id;\n        }\n        // bodyParameters calculated in BaseManagedIdentity.acquireTokenWithManagedIdentity\n        return request;\n    }\n}\n\n\n//# sourceMappingURL=Imds.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtbm9kZS9kaXN0L2NsaWVudC9NYW5hZ2VkSWRlbnRpdHlTb3VyY2VzL0ltZHMubWpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTtBQUNhO0FBQ3dGO0FBQ3pCO0FBQ3NLOztBQUVsUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx1REFBdUQsZ0JBQWdCO0FBQ3ZFO0FBQ0E7QUFDQSxtQkFBbUIscUZBQXlCO0FBQzVDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHdCQUF3Qix5RkFBdUM7QUFDL0Q7QUFDQSxtRUFBbUUseUZBQXVDLG9DQUFvQyxNQUFNLDRFQUEwQixPQUFPLHFCQUFxQixZQUFZLHlGQUF1QztBQUM3UCxvREFBb0Q7QUFDcEQsOEVBQThFLHlGQUF1Qyx1Q0FBdUMsWUFBWSx5RkFBdUM7QUFDL00sb0RBQW9ELEVBQUUsZ0JBQWdCLEdBQUcsNEVBQTBCO0FBQ25HO0FBQ0E7QUFDQSw2REFBNkQseUZBQXVDLG9DQUFvQywyQkFBMkIsNEVBQTBCLE1BQU07QUFDbk07QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDRCQUE0QiwwR0FBZ0MsQ0FBQyw0REFBVTtBQUN2RSx3QkFBd0Isc0VBQW9CO0FBQzVDLGdDQUFnQyxrRkFBZ0M7QUFDaEU7QUFDQSxnQ0FBZ0MsdUZBQXFDO0FBQ3JFO0FBQ0EseUNBQXlDLHVFQUFxQjtBQUM5RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRWdCO0FBQ2hCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZGFuaWVsMy12cDIvLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtbm9kZS9kaXN0L2NsaWVudC9NYW5hZ2VkSWRlbnRpdHlTb3VyY2VzL0ltZHMubWpzP2MyMDYiXSwic291cmNlc0NvbnRlbnQiOlsiLyohIEBhenVyZS9tc2FsLW5vZGUgdjIuMTIuMCAyMDI0LTA3LTIzICovXG4ndXNlIHN0cmljdCc7XG5pbXBvcnQgeyBNYW5hZ2VkSWRlbnRpdHlSZXF1ZXN0UGFyYW1ldGVycyB9IGZyb20gJy4uLy4uL2NvbmZpZy9NYW5hZ2VkSWRlbnRpdHlSZXF1ZXN0UGFyYW1ldGVycy5tanMnO1xuaW1wb3J0IHsgQmFzZU1hbmFnZWRJZGVudGl0eVNvdXJjZSB9IGZyb20gJy4vQmFzZU1hbmFnZWRJZGVudGl0eVNvdXJjZS5tanMnO1xuaW1wb3J0IHsgTWFuYWdlZElkZW50aXR5RW52aXJvbm1lbnRWYXJpYWJsZU5hbWVzLCBNYW5hZ2VkSWRlbnRpdHlTb3VyY2VOYW1lcywgTUVUQURBVEFfSEVBREVSX05BTUUsIEFQSV9WRVJTSU9OX1FVRVJZX1BBUkFNRVRFUl9OQU1FLCBSRVNPVVJDRV9CT0RZX09SX1FVRVJZX1BBUkFNRVRFUl9OQU1FLCBNYW5hZ2VkSWRlbnRpdHlJZFR5cGUsIEh0dHBNZXRob2QgfSBmcm9tICcuLi8uLi91dGlscy9Db25zdGFudHMubWpzJztcblxuLypcbiAqIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLiBBbGwgcmlnaHRzIHJlc2VydmVkLlxuICogTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBMaWNlbnNlLlxuICovXG4vLyBJTURTIGNvbnN0YW50cy4gRG9jcyBmb3IgSU1EUyBhcmUgYXZhaWxhYmxlIGhlcmUgaHR0cHM6Ly9kb2NzLm1pY3Jvc29mdC5jb20vYXp1cmUvYWN0aXZlLWRpcmVjdG9yeS9tYW5hZ2VkLWlkZW50aXRpZXMtYXp1cmUtcmVzb3VyY2VzL2hvdy10by11c2Utdm0tdG9rZW4jZ2V0LWEtdG9rZW4tdXNpbmctaHR0cFxuY29uc3QgSU1EU19UT0tFTl9QQVRIID0gXCIvbWV0YWRhdGEvaWRlbnRpdHkvb2F1dGgyL3Rva2VuXCI7XG5jb25zdCBERUZBVUxUX0lNRFNfRU5EUE9JTlQgPSBgaHR0cDovLzE2OS4yNTQuMTY5LjI1NCR7SU1EU19UT0tFTl9QQVRIfWA7XG5jb25zdCBJTURTX0FQSV9WRVJTSU9OID0gXCIyMDE4LTAyLTAxXCI7XG4vLyBPcmlnaW5hbCBzb3VyY2Ugb2YgY29kZTogaHR0cHM6Ly9naXRodWIuY29tL0F6dXJlL2F6dXJlLXNkay1mb3ItbmV0L2Jsb2IvbWFpbi9zZGsvaWRlbnRpdHkvQXp1cmUuSWRlbnRpdHkvc3JjL0ltZHNNYW5hZ2VkSWRlbnRpdHlTb3VyY2UuY3NcbmNsYXNzIEltZHMgZXh0ZW5kcyBCYXNlTWFuYWdlZElkZW50aXR5U291cmNlIHtcbiAgICBjb25zdHJ1Y3Rvcihsb2dnZXIsIG5vZGVTdG9yYWdlLCBuZXR3b3JrQ2xpZW50LCBjcnlwdG9Qcm92aWRlciwgaWRlbnRpdHlFbmRwb2ludCkge1xuICAgICAgICBzdXBlcihsb2dnZXIsIG5vZGVTdG9yYWdlLCBuZXR3b3JrQ2xpZW50LCBjcnlwdG9Qcm92aWRlcik7XG4gICAgICAgIHRoaXMuaWRlbnRpdHlFbmRwb2ludCA9IGlkZW50aXR5RW5kcG9pbnQ7XG4gICAgfVxuICAgIHN0YXRpYyB0cnlDcmVhdGUobG9nZ2VyLCBub2RlU3RvcmFnZSwgbmV0d29ya0NsaWVudCwgY3J5cHRvUHJvdmlkZXIpIHtcbiAgICAgICAgbGV0IHZhbGlkYXRlZElkZW50aXR5RW5kcG9pbnQ7XG4gICAgICAgIGlmIChwcm9jZXNzLmVudltNYW5hZ2VkSWRlbnRpdHlFbnZpcm9ubWVudFZhcmlhYmxlTmFtZXNcbiAgICAgICAgICAgIC5BWlVSRV9QT0RfSURFTlRJVFlfQVVUSE9SSVRZX0hPU1RdKSB7XG4gICAgICAgICAgICBsb2dnZXIuaW5mbyhgW01hbmFnZWQgSWRlbnRpdHldIEVudmlyb25tZW50IHZhcmlhYmxlICR7TWFuYWdlZElkZW50aXR5RW52aXJvbm1lbnRWYXJpYWJsZU5hbWVzLkFaVVJFX1BPRF9JREVOVElUWV9BVVRIT1JJVFlfSE9TVH0gZm9yICR7TWFuYWdlZElkZW50aXR5U291cmNlTmFtZXMuSU1EU30gcmV0dXJuZWQgZW5kcG9pbnQ6ICR7cHJvY2Vzcy5lbnZbTWFuYWdlZElkZW50aXR5RW52aXJvbm1lbnRWYXJpYWJsZU5hbWVzXG4gICAgICAgICAgICAgICAgLkFaVVJFX1BPRF9JREVOVElUWV9BVVRIT1JJVFlfSE9TVF19YCk7XG4gICAgICAgICAgICB2YWxpZGF0ZWRJZGVudGl0eUVuZHBvaW50ID0gSW1kcy5nZXRWYWxpZGF0ZWRFbnZWYXJpYWJsZVVybFN0cmluZyhNYW5hZ2VkSWRlbnRpdHlFbnZpcm9ubWVudFZhcmlhYmxlTmFtZXMuQVpVUkVfUE9EX0lERU5USVRZX0FVVEhPUklUWV9IT1NULCBgJHtwcm9jZXNzLmVudltNYW5hZ2VkSWRlbnRpdHlFbnZpcm9ubWVudFZhcmlhYmxlTmFtZXNcbiAgICAgICAgICAgICAgICAuQVpVUkVfUE9EX0lERU5USVRZX0FVVEhPUklUWV9IT1NUXX0ke0lNRFNfVE9LRU5fUEFUSH1gLCBNYW5hZ2VkSWRlbnRpdHlTb3VyY2VOYW1lcy5JTURTLCBsb2dnZXIpO1xuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgbG9nZ2VyLmluZm8oYFtNYW5hZ2VkIElkZW50aXR5XSBVbmFibGUgdG8gZmluZCAke01hbmFnZWRJZGVudGl0eUVudmlyb25tZW50VmFyaWFibGVOYW1lcy5BWlVSRV9QT0RfSURFTlRJVFlfQVVUSE9SSVRZX0hPU1R9IGVudmlyb25tZW50IHZhcmlhYmxlIGZvciAke01hbmFnZWRJZGVudGl0eVNvdXJjZU5hbWVzLklNRFN9LCB1c2luZyB0aGUgZGVmYXVsdCBlbmRwb2ludC5gKTtcbiAgICAgICAgICAgIHZhbGlkYXRlZElkZW50aXR5RW5kcG9pbnQgPSBERUZBVUxUX0lNRFNfRU5EUE9JTlQ7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIG5ldyBJbWRzKGxvZ2dlciwgbm9kZVN0b3JhZ2UsIG5ldHdvcmtDbGllbnQsIGNyeXB0b1Byb3ZpZGVyLCB2YWxpZGF0ZWRJZGVudGl0eUVuZHBvaW50KTtcbiAgICB9XG4gICAgY3JlYXRlUmVxdWVzdChyZXNvdXJjZSwgbWFuYWdlZElkZW50aXR5SWQpIHtcbiAgICAgICAgY29uc3QgcmVxdWVzdCA9IG5ldyBNYW5hZ2VkSWRlbnRpdHlSZXF1ZXN0UGFyYW1ldGVycyhIdHRwTWV0aG9kLkdFVCwgdGhpcy5pZGVudGl0eUVuZHBvaW50KTtcbiAgICAgICAgcmVxdWVzdC5oZWFkZXJzW01FVEFEQVRBX0hFQURFUl9OQU1FXSA9IFwidHJ1ZVwiO1xuICAgICAgICByZXF1ZXN0LnF1ZXJ5UGFyYW1ldGVyc1tBUElfVkVSU0lPTl9RVUVSWV9QQVJBTUVURVJfTkFNRV0gPVxuICAgICAgICAgICAgSU1EU19BUElfVkVSU0lPTjtcbiAgICAgICAgcmVxdWVzdC5xdWVyeVBhcmFtZXRlcnNbUkVTT1VSQ0VfQk9EWV9PUl9RVUVSWV9QQVJBTUVURVJfTkFNRV0gPVxuICAgICAgICAgICAgcmVzb3VyY2U7XG4gICAgICAgIGlmIChtYW5hZ2VkSWRlbnRpdHlJZC5pZFR5cGUgIT09IE1hbmFnZWRJZGVudGl0eUlkVHlwZS5TWVNURU1fQVNTSUdORUQpIHtcbiAgICAgICAgICAgIHJlcXVlc3QucXVlcnlQYXJhbWV0ZXJzW3RoaXMuZ2V0TWFuYWdlZElkZW50aXR5VXNlckFzc2lnbmVkSWRRdWVyeVBhcmFtZXRlcktleShtYW5hZ2VkSWRlbnRpdHlJZC5pZFR5cGUpXSA9IG1hbmFnZWRJZGVudGl0eUlkLmlkO1xuICAgICAgICB9XG4gICAgICAgIC8vIGJvZHlQYXJhbWV0ZXJzIGNhbGN1bGF0ZWQgaW4gQmFzZU1hbmFnZWRJZGVudGl0eS5hY3F1aXJlVG9rZW5XaXRoTWFuYWdlZElkZW50aXR5XG4gICAgICAgIHJldHVybiByZXF1ZXN0O1xuICAgIH1cbn1cblxuZXhwb3J0IHsgSW1kcyB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9SW1kcy5tanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/msal-node/dist/client/ManagedIdentitySources/Imds.mjs\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/msal-node/dist/client/ManagedIdentitySources/ServiceFabric.mjs":
/*!********************************************************************************************!*\
  !*** ./node_modules/@azure/msal-node/dist/client/ManagedIdentitySources/ServiceFabric.mjs ***!
  \********************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ServiceFabric: () => (/* binding */ ServiceFabric)\n/* harmony export */ });\n/* harmony import */ var _config_ManagedIdentityRequestParameters_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../config/ManagedIdentityRequestParameters.mjs */ \"(rsc)/./node_modules/@azure/msal-node/dist/config/ManagedIdentityRequestParameters.mjs\");\n/* harmony import */ var _BaseManagedIdentitySource_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./BaseManagedIdentitySource.mjs */ \"(rsc)/./node_modules/@azure/msal-node/dist/client/ManagedIdentitySources/BaseManagedIdentitySource.mjs\");\n/* harmony import */ var _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../utils/Constants.mjs */ \"(rsc)/./node_modules/@azure/msal-node/dist/utils/Constants.mjs\");\n/*! @azure/msal-node v2.12.0 2024-07-23 */\n\n\n\n\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n// MSI Constants. Docs for MSI are available here https://docs.microsoft.com/azure/app-service/overview-managed-identity\nconst SERVICE_FABRIC_MSI_API_VERSION = \"2019-07-01-preview\";\n/**\n * Original source of code: https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/identity/Azure.Identity/src/ServiceFabricManagedIdentitySource.cs\n */\nclass ServiceFabric extends _BaseManagedIdentitySource_mjs__WEBPACK_IMPORTED_MODULE_1__.BaseManagedIdentitySource {\n    constructor(logger, nodeStorage, networkClient, cryptoProvider, identityEndpoint, identityHeader) {\n        super(logger, nodeStorage, networkClient, cryptoProvider);\n        this.identityEndpoint = identityEndpoint;\n        this.identityHeader = identityHeader;\n    }\n    static getEnvironmentVariables() {\n        const identityEndpoint = process.env[_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_2__.ManagedIdentityEnvironmentVariableNames.IDENTITY_ENDPOINT];\n        const identityHeader = process.env[_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_2__.ManagedIdentityEnvironmentVariableNames.IDENTITY_HEADER];\n        const identityServerThumbprint = process.env[_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_2__.ManagedIdentityEnvironmentVariableNames\n            .IDENTITY_SERVER_THUMBPRINT];\n        return [identityEndpoint, identityHeader, identityServerThumbprint];\n    }\n    static tryCreate(logger, nodeStorage, networkClient, cryptoProvider, managedIdentityId) {\n        const [identityEndpoint, identityHeader, identityServerThumbprint] = ServiceFabric.getEnvironmentVariables();\n        /*\n         * if either of the identity endpoint, identity header, or identity server thumbprint\n         * environment variables are undefined, this MSI provider is unavailable.\n         */\n        if (!identityEndpoint || !identityHeader || !identityServerThumbprint) {\n            logger.info(`[Managed Identity] ${_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_2__.ManagedIdentitySourceNames.SERVICE_FABRIC} managed identity is unavailable because one or all of the '${_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_2__.ManagedIdentityEnvironmentVariableNames.IDENTITY_HEADER}', '${_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_2__.ManagedIdentityEnvironmentVariableNames.IDENTITY_ENDPOINT}' or '${_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_2__.ManagedIdentityEnvironmentVariableNames.IDENTITY_SERVER_THUMBPRINT}' environment variables are not defined.`);\n            return null;\n        }\n        const validatedIdentityEndpoint = ServiceFabric.getValidatedEnvVariableUrlString(_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_2__.ManagedIdentityEnvironmentVariableNames.IDENTITY_ENDPOINT, identityEndpoint, _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_2__.ManagedIdentitySourceNames.SERVICE_FABRIC, logger);\n        logger.info(`[Managed Identity] Environment variables validation passed for ${_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_2__.ManagedIdentitySourceNames.SERVICE_FABRIC} managed identity. Endpoint URI: ${validatedIdentityEndpoint}. Creating ${_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_2__.ManagedIdentitySourceNames.SERVICE_FABRIC} managed identity.`);\n        if (managedIdentityId.idType !== _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_2__.ManagedIdentityIdType.SYSTEM_ASSIGNED) {\n            logger.warning(`[Managed Identity] ${_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_2__.ManagedIdentitySourceNames.SERVICE_FABRIC} user assigned managed identity is configured in the cluster, not during runtime. See also: https://learn.microsoft.com/en-us/azure/service-fabric/configure-existing-cluster-enable-managed-identity-token-service.`);\n        }\n        return new ServiceFabric(logger, nodeStorage, networkClient, cryptoProvider, identityEndpoint, identityHeader);\n    }\n    createRequest(resource, managedIdentityId) {\n        const request = new _config_ManagedIdentityRequestParameters_mjs__WEBPACK_IMPORTED_MODULE_0__.ManagedIdentityRequestParameters(_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_2__.HttpMethod.GET, this.identityEndpoint);\n        request.headers[_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_2__.SERVICE_FABRIC_SECRET_HEADER_NAME] =\n            this.identityHeader;\n        request.queryParameters[_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_2__.API_VERSION_QUERY_PARAMETER_NAME] =\n            SERVICE_FABRIC_MSI_API_VERSION;\n        request.queryParameters[_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_2__.RESOURCE_BODY_OR_QUERY_PARAMETER_NAME] =\n            resource;\n        if (managedIdentityId.idType !== _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_2__.ManagedIdentityIdType.SYSTEM_ASSIGNED) {\n            request.queryParameters[this.getManagedIdentityUserAssignedIdQueryParameterKey(managedIdentityId.idType)] = managedIdentityId.id;\n        }\n        // bodyParameters calculated in BaseManagedIdentity.acquireTokenWithManagedIdentity\n        return request;\n    }\n}\n\n\n//# sourceMappingURL=ServiceFabric.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtbm9kZS9kaXN0L2NsaWVudC9NYW5hZ2VkSWRlbnRpdHlTb3VyY2VzL1NlcnZpY2VGYWJyaWMubWpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTtBQUNhO0FBQ3dGO0FBQ3pCO0FBQ21MOztBQUUvUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw0QkFBNEIscUZBQXlCO0FBQ3JEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDZDQUE2Qyx5RkFBdUM7QUFDcEYsMkNBQTJDLHlGQUF1QztBQUNsRixxREFBcUQseUZBQXVDO0FBQzVGO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsOENBQThDLDRFQUEwQixpQkFBaUIsNkRBQTZELHlGQUF1QyxpQkFBaUIsTUFBTSx5RkFBdUMsbUJBQW1CLFFBQVEseUZBQXVDLDRCQUE0QjtBQUN6VjtBQUNBO0FBQ0EseUZBQXlGLHlGQUF1QyxzQ0FBc0MsNEVBQTBCO0FBQ2hNLHNGQUFzRiw0RUFBMEIsaUJBQWlCLGtDQUFrQywwQkFBMEIsYUFBYSw0RUFBMEIsaUJBQWlCO0FBQ3JQLHlDQUF5Qyx1RUFBcUI7QUFDOUQsaURBQWlELDRFQUEwQixpQkFBaUI7QUFDNUY7QUFDQTtBQUNBO0FBQ0E7QUFDQSw0QkFBNEIsMEdBQWdDLENBQUMsNERBQVU7QUFDdkUsd0JBQXdCLG1GQUFpQztBQUN6RDtBQUNBLGdDQUFnQyxrRkFBZ0M7QUFDaEU7QUFDQSxnQ0FBZ0MsdUZBQXFDO0FBQ3JFO0FBQ0EseUNBQXlDLHVFQUFxQjtBQUM5RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRXlCO0FBQ3pCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZGFuaWVsMy12cDIvLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtbm9kZS9kaXN0L2NsaWVudC9NYW5hZ2VkSWRlbnRpdHlTb3VyY2VzL1NlcnZpY2VGYWJyaWMubWpzPzQ0OTMiXSwic291cmNlc0NvbnRlbnQiOlsiLyohIEBhenVyZS9tc2FsLW5vZGUgdjIuMTIuMCAyMDI0LTA3LTIzICovXG4ndXNlIHN0cmljdCc7XG5pbXBvcnQgeyBNYW5hZ2VkSWRlbnRpdHlSZXF1ZXN0UGFyYW1ldGVycyB9IGZyb20gJy4uLy4uL2NvbmZpZy9NYW5hZ2VkSWRlbnRpdHlSZXF1ZXN0UGFyYW1ldGVycy5tanMnO1xuaW1wb3J0IHsgQmFzZU1hbmFnZWRJZGVudGl0eVNvdXJjZSB9IGZyb20gJy4vQmFzZU1hbmFnZWRJZGVudGl0eVNvdXJjZS5tanMnO1xuaW1wb3J0IHsgTWFuYWdlZElkZW50aXR5RW52aXJvbm1lbnRWYXJpYWJsZU5hbWVzLCBNYW5hZ2VkSWRlbnRpdHlTb3VyY2VOYW1lcywgTWFuYWdlZElkZW50aXR5SWRUeXBlLCBTRVJWSUNFX0ZBQlJJQ19TRUNSRVRfSEVBREVSX05BTUUsIEFQSV9WRVJTSU9OX1FVRVJZX1BBUkFNRVRFUl9OQU1FLCBSRVNPVVJDRV9CT0RZX09SX1FVRVJZX1BBUkFNRVRFUl9OQU1FLCBIdHRwTWV0aG9kIH0gZnJvbSAnLi4vLi4vdXRpbHMvQ29uc3RhbnRzLm1qcyc7XG5cbi8qXG4gKiBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi4gQWxsIHJpZ2h0cyByZXNlcnZlZC5cbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgTGljZW5zZS5cbiAqL1xuLy8gTVNJIENvbnN0YW50cy4gRG9jcyBmb3IgTVNJIGFyZSBhdmFpbGFibGUgaGVyZSBodHRwczovL2RvY3MubWljcm9zb2Z0LmNvbS9henVyZS9hcHAtc2VydmljZS9vdmVydmlldy1tYW5hZ2VkLWlkZW50aXR5XG5jb25zdCBTRVJWSUNFX0ZBQlJJQ19NU0lfQVBJX1ZFUlNJT04gPSBcIjIwMTktMDctMDEtcHJldmlld1wiO1xuLyoqXG4gKiBPcmlnaW5hbCBzb3VyY2Ugb2YgY29kZTogaHR0cHM6Ly9naXRodWIuY29tL0F6dXJlL2F6dXJlLXNkay1mb3ItbmV0L2Jsb2IvbWFpbi9zZGsvaWRlbnRpdHkvQXp1cmUuSWRlbnRpdHkvc3JjL1NlcnZpY2VGYWJyaWNNYW5hZ2VkSWRlbnRpdHlTb3VyY2UuY3NcbiAqL1xuY2xhc3MgU2VydmljZUZhYnJpYyBleHRlbmRzIEJhc2VNYW5hZ2VkSWRlbnRpdHlTb3VyY2Uge1xuICAgIGNvbnN0cnVjdG9yKGxvZ2dlciwgbm9kZVN0b3JhZ2UsIG5ldHdvcmtDbGllbnQsIGNyeXB0b1Byb3ZpZGVyLCBpZGVudGl0eUVuZHBvaW50LCBpZGVudGl0eUhlYWRlcikge1xuICAgICAgICBzdXBlcihsb2dnZXIsIG5vZGVTdG9yYWdlLCBuZXR3b3JrQ2xpZW50LCBjcnlwdG9Qcm92aWRlcik7XG4gICAgICAgIHRoaXMuaWRlbnRpdHlFbmRwb2ludCA9IGlkZW50aXR5RW5kcG9pbnQ7XG4gICAgICAgIHRoaXMuaWRlbnRpdHlIZWFkZXIgPSBpZGVudGl0eUhlYWRlcjtcbiAgICB9XG4gICAgc3RhdGljIGdldEVudmlyb25tZW50VmFyaWFibGVzKCkge1xuICAgICAgICBjb25zdCBpZGVudGl0eUVuZHBvaW50ID0gcHJvY2Vzcy5lbnZbTWFuYWdlZElkZW50aXR5RW52aXJvbm1lbnRWYXJpYWJsZU5hbWVzLklERU5USVRZX0VORFBPSU5UXTtcbiAgICAgICAgY29uc3QgaWRlbnRpdHlIZWFkZXIgPSBwcm9jZXNzLmVudltNYW5hZ2VkSWRlbnRpdHlFbnZpcm9ubWVudFZhcmlhYmxlTmFtZXMuSURFTlRJVFlfSEVBREVSXTtcbiAgICAgICAgY29uc3QgaWRlbnRpdHlTZXJ2ZXJUaHVtYnByaW50ID0gcHJvY2Vzcy5lbnZbTWFuYWdlZElkZW50aXR5RW52aXJvbm1lbnRWYXJpYWJsZU5hbWVzXG4gICAgICAgICAgICAuSURFTlRJVFlfU0VSVkVSX1RIVU1CUFJJTlRdO1xuICAgICAgICByZXR1cm4gW2lkZW50aXR5RW5kcG9pbnQsIGlkZW50aXR5SGVhZGVyLCBpZGVudGl0eVNlcnZlclRodW1icHJpbnRdO1xuICAgIH1cbiAgICBzdGF0aWMgdHJ5Q3JlYXRlKGxvZ2dlciwgbm9kZVN0b3JhZ2UsIG5ldHdvcmtDbGllbnQsIGNyeXB0b1Byb3ZpZGVyLCBtYW5hZ2VkSWRlbnRpdHlJZCkge1xuICAgICAgICBjb25zdCBbaWRlbnRpdHlFbmRwb2ludCwgaWRlbnRpdHlIZWFkZXIsIGlkZW50aXR5U2VydmVyVGh1bWJwcmludF0gPSBTZXJ2aWNlRmFicmljLmdldEVudmlyb25tZW50VmFyaWFibGVzKCk7XG4gICAgICAgIC8qXG4gICAgICAgICAqIGlmIGVpdGhlciBvZiB0aGUgaWRlbnRpdHkgZW5kcG9pbnQsIGlkZW50aXR5IGhlYWRlciwgb3IgaWRlbnRpdHkgc2VydmVyIHRodW1icHJpbnRcbiAgICAgICAgICogZW52aXJvbm1lbnQgdmFyaWFibGVzIGFyZSB1bmRlZmluZWQsIHRoaXMgTVNJIHByb3ZpZGVyIGlzIHVuYXZhaWxhYmxlLlxuICAgICAgICAgKi9cbiAgICAgICAgaWYgKCFpZGVudGl0eUVuZHBvaW50IHx8ICFpZGVudGl0eUhlYWRlciB8fCAhaWRlbnRpdHlTZXJ2ZXJUaHVtYnByaW50KSB7XG4gICAgICAgICAgICBsb2dnZXIuaW5mbyhgW01hbmFnZWQgSWRlbnRpdHldICR7TWFuYWdlZElkZW50aXR5U291cmNlTmFtZXMuU0VSVklDRV9GQUJSSUN9IG1hbmFnZWQgaWRlbnRpdHkgaXMgdW5hdmFpbGFibGUgYmVjYXVzZSBvbmUgb3IgYWxsIG9mIHRoZSAnJHtNYW5hZ2VkSWRlbnRpdHlFbnZpcm9ubWVudFZhcmlhYmxlTmFtZXMuSURFTlRJVFlfSEVBREVSfScsICcke01hbmFnZWRJZGVudGl0eUVudmlyb25tZW50VmFyaWFibGVOYW1lcy5JREVOVElUWV9FTkRQT0lOVH0nIG9yICcke01hbmFnZWRJZGVudGl0eUVudmlyb25tZW50VmFyaWFibGVOYW1lcy5JREVOVElUWV9TRVJWRVJfVEhVTUJQUklOVH0nIGVudmlyb25tZW50IHZhcmlhYmxlcyBhcmUgbm90IGRlZmluZWQuYCk7XG4gICAgICAgICAgICByZXR1cm4gbnVsbDtcbiAgICAgICAgfVxuICAgICAgICBjb25zdCB2YWxpZGF0ZWRJZGVudGl0eUVuZHBvaW50ID0gU2VydmljZUZhYnJpYy5nZXRWYWxpZGF0ZWRFbnZWYXJpYWJsZVVybFN0cmluZyhNYW5hZ2VkSWRlbnRpdHlFbnZpcm9ubWVudFZhcmlhYmxlTmFtZXMuSURFTlRJVFlfRU5EUE9JTlQsIGlkZW50aXR5RW5kcG9pbnQsIE1hbmFnZWRJZGVudGl0eVNvdXJjZU5hbWVzLlNFUlZJQ0VfRkFCUklDLCBsb2dnZXIpO1xuICAgICAgICBsb2dnZXIuaW5mbyhgW01hbmFnZWQgSWRlbnRpdHldIEVudmlyb25tZW50IHZhcmlhYmxlcyB2YWxpZGF0aW9uIHBhc3NlZCBmb3IgJHtNYW5hZ2VkSWRlbnRpdHlTb3VyY2VOYW1lcy5TRVJWSUNFX0ZBQlJJQ30gbWFuYWdlZCBpZGVudGl0eS4gRW5kcG9pbnQgVVJJOiAke3ZhbGlkYXRlZElkZW50aXR5RW5kcG9pbnR9LiBDcmVhdGluZyAke01hbmFnZWRJZGVudGl0eVNvdXJjZU5hbWVzLlNFUlZJQ0VfRkFCUklDfSBtYW5hZ2VkIGlkZW50aXR5LmApO1xuICAgICAgICBpZiAobWFuYWdlZElkZW50aXR5SWQuaWRUeXBlICE9PSBNYW5hZ2VkSWRlbnRpdHlJZFR5cGUuU1lTVEVNX0FTU0lHTkVEKSB7XG4gICAgICAgICAgICBsb2dnZXIud2FybmluZyhgW01hbmFnZWQgSWRlbnRpdHldICR7TWFuYWdlZElkZW50aXR5U291cmNlTmFtZXMuU0VSVklDRV9GQUJSSUN9IHVzZXIgYXNzaWduZWQgbWFuYWdlZCBpZGVudGl0eSBpcyBjb25maWd1cmVkIGluIHRoZSBjbHVzdGVyLCBub3QgZHVyaW5nIHJ1bnRpbWUuIFNlZSBhbHNvOiBodHRwczovL2xlYXJuLm1pY3Jvc29mdC5jb20vZW4tdXMvYXp1cmUvc2VydmljZS1mYWJyaWMvY29uZmlndXJlLWV4aXN0aW5nLWNsdXN0ZXItZW5hYmxlLW1hbmFnZWQtaWRlbnRpdHktdG9rZW4tc2VydmljZS5gKTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gbmV3IFNlcnZpY2VGYWJyaWMobG9nZ2VyLCBub2RlU3RvcmFnZSwgbmV0d29ya0NsaWVudCwgY3J5cHRvUHJvdmlkZXIsIGlkZW50aXR5RW5kcG9pbnQsIGlkZW50aXR5SGVhZGVyKTtcbiAgICB9XG4gICAgY3JlYXRlUmVxdWVzdChyZXNvdXJjZSwgbWFuYWdlZElkZW50aXR5SWQpIHtcbiAgICAgICAgY29uc3QgcmVxdWVzdCA9IG5ldyBNYW5hZ2VkSWRlbnRpdHlSZXF1ZXN0UGFyYW1ldGVycyhIdHRwTWV0aG9kLkdFVCwgdGhpcy5pZGVudGl0eUVuZHBvaW50KTtcbiAgICAgICAgcmVxdWVzdC5oZWFkZXJzW1NFUlZJQ0VfRkFCUklDX1NFQ1JFVF9IRUFERVJfTkFNRV0gPVxuICAgICAgICAgICAgdGhpcy5pZGVudGl0eUhlYWRlcjtcbiAgICAgICAgcmVxdWVzdC5xdWVyeVBhcmFtZXRlcnNbQVBJX1ZFUlNJT05fUVVFUllfUEFSQU1FVEVSX05BTUVdID1cbiAgICAgICAgICAgIFNFUlZJQ0VfRkFCUklDX01TSV9BUElfVkVSU0lPTjtcbiAgICAgICAgcmVxdWVzdC5xdWVyeVBhcmFtZXRlcnNbUkVTT1VSQ0VfQk9EWV9PUl9RVUVSWV9QQVJBTUVURVJfTkFNRV0gPVxuICAgICAgICAgICAgcmVzb3VyY2U7XG4gICAgICAgIGlmIChtYW5hZ2VkSWRlbnRpdHlJZC5pZFR5cGUgIT09IE1hbmFnZWRJZGVudGl0eUlkVHlwZS5TWVNURU1fQVNTSUdORUQpIHtcbiAgICAgICAgICAgIHJlcXVlc3QucXVlcnlQYXJhbWV0ZXJzW3RoaXMuZ2V0TWFuYWdlZElkZW50aXR5VXNlckFzc2lnbmVkSWRRdWVyeVBhcmFtZXRlcktleShtYW5hZ2VkSWRlbnRpdHlJZC5pZFR5cGUpXSA9IG1hbmFnZWRJZGVudGl0eUlkLmlkO1xuICAgICAgICB9XG4gICAgICAgIC8vIGJvZHlQYXJhbWV0ZXJzIGNhbGN1bGF0ZWQgaW4gQmFzZU1hbmFnZWRJZGVudGl0eS5hY3F1aXJlVG9rZW5XaXRoTWFuYWdlZElkZW50aXR5XG4gICAgICAgIHJldHVybiByZXF1ZXN0O1xuICAgIH1cbn1cblxuZXhwb3J0IHsgU2VydmljZUZhYnJpYyB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9U2VydmljZUZhYnJpYy5tanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/msal-node/dist/client/ManagedIdentitySources/ServiceFabric.mjs\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/msal-node/dist/client/OnBehalfOfClient.mjs":
/*!************************************************************************!*\
  !*** ./node_modules/@azure/msal-node/dist/client/OnBehalfOfClient.mjs ***!
  \************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   OnBehalfOfClient: () => (/* binding */ OnBehalfOfClient)\n/* harmony export */ });\n/* harmony import */ var _azure_msal_common__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @azure/msal-common */ \"(rsc)/./node_modules/@azure/msal-common/dist/client/BaseClient.mjs\");\n/* harmony import */ var _azure_msal_common__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @azure/msal-common */ \"(rsc)/./node_modules/@azure/msal-common/dist/request/ScopeSet.mjs\");\n/* harmony import */ var _azure_msal_common__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @azure/msal-common */ \"(rsc)/./node_modules/@azure/msal-common/dist/utils/Constants.mjs\");\n/* harmony import */ var _azure_msal_common__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @azure/msal-common */ \"(rsc)/./node_modules/@azure/msal-common/dist/error/ClientAuthError.mjs\");\n/* harmony import */ var _azure_msal_common__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @azure/msal-common */ \"(rsc)/./node_modules/@azure/msal-common/dist/error/ClientAuthErrorCodes.mjs\");\n/* harmony import */ var _azure_msal_common__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @azure/msal-common */ \"(rsc)/./node_modules/@azure/msal-common/dist/utils/TimeUtils.mjs\");\n/* harmony import */ var _azure_msal_common__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @azure/msal-common */ \"(rsc)/./node_modules/@azure/msal-common/dist/account/AuthToken.mjs\");\n/* harmony import */ var _azure_msal_common__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @azure/msal-common */ \"(rsc)/./node_modules/@azure/msal-common/dist/response/ResponseHandler.mjs\");\n/* harmony import */ var _azure_msal_common__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @azure/msal-common */ \"(rsc)/./node_modules/@azure/msal-common/dist/url/UrlString.mjs\");\n/* harmony import */ var _azure_msal_common__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @azure/msal-common */ \"(rsc)/./node_modules/@azure/msal-common/dist/request/RequestParameterBuilder.mjs\");\n/* harmony import */ var _azure_msal_common__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @azure/msal-common */ \"(rsc)/./node_modules/@azure/msal-common/dist/constants/AADServerParamKeys.mjs\");\n/* harmony import */ var _azure_msal_common__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! @azure/msal-common */ \"(rsc)/./node_modules/@azure/msal-common/dist/utils/ClientAssertionUtils.mjs\");\n/* harmony import */ var _utils_EncodingUtils_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/EncodingUtils.mjs */ \"(rsc)/./node_modules/@azure/msal-node/dist/utils/EncodingUtils.mjs\");\n/*! @azure/msal-node v2.12.0 2024-07-23 */\n\n\n\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n/**\n * On-Behalf-Of client\n */\nclass OnBehalfOfClient extends _azure_msal_common__WEBPACK_IMPORTED_MODULE_1__.BaseClient {\n    constructor(configuration) {\n        super(configuration);\n    }\n    /**\n     * Public API to acquire tokens with on behalf of flow\n     * @param request\n     */\n    async acquireToken(request) {\n        this.scopeSet = new _azure_msal_common__WEBPACK_IMPORTED_MODULE_2__.ScopeSet(request.scopes || []);\n        // generate the user_assertion_hash for OBOAssertion\n        this.userAssertionHash = await this.cryptoUtils.hashString(request.oboAssertion);\n        if (request.skipCache || request.claims) {\n            return this.executeTokenRequest(request, this.authority, this.userAssertionHash);\n        }\n        try {\n            return await this.getCachedAuthenticationResult(request);\n        }\n        catch (e) {\n            // Any failure falls back to interactive request, once we implement distributed cache, we plan to handle `createRefreshRequiredError` to refresh using the RT\n            return await this.executeTokenRequest(request, this.authority, this.userAssertionHash);\n        }\n    }\n    /**\n     * look up cache for tokens\n     * Find idtoken in the cache\n     * Find accessToken based on user assertion and account info in the cache\n     * Please note we are not yet supported OBO tokens refreshed with long lived RT. User will have to send a new assertion if the current access token expires\n     * This is to prevent security issues when the assertion changes over time, however, longlived RT helps retaining the session\n     * @param request\n     */\n    async getCachedAuthenticationResult(request) {\n        // look in the cache for the access_token which matches the incoming_assertion\n        const cachedAccessToken = this.readAccessTokenFromCacheForOBO(this.config.authOptions.clientId, request);\n        if (!cachedAccessToken) {\n            // Must refresh due to non-existent access_token.\n            this.serverTelemetryManager?.setCacheOutcome(_azure_msal_common__WEBPACK_IMPORTED_MODULE_3__.CacheOutcome.NO_CACHED_ACCESS_TOKEN);\n            this.logger.info(\"SilentFlowClient:acquireCachedToken - No access token found in cache for the given properties.\");\n            throw (0,_azure_msal_common__WEBPACK_IMPORTED_MODULE_4__.createClientAuthError)(_azure_msal_common__WEBPACK_IMPORTED_MODULE_5__.tokenRefreshRequired);\n        }\n        else if (_azure_msal_common__WEBPACK_IMPORTED_MODULE_6__.isTokenExpired(cachedAccessToken.expiresOn, this.config.systemOptions.tokenRenewalOffsetSeconds)) {\n            // Access token expired, will need to renewed\n            this.serverTelemetryManager?.setCacheOutcome(_azure_msal_common__WEBPACK_IMPORTED_MODULE_3__.CacheOutcome.CACHED_ACCESS_TOKEN_EXPIRED);\n            this.logger.info(`OnbehalfofFlow:getCachedAuthenticationResult - Cached access token is expired or will expire within ${this.config.systemOptions.tokenRenewalOffsetSeconds} seconds.`);\n            throw (0,_azure_msal_common__WEBPACK_IMPORTED_MODULE_4__.createClientAuthError)(_azure_msal_common__WEBPACK_IMPORTED_MODULE_5__.tokenRefreshRequired);\n        }\n        // fetch the idToken from cache\n        const cachedIdToken = this.readIdTokenFromCacheForOBO(cachedAccessToken.homeAccountId);\n        let idTokenClaims;\n        let cachedAccount = null;\n        if (cachedIdToken) {\n            idTokenClaims = _azure_msal_common__WEBPACK_IMPORTED_MODULE_7__.extractTokenClaims(cachedIdToken.secret, _utils_EncodingUtils_mjs__WEBPACK_IMPORTED_MODULE_0__.EncodingUtils.base64Decode);\n            const localAccountId = idTokenClaims.oid || idTokenClaims.sub;\n            const accountInfo = {\n                homeAccountId: cachedIdToken.homeAccountId,\n                environment: cachedIdToken.environment,\n                tenantId: cachedIdToken.realm,\n                username: _azure_msal_common__WEBPACK_IMPORTED_MODULE_3__.Constants.EMPTY_STRING,\n                localAccountId: localAccountId || _azure_msal_common__WEBPACK_IMPORTED_MODULE_3__.Constants.EMPTY_STRING,\n            };\n            cachedAccount = this.cacheManager.readAccountFromCache(accountInfo);\n        }\n        // increment telemetry cache hit counter\n        if (this.config.serverTelemetryManager) {\n            this.config.serverTelemetryManager.incrementCacheHits();\n        }\n        return _azure_msal_common__WEBPACK_IMPORTED_MODULE_8__.ResponseHandler.generateAuthenticationResult(this.cryptoUtils, this.authority, {\n            account: cachedAccount,\n            accessToken: cachedAccessToken,\n            idToken: cachedIdToken,\n            refreshToken: null,\n            appMetadata: null,\n        }, true, request, idTokenClaims);\n    }\n    /**\n     * read idtoken from cache, this is a specific implementation for OBO as the requirements differ from a generic lookup in the cacheManager\n     * Certain use cases of OBO flow do not expect an idToken in the cache/or from the service\n     * @param atHomeAccountId {string}\n     */\n    readIdTokenFromCacheForOBO(atHomeAccountId) {\n        const idTokenFilter = {\n            homeAccountId: atHomeAccountId,\n            environment: this.authority.canonicalAuthorityUrlComponents.HostNameAndPort,\n            credentialType: _azure_msal_common__WEBPACK_IMPORTED_MODULE_3__.CredentialType.ID_TOKEN,\n            clientId: this.config.authOptions.clientId,\n            realm: this.authority.tenant,\n        };\n        const idTokenMap = this.cacheManager.getIdTokensByFilter(idTokenFilter);\n        // When acquiring a token on behalf of an application, there might not be an id token in the cache\n        if (Object.values(idTokenMap).length < 1) {\n            return null;\n        }\n        return Object.values(idTokenMap)[0];\n    }\n    /**\n     * Fetches the cached access token based on incoming assertion\n     * @param clientId\n     * @param request\n     * @param userAssertionHash\n     */\n    readAccessTokenFromCacheForOBO(clientId, request) {\n        const authScheme = request.authenticationScheme || _azure_msal_common__WEBPACK_IMPORTED_MODULE_3__.AuthenticationScheme.BEARER;\n        /*\n         * Distinguish between Bearer and PoP/SSH token cache types\n         * Cast to lowercase to handle \"bearer\" from ADFS\n         */\n        const credentialType = authScheme &&\n            authScheme.toLowerCase() !==\n                _azure_msal_common__WEBPACK_IMPORTED_MODULE_3__.AuthenticationScheme.BEARER.toLowerCase()\n            ? _azure_msal_common__WEBPACK_IMPORTED_MODULE_3__.CredentialType.ACCESS_TOKEN_WITH_AUTH_SCHEME\n            : _azure_msal_common__WEBPACK_IMPORTED_MODULE_3__.CredentialType.ACCESS_TOKEN;\n        const accessTokenFilter = {\n            credentialType: credentialType,\n            clientId,\n            target: _azure_msal_common__WEBPACK_IMPORTED_MODULE_2__.ScopeSet.createSearchScopes(this.scopeSet.asArray()),\n            tokenType: authScheme,\n            keyId: request.sshKid,\n            requestedClaimsHash: request.requestedClaimsHash,\n            userAssertionHash: this.userAssertionHash,\n        };\n        const accessTokens = this.cacheManager.getAccessTokensByFilter(accessTokenFilter);\n        const numAccessTokens = accessTokens.length;\n        if (numAccessTokens < 1) {\n            return null;\n        }\n        else if (numAccessTokens > 1) {\n            throw (0,_azure_msal_common__WEBPACK_IMPORTED_MODULE_4__.createClientAuthError)(_azure_msal_common__WEBPACK_IMPORTED_MODULE_5__.multipleMatchingTokens);\n        }\n        return accessTokens[0];\n    }\n    /**\n     * Make a network call to the server requesting credentials\n     * @param request\n     * @param authority\n     */\n    async executeTokenRequest(request, authority, userAssertionHash) {\n        const queryParametersString = this.createTokenQueryParameters(request);\n        const endpoint = _azure_msal_common__WEBPACK_IMPORTED_MODULE_9__.UrlString.appendQueryString(authority.tokenEndpoint, queryParametersString);\n        const requestBody = await this.createTokenRequestBody(request);\n        const headers = this.createTokenRequestHeaders();\n        const thumbprint = {\n            clientId: this.config.authOptions.clientId,\n            authority: request.authority,\n            scopes: request.scopes,\n            claims: request.claims,\n            authenticationScheme: request.authenticationScheme,\n            resourceRequestMethod: request.resourceRequestMethod,\n            resourceRequestUri: request.resourceRequestUri,\n            shrClaims: request.shrClaims,\n            sshKid: request.sshKid,\n        };\n        const reqTimestamp = _azure_msal_common__WEBPACK_IMPORTED_MODULE_6__.nowSeconds();\n        const response = await this.executePostToTokenEndpoint(endpoint, requestBody, headers, thumbprint, request.correlationId);\n        const responseHandler = new _azure_msal_common__WEBPACK_IMPORTED_MODULE_8__.ResponseHandler(this.config.authOptions.clientId, this.cacheManager, this.cryptoUtils, this.logger, this.config.serializableCache, this.config.persistencePlugin);\n        responseHandler.validateTokenResponse(response.body);\n        const tokenResponse = await responseHandler.handleServerTokenResponse(response.body, this.authority, reqTimestamp, request, undefined, userAssertionHash);\n        return tokenResponse;\n    }\n    /**\n     * generate a server request in accepable format\n     * @param request\n     */\n    async createTokenRequestBody(request) {\n        const parameterBuilder = new _azure_msal_common__WEBPACK_IMPORTED_MODULE_10__.RequestParameterBuilder();\n        parameterBuilder.addClientId(this.config.authOptions.clientId);\n        parameterBuilder.addScopes(request.scopes);\n        parameterBuilder.addGrantType(_azure_msal_common__WEBPACK_IMPORTED_MODULE_3__.GrantType.JWT_BEARER);\n        parameterBuilder.addClientInfo();\n        parameterBuilder.addLibraryInfo(this.config.libraryInfo);\n        parameterBuilder.addApplicationTelemetry(this.config.telemetry.application);\n        parameterBuilder.addThrottling();\n        if (this.serverTelemetryManager) {\n            parameterBuilder.addServerTelemetry(this.serverTelemetryManager);\n        }\n        const correlationId = request.correlationId ||\n            this.config.cryptoInterface.createNewGuid();\n        parameterBuilder.addCorrelationId(correlationId);\n        parameterBuilder.addRequestTokenUse(_azure_msal_common__WEBPACK_IMPORTED_MODULE_11__.ON_BEHALF_OF);\n        parameterBuilder.addOboAssertion(request.oboAssertion);\n        if (this.config.clientCredentials.clientSecret) {\n            parameterBuilder.addClientSecret(this.config.clientCredentials.clientSecret);\n        }\n        const clientAssertion = this.config.clientCredentials.clientAssertion;\n        if (clientAssertion) {\n            parameterBuilder.addClientAssertion(await (0,_azure_msal_common__WEBPACK_IMPORTED_MODULE_12__.getClientAssertion)(clientAssertion.assertion, this.config.authOptions.clientId, request.resourceRequestUri));\n            parameterBuilder.addClientAssertionType(clientAssertion.assertionType);\n        }\n        if (request.claims ||\n            (this.config.authOptions.clientCapabilities &&\n                this.config.authOptions.clientCapabilities.length > 0)) {\n            parameterBuilder.addClaims(request.claims, this.config.authOptions.clientCapabilities);\n        }\n        return parameterBuilder.createQueryString();\n    }\n}\n\n\n//# sourceMappingURL=OnBehalfOfClient.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtbm9kZS9kaXN0L2NsaWVudC9PbkJlaGFsZk9mQ2xpZW50Lm1qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7OztBQUFBO0FBQ2E7QUFDdVI7QUFDek87O0FBRTNEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsK0JBQStCLDBEQUFVO0FBQ3pDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw0QkFBNEIsd0RBQVE7QUFDcEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHlEQUF5RCw0REFBWTtBQUNyRTtBQUNBLGtCQUFrQix5RUFBcUIsQ0FBQyxvRUFBeUM7QUFDakY7QUFDQSxpQkFBaUIsOERBQXdCO0FBQ3pDO0FBQ0EseURBQXlELDREQUFZO0FBQ3JFLG9JQUFvSSxxREFBcUQ7QUFDekwsa0JBQWtCLHlFQUFxQixDQUFDLG9FQUF5QztBQUNqRjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw0QkFBNEIsa0VBQTRCLHVCQUF1QixtRUFBYTtBQUM1RjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMEJBQTBCLHlEQUFTO0FBQ25DLGtEQUFrRCx5REFBUztBQUMzRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWUsK0RBQWU7QUFDOUI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBLCtCQUErQjtBQUMvQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNEJBQTRCLDhEQUFjO0FBQzFDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwyREFBMkQsb0VBQW9CO0FBQy9FO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdCQUFnQixvRUFBb0I7QUFDcEMsY0FBYyw4REFBYztBQUM1QixjQUFjLDhEQUFjO0FBQzVCO0FBQ0E7QUFDQTtBQUNBLG9CQUFvQix3REFBUTtBQUM1QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0JBQWtCLHlFQUFxQixDQUFDLHNFQUEyQztBQUNuRjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHlCQUF5Qix5REFBUztBQUNsQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDZCQUE2QiwwREFBb0I7QUFDakQ7QUFDQSxvQ0FBb0MsK0RBQWU7QUFDbkQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EscUNBQXFDLHdFQUF1QjtBQUM1RDtBQUNBO0FBQ0Esc0NBQXNDLHlEQUFTO0FBQy9DO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNENBQTRDLDZEQUErQjtBQUMzRTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxzREFBc0QsdUVBQWtCO0FBQ3hFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUU0QjtBQUM1QiIsInNvdXJjZXMiOlsid2VicGFjazovL2RhbmllbDMtdnAyLy4vbm9kZV9tb2R1bGVzL0BhenVyZS9tc2FsLW5vZGUvZGlzdC9jbGllbnQvT25CZWhhbGZPZkNsaWVudC5tanM/ZTY3MCJdLCJzb3VyY2VzQ29udGVudCI6WyIvKiEgQGF6dXJlL21zYWwtbm9kZSB2Mi4xMi4wIDIwMjQtMDctMjMgKi9cbid1c2Ugc3RyaWN0JztcbmltcG9ydCB7IEJhc2VDbGllbnQsIFNjb3BlU2V0LCBDYWNoZU91dGNvbWUsIGNyZWF0ZUNsaWVudEF1dGhFcnJvciwgQ2xpZW50QXV0aEVycm9yQ29kZXMsIFRpbWVVdGlscywgQXV0aFRva2VuLCBSZXNwb25zZUhhbmRsZXIsIEF1dGhlbnRpY2F0aW9uU2NoZW1lLCBDcmVkZW50aWFsVHlwZSwgVXJsU3RyaW5nLCBSZXF1ZXN0UGFyYW1ldGVyQnVpbGRlciwgR3JhbnRUeXBlLCBBQURTZXJ2ZXJQYXJhbUtleXMsIGdldENsaWVudEFzc2VydGlvbiwgQ29uc3RhbnRzIH0gZnJvbSAnQGF6dXJlL21zYWwtY29tbW9uJztcbmltcG9ydCB7IEVuY29kaW5nVXRpbHMgfSBmcm9tICcuLi91dGlscy9FbmNvZGluZ1V0aWxzLm1qcyc7XG5cbi8qXG4gKiBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi4gQWxsIHJpZ2h0cyByZXNlcnZlZC5cbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgTGljZW5zZS5cbiAqL1xuLyoqXG4gKiBPbi1CZWhhbGYtT2YgY2xpZW50XG4gKi9cbmNsYXNzIE9uQmVoYWxmT2ZDbGllbnQgZXh0ZW5kcyBCYXNlQ2xpZW50IHtcbiAgICBjb25zdHJ1Y3Rvcihjb25maWd1cmF0aW9uKSB7XG4gICAgICAgIHN1cGVyKGNvbmZpZ3VyYXRpb24pO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBQdWJsaWMgQVBJIHRvIGFjcXVpcmUgdG9rZW5zIHdpdGggb24gYmVoYWxmIG9mIGZsb3dcbiAgICAgKiBAcGFyYW0gcmVxdWVzdFxuICAgICAqL1xuICAgIGFzeW5jIGFjcXVpcmVUb2tlbihyZXF1ZXN0KSB7XG4gICAgICAgIHRoaXMuc2NvcGVTZXQgPSBuZXcgU2NvcGVTZXQocmVxdWVzdC5zY29wZXMgfHwgW10pO1xuICAgICAgICAvLyBnZW5lcmF0ZSB0aGUgdXNlcl9hc3NlcnRpb25faGFzaCBmb3IgT0JPQXNzZXJ0aW9uXG4gICAgICAgIHRoaXMudXNlckFzc2VydGlvbkhhc2ggPSBhd2FpdCB0aGlzLmNyeXB0b1V0aWxzLmhhc2hTdHJpbmcocmVxdWVzdC5vYm9Bc3NlcnRpb24pO1xuICAgICAgICBpZiAocmVxdWVzdC5za2lwQ2FjaGUgfHwgcmVxdWVzdC5jbGFpbXMpIHtcbiAgICAgICAgICAgIHJldHVybiB0aGlzLmV4ZWN1dGVUb2tlblJlcXVlc3QocmVxdWVzdCwgdGhpcy5hdXRob3JpdHksIHRoaXMudXNlckFzc2VydGlvbkhhc2gpO1xuICAgICAgICB9XG4gICAgICAgIHRyeSB7XG4gICAgICAgICAgICByZXR1cm4gYXdhaXQgdGhpcy5nZXRDYWNoZWRBdXRoZW50aWNhdGlvblJlc3VsdChyZXF1ZXN0KTtcbiAgICAgICAgfVxuICAgICAgICBjYXRjaCAoZSkge1xuICAgICAgICAgICAgLy8gQW55IGZhaWx1cmUgZmFsbHMgYmFjayB0byBpbnRlcmFjdGl2ZSByZXF1ZXN0LCBvbmNlIHdlIGltcGxlbWVudCBkaXN0cmlidXRlZCBjYWNoZSwgd2UgcGxhbiB0byBoYW5kbGUgYGNyZWF0ZVJlZnJlc2hSZXF1aXJlZEVycm9yYCB0byByZWZyZXNoIHVzaW5nIHRoZSBSVFxuICAgICAgICAgICAgcmV0dXJuIGF3YWl0IHRoaXMuZXhlY3V0ZVRva2VuUmVxdWVzdChyZXF1ZXN0LCB0aGlzLmF1dGhvcml0eSwgdGhpcy51c2VyQXNzZXJ0aW9uSGFzaCk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgLyoqXG4gICAgICogbG9vayB1cCBjYWNoZSBmb3IgdG9rZW5zXG4gICAgICogRmluZCBpZHRva2VuIGluIHRoZSBjYWNoZVxuICAgICAqIEZpbmQgYWNjZXNzVG9rZW4gYmFzZWQgb24gdXNlciBhc3NlcnRpb24gYW5kIGFjY291bnQgaW5mbyBpbiB0aGUgY2FjaGVcbiAgICAgKiBQbGVhc2Ugbm90ZSB3ZSBhcmUgbm90IHlldCBzdXBwb3J0ZWQgT0JPIHRva2VucyByZWZyZXNoZWQgd2l0aCBsb25nIGxpdmVkIFJULiBVc2VyIHdpbGwgaGF2ZSB0byBzZW5kIGEgbmV3IGFzc2VydGlvbiBpZiB0aGUgY3VycmVudCBhY2Nlc3MgdG9rZW4gZXhwaXJlc1xuICAgICAqIFRoaXMgaXMgdG8gcHJldmVudCBzZWN1cml0eSBpc3N1ZXMgd2hlbiB0aGUgYXNzZXJ0aW9uIGNoYW5nZXMgb3ZlciB0aW1lLCBob3dldmVyLCBsb25nbGl2ZWQgUlQgaGVscHMgcmV0YWluaW5nIHRoZSBzZXNzaW9uXG4gICAgICogQHBhcmFtIHJlcXVlc3RcbiAgICAgKi9cbiAgICBhc3luYyBnZXRDYWNoZWRBdXRoZW50aWNhdGlvblJlc3VsdChyZXF1ZXN0KSB7XG4gICAgICAgIC8vIGxvb2sgaW4gdGhlIGNhY2hlIGZvciB0aGUgYWNjZXNzX3Rva2VuIHdoaWNoIG1hdGNoZXMgdGhlIGluY29taW5nX2Fzc2VydGlvblxuICAgICAgICBjb25zdCBjYWNoZWRBY2Nlc3NUb2tlbiA9IHRoaXMucmVhZEFjY2Vzc1Rva2VuRnJvbUNhY2hlRm9yT0JPKHRoaXMuY29uZmlnLmF1dGhPcHRpb25zLmNsaWVudElkLCByZXF1ZXN0KTtcbiAgICAgICAgaWYgKCFjYWNoZWRBY2Nlc3NUb2tlbikge1xuICAgICAgICAgICAgLy8gTXVzdCByZWZyZXNoIGR1ZSB0byBub24tZXhpc3RlbnQgYWNjZXNzX3Rva2VuLlxuICAgICAgICAgICAgdGhpcy5zZXJ2ZXJUZWxlbWV0cnlNYW5hZ2VyPy5zZXRDYWNoZU91dGNvbWUoQ2FjaGVPdXRjb21lLk5PX0NBQ0hFRF9BQ0NFU1NfVE9LRU4pO1xuICAgICAgICAgICAgdGhpcy5sb2dnZXIuaW5mbyhcIlNpbGVudEZsb3dDbGllbnQ6YWNxdWlyZUNhY2hlZFRva2VuIC0gTm8gYWNjZXNzIHRva2VuIGZvdW5kIGluIGNhY2hlIGZvciB0aGUgZ2l2ZW4gcHJvcGVydGllcy5cIik7XG4gICAgICAgICAgICB0aHJvdyBjcmVhdGVDbGllbnRBdXRoRXJyb3IoQ2xpZW50QXV0aEVycm9yQ29kZXMudG9rZW5SZWZyZXNoUmVxdWlyZWQpO1xuICAgICAgICB9XG4gICAgICAgIGVsc2UgaWYgKFRpbWVVdGlscy5pc1Rva2VuRXhwaXJlZChjYWNoZWRBY2Nlc3NUb2tlbi5leHBpcmVzT24sIHRoaXMuY29uZmlnLnN5c3RlbU9wdGlvbnMudG9rZW5SZW5ld2FsT2Zmc2V0U2Vjb25kcykpIHtcbiAgICAgICAgICAgIC8vIEFjY2VzcyB0b2tlbiBleHBpcmVkLCB3aWxsIG5lZWQgdG8gcmVuZXdlZFxuICAgICAgICAgICAgdGhpcy5zZXJ2ZXJUZWxlbWV0cnlNYW5hZ2VyPy5zZXRDYWNoZU91dGNvbWUoQ2FjaGVPdXRjb21lLkNBQ0hFRF9BQ0NFU1NfVE9LRU5fRVhQSVJFRCk7XG4gICAgICAgICAgICB0aGlzLmxvZ2dlci5pbmZvKGBPbmJlaGFsZm9mRmxvdzpnZXRDYWNoZWRBdXRoZW50aWNhdGlvblJlc3VsdCAtIENhY2hlZCBhY2Nlc3MgdG9rZW4gaXMgZXhwaXJlZCBvciB3aWxsIGV4cGlyZSB3aXRoaW4gJHt0aGlzLmNvbmZpZy5zeXN0ZW1PcHRpb25zLnRva2VuUmVuZXdhbE9mZnNldFNlY29uZHN9IHNlY29uZHMuYCk7XG4gICAgICAgICAgICB0aHJvdyBjcmVhdGVDbGllbnRBdXRoRXJyb3IoQ2xpZW50QXV0aEVycm9yQ29kZXMudG9rZW5SZWZyZXNoUmVxdWlyZWQpO1xuICAgICAgICB9XG4gICAgICAgIC8vIGZldGNoIHRoZSBpZFRva2VuIGZyb20gY2FjaGVcbiAgICAgICAgY29uc3QgY2FjaGVkSWRUb2tlbiA9IHRoaXMucmVhZElkVG9rZW5Gcm9tQ2FjaGVGb3JPQk8oY2FjaGVkQWNjZXNzVG9rZW4uaG9tZUFjY291bnRJZCk7XG4gICAgICAgIGxldCBpZFRva2VuQ2xhaW1zO1xuICAgICAgICBsZXQgY2FjaGVkQWNjb3VudCA9IG51bGw7XG4gICAgICAgIGlmIChjYWNoZWRJZFRva2VuKSB7XG4gICAgICAgICAgICBpZFRva2VuQ2xhaW1zID0gQXV0aFRva2VuLmV4dHJhY3RUb2tlbkNsYWltcyhjYWNoZWRJZFRva2VuLnNlY3JldCwgRW5jb2RpbmdVdGlscy5iYXNlNjREZWNvZGUpO1xuICAgICAgICAgICAgY29uc3QgbG9jYWxBY2NvdW50SWQgPSBpZFRva2VuQ2xhaW1zLm9pZCB8fCBpZFRva2VuQ2xhaW1zLnN1YjtcbiAgICAgICAgICAgIGNvbnN0IGFjY291bnRJbmZvID0ge1xuICAgICAgICAgICAgICAgIGhvbWVBY2NvdW50SWQ6IGNhY2hlZElkVG9rZW4uaG9tZUFjY291bnRJZCxcbiAgICAgICAgICAgICAgICBlbnZpcm9ubWVudDogY2FjaGVkSWRUb2tlbi5lbnZpcm9ubWVudCxcbiAgICAgICAgICAgICAgICB0ZW5hbnRJZDogY2FjaGVkSWRUb2tlbi5yZWFsbSxcbiAgICAgICAgICAgICAgICB1c2VybmFtZTogQ29uc3RhbnRzLkVNUFRZX1NUUklORyxcbiAgICAgICAgICAgICAgICBsb2NhbEFjY291bnRJZDogbG9jYWxBY2NvdW50SWQgfHwgQ29uc3RhbnRzLkVNUFRZX1NUUklORyxcbiAgICAgICAgICAgIH07XG4gICAgICAgICAgICBjYWNoZWRBY2NvdW50ID0gdGhpcy5jYWNoZU1hbmFnZXIucmVhZEFjY291bnRGcm9tQ2FjaGUoYWNjb3VudEluZm8pO1xuICAgICAgICB9XG4gICAgICAgIC8vIGluY3JlbWVudCB0ZWxlbWV0cnkgY2FjaGUgaGl0IGNvdW50ZXJcbiAgICAgICAgaWYgKHRoaXMuY29uZmlnLnNlcnZlclRlbGVtZXRyeU1hbmFnZXIpIHtcbiAgICAgICAgICAgIHRoaXMuY29uZmlnLnNlcnZlclRlbGVtZXRyeU1hbmFnZXIuaW5jcmVtZW50Q2FjaGVIaXRzKCk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIFJlc3BvbnNlSGFuZGxlci5nZW5lcmF0ZUF1dGhlbnRpY2F0aW9uUmVzdWx0KHRoaXMuY3J5cHRvVXRpbHMsIHRoaXMuYXV0aG9yaXR5LCB7XG4gICAgICAgICAgICBhY2NvdW50OiBjYWNoZWRBY2NvdW50LFxuICAgICAgICAgICAgYWNjZXNzVG9rZW46IGNhY2hlZEFjY2Vzc1Rva2VuLFxuICAgICAgICAgICAgaWRUb2tlbjogY2FjaGVkSWRUb2tlbixcbiAgICAgICAgICAgIHJlZnJlc2hUb2tlbjogbnVsbCxcbiAgICAgICAgICAgIGFwcE1ldGFkYXRhOiBudWxsLFxuICAgICAgICB9LCB0cnVlLCByZXF1ZXN0LCBpZFRva2VuQ2xhaW1zKTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogcmVhZCBpZHRva2VuIGZyb20gY2FjaGUsIHRoaXMgaXMgYSBzcGVjaWZpYyBpbXBsZW1lbnRhdGlvbiBmb3IgT0JPIGFzIHRoZSByZXF1aXJlbWVudHMgZGlmZmVyIGZyb20gYSBnZW5lcmljIGxvb2t1cCBpbiB0aGUgY2FjaGVNYW5hZ2VyXG4gICAgICogQ2VydGFpbiB1c2UgY2FzZXMgb2YgT0JPIGZsb3cgZG8gbm90IGV4cGVjdCBhbiBpZFRva2VuIGluIHRoZSBjYWNoZS9vciBmcm9tIHRoZSBzZXJ2aWNlXG4gICAgICogQHBhcmFtIGF0SG9tZUFjY291bnRJZCB7c3RyaW5nfVxuICAgICAqL1xuICAgIHJlYWRJZFRva2VuRnJvbUNhY2hlRm9yT0JPKGF0SG9tZUFjY291bnRJZCkge1xuICAgICAgICBjb25zdCBpZFRva2VuRmlsdGVyID0ge1xuICAgICAgICAgICAgaG9tZUFjY291bnRJZDogYXRIb21lQWNjb3VudElkLFxuICAgICAgICAgICAgZW52aXJvbm1lbnQ6IHRoaXMuYXV0aG9yaXR5LmNhbm9uaWNhbEF1dGhvcml0eVVybENvbXBvbmVudHMuSG9zdE5hbWVBbmRQb3J0LFxuICAgICAgICAgICAgY3JlZGVudGlhbFR5cGU6IENyZWRlbnRpYWxUeXBlLklEX1RPS0VOLFxuICAgICAgICAgICAgY2xpZW50SWQ6IHRoaXMuY29uZmlnLmF1dGhPcHRpb25zLmNsaWVudElkLFxuICAgICAgICAgICAgcmVhbG06IHRoaXMuYXV0aG9yaXR5LnRlbmFudCxcbiAgICAgICAgfTtcbiAgICAgICAgY29uc3QgaWRUb2tlbk1hcCA9IHRoaXMuY2FjaGVNYW5hZ2VyLmdldElkVG9rZW5zQnlGaWx0ZXIoaWRUb2tlbkZpbHRlcik7XG4gICAgICAgIC8vIFdoZW4gYWNxdWlyaW5nIGEgdG9rZW4gb24gYmVoYWxmIG9mIGFuIGFwcGxpY2F0aW9uLCB0aGVyZSBtaWdodCBub3QgYmUgYW4gaWQgdG9rZW4gaW4gdGhlIGNhY2hlXG4gICAgICAgIGlmIChPYmplY3QudmFsdWVzKGlkVG9rZW5NYXApLmxlbmd0aCA8IDEpIHtcbiAgICAgICAgICAgIHJldHVybiBudWxsO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBPYmplY3QudmFsdWVzKGlkVG9rZW5NYXApWzBdO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBGZXRjaGVzIHRoZSBjYWNoZWQgYWNjZXNzIHRva2VuIGJhc2VkIG9uIGluY29taW5nIGFzc2VydGlvblxuICAgICAqIEBwYXJhbSBjbGllbnRJZFxuICAgICAqIEBwYXJhbSByZXF1ZXN0XG4gICAgICogQHBhcmFtIHVzZXJBc3NlcnRpb25IYXNoXG4gICAgICovXG4gICAgcmVhZEFjY2Vzc1Rva2VuRnJvbUNhY2hlRm9yT0JPKGNsaWVudElkLCByZXF1ZXN0KSB7XG4gICAgICAgIGNvbnN0IGF1dGhTY2hlbWUgPSByZXF1ZXN0LmF1dGhlbnRpY2F0aW9uU2NoZW1lIHx8IEF1dGhlbnRpY2F0aW9uU2NoZW1lLkJFQVJFUjtcbiAgICAgICAgLypcbiAgICAgICAgICogRGlzdGluZ3Vpc2ggYmV0d2VlbiBCZWFyZXIgYW5kIFBvUC9TU0ggdG9rZW4gY2FjaGUgdHlwZXNcbiAgICAgICAgICogQ2FzdCB0byBsb3dlcmNhc2UgdG8gaGFuZGxlIFwiYmVhcmVyXCIgZnJvbSBBREZTXG4gICAgICAgICAqL1xuICAgICAgICBjb25zdCBjcmVkZW50aWFsVHlwZSA9IGF1dGhTY2hlbWUgJiZcbiAgICAgICAgICAgIGF1dGhTY2hlbWUudG9Mb3dlckNhc2UoKSAhPT1cbiAgICAgICAgICAgICAgICBBdXRoZW50aWNhdGlvblNjaGVtZS5CRUFSRVIudG9Mb3dlckNhc2UoKVxuICAgICAgICAgICAgPyBDcmVkZW50aWFsVHlwZS5BQ0NFU1NfVE9LRU5fV0lUSF9BVVRIX1NDSEVNRVxuICAgICAgICAgICAgOiBDcmVkZW50aWFsVHlwZS5BQ0NFU1NfVE9LRU47XG4gICAgICAgIGNvbnN0IGFjY2Vzc1Rva2VuRmlsdGVyID0ge1xuICAgICAgICAgICAgY3JlZGVudGlhbFR5cGU6IGNyZWRlbnRpYWxUeXBlLFxuICAgICAgICAgICAgY2xpZW50SWQsXG4gICAgICAgICAgICB0YXJnZXQ6IFNjb3BlU2V0LmNyZWF0ZVNlYXJjaFNjb3Blcyh0aGlzLnNjb3BlU2V0LmFzQXJyYXkoKSksXG4gICAgICAgICAgICB0b2tlblR5cGU6IGF1dGhTY2hlbWUsXG4gICAgICAgICAgICBrZXlJZDogcmVxdWVzdC5zc2hLaWQsXG4gICAgICAgICAgICByZXF1ZXN0ZWRDbGFpbXNIYXNoOiByZXF1ZXN0LnJlcXVlc3RlZENsYWltc0hhc2gsXG4gICAgICAgICAgICB1c2VyQXNzZXJ0aW9uSGFzaDogdGhpcy51c2VyQXNzZXJ0aW9uSGFzaCxcbiAgICAgICAgfTtcbiAgICAgICAgY29uc3QgYWNjZXNzVG9rZW5zID0gdGhpcy5jYWNoZU1hbmFnZXIuZ2V0QWNjZXNzVG9rZW5zQnlGaWx0ZXIoYWNjZXNzVG9rZW5GaWx0ZXIpO1xuICAgICAgICBjb25zdCBudW1BY2Nlc3NUb2tlbnMgPSBhY2Nlc3NUb2tlbnMubGVuZ3RoO1xuICAgICAgICBpZiAobnVtQWNjZXNzVG9rZW5zIDwgMSkge1xuICAgICAgICAgICAgcmV0dXJuIG51bGw7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSBpZiAobnVtQWNjZXNzVG9rZW5zID4gMSkge1xuICAgICAgICAgICAgdGhyb3cgY3JlYXRlQ2xpZW50QXV0aEVycm9yKENsaWVudEF1dGhFcnJvckNvZGVzLm11bHRpcGxlTWF0Y2hpbmdUb2tlbnMpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBhY2Nlc3NUb2tlbnNbMF07XG4gICAgfVxuICAgIC8qKlxuICAgICAqIE1ha2UgYSBuZXR3b3JrIGNhbGwgdG8gdGhlIHNlcnZlciByZXF1ZXN0aW5nIGNyZWRlbnRpYWxzXG4gICAgICogQHBhcmFtIHJlcXVlc3RcbiAgICAgKiBAcGFyYW0gYXV0aG9yaXR5XG4gICAgICovXG4gICAgYXN5bmMgZXhlY3V0ZVRva2VuUmVxdWVzdChyZXF1ZXN0LCBhdXRob3JpdHksIHVzZXJBc3NlcnRpb25IYXNoKSB7XG4gICAgICAgIGNvbnN0IHF1ZXJ5UGFyYW1ldGVyc1N0cmluZyA9IHRoaXMuY3JlYXRlVG9rZW5RdWVyeVBhcmFtZXRlcnMocmVxdWVzdCk7XG4gICAgICAgIGNvbnN0IGVuZHBvaW50ID0gVXJsU3RyaW5nLmFwcGVuZFF1ZXJ5U3RyaW5nKGF1dGhvcml0eS50b2tlbkVuZHBvaW50LCBxdWVyeVBhcmFtZXRlcnNTdHJpbmcpO1xuICAgICAgICBjb25zdCByZXF1ZXN0Qm9keSA9IGF3YWl0IHRoaXMuY3JlYXRlVG9rZW5SZXF1ZXN0Qm9keShyZXF1ZXN0KTtcbiAgICAgICAgY29uc3QgaGVhZGVycyA9IHRoaXMuY3JlYXRlVG9rZW5SZXF1ZXN0SGVhZGVycygpO1xuICAgICAgICBjb25zdCB0aHVtYnByaW50ID0ge1xuICAgICAgICAgICAgY2xpZW50SWQ6IHRoaXMuY29uZmlnLmF1dGhPcHRpb25zLmNsaWVudElkLFxuICAgICAgICAgICAgYXV0aG9yaXR5OiByZXF1ZXN0LmF1dGhvcml0eSxcbiAgICAgICAgICAgIHNjb3BlczogcmVxdWVzdC5zY29wZXMsXG4gICAgICAgICAgICBjbGFpbXM6IHJlcXVlc3QuY2xhaW1zLFxuICAgICAgICAgICAgYXV0aGVudGljYXRpb25TY2hlbWU6IHJlcXVlc3QuYXV0aGVudGljYXRpb25TY2hlbWUsXG4gICAgICAgICAgICByZXNvdXJjZVJlcXVlc3RNZXRob2Q6IHJlcXVlc3QucmVzb3VyY2VSZXF1ZXN0TWV0aG9kLFxuICAgICAgICAgICAgcmVzb3VyY2VSZXF1ZXN0VXJpOiByZXF1ZXN0LnJlc291cmNlUmVxdWVzdFVyaSxcbiAgICAgICAgICAgIHNockNsYWltczogcmVxdWVzdC5zaHJDbGFpbXMsXG4gICAgICAgICAgICBzc2hLaWQ6IHJlcXVlc3Quc3NoS2lkLFxuICAgICAgICB9O1xuICAgICAgICBjb25zdCByZXFUaW1lc3RhbXAgPSBUaW1lVXRpbHMubm93U2Vjb25kcygpO1xuICAgICAgICBjb25zdCByZXNwb25zZSA9IGF3YWl0IHRoaXMuZXhlY3V0ZVBvc3RUb1Rva2VuRW5kcG9pbnQoZW5kcG9pbnQsIHJlcXVlc3RCb2R5LCBoZWFkZXJzLCB0aHVtYnByaW50LCByZXF1ZXN0LmNvcnJlbGF0aW9uSWQpO1xuICAgICAgICBjb25zdCByZXNwb25zZUhhbmRsZXIgPSBuZXcgUmVzcG9uc2VIYW5kbGVyKHRoaXMuY29uZmlnLmF1dGhPcHRpb25zLmNsaWVudElkLCB0aGlzLmNhY2hlTWFuYWdlciwgdGhpcy5jcnlwdG9VdGlscywgdGhpcy5sb2dnZXIsIHRoaXMuY29uZmlnLnNlcmlhbGl6YWJsZUNhY2hlLCB0aGlzLmNvbmZpZy5wZXJzaXN0ZW5jZVBsdWdpbik7XG4gICAgICAgIHJlc3BvbnNlSGFuZGxlci52YWxpZGF0ZVRva2VuUmVzcG9uc2UocmVzcG9uc2UuYm9keSk7XG4gICAgICAgIGNvbnN0IHRva2VuUmVzcG9uc2UgPSBhd2FpdCByZXNwb25zZUhhbmRsZXIuaGFuZGxlU2VydmVyVG9rZW5SZXNwb25zZShyZXNwb25zZS5ib2R5LCB0aGlzLmF1dGhvcml0eSwgcmVxVGltZXN0YW1wLCByZXF1ZXN0LCB1bmRlZmluZWQsIHVzZXJBc3NlcnRpb25IYXNoKTtcbiAgICAgICAgcmV0dXJuIHRva2VuUmVzcG9uc2U7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIGdlbmVyYXRlIGEgc2VydmVyIHJlcXVlc3QgaW4gYWNjZXBhYmxlIGZvcm1hdFxuICAgICAqIEBwYXJhbSByZXF1ZXN0XG4gICAgICovXG4gICAgYXN5bmMgY3JlYXRlVG9rZW5SZXF1ZXN0Qm9keShyZXF1ZXN0KSB7XG4gICAgICAgIGNvbnN0IHBhcmFtZXRlckJ1aWxkZXIgPSBuZXcgUmVxdWVzdFBhcmFtZXRlckJ1aWxkZXIoKTtcbiAgICAgICAgcGFyYW1ldGVyQnVpbGRlci5hZGRDbGllbnRJZCh0aGlzLmNvbmZpZy5hdXRoT3B0aW9ucy5jbGllbnRJZCk7XG4gICAgICAgIHBhcmFtZXRlckJ1aWxkZXIuYWRkU2NvcGVzKHJlcXVlc3Quc2NvcGVzKTtcbiAgICAgICAgcGFyYW1ldGVyQnVpbGRlci5hZGRHcmFudFR5cGUoR3JhbnRUeXBlLkpXVF9CRUFSRVIpO1xuICAgICAgICBwYXJhbWV0ZXJCdWlsZGVyLmFkZENsaWVudEluZm8oKTtcbiAgICAgICAgcGFyYW1ldGVyQnVpbGRlci5hZGRMaWJyYXJ5SW5mbyh0aGlzLmNvbmZpZy5saWJyYXJ5SW5mbyk7XG4gICAgICAgIHBhcmFtZXRlckJ1aWxkZXIuYWRkQXBwbGljYXRpb25UZWxlbWV0cnkodGhpcy5jb25maWcudGVsZW1ldHJ5LmFwcGxpY2F0aW9uKTtcbiAgICAgICAgcGFyYW1ldGVyQnVpbGRlci5hZGRUaHJvdHRsaW5nKCk7XG4gICAgICAgIGlmICh0aGlzLnNlcnZlclRlbGVtZXRyeU1hbmFnZXIpIHtcbiAgICAgICAgICAgIHBhcmFtZXRlckJ1aWxkZXIuYWRkU2VydmVyVGVsZW1ldHJ5KHRoaXMuc2VydmVyVGVsZW1ldHJ5TWFuYWdlcik7XG4gICAgICAgIH1cbiAgICAgICAgY29uc3QgY29ycmVsYXRpb25JZCA9IHJlcXVlc3QuY29ycmVsYXRpb25JZCB8fFxuICAgICAgICAgICAgdGhpcy5jb25maWcuY3J5cHRvSW50ZXJmYWNlLmNyZWF0ZU5ld0d1aWQoKTtcbiAgICAgICAgcGFyYW1ldGVyQnVpbGRlci5hZGRDb3JyZWxhdGlvbklkKGNvcnJlbGF0aW9uSWQpO1xuICAgICAgICBwYXJhbWV0ZXJCdWlsZGVyLmFkZFJlcXVlc3RUb2tlblVzZShBQURTZXJ2ZXJQYXJhbUtleXMuT05fQkVIQUxGX09GKTtcbiAgICAgICAgcGFyYW1ldGVyQnVpbGRlci5hZGRPYm9Bc3NlcnRpb24ocmVxdWVzdC5vYm9Bc3NlcnRpb24pO1xuICAgICAgICBpZiAodGhpcy5jb25maWcuY2xpZW50Q3JlZGVudGlhbHMuY2xpZW50U2VjcmV0KSB7XG4gICAgICAgICAgICBwYXJhbWV0ZXJCdWlsZGVyLmFkZENsaWVudFNlY3JldCh0aGlzLmNvbmZpZy5jbGllbnRDcmVkZW50aWFscy5jbGllbnRTZWNyZXQpO1xuICAgICAgICB9XG4gICAgICAgIGNvbnN0IGNsaWVudEFzc2VydGlvbiA9IHRoaXMuY29uZmlnLmNsaWVudENyZWRlbnRpYWxzLmNsaWVudEFzc2VydGlvbjtcbiAgICAgICAgaWYgKGNsaWVudEFzc2VydGlvbikge1xuICAgICAgICAgICAgcGFyYW1ldGVyQnVpbGRlci5hZGRDbGllbnRBc3NlcnRpb24oYXdhaXQgZ2V0Q2xpZW50QXNzZXJ0aW9uKGNsaWVudEFzc2VydGlvbi5hc3NlcnRpb24sIHRoaXMuY29uZmlnLmF1dGhPcHRpb25zLmNsaWVudElkLCByZXF1ZXN0LnJlc291cmNlUmVxdWVzdFVyaSkpO1xuICAgICAgICAgICAgcGFyYW1ldGVyQnVpbGRlci5hZGRDbGllbnRBc3NlcnRpb25UeXBlKGNsaWVudEFzc2VydGlvbi5hc3NlcnRpb25UeXBlKTtcbiAgICAgICAgfVxuICAgICAgICBpZiAocmVxdWVzdC5jbGFpbXMgfHxcbiAgICAgICAgICAgICh0aGlzLmNvbmZpZy5hdXRoT3B0aW9ucy5jbGllbnRDYXBhYmlsaXRpZXMgJiZcbiAgICAgICAgICAgICAgICB0aGlzLmNvbmZpZy5hdXRoT3B0aW9ucy5jbGllbnRDYXBhYmlsaXRpZXMubGVuZ3RoID4gMCkpIHtcbiAgICAgICAgICAgIHBhcmFtZXRlckJ1aWxkZXIuYWRkQ2xhaW1zKHJlcXVlc3QuY2xhaW1zLCB0aGlzLmNvbmZpZy5hdXRoT3B0aW9ucy5jbGllbnRDYXBhYmlsaXRpZXMpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBwYXJhbWV0ZXJCdWlsZGVyLmNyZWF0ZVF1ZXJ5U3RyaW5nKCk7XG4gICAgfVxufVxuXG5leHBvcnQgeyBPbkJlaGFsZk9mQ2xpZW50IH07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1PbkJlaGFsZk9mQ2xpZW50Lm1qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/msal-node/dist/client/OnBehalfOfClient.mjs\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/msal-node/dist/client/PublicClientApplication.mjs":
/*!*******************************************************************************!*\
  !*** ./node_modules/@azure/msal-node/dist/client/PublicClientApplication.mjs ***!
  \*******************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   PublicClientApplication: () => (/* binding */ PublicClientApplication)\n/* harmony export */ });\n/* harmony import */ var _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/Constants.mjs */ \"(rsc)/./node_modules/@azure/msal-node/dist/utils/Constants.mjs\");\n/* harmony import */ var _azure_msal_common__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @azure/msal-common */ \"(rsc)/./node_modules/@azure/msal-common/dist/telemetry/server/ServerTelemetryManager.mjs\");\n/* harmony import */ var _azure_msal_common__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @azure/msal-common */ \"(rsc)/./node_modules/@azure/msal-common/dist/error/AuthError.mjs\");\n/* harmony import */ var _azure_msal_common__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @azure/msal-common */ \"(rsc)/./node_modules/@azure/msal-common/dist/utils/Constants.mjs\");\n/* harmony import */ var _azure_msal_common__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @azure/msal-common */ \"(rsc)/./node_modules/@azure/msal-common/dist/constants/AADServerParamKeys.mjs\");\n/* harmony import */ var _azure_msal_common__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @azure/msal-common */ \"(rsc)/./node_modules/@azure/msal-common/dist/error/ServerError.mjs\");\n/* harmony import */ var _ClientApplication_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./ClientApplication.mjs */ \"(rsc)/./node_modules/@azure/msal-node/dist/client/ClientApplication.mjs\");\n/* harmony import */ var _error_NodeAuthError_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../error/NodeAuthError.mjs */ \"(rsc)/./node_modules/@azure/msal-node/dist/error/NodeAuthError.mjs\");\n/* harmony import */ var _network_LoopbackClient_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../network/LoopbackClient.mjs */ \"(rsc)/./node_modules/@azure/msal-node/dist/network/LoopbackClient.mjs\");\n/* harmony import */ var _DeviceCodeClient_mjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./DeviceCodeClient.mjs */ \"(rsc)/./node_modules/@azure/msal-node/dist/client/DeviceCodeClient.mjs\");\n/* harmony import */ var _packageMetadata_mjs__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../packageMetadata.mjs */ \"(rsc)/./node_modules/@azure/msal-node/dist/packageMetadata.mjs\");\n/*! @azure/msal-node v2.12.0 2024-07-23 */\n\n\n\n\n\n\n\n\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n/**\n * This class is to be used to acquire tokens for public client applications (desktop, mobile). Public client applications\n * are not trusted to safely store application secrets, and therefore can only request tokens in the name of an user.\n * @public\n */\nclass PublicClientApplication extends _ClientApplication_mjs__WEBPACK_IMPORTED_MODULE_1__.ClientApplication {\n    /**\n     * Important attributes in the Configuration object for auth are:\n     * - clientID: the application ID of your application. You can obtain one by registering your application with our Application registration portal.\n     * - authority: the authority URL for your application.\n     *\n     * AAD authorities are of the form https://login.microsoftonline.com/\\{Enter_the_Tenant_Info_Here\\}.\n     * - If your application supports Accounts in one organizational directory, replace \"Enter_the_Tenant_Info_Here\" value with the Tenant Id or Tenant name (for example, contoso.microsoft.com).\n     * - If your application supports Accounts in any organizational directory, replace \"Enter_the_Tenant_Info_Here\" value with organizations.\n     * - If your application supports Accounts in any organizational directory and personal Microsoft accounts, replace \"Enter_the_Tenant_Info_Here\" value with common.\n     * - To restrict support to Personal Microsoft accounts only, replace \"Enter_the_Tenant_Info_Here\" value with consumers.\n     *\n     * Azure B2C authorities are of the form https://\\{instance\\}/\\{tenant\\}/\\{policy\\}. Each policy is considered\n     * its own authority. You will have to set the all of the knownAuthorities at the time of the client application\n     * construction.\n     *\n     * ADFS authorities are of the form https://\\{instance\\}/adfs.\n     */\n    constructor(configuration) {\n        super(configuration);\n        if (this.config.broker.nativeBrokerPlugin) {\n            if (this.config.broker.nativeBrokerPlugin.isBrokerAvailable) {\n                this.nativeBrokerPlugin = this.config.broker.nativeBrokerPlugin;\n                this.nativeBrokerPlugin.setLogger(this.config.system.loggerOptions);\n            }\n            else {\n                this.logger.warning(\"NativeBroker implementation was provided but the broker is unavailable.\");\n            }\n        }\n        this.skus = _azure_msal_common__WEBPACK_IMPORTED_MODULE_6__.ServerTelemetryManager.makeExtraSkuString({\n            libraryName: _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.Constants.MSAL_SKU,\n            libraryVersion: _packageMetadata_mjs__WEBPACK_IMPORTED_MODULE_5__.version,\n        });\n    }\n    /**\n     * Acquires a token from the authority using OAuth2.0 device code flow.\n     * This flow is designed for devices that do not have access to a browser or have input constraints.\n     * The authorization server issues a DeviceCode object with a verification code, an end-user code,\n     * and the end-user verification URI. The DeviceCode object is provided through a callback, and the end-user should be\n     * instructed to use another device to navigate to the verification URI to input credentials.\n     * Since the client cannot receive incoming requests, it polls the authorization server repeatedly\n     * until the end-user completes input of credentials.\n     */\n    async acquireTokenByDeviceCode(request) {\n        this.logger.info(\"acquireTokenByDeviceCode called\", request.correlationId);\n        const validRequest = Object.assign(request, await this.initializeBaseRequest(request));\n        const serverTelemetryManager = this.initializeServerTelemetryManager(_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.ApiId.acquireTokenByDeviceCode, validRequest.correlationId);\n        try {\n            const deviceCodeConfig = await this.buildOauthClientConfiguration(validRequest.authority, validRequest.correlationId, serverTelemetryManager, undefined, request.azureCloudOptions);\n            const deviceCodeClient = new _DeviceCodeClient_mjs__WEBPACK_IMPORTED_MODULE_4__.DeviceCodeClient(deviceCodeConfig);\n            this.logger.verbose(\"Device code client created\", validRequest.correlationId);\n            return await deviceCodeClient.acquireToken(validRequest);\n        }\n        catch (e) {\n            if (e instanceof _azure_msal_common__WEBPACK_IMPORTED_MODULE_7__.AuthError) {\n                e.setCorrelationId(validRequest.correlationId);\n            }\n            serverTelemetryManager.cacheFailedRequest(e);\n            throw e;\n        }\n    }\n    /**\n     * Acquires a token interactively via the browser by requesting an authorization code then exchanging it for a token.\n     */\n    async acquireTokenInteractive(request) {\n        const correlationId = request.correlationId || this.cryptoProvider.createNewGuid();\n        this.logger.trace(\"acquireTokenInteractive called\", correlationId);\n        const { openBrowser, successTemplate, errorTemplate, windowHandle, loopbackClient: customLoopbackClient, ...remainingProperties } = request;\n        if (this.nativeBrokerPlugin) {\n            const brokerRequest = {\n                ...remainingProperties,\n                clientId: this.config.auth.clientId,\n                scopes: request.scopes || _azure_msal_common__WEBPACK_IMPORTED_MODULE_8__.OIDC_DEFAULT_SCOPES,\n                redirectUri: `${_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.Constants.HTTP_PROTOCOL}${_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.Constants.LOCALHOST}`,\n                authority: request.authority || this.config.auth.authority,\n                correlationId: correlationId,\n                extraParameters: {\n                    ...remainingProperties.extraQueryParameters,\n                    ...remainingProperties.tokenQueryParameters,\n                    [_azure_msal_common__WEBPACK_IMPORTED_MODULE_9__.X_CLIENT_EXTRA_SKU]: this.skus,\n                },\n                accountId: remainingProperties.account?.nativeAccountId,\n            };\n            return this.nativeBrokerPlugin.acquireTokenInteractive(brokerRequest, windowHandle);\n        }\n        const { verifier, challenge } = await this.cryptoProvider.generatePkceCodes();\n        const loopbackClient = customLoopbackClient || new _network_LoopbackClient_mjs__WEBPACK_IMPORTED_MODULE_3__.LoopbackClient();\n        let authCodeResponse = {};\n        let authCodeListenerError = null;\n        try {\n            const authCodeListener = loopbackClient\n                .listenForAuthCode(successTemplate, errorTemplate)\n                .then((response) => {\n                authCodeResponse = response;\n            })\n                .catch((e) => {\n                // Store the promise instead of throwing so we can control when its thrown\n                authCodeListenerError = e;\n            });\n            // Wait for server to be listening\n            const redirectUri = await this.waitForRedirectUri(loopbackClient);\n            const validRequest = {\n                ...remainingProperties,\n                correlationId: correlationId,\n                scopes: request.scopes || _azure_msal_common__WEBPACK_IMPORTED_MODULE_8__.OIDC_DEFAULT_SCOPES,\n                redirectUri: redirectUri,\n                responseMode: _azure_msal_common__WEBPACK_IMPORTED_MODULE_8__.ResponseMode.QUERY,\n                codeChallenge: challenge,\n                codeChallengeMethod: _azure_msal_common__WEBPACK_IMPORTED_MODULE_8__.CodeChallengeMethodValues.S256,\n            };\n            const authCodeUrl = await this.getAuthCodeUrl(validRequest);\n            await openBrowser(authCodeUrl);\n            await authCodeListener;\n            if (authCodeListenerError) {\n                throw authCodeListenerError;\n            }\n            if (authCodeResponse.error) {\n                throw new _azure_msal_common__WEBPACK_IMPORTED_MODULE_10__.ServerError(authCodeResponse.error, authCodeResponse.error_description, authCodeResponse.suberror);\n            }\n            else if (!authCodeResponse.code) {\n                throw _error_NodeAuthError_mjs__WEBPACK_IMPORTED_MODULE_2__.NodeAuthError.createNoAuthCodeInResponseError();\n            }\n            const clientInfo = authCodeResponse.client_info;\n            const tokenRequest = {\n                code: authCodeResponse.code,\n                codeVerifier: verifier,\n                clientInfo: clientInfo || _azure_msal_common__WEBPACK_IMPORTED_MODULE_8__.Constants.EMPTY_STRING,\n                ...validRequest,\n            };\n            return await this.acquireTokenByCode(tokenRequest); // Await this so the server doesn't close prematurely\n        }\n        finally {\n            loopbackClient.closeServer();\n        }\n    }\n    /**\n     * Returns a token retrieved either from the cache or by exchanging the refresh token for a fresh access token. If brokering is enabled the token request will be serviced by the broker.\n     * @param request\n     * @returns\n     */\n    async acquireTokenSilent(request) {\n        const correlationId = request.correlationId || this.cryptoProvider.createNewGuid();\n        this.logger.trace(\"acquireTokenSilent called\", correlationId);\n        if (this.nativeBrokerPlugin) {\n            const brokerRequest = {\n                ...request,\n                clientId: this.config.auth.clientId,\n                scopes: request.scopes || _azure_msal_common__WEBPACK_IMPORTED_MODULE_8__.OIDC_DEFAULT_SCOPES,\n                redirectUri: `${_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.Constants.HTTP_PROTOCOL}${_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.Constants.LOCALHOST}`,\n                authority: request.authority || this.config.auth.authority,\n                correlationId: correlationId,\n                extraParameters: {\n                    ...request.tokenQueryParameters,\n                    [_azure_msal_common__WEBPACK_IMPORTED_MODULE_9__.X_CLIENT_EXTRA_SKU]: this.skus,\n                },\n                accountId: request.account.nativeAccountId,\n                forceRefresh: request.forceRefresh || false,\n            };\n            return this.nativeBrokerPlugin.acquireTokenSilent(brokerRequest);\n        }\n        return super.acquireTokenSilent(request);\n    }\n    /**\n     * Removes cache artifacts associated with the given account\n     * @param request\n     * @returns\n     */\n    async signOut(request) {\n        if (this.nativeBrokerPlugin && request.account.nativeAccountId) {\n            const signoutRequest = {\n                clientId: this.config.auth.clientId,\n                accountId: request.account.nativeAccountId,\n                correlationId: request.correlationId ||\n                    this.cryptoProvider.createNewGuid(),\n            };\n            await this.nativeBrokerPlugin.signOut(signoutRequest);\n        }\n        await this.getTokenCache().removeAccount(request.account);\n    }\n    /**\n     * Returns all cached accounts for this application. If brokering is enabled this request will be serviced by the broker.\n     * @returns\n     */\n    async getAllAccounts() {\n        if (this.nativeBrokerPlugin) {\n            const correlationId = this.cryptoProvider.createNewGuid();\n            return this.nativeBrokerPlugin.getAllAccounts(this.config.auth.clientId, correlationId);\n        }\n        return this.getTokenCache().getAllAccounts();\n    }\n    /**\n     * Attempts to retrieve the redirectUri from the loopback server. If the loopback server does not start listening for requests within the timeout this will throw.\n     * @param loopbackClient\n     * @returns\n     */\n    async waitForRedirectUri(loopbackClient) {\n        return new Promise((resolve, reject) => {\n            let ticks = 0;\n            const id = setInterval(() => {\n                if (_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.LOOPBACK_SERVER_CONSTANTS.TIMEOUT_MS /\n                    _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.LOOPBACK_SERVER_CONSTANTS.INTERVAL_MS <\n                    ticks) {\n                    clearInterval(id);\n                    reject(_error_NodeAuthError_mjs__WEBPACK_IMPORTED_MODULE_2__.NodeAuthError.createLoopbackServerTimeoutError());\n                    return;\n                }\n                try {\n                    const r = loopbackClient.getRedirectUri();\n                    clearInterval(id);\n                    resolve(r);\n                    return;\n                }\n                catch (e) {\n                    if (e instanceof _azure_msal_common__WEBPACK_IMPORTED_MODULE_7__.AuthError &&\n                        e.errorCode ===\n                            _error_NodeAuthError_mjs__WEBPACK_IMPORTED_MODULE_2__.NodeAuthErrorMessage.noLoopbackServerExists.code) {\n                        // Loopback server is not listening yet\n                        ticks++;\n                        return;\n                    }\n                    clearInterval(id);\n                    reject(e);\n                    return;\n                }\n            }, _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.LOOPBACK_SERVER_CONSTANTS.INTERVAL_MS);\n        });\n    }\n}\n\n\n//# sourceMappingURL=PublicClientApplication.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/msal-node/dist/client/PublicClientApplication.mjs\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/msal-node/dist/client/UsernamePasswordClient.mjs":
/*!******************************************************************************!*\
  !*** ./node_modules/@azure/msal-node/dist/client/UsernamePasswordClient.mjs ***!
  \******************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   UsernamePasswordClient: () => (/* binding */ UsernamePasswordClient)\n/* harmony export */ });\n/* harmony import */ var _azure_msal_common__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @azure/msal-common */ \"(rsc)/./node_modules/@azure/msal-common/dist/client/BaseClient.mjs\");\n/* harmony import */ var _azure_msal_common__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @azure/msal-common */ \"(rsc)/./node_modules/@azure/msal-common/dist/utils/TimeUtils.mjs\");\n/* harmony import */ var _azure_msal_common__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @azure/msal-common */ \"(rsc)/./node_modules/@azure/msal-common/dist/response/ResponseHandler.mjs\");\n/* harmony import */ var _azure_msal_common__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @azure/msal-common */ \"(rsc)/./node_modules/@azure/msal-common/dist/url/UrlString.mjs\");\n/* harmony import */ var _azure_msal_common__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @azure/msal-common */ \"(rsc)/./node_modules/@azure/msal-common/dist/account/CcsCredential.mjs\");\n/* harmony import */ var _azure_msal_common__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @azure/msal-common */ \"(rsc)/./node_modules/@azure/msal-common/dist/request/RequestParameterBuilder.mjs\");\n/* harmony import */ var _azure_msal_common__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @azure/msal-common */ \"(rsc)/./node_modules/@azure/msal-common/dist/utils/Constants.mjs\");\n/* harmony import */ var _azure_msal_common__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @azure/msal-common */ \"(rsc)/./node_modules/@azure/msal-common/dist/utils/ClientAssertionUtils.mjs\");\n/* harmony import */ var _azure_msal_common__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @azure/msal-common */ \"(rsc)/./node_modules/@azure/msal-common/dist/utils/StringUtils.mjs\");\n/*! @azure/msal-node v2.12.0 2024-07-23 */\n\n\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n/**\n * Oauth2.0 Password grant client\n * Note: We are only supporting public clients for password grant and for purely testing purposes\n */\nclass UsernamePasswordClient extends _azure_msal_common__WEBPACK_IMPORTED_MODULE_0__.BaseClient {\n    constructor(configuration) {\n        super(configuration);\n    }\n    /**\n     * API to acquire a token by passing the username and password to the service in exchage of credentials\n     * password_grant\n     * @param request\n     */\n    async acquireToken(request) {\n        this.logger.info(\"in acquireToken call in username-password client\");\n        const reqTimestamp = _azure_msal_common__WEBPACK_IMPORTED_MODULE_1__.nowSeconds();\n        const response = await this.executeTokenRequest(this.authority, request);\n        const responseHandler = new _azure_msal_common__WEBPACK_IMPORTED_MODULE_2__.ResponseHandler(this.config.authOptions.clientId, this.cacheManager, this.cryptoUtils, this.logger, this.config.serializableCache, this.config.persistencePlugin);\n        // Validate response. This function throws a server error if an error is returned by the server.\n        responseHandler.validateTokenResponse(response.body);\n        const tokenResponse = responseHandler.handleServerTokenResponse(response.body, this.authority, reqTimestamp, request);\n        return tokenResponse;\n    }\n    /**\n     * Executes POST request to token endpoint\n     * @param authority\n     * @param request\n     */\n    async executeTokenRequest(authority, request) {\n        const queryParametersString = this.createTokenQueryParameters(request);\n        const endpoint = _azure_msal_common__WEBPACK_IMPORTED_MODULE_3__.UrlString.appendQueryString(authority.tokenEndpoint, queryParametersString);\n        const requestBody = await this.createTokenRequestBody(request);\n        const headers = this.createTokenRequestHeaders({\n            credential: request.username,\n            type: _azure_msal_common__WEBPACK_IMPORTED_MODULE_4__.CcsCredentialType.UPN,\n        });\n        const thumbprint = {\n            clientId: this.config.authOptions.clientId,\n            authority: authority.canonicalAuthority,\n            scopes: request.scopes,\n            claims: request.claims,\n            authenticationScheme: request.authenticationScheme,\n            resourceRequestMethod: request.resourceRequestMethod,\n            resourceRequestUri: request.resourceRequestUri,\n            shrClaims: request.shrClaims,\n            sshKid: request.sshKid,\n        };\n        return this.executePostToTokenEndpoint(endpoint, requestBody, headers, thumbprint, request.correlationId);\n    }\n    /**\n     * Generates a map for all the params to be sent to the service\n     * @param request\n     */\n    async createTokenRequestBody(request) {\n        const parameterBuilder = new _azure_msal_common__WEBPACK_IMPORTED_MODULE_5__.RequestParameterBuilder();\n        parameterBuilder.addClientId(this.config.authOptions.clientId);\n        parameterBuilder.addUsername(request.username);\n        parameterBuilder.addPassword(request.password);\n        parameterBuilder.addScopes(request.scopes);\n        parameterBuilder.addResponseTypeForTokenAndIdToken();\n        parameterBuilder.addGrantType(_azure_msal_common__WEBPACK_IMPORTED_MODULE_6__.GrantType.RESOURCE_OWNER_PASSWORD_GRANT);\n        parameterBuilder.addClientInfo();\n        parameterBuilder.addLibraryInfo(this.config.libraryInfo);\n        parameterBuilder.addApplicationTelemetry(this.config.telemetry.application);\n        parameterBuilder.addThrottling();\n        if (this.serverTelemetryManager) {\n            parameterBuilder.addServerTelemetry(this.serverTelemetryManager);\n        }\n        const correlationId = request.correlationId ||\n            this.config.cryptoInterface.createNewGuid();\n        parameterBuilder.addCorrelationId(correlationId);\n        if (this.config.clientCredentials.clientSecret) {\n            parameterBuilder.addClientSecret(this.config.clientCredentials.clientSecret);\n        }\n        const clientAssertion = this.config.clientCredentials.clientAssertion;\n        if (clientAssertion) {\n            parameterBuilder.addClientAssertion(await (0,_azure_msal_common__WEBPACK_IMPORTED_MODULE_7__.getClientAssertion)(clientAssertion.assertion, this.config.authOptions.clientId, request.resourceRequestUri));\n            parameterBuilder.addClientAssertionType(clientAssertion.assertionType);\n        }\n        if (!_azure_msal_common__WEBPACK_IMPORTED_MODULE_8__.StringUtils.isEmptyObj(request.claims) ||\n            (this.config.authOptions.clientCapabilities &&\n                this.config.authOptions.clientCapabilities.length > 0)) {\n            parameterBuilder.addClaims(request.claims, this.config.authOptions.clientCapabilities);\n        }\n        if (this.config.systemOptions.preventCorsPreflight &&\n            request.username) {\n            parameterBuilder.addCcsUpn(request.username);\n        }\n        return parameterBuilder.createQueryString();\n    }\n}\n\n\n//# sourceMappingURL=UsernamePasswordClient.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/msal-node/dist/client/UsernamePasswordClient.mjs\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/msal-node/dist/config/Configuration.mjs":
/*!*********************************************************************!*\
  !*** ./node_modules/@azure/msal-node/dist/config/Configuration.mjs ***!
  \*********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   buildAppConfiguration: () => (/* binding */ buildAppConfiguration),\n/* harmony export */   buildManagedIdentityConfiguration: () => (/* binding */ buildManagedIdentityConfiguration)\n/* harmony export */ });\n/* harmony import */ var _azure_msal_common__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @azure/msal-common */ \"(rsc)/./node_modules/@azure/msal-common/dist/utils/Constants.mjs\");\n/* harmony import */ var _azure_msal_common__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @azure/msal-common */ \"(rsc)/./node_modules/@azure/msal-common/dist/authority/ProtocolMode.mjs\");\n/* harmony import */ var _azure_msal_common__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @azure/msal-common */ \"(rsc)/./node_modules/@azure/msal-common/dist/authority/AuthorityOptions.mjs\");\n/* harmony import */ var _azure_msal_common__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @azure/msal-common */ \"(rsc)/./node_modules/@azure/msal-common/dist/logger/Logger.mjs\");\n/* harmony import */ var _network_HttpClient_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../network/HttpClient.mjs */ \"(rsc)/./node_modules/@azure/msal-node/dist/network/HttpClient.mjs\");\n/* harmony import */ var _ManagedIdentityId_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./ManagedIdentityId.mjs */ \"(rsc)/./node_modules/@azure/msal-node/dist/config/ManagedIdentityId.mjs\");\n/* harmony import */ var _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils/Constants.mjs */ \"(rsc)/./node_modules/@azure/msal-node/dist/utils/Constants.mjs\");\n/* harmony import */ var _retry_LinearRetryPolicy_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../retry/LinearRetryPolicy.mjs */ \"(rsc)/./node_modules/@azure/msal-node/dist/retry/LinearRetryPolicy.mjs\");\n/* harmony import */ var _network_HttpClientWithRetries_mjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../network/HttpClientWithRetries.mjs */ \"(rsc)/./node_modules/@azure/msal-node/dist/network/HttpClientWithRetries.mjs\");\n/* harmony import */ var _error_NodeAuthError_mjs__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../error/NodeAuthError.mjs */ \"(rsc)/./node_modules/@azure/msal-node/dist/error/NodeAuthError.mjs\");\n/*! @azure/msal-node v2.12.0 2024-07-23 */\n\n\n\n\n\n\n\n\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\nconst DEFAULT_AUTH_OPTIONS = {\n    clientId: _azure_msal_common__WEBPACK_IMPORTED_MODULE_6__.Constants.EMPTY_STRING,\n    authority: _azure_msal_common__WEBPACK_IMPORTED_MODULE_6__.Constants.DEFAULT_AUTHORITY,\n    clientSecret: _azure_msal_common__WEBPACK_IMPORTED_MODULE_6__.Constants.EMPTY_STRING,\n    clientAssertion: _azure_msal_common__WEBPACK_IMPORTED_MODULE_6__.Constants.EMPTY_STRING,\n    clientCertificate: {\n        thumbprint: _azure_msal_common__WEBPACK_IMPORTED_MODULE_6__.Constants.EMPTY_STRING,\n        thumbprintSha256: _azure_msal_common__WEBPACK_IMPORTED_MODULE_6__.Constants.EMPTY_STRING,\n        privateKey: _azure_msal_common__WEBPACK_IMPORTED_MODULE_6__.Constants.EMPTY_STRING,\n        x5c: _azure_msal_common__WEBPACK_IMPORTED_MODULE_6__.Constants.EMPTY_STRING,\n    },\n    knownAuthorities: [],\n    cloudDiscoveryMetadata: _azure_msal_common__WEBPACK_IMPORTED_MODULE_6__.Constants.EMPTY_STRING,\n    authorityMetadata: _azure_msal_common__WEBPACK_IMPORTED_MODULE_6__.Constants.EMPTY_STRING,\n    clientCapabilities: [],\n    protocolMode: _azure_msal_common__WEBPACK_IMPORTED_MODULE_7__.ProtocolMode.AAD,\n    azureCloudOptions: {\n        azureCloudInstance: _azure_msal_common__WEBPACK_IMPORTED_MODULE_8__.AzureCloudInstance.None,\n        tenant: _azure_msal_common__WEBPACK_IMPORTED_MODULE_6__.Constants.EMPTY_STRING,\n    },\n    skipAuthorityMetadataCache: false,\n};\nconst DEFAULT_CACHE_OPTIONS = {\n    claimsBasedCachingEnabled: false,\n};\nconst DEFAULT_LOGGER_OPTIONS = {\n    loggerCallback: () => {\n        // allow users to not set logger call back\n    },\n    piiLoggingEnabled: false,\n    logLevel: _azure_msal_common__WEBPACK_IMPORTED_MODULE_9__.LogLevel.Info,\n};\nconst DEFAULT_SYSTEM_OPTIONS = {\n    loggerOptions: DEFAULT_LOGGER_OPTIONS,\n    networkClient: new _network_HttpClient_mjs__WEBPACK_IMPORTED_MODULE_0__.HttpClient(),\n    proxyUrl: _azure_msal_common__WEBPACK_IMPORTED_MODULE_6__.Constants.EMPTY_STRING,\n    customAgentOptions: {},\n    disableInternalRetries: false,\n};\nconst DEFAULT_TELEMETRY_OPTIONS = {\n    application: {\n        appName: _azure_msal_common__WEBPACK_IMPORTED_MODULE_6__.Constants.EMPTY_STRING,\n        appVersion: _azure_msal_common__WEBPACK_IMPORTED_MODULE_6__.Constants.EMPTY_STRING,\n    },\n};\n/**\n * Sets the default options when not explicitly configured from app developer\n *\n * @param auth - Authentication options\n * @param cache - Cache options\n * @param system - System options\n * @param telemetry - Telemetry options\n *\n * @returns Configuration\n * @internal\n */\nfunction buildAppConfiguration({ auth, broker, cache, system, telemetry, }) {\n    const systemOptions = {\n        ...DEFAULT_SYSTEM_OPTIONS,\n        networkClient: new _network_HttpClient_mjs__WEBPACK_IMPORTED_MODULE_0__.HttpClient(system?.proxyUrl, system?.customAgentOptions),\n        loggerOptions: system?.loggerOptions || DEFAULT_LOGGER_OPTIONS,\n        disableInternalRetries: system?.disableInternalRetries || false,\n    };\n    // if client certificate was provided, ensure that at least one of the SHA-1 or SHA-256 thumbprints were provided\n    if (!!auth.clientCertificate &&\n        !!!auth.clientCertificate.thumbprint &&\n        !!!auth.clientCertificate.thumbprintSha256) {\n        throw _error_NodeAuthError_mjs__WEBPACK_IMPORTED_MODULE_5__.NodeAuthError.createStateNotFoundError();\n    }\n    return {\n        auth: { ...DEFAULT_AUTH_OPTIONS, ...auth },\n        broker: { ...broker },\n        cache: { ...DEFAULT_CACHE_OPTIONS, ...cache },\n        system: { ...systemOptions, ...system },\n        telemetry: { ...DEFAULT_TELEMETRY_OPTIONS, ...telemetry },\n    };\n}\nfunction buildManagedIdentityConfiguration({ managedIdentityIdParams, system, }) {\n    const managedIdentityId = new _ManagedIdentityId_mjs__WEBPACK_IMPORTED_MODULE_1__.ManagedIdentityId(managedIdentityIdParams);\n    const loggerOptions = system?.loggerOptions || DEFAULT_LOGGER_OPTIONS;\n    let networkClient;\n    // use developer provided network client if passed in\n    if (system?.networkClient) {\n        networkClient = system.networkClient;\n        // otherwise, create a new one\n    }\n    else {\n        networkClient = new _network_HttpClient_mjs__WEBPACK_IMPORTED_MODULE_0__.HttpClient(system?.proxyUrl, system?.customAgentOptions);\n    }\n    // wrap the network client with a retry policy if the developer has not disabled the option to do so\n    if (!system?.disableInternalRetries) {\n        const linearRetryPolicy = new _retry_LinearRetryPolicy_mjs__WEBPACK_IMPORTED_MODULE_3__.LinearRetryPolicy(_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_2__.MANAGED_IDENTITY_MAX_RETRIES, _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_2__.MANAGED_IDENTITY_RETRY_DELAY, _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_2__.MANAGED_IDENTITY_HTTP_STATUS_CODES_TO_RETRY_ON);\n        networkClient = new _network_HttpClientWithRetries_mjs__WEBPACK_IMPORTED_MODULE_4__.HttpClientWithRetries(networkClient, linearRetryPolicy);\n    }\n    return {\n        managedIdentityId: managedIdentityId,\n        system: {\n            loggerOptions,\n            networkClient,\n        },\n    };\n}\n\n\n//# sourceMappingURL=Configuration.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/msal-node/dist/config/Configuration.mjs\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/msal-node/dist/config/ManagedIdentityId.mjs":
/*!*************************************************************************!*\
  !*** ./node_modules/@azure/msal-node/dist/config/ManagedIdentityId.mjs ***!
  \*************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ManagedIdentityId: () => (/* binding */ ManagedIdentityId)\n/* harmony export */ });\n/* harmony import */ var _error_ManagedIdentityError_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../error/ManagedIdentityError.mjs */ \"(rsc)/./node_modules/@azure/msal-node/dist/error/ManagedIdentityError.mjs\");\n/* harmony import */ var _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/Constants.mjs */ \"(rsc)/./node_modules/@azure/msal-node/dist/utils/Constants.mjs\");\n/* harmony import */ var _error_ManagedIdentityErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../error/ManagedIdentityErrorCodes.mjs */ \"(rsc)/./node_modules/@azure/msal-node/dist/error/ManagedIdentityErrorCodes.mjs\");\n/*! @azure/msal-node v2.12.0 2024-07-23 */\n\n\n\n\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\nclass ManagedIdentityId {\n    get id() {\n        return this._id;\n    }\n    set id(value) {\n        this._id = value;\n    }\n    get idType() {\n        return this._idType;\n    }\n    set idType(value) {\n        this._idType = value;\n    }\n    constructor(managedIdentityIdParams) {\n        const userAssignedClientId = managedIdentityIdParams?.userAssignedClientId;\n        const userAssignedResourceId = managedIdentityIdParams?.userAssignedResourceId;\n        const userAssignedObjectId = managedIdentityIdParams?.userAssignedObjectId;\n        if (userAssignedClientId) {\n            if (userAssignedResourceId || userAssignedObjectId) {\n                throw (0,_error_ManagedIdentityError_mjs__WEBPACK_IMPORTED_MODULE_0__.createManagedIdentityError)(_error_ManagedIdentityErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_2__.invalidManagedIdentityIdType);\n            }\n            this.id = userAssignedClientId;\n            this.idType = _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_1__.ManagedIdentityIdType.USER_ASSIGNED_CLIENT_ID;\n        }\n        else if (userAssignedResourceId) {\n            if (userAssignedClientId || userAssignedObjectId) {\n                throw (0,_error_ManagedIdentityError_mjs__WEBPACK_IMPORTED_MODULE_0__.createManagedIdentityError)(_error_ManagedIdentityErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_2__.invalidManagedIdentityIdType);\n            }\n            this.id = userAssignedResourceId;\n            this.idType = _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_1__.ManagedIdentityIdType.USER_ASSIGNED_RESOURCE_ID;\n        }\n        else if (userAssignedObjectId) {\n            if (userAssignedClientId || userAssignedResourceId) {\n                throw (0,_error_ManagedIdentityError_mjs__WEBPACK_IMPORTED_MODULE_0__.createManagedIdentityError)(_error_ManagedIdentityErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_2__.invalidManagedIdentityIdType);\n            }\n            this.id = userAssignedObjectId;\n            this.idType = _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_1__.ManagedIdentityIdType.USER_ASSIGNED_OBJECT_ID;\n        }\n        else {\n            this.id = _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_1__.DEFAULT_MANAGED_IDENTITY_ID;\n            this.idType = _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_1__.ManagedIdentityIdType.SYSTEM_ASSIGNED;\n        }\n    }\n}\n\n\n//# sourceMappingURL=ManagedIdentityId.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtbm9kZS9kaXN0L2NvbmZpZy9NYW5hZ2VkSWRlbnRpdHlJZC5tanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBO0FBQ2E7QUFDa0U7QUFDYTtBQUNOOztBQUV0RjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esc0JBQXNCLDJGQUEwQixDQUFDLDhGQUE0QjtBQUM3RTtBQUNBO0FBQ0EsMEJBQTBCLHVFQUFxQjtBQUMvQztBQUNBO0FBQ0E7QUFDQSxzQkFBc0IsMkZBQTBCLENBQUMsOEZBQTRCO0FBQzdFO0FBQ0E7QUFDQSwwQkFBMEIsdUVBQXFCO0FBQy9DO0FBQ0E7QUFDQTtBQUNBLHNCQUFzQiwyRkFBMEIsQ0FBQyw4RkFBNEI7QUFDN0U7QUFDQTtBQUNBLDBCQUEwQix1RUFBcUI7QUFDL0M7QUFDQTtBQUNBLHNCQUFzQiw2RUFBMkI7QUFDakQsMEJBQTBCLHVFQUFxQjtBQUMvQztBQUNBO0FBQ0E7O0FBRTZCO0FBQzdCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZGFuaWVsMy12cDIvLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtbm9kZS9kaXN0L2NvbmZpZy9NYW5hZ2VkSWRlbnRpdHlJZC5tanM/MmNkMCJdLCJzb3VyY2VzQ29udGVudCI6WyIvKiEgQGF6dXJlL21zYWwtbm9kZSB2Mi4xMi4wIDIwMjQtMDctMjMgKi9cbid1c2Ugc3RyaWN0JztcbmltcG9ydCB7IGNyZWF0ZU1hbmFnZWRJZGVudGl0eUVycm9yIH0gZnJvbSAnLi4vZXJyb3IvTWFuYWdlZElkZW50aXR5RXJyb3IubWpzJztcbmltcG9ydCB7IE1hbmFnZWRJZGVudGl0eUlkVHlwZSwgREVGQVVMVF9NQU5BR0VEX0lERU5USVRZX0lEIH0gZnJvbSAnLi4vdXRpbHMvQ29uc3RhbnRzLm1qcyc7XG5pbXBvcnQgeyBpbnZhbGlkTWFuYWdlZElkZW50aXR5SWRUeXBlIH0gZnJvbSAnLi4vZXJyb3IvTWFuYWdlZElkZW50aXR5RXJyb3JDb2Rlcy5tanMnO1xuXG4vKlxuICogQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uIEFsbCByaWdodHMgcmVzZXJ2ZWQuXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIExpY2Vuc2UuXG4gKi9cbmNsYXNzIE1hbmFnZWRJZGVudGl0eUlkIHtcbiAgICBnZXQgaWQoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLl9pZDtcbiAgICB9XG4gICAgc2V0IGlkKHZhbHVlKSB7XG4gICAgICAgIHRoaXMuX2lkID0gdmFsdWU7XG4gICAgfVxuICAgIGdldCBpZFR5cGUoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLl9pZFR5cGU7XG4gICAgfVxuICAgIHNldCBpZFR5cGUodmFsdWUpIHtcbiAgICAgICAgdGhpcy5faWRUeXBlID0gdmFsdWU7XG4gICAgfVxuICAgIGNvbnN0cnVjdG9yKG1hbmFnZWRJZGVudGl0eUlkUGFyYW1zKSB7XG4gICAgICAgIGNvbnN0IHVzZXJBc3NpZ25lZENsaWVudElkID0gbWFuYWdlZElkZW50aXR5SWRQYXJhbXM/LnVzZXJBc3NpZ25lZENsaWVudElkO1xuICAgICAgICBjb25zdCB1c2VyQXNzaWduZWRSZXNvdXJjZUlkID0gbWFuYWdlZElkZW50aXR5SWRQYXJhbXM/LnVzZXJBc3NpZ25lZFJlc291cmNlSWQ7XG4gICAgICAgIGNvbnN0IHVzZXJBc3NpZ25lZE9iamVjdElkID0gbWFuYWdlZElkZW50aXR5SWRQYXJhbXM/LnVzZXJBc3NpZ25lZE9iamVjdElkO1xuICAgICAgICBpZiAodXNlckFzc2lnbmVkQ2xpZW50SWQpIHtcbiAgICAgICAgICAgIGlmICh1c2VyQXNzaWduZWRSZXNvdXJjZUlkIHx8IHVzZXJBc3NpZ25lZE9iamVjdElkKSB7XG4gICAgICAgICAgICAgICAgdGhyb3cgY3JlYXRlTWFuYWdlZElkZW50aXR5RXJyb3IoaW52YWxpZE1hbmFnZWRJZGVudGl0eUlkVHlwZSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICB0aGlzLmlkID0gdXNlckFzc2lnbmVkQ2xpZW50SWQ7XG4gICAgICAgICAgICB0aGlzLmlkVHlwZSA9IE1hbmFnZWRJZGVudGl0eUlkVHlwZS5VU0VSX0FTU0lHTkVEX0NMSUVOVF9JRDtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIGlmICh1c2VyQXNzaWduZWRSZXNvdXJjZUlkKSB7XG4gICAgICAgICAgICBpZiAodXNlckFzc2lnbmVkQ2xpZW50SWQgfHwgdXNlckFzc2lnbmVkT2JqZWN0SWQpIHtcbiAgICAgICAgICAgICAgICB0aHJvdyBjcmVhdGVNYW5hZ2VkSWRlbnRpdHlFcnJvcihpbnZhbGlkTWFuYWdlZElkZW50aXR5SWRUeXBlKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHRoaXMuaWQgPSB1c2VyQXNzaWduZWRSZXNvdXJjZUlkO1xuICAgICAgICAgICAgdGhpcy5pZFR5cGUgPSBNYW5hZ2VkSWRlbnRpdHlJZFR5cGUuVVNFUl9BU1NJR05FRF9SRVNPVVJDRV9JRDtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIGlmICh1c2VyQXNzaWduZWRPYmplY3RJZCkge1xuICAgICAgICAgICAgaWYgKHVzZXJBc3NpZ25lZENsaWVudElkIHx8IHVzZXJBc3NpZ25lZFJlc291cmNlSWQpIHtcbiAgICAgICAgICAgICAgICB0aHJvdyBjcmVhdGVNYW5hZ2VkSWRlbnRpdHlFcnJvcihpbnZhbGlkTWFuYWdlZElkZW50aXR5SWRUeXBlKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHRoaXMuaWQgPSB1c2VyQXNzaWduZWRPYmplY3RJZDtcbiAgICAgICAgICAgIHRoaXMuaWRUeXBlID0gTWFuYWdlZElkZW50aXR5SWRUeXBlLlVTRVJfQVNTSUdORURfT0JKRUNUX0lEO1xuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgdGhpcy5pZCA9IERFRkFVTFRfTUFOQUdFRF9JREVOVElUWV9JRDtcbiAgICAgICAgICAgIHRoaXMuaWRUeXBlID0gTWFuYWdlZElkZW50aXR5SWRUeXBlLlNZU1RFTV9BU1NJR05FRDtcbiAgICAgICAgfVxuICAgIH1cbn1cblxuZXhwb3J0IHsgTWFuYWdlZElkZW50aXR5SWQgfTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPU1hbmFnZWRJZGVudGl0eUlkLm1qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/msal-node/dist/config/ManagedIdentityId.mjs\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/msal-node/dist/config/ManagedIdentityRequestParameters.mjs":
/*!****************************************************************************************!*\
  !*** ./node_modules/@azure/msal-node/dist/config/ManagedIdentityRequestParameters.mjs ***!
  \****************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ManagedIdentityRequestParameters: () => (/* binding */ ManagedIdentityRequestParameters)\n/* harmony export */ });\n/* harmony import */ var _azure_msal_common__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @azure/msal-common */ \"(rsc)/./node_modules/@azure/msal-common/dist/request/RequestParameterBuilder.mjs\");\n/* harmony import */ var _azure_msal_common__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @azure/msal-common */ \"(rsc)/./node_modules/@azure/msal-common/dist/url/UrlString.mjs\");\n/*! @azure/msal-node v2.12.0 2024-07-23 */\n\n\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\nclass ManagedIdentityRequestParameters {\n    constructor(httpMethod, endpoint) {\n        this.httpMethod = httpMethod;\n        this._baseEndpoint = endpoint;\n        this.headers = {};\n        this.bodyParameters = {};\n        this.queryParameters = {};\n    }\n    computeUri() {\n        const parameterBuilder = new _azure_msal_common__WEBPACK_IMPORTED_MODULE_0__.RequestParameterBuilder();\n        if (this.queryParameters) {\n            parameterBuilder.addExtraQueryParameters(this.queryParameters);\n        }\n        const queryParametersString = parameterBuilder.createQueryString();\n        return _azure_msal_common__WEBPACK_IMPORTED_MODULE_1__.UrlString.appendQueryString(this._baseEndpoint, queryParametersString);\n    }\n    computeParametersBodyString() {\n        const parameterBuilder = new _azure_msal_common__WEBPACK_IMPORTED_MODULE_0__.RequestParameterBuilder();\n        if (this.bodyParameters) {\n            parameterBuilder.addExtraQueryParameters(this.bodyParameters);\n        }\n        return parameterBuilder.createQueryString();\n    }\n}\n\n\n//# sourceMappingURL=ManagedIdentityRequestParameters.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtbm9kZS9kaXN0L2NvbmZpZy9NYW5hZ2VkSWRlbnRpdHlSZXF1ZXN0UGFyYW1ldGVycy5tanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUE7QUFDYTtBQUMyRDs7QUFFeEU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxxQ0FBcUMsdUVBQXVCO0FBQzVEO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZUFBZSx5REFBUztBQUN4QjtBQUNBO0FBQ0EscUNBQXFDLHVFQUF1QjtBQUM1RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRTRDO0FBQzVDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZGFuaWVsMy12cDIvLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtbm9kZS9kaXN0L2NvbmZpZy9NYW5hZ2VkSWRlbnRpdHlSZXF1ZXN0UGFyYW1ldGVycy5tanM/NmU4MyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKiEgQGF6dXJlL21zYWwtbm9kZSB2Mi4xMi4wIDIwMjQtMDctMjMgKi9cbid1c2Ugc3RyaWN0JztcbmltcG9ydCB7IFJlcXVlc3RQYXJhbWV0ZXJCdWlsZGVyLCBVcmxTdHJpbmcgfSBmcm9tICdAYXp1cmUvbXNhbC1jb21tb24nO1xuXG4vKlxuICogQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uIEFsbCByaWdodHMgcmVzZXJ2ZWQuXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIExpY2Vuc2UuXG4gKi9cbmNsYXNzIE1hbmFnZWRJZGVudGl0eVJlcXVlc3RQYXJhbWV0ZXJzIHtcbiAgICBjb25zdHJ1Y3RvcihodHRwTWV0aG9kLCBlbmRwb2ludCkge1xuICAgICAgICB0aGlzLmh0dHBNZXRob2QgPSBodHRwTWV0aG9kO1xuICAgICAgICB0aGlzLl9iYXNlRW5kcG9pbnQgPSBlbmRwb2ludDtcbiAgICAgICAgdGhpcy5oZWFkZXJzID0ge307XG4gICAgICAgIHRoaXMuYm9keVBhcmFtZXRlcnMgPSB7fTtcbiAgICAgICAgdGhpcy5xdWVyeVBhcmFtZXRlcnMgPSB7fTtcbiAgICB9XG4gICAgY29tcHV0ZVVyaSgpIHtcbiAgICAgICAgY29uc3QgcGFyYW1ldGVyQnVpbGRlciA9IG5ldyBSZXF1ZXN0UGFyYW1ldGVyQnVpbGRlcigpO1xuICAgICAgICBpZiAodGhpcy5xdWVyeVBhcmFtZXRlcnMpIHtcbiAgICAgICAgICAgIHBhcmFtZXRlckJ1aWxkZXIuYWRkRXh0cmFRdWVyeVBhcmFtZXRlcnModGhpcy5xdWVyeVBhcmFtZXRlcnMpO1xuICAgICAgICB9XG4gICAgICAgIGNvbnN0IHF1ZXJ5UGFyYW1ldGVyc1N0cmluZyA9IHBhcmFtZXRlckJ1aWxkZXIuY3JlYXRlUXVlcnlTdHJpbmcoKTtcbiAgICAgICAgcmV0dXJuIFVybFN0cmluZy5hcHBlbmRRdWVyeVN0cmluZyh0aGlzLl9iYXNlRW5kcG9pbnQsIHF1ZXJ5UGFyYW1ldGVyc1N0cmluZyk7XG4gICAgfVxuICAgIGNvbXB1dGVQYXJhbWV0ZXJzQm9keVN0cmluZygpIHtcbiAgICAgICAgY29uc3QgcGFyYW1ldGVyQnVpbGRlciA9IG5ldyBSZXF1ZXN0UGFyYW1ldGVyQnVpbGRlcigpO1xuICAgICAgICBpZiAodGhpcy5ib2R5UGFyYW1ldGVycykge1xuICAgICAgICAgICAgcGFyYW1ldGVyQnVpbGRlci5hZGRFeHRyYVF1ZXJ5UGFyYW1ldGVycyh0aGlzLmJvZHlQYXJhbWV0ZXJzKTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gcGFyYW1ldGVyQnVpbGRlci5jcmVhdGVRdWVyeVN0cmluZygpO1xuICAgIH1cbn1cblxuZXhwb3J0IHsgTWFuYWdlZElkZW50aXR5UmVxdWVzdFBhcmFtZXRlcnMgfTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPU1hbmFnZWRJZGVudGl0eVJlcXVlc3RQYXJhbWV0ZXJzLm1qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/msal-node/dist/config/ManagedIdentityRequestParameters.mjs\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/msal-node/dist/crypto/CryptoProvider.mjs":
/*!**********************************************************************!*\
  !*** ./node_modules/@azure/msal-node/dist/crypto/CryptoProvider.mjs ***!
  \**********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   CryptoProvider: () => (/* binding */ CryptoProvider)\n/* harmony export */ });\n/* harmony import */ var _GuidGenerator_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./GuidGenerator.mjs */ \"(rsc)/./node_modules/@azure/msal-node/dist/crypto/GuidGenerator.mjs\");\n/* harmony import */ var _utils_EncodingUtils_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/EncodingUtils.mjs */ \"(rsc)/./node_modules/@azure/msal-node/dist/utils/EncodingUtils.mjs\");\n/* harmony import */ var _PkceGenerator_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./PkceGenerator.mjs */ \"(rsc)/./node_modules/@azure/msal-node/dist/crypto/PkceGenerator.mjs\");\n/* harmony import */ var _HashUtils_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./HashUtils.mjs */ \"(rsc)/./node_modules/@azure/msal-node/dist/crypto/HashUtils.mjs\");\n/*! @azure/msal-node v2.12.0 2024-07-23 */\n\n\n\n\n\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n/**\n * This class implements MSAL node's crypto interface, which allows it to perform base64 encoding and decoding, generating cryptographically random GUIDs and\n * implementing Proof Key for Code Exchange specs for the OAuth Authorization Code Flow using PKCE (rfc here: https://tools.ietf.org/html/rfc7636).\n * @public\n */\nclass CryptoProvider {\n    constructor() {\n        // Browser crypto needs to be validated first before any other classes can be set.\n        this.pkceGenerator = new _PkceGenerator_mjs__WEBPACK_IMPORTED_MODULE_2__.PkceGenerator();\n        this.guidGenerator = new _GuidGenerator_mjs__WEBPACK_IMPORTED_MODULE_0__.GuidGenerator();\n        this.hashUtils = new _HashUtils_mjs__WEBPACK_IMPORTED_MODULE_3__.HashUtils();\n    }\n    /**\n     * base64 URL safe encoded string\n     */\n    base64UrlEncode() {\n        throw new Error(\"Method not implemented.\");\n    }\n    /**\n     * Stringifies and base64Url encodes input public key\n     * @param inputKid\n     * @returns Base64Url encoded public key\n     */\n    encodeKid() {\n        throw new Error(\"Method not implemented.\");\n    }\n    /**\n     * Creates a new random GUID - used to populate state and nonce.\n     * @returns string (GUID)\n     */\n    createNewGuid() {\n        return this.guidGenerator.generateGuid();\n    }\n    /**\n     * Encodes input string to base64.\n     * @param input - string to be encoded\n     */\n    base64Encode(input) {\n        return _utils_EncodingUtils_mjs__WEBPACK_IMPORTED_MODULE_1__.EncodingUtils.base64Encode(input);\n    }\n    /**\n     * Decodes input string from base64.\n     * @param input - string to be decoded\n     */\n    base64Decode(input) {\n        return _utils_EncodingUtils_mjs__WEBPACK_IMPORTED_MODULE_1__.EncodingUtils.base64Decode(input);\n    }\n    /**\n     * Generates PKCE codes used in Authorization Code Flow.\n     */\n    generatePkceCodes() {\n        return this.pkceGenerator.generatePkceCodes();\n    }\n    /**\n     * Generates a keypair, stores it and returns a thumbprint - not yet implemented for node\n     */\n    getPublicKeyThumbprint() {\n        throw new Error(\"Method not implemented.\");\n    }\n    /**\n     * Removes cryptographic keypair from key store matching the keyId passed in\n     * @param kid\n     */\n    removeTokenBindingKey() {\n        throw new Error(\"Method not implemented.\");\n    }\n    /**\n     * Removes all cryptographic keys from Keystore\n     */\n    clearKeystore() {\n        throw new Error(\"Method not implemented.\");\n    }\n    /**\n     * Signs the given object as a jwt payload with private key retrieved by given kid - currently not implemented for node\n     */\n    signJwt() {\n        throw new Error(\"Method not implemented.\");\n    }\n    /**\n     * Returns the SHA-256 hash of an input string\n     */\n    async hashString(plainText) {\n        return _utils_EncodingUtils_mjs__WEBPACK_IMPORTED_MODULE_1__.EncodingUtils.base64EncodeUrl(this.hashUtils.sha256(plainText).toString(\"base64\"), \"base64\");\n    }\n}\n\n\n//# sourceMappingURL=CryptoProvider.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtbm9kZS9kaXN0L2NyeXB0by9DcnlwdG9Qcm92aWRlci5tanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBQTtBQUNhO0FBQ3VDO0FBQ087QUFDUDtBQUNSOztBQUU1QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQ0FBaUMsNkRBQWE7QUFDOUMsaUNBQWlDLDZEQUFhO0FBQzlDLDZCQUE2QixxREFBUztBQUN0QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxlQUFlLG1FQUFhO0FBQzVCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWUsbUVBQWE7QUFDNUI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZUFBZSxtRUFBYTtBQUM1QjtBQUNBOztBQUUwQjtBQUMxQiIsInNvdXJjZXMiOlsid2VicGFjazovL2RhbmllbDMtdnAyLy4vbm9kZV9tb2R1bGVzL0BhenVyZS9tc2FsLW5vZGUvZGlzdC9jcnlwdG8vQ3J5cHRvUHJvdmlkZXIubWpzPzcwMDQiXSwic291cmNlc0NvbnRlbnQiOlsiLyohIEBhenVyZS9tc2FsLW5vZGUgdjIuMTIuMCAyMDI0LTA3LTIzICovXG4ndXNlIHN0cmljdCc7XG5pbXBvcnQgeyBHdWlkR2VuZXJhdG9yIH0gZnJvbSAnLi9HdWlkR2VuZXJhdG9yLm1qcyc7XG5pbXBvcnQgeyBFbmNvZGluZ1V0aWxzIH0gZnJvbSAnLi4vdXRpbHMvRW5jb2RpbmdVdGlscy5tanMnO1xuaW1wb3J0IHsgUGtjZUdlbmVyYXRvciB9IGZyb20gJy4vUGtjZUdlbmVyYXRvci5tanMnO1xuaW1wb3J0IHsgSGFzaFV0aWxzIH0gZnJvbSAnLi9IYXNoVXRpbHMubWpzJztcblxuLypcbiAqIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLiBBbGwgcmlnaHRzIHJlc2VydmVkLlxuICogTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBMaWNlbnNlLlxuICovXG4vKipcbiAqIFRoaXMgY2xhc3MgaW1wbGVtZW50cyBNU0FMIG5vZGUncyBjcnlwdG8gaW50ZXJmYWNlLCB3aGljaCBhbGxvd3MgaXQgdG8gcGVyZm9ybSBiYXNlNjQgZW5jb2RpbmcgYW5kIGRlY29kaW5nLCBnZW5lcmF0aW5nIGNyeXB0b2dyYXBoaWNhbGx5IHJhbmRvbSBHVUlEcyBhbmRcbiAqIGltcGxlbWVudGluZyBQcm9vZiBLZXkgZm9yIENvZGUgRXhjaGFuZ2Ugc3BlY3MgZm9yIHRoZSBPQXV0aCBBdXRob3JpemF0aW9uIENvZGUgRmxvdyB1c2luZyBQS0NFIChyZmMgaGVyZTogaHR0cHM6Ly90b29scy5pZXRmLm9yZy9odG1sL3JmYzc2MzYpLlxuICogQHB1YmxpY1xuICovXG5jbGFzcyBDcnlwdG9Qcm92aWRlciB7XG4gICAgY29uc3RydWN0b3IoKSB7XG4gICAgICAgIC8vIEJyb3dzZXIgY3J5cHRvIG5lZWRzIHRvIGJlIHZhbGlkYXRlZCBmaXJzdCBiZWZvcmUgYW55IG90aGVyIGNsYXNzZXMgY2FuIGJlIHNldC5cbiAgICAgICAgdGhpcy5wa2NlR2VuZXJhdG9yID0gbmV3IFBrY2VHZW5lcmF0b3IoKTtcbiAgICAgICAgdGhpcy5ndWlkR2VuZXJhdG9yID0gbmV3IEd1aWRHZW5lcmF0b3IoKTtcbiAgICAgICAgdGhpcy5oYXNoVXRpbHMgPSBuZXcgSGFzaFV0aWxzKCk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIGJhc2U2NCBVUkwgc2FmZSBlbmNvZGVkIHN0cmluZ1xuICAgICAqL1xuICAgIGJhc2U2NFVybEVuY29kZSgpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiTWV0aG9kIG5vdCBpbXBsZW1lbnRlZC5cIik7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIFN0cmluZ2lmaWVzIGFuZCBiYXNlNjRVcmwgZW5jb2RlcyBpbnB1dCBwdWJsaWMga2V5XG4gICAgICogQHBhcmFtIGlucHV0S2lkXG4gICAgICogQHJldHVybnMgQmFzZTY0VXJsIGVuY29kZWQgcHVibGljIGtleVxuICAgICAqL1xuICAgIGVuY29kZUtpZCgpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiTWV0aG9kIG5vdCBpbXBsZW1lbnRlZC5cIik7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIENyZWF0ZXMgYSBuZXcgcmFuZG9tIEdVSUQgLSB1c2VkIHRvIHBvcHVsYXRlIHN0YXRlIGFuZCBub25jZS5cbiAgICAgKiBAcmV0dXJucyBzdHJpbmcgKEdVSUQpXG4gICAgICovXG4gICAgY3JlYXRlTmV3R3VpZCgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuZ3VpZEdlbmVyYXRvci5nZW5lcmF0ZUd1aWQoKTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogRW5jb2RlcyBpbnB1dCBzdHJpbmcgdG8gYmFzZTY0LlxuICAgICAqIEBwYXJhbSBpbnB1dCAtIHN0cmluZyB0byBiZSBlbmNvZGVkXG4gICAgICovXG4gICAgYmFzZTY0RW5jb2RlKGlucHV0KSB7XG4gICAgICAgIHJldHVybiBFbmNvZGluZ1V0aWxzLmJhc2U2NEVuY29kZShpbnB1dCk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIERlY29kZXMgaW5wdXQgc3RyaW5nIGZyb20gYmFzZTY0LlxuICAgICAqIEBwYXJhbSBpbnB1dCAtIHN0cmluZyB0byBiZSBkZWNvZGVkXG4gICAgICovXG4gICAgYmFzZTY0RGVjb2RlKGlucHV0KSB7XG4gICAgICAgIHJldHVybiBFbmNvZGluZ1V0aWxzLmJhc2U2NERlY29kZShpbnB1dCk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIEdlbmVyYXRlcyBQS0NFIGNvZGVzIHVzZWQgaW4gQXV0aG9yaXphdGlvbiBDb2RlIEZsb3cuXG4gICAgICovXG4gICAgZ2VuZXJhdGVQa2NlQ29kZXMoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLnBrY2VHZW5lcmF0b3IuZ2VuZXJhdGVQa2NlQ29kZXMoKTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogR2VuZXJhdGVzIGEga2V5cGFpciwgc3RvcmVzIGl0IGFuZCByZXR1cm5zIGEgdGh1bWJwcmludCAtIG5vdCB5ZXQgaW1wbGVtZW50ZWQgZm9yIG5vZGVcbiAgICAgKi9cbiAgICBnZXRQdWJsaWNLZXlUaHVtYnByaW50KCkge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJNZXRob2Qgbm90IGltcGxlbWVudGVkLlwiKTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogUmVtb3ZlcyBjcnlwdG9ncmFwaGljIGtleXBhaXIgZnJvbSBrZXkgc3RvcmUgbWF0Y2hpbmcgdGhlIGtleUlkIHBhc3NlZCBpblxuICAgICAqIEBwYXJhbSBraWRcbiAgICAgKi9cbiAgICByZW1vdmVUb2tlbkJpbmRpbmdLZXkoKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcihcIk1ldGhvZCBub3QgaW1wbGVtZW50ZWQuXCIpO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBSZW1vdmVzIGFsbCBjcnlwdG9ncmFwaGljIGtleXMgZnJvbSBLZXlzdG9yZVxuICAgICAqL1xuICAgIGNsZWFyS2V5c3RvcmUoKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcihcIk1ldGhvZCBub3QgaW1wbGVtZW50ZWQuXCIpO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBTaWducyB0aGUgZ2l2ZW4gb2JqZWN0IGFzIGEgand0IHBheWxvYWQgd2l0aCBwcml2YXRlIGtleSByZXRyaWV2ZWQgYnkgZ2l2ZW4ga2lkIC0gY3VycmVudGx5IG5vdCBpbXBsZW1lbnRlZCBmb3Igbm9kZVxuICAgICAqL1xuICAgIHNpZ25Kd3QoKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcihcIk1ldGhvZCBub3QgaW1wbGVtZW50ZWQuXCIpO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBSZXR1cm5zIHRoZSBTSEEtMjU2IGhhc2ggb2YgYW4gaW5wdXQgc3RyaW5nXG4gICAgICovXG4gICAgYXN5bmMgaGFzaFN0cmluZyhwbGFpblRleHQpIHtcbiAgICAgICAgcmV0dXJuIEVuY29kaW5nVXRpbHMuYmFzZTY0RW5jb2RlVXJsKHRoaXMuaGFzaFV0aWxzLnNoYTI1NihwbGFpblRleHQpLnRvU3RyaW5nKFwiYmFzZTY0XCIpLCBcImJhc2U2NFwiKTtcbiAgICB9XG59XG5cbmV4cG9ydCB7IENyeXB0b1Byb3ZpZGVyIH07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1DcnlwdG9Qcm92aWRlci5tanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/msal-node/dist/crypto/CryptoProvider.mjs\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/msal-node/dist/crypto/GuidGenerator.mjs":
/*!*********************************************************************!*\
  !*** ./node_modules/@azure/msal-node/dist/crypto/GuidGenerator.mjs ***!
  \*********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   GuidGenerator: () => (/* binding */ GuidGenerator)\n/* harmony export */ });\n/* harmony import */ var uuid__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! uuid */ \"(rsc)/./node_modules/uuid/dist/esm-node/v4.js\");\n/*! @azure/msal-node v2.12.0 2024-07-23 */\n\n\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\nclass GuidGenerator {\n    /**\n     *\n     * RFC4122: The version 4 UUID is meant for generating UUIDs from truly-random or pseudo-random numbers.\n     * uuidv4 generates guids from cryprtographically-string random\n     */\n    generateGuid() {\n        return (0,uuid__WEBPACK_IMPORTED_MODULE_0__[\"default\"])();\n    }\n    /**\n     * verifies if a string is  GUID\n     * @param guid\n     */\n    isGuid(guid) {\n        const regexGuid = /^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$/i;\n        return regexGuid.test(guid);\n    }\n}\n\n\n//# sourceMappingURL=GuidGenerator.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtbm9kZS9kaXN0L2NyeXB0by9HdWlkR2VuZXJhdG9yLm1qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFBO0FBQ2E7QUFDYTs7QUFFMUI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWUsZ0RBQUU7QUFDakI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EscUNBQXFDLEVBQUUsVUFBVSxFQUFFLGVBQWUsRUFBRSxnQkFBZ0IsRUFBRSxVQUFVLEdBQUc7QUFDbkc7QUFDQTtBQUNBOztBQUV5QjtBQUN6QiIsInNvdXJjZXMiOlsid2VicGFjazovL2RhbmllbDMtdnAyLy4vbm9kZV9tb2R1bGVzL0BhenVyZS9tc2FsLW5vZGUvZGlzdC9jcnlwdG8vR3VpZEdlbmVyYXRvci5tanM/MWVlOCJdLCJzb3VyY2VzQ29udGVudCI6WyIvKiEgQGF6dXJlL21zYWwtbm9kZSB2Mi4xMi4wIDIwMjQtMDctMjMgKi9cbid1c2Ugc3RyaWN0JztcbmltcG9ydCB7IHY0IH0gZnJvbSAndXVpZCc7XG5cbi8qXG4gKiBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi4gQWxsIHJpZ2h0cyByZXNlcnZlZC5cbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgTGljZW5zZS5cbiAqL1xuY2xhc3MgR3VpZEdlbmVyYXRvciB7XG4gICAgLyoqXG4gICAgICpcbiAgICAgKiBSRkM0MTIyOiBUaGUgdmVyc2lvbiA0IFVVSUQgaXMgbWVhbnQgZm9yIGdlbmVyYXRpbmcgVVVJRHMgZnJvbSB0cnVseS1yYW5kb20gb3IgcHNldWRvLXJhbmRvbSBudW1iZXJzLlxuICAgICAqIHV1aWR2NCBnZW5lcmF0ZXMgZ3VpZHMgZnJvbSBjcnlwcnRvZ3JhcGhpY2FsbHktc3RyaW5nIHJhbmRvbVxuICAgICAqL1xuICAgIGdlbmVyYXRlR3VpZCgpIHtcbiAgICAgICAgcmV0dXJuIHY0KCk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIHZlcmlmaWVzIGlmIGEgc3RyaW5nIGlzICBHVUlEXG4gICAgICogQHBhcmFtIGd1aWRcbiAgICAgKi9cbiAgICBpc0d1aWQoZ3VpZCkge1xuICAgICAgICBjb25zdCByZWdleEd1aWQgPSAvXlswLTlhLWZdezh9LVswLTlhLWZdezR9LVsxLTVdWzAtOWEtZl17M30tWzg5YWJdWzAtOWEtZl17M30tWzAtOWEtZl17MTJ9JC9pO1xuICAgICAgICByZXR1cm4gcmVnZXhHdWlkLnRlc3QoZ3VpZCk7XG4gICAgfVxufVxuXG5leHBvcnQgeyBHdWlkR2VuZXJhdG9yIH07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1HdWlkR2VuZXJhdG9yLm1qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/msal-node/dist/crypto/GuidGenerator.mjs\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/msal-node/dist/crypto/HashUtils.mjs":
/*!*****************************************************************!*\
  !*** ./node_modules/@azure/msal-node/dist/crypto/HashUtils.mjs ***!
  \*****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   HashUtils: () => (/* binding */ HashUtils)\n/* harmony export */ });\n/* harmony import */ var _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/Constants.mjs */ \"(rsc)/./node_modules/@azure/msal-node/dist/utils/Constants.mjs\");\n/* harmony import */ var crypto__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! crypto */ \"crypto\");\n/*! @azure/msal-node v2.12.0 2024-07-23 */\n\n\n\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\nclass HashUtils {\n    /**\n     * generate 'SHA256' hash\n     * @param buffer\n     */\n    sha256(buffer) {\n        return crypto__WEBPACK_IMPORTED_MODULE_1__.createHash(_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.Hash.SHA256).update(buffer).digest();\n    }\n}\n\n\n//# sourceMappingURL=HashUtils.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtbm9kZS9kaXN0L2NyeXB0by9IYXNoVXRpbHMubWpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFBO0FBQ2E7QUFDaUM7QUFDbEI7O0FBRTVCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZUFBZSw4Q0FBaUIsQ0FBQyxzREFBSTtBQUNyQztBQUNBOztBQUVxQjtBQUNyQiIsInNvdXJjZXMiOlsid2VicGFjazovL2RhbmllbDMtdnAyLy4vbm9kZV9tb2R1bGVzL0BhenVyZS9tc2FsLW5vZGUvZGlzdC9jcnlwdG8vSGFzaFV0aWxzLm1qcz8zODc2Il0sInNvdXJjZXNDb250ZW50IjpbIi8qISBAYXp1cmUvbXNhbC1ub2RlIHYyLjEyLjAgMjAyNC0wNy0yMyAqL1xuJ3VzZSBzdHJpY3QnO1xuaW1wb3J0IHsgSGFzaCB9IGZyb20gJy4uL3V0aWxzL0NvbnN0YW50cy5tanMnO1xuaW1wb3J0IGNyeXB0byBmcm9tICdjcnlwdG8nO1xuXG4vKlxuICogQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uIEFsbCByaWdodHMgcmVzZXJ2ZWQuXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIExpY2Vuc2UuXG4gKi9cbmNsYXNzIEhhc2hVdGlscyB7XG4gICAgLyoqXG4gICAgICogZ2VuZXJhdGUgJ1NIQTI1NicgaGFzaFxuICAgICAqIEBwYXJhbSBidWZmZXJcbiAgICAgKi9cbiAgICBzaGEyNTYoYnVmZmVyKSB7XG4gICAgICAgIHJldHVybiBjcnlwdG8uY3JlYXRlSGFzaChIYXNoLlNIQTI1NikudXBkYXRlKGJ1ZmZlcikuZGlnZXN0KCk7XG4gICAgfVxufVxuXG5leHBvcnQgeyBIYXNoVXRpbHMgfTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPUhhc2hVdGlscy5tanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/msal-node/dist/crypto/HashUtils.mjs\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/msal-node/dist/crypto/PkceGenerator.mjs":
/*!*********************************************************************!*\
  !*** ./node_modules/@azure/msal-node/dist/crypto/PkceGenerator.mjs ***!
  \*********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   PkceGenerator: () => (/* binding */ PkceGenerator)\n/* harmony export */ });\n/* harmony import */ var _azure_msal_common__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @azure/msal-common */ \"(rsc)/./node_modules/@azure/msal-common/dist/utils/Constants.mjs\");\n/* harmony import */ var _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/Constants.mjs */ \"(rsc)/./node_modules/@azure/msal-node/dist/utils/Constants.mjs\");\n/* harmony import */ var _utils_EncodingUtils_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/EncodingUtils.mjs */ \"(rsc)/./node_modules/@azure/msal-node/dist/utils/EncodingUtils.mjs\");\n/* harmony import */ var _HashUtils_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./HashUtils.mjs */ \"(rsc)/./node_modules/@azure/msal-node/dist/crypto/HashUtils.mjs\");\n/* harmony import */ var crypto__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! crypto */ \"crypto\");\n/*! @azure/msal-node v2.12.0 2024-07-23 */\n\n\n\n\n\n\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n/**\n * https://tools.ietf.org/html/rfc7636#page-8\n */\nclass PkceGenerator {\n    constructor() {\n        this.hashUtils = new _HashUtils_mjs__WEBPACK_IMPORTED_MODULE_2__.HashUtils();\n    }\n    /**\n     * generates the codeVerfier and the challenge from the codeVerfier\n     * reference: https://tools.ietf.org/html/rfc7636#section-4.1 and https://tools.ietf.org/html/rfc7636#section-4.2\n     */\n    async generatePkceCodes() {\n        const verifier = this.generateCodeVerifier();\n        const challenge = this.generateCodeChallengeFromVerifier(verifier);\n        return { verifier, challenge };\n    }\n    /**\n     * generates the codeVerfier; reference: https://tools.ietf.org/html/rfc7636#section-4.1\n     */\n    generateCodeVerifier() {\n        const charArr = [];\n        const maxNumber = 256 - (256 % _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.CharSet.CV_CHARSET.length);\n        while (charArr.length <= _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.RANDOM_OCTET_SIZE) {\n            const byte = crypto__WEBPACK_IMPORTED_MODULE_3__.randomBytes(1)[0];\n            if (byte >= maxNumber) {\n                /*\n                 * Ignore this number to maintain randomness.\n                 * Including it would result in an unequal distribution of characters after doing the modulo\n                 */\n                continue;\n            }\n            const index = byte % _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.CharSet.CV_CHARSET.length;\n            charArr.push(_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.CharSet.CV_CHARSET[index]);\n        }\n        const verifier = charArr.join(_azure_msal_common__WEBPACK_IMPORTED_MODULE_4__.Constants.EMPTY_STRING);\n        return _utils_EncodingUtils_mjs__WEBPACK_IMPORTED_MODULE_1__.EncodingUtils.base64EncodeUrl(verifier);\n    }\n    /**\n     * generate the challenge from the codeVerfier; reference: https://tools.ietf.org/html/rfc7636#section-4.2\n     * @param codeVerifier\n     */\n    generateCodeChallengeFromVerifier(codeVerifier) {\n        return _utils_EncodingUtils_mjs__WEBPACK_IMPORTED_MODULE_1__.EncodingUtils.base64EncodeUrl(this.hashUtils.sha256(codeVerifier).toString(\"base64\"), \"base64\");\n    }\n}\n\n\n//# sourceMappingURL=PkceGenerator.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtbm9kZS9kaXN0L2NyeXB0by9Qa2NlR2VuZXJhdG9yLm1qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFBQTtBQUNhO0FBQ2tDO0FBQ3FCO0FBQ1Q7QUFDZjtBQUNoQjs7QUFFNUI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNkJBQTZCLHFEQUFTO0FBQ3RDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUI7QUFDakI7QUFDQTtBQUNBLGtDQUFrQztBQUNsQztBQUNBO0FBQ0E7QUFDQSx1Q0FBdUMseURBQU87QUFDOUMsaUNBQWlDLG1FQUFpQjtBQUNsRCx5QkFBeUIsK0NBQWtCO0FBQzNDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUNBQWlDLHlEQUFPO0FBQ3hDLHlCQUF5Qix5REFBTztBQUNoQztBQUNBLHNDQUFzQyx5REFBUztBQUMvQyxlQUFlLG1FQUFhO0FBQzVCO0FBQ0E7QUFDQSxvREFBb0Q7QUFDcEQ7QUFDQTtBQUNBO0FBQ0EsZUFBZSxtRUFBYTtBQUM1QjtBQUNBOztBQUV5QjtBQUN6QiIsInNvdXJjZXMiOlsid2VicGFjazovL2RhbmllbDMtdnAyLy4vbm9kZV9tb2R1bGVzL0BhenVyZS9tc2FsLW5vZGUvZGlzdC9jcnlwdG8vUGtjZUdlbmVyYXRvci5tanM/Mjg5MCJdLCJzb3VyY2VzQ29udGVudCI6WyIvKiEgQGF6dXJlL21zYWwtbm9kZSB2Mi4xMi4wIDIwMjQtMDctMjMgKi9cbid1c2Ugc3RyaWN0JztcbmltcG9ydCB7IENvbnN0YW50cyB9IGZyb20gJ0BhenVyZS9tc2FsLWNvbW1vbic7XG5pbXBvcnQgeyBSQU5ET01fT0NURVRfU0laRSwgQ2hhclNldCB9IGZyb20gJy4uL3V0aWxzL0NvbnN0YW50cy5tanMnO1xuaW1wb3J0IHsgRW5jb2RpbmdVdGlscyB9IGZyb20gJy4uL3V0aWxzL0VuY29kaW5nVXRpbHMubWpzJztcbmltcG9ydCB7IEhhc2hVdGlscyB9IGZyb20gJy4vSGFzaFV0aWxzLm1qcyc7XG5pbXBvcnQgY3J5cHRvIGZyb20gJ2NyeXB0byc7XG5cbi8qXG4gKiBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi4gQWxsIHJpZ2h0cyByZXNlcnZlZC5cbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgTGljZW5zZS5cbiAqL1xuLyoqXG4gKiBodHRwczovL3Rvb2xzLmlldGYub3JnL2h0bWwvcmZjNzYzNiNwYWdlLThcbiAqL1xuY2xhc3MgUGtjZUdlbmVyYXRvciB7XG4gICAgY29uc3RydWN0b3IoKSB7XG4gICAgICAgIHRoaXMuaGFzaFV0aWxzID0gbmV3IEhhc2hVdGlscygpO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBnZW5lcmF0ZXMgdGhlIGNvZGVWZXJmaWVyIGFuZCB0aGUgY2hhbGxlbmdlIGZyb20gdGhlIGNvZGVWZXJmaWVyXG4gICAgICogcmVmZXJlbmNlOiBodHRwczovL3Rvb2xzLmlldGYub3JnL2h0bWwvcmZjNzYzNiNzZWN0aW9uLTQuMSBhbmQgaHR0cHM6Ly90b29scy5pZXRmLm9yZy9odG1sL3JmYzc2MzYjc2VjdGlvbi00LjJcbiAgICAgKi9cbiAgICBhc3luYyBnZW5lcmF0ZVBrY2VDb2RlcygpIHtcbiAgICAgICAgY29uc3QgdmVyaWZpZXIgPSB0aGlzLmdlbmVyYXRlQ29kZVZlcmlmaWVyKCk7XG4gICAgICAgIGNvbnN0IGNoYWxsZW5nZSA9IHRoaXMuZ2VuZXJhdGVDb2RlQ2hhbGxlbmdlRnJvbVZlcmlmaWVyKHZlcmlmaWVyKTtcbiAgICAgICAgcmV0dXJuIHsgdmVyaWZpZXIsIGNoYWxsZW5nZSB9O1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBnZW5lcmF0ZXMgdGhlIGNvZGVWZXJmaWVyOyByZWZlcmVuY2U6IGh0dHBzOi8vdG9vbHMuaWV0Zi5vcmcvaHRtbC9yZmM3NjM2I3NlY3Rpb24tNC4xXG4gICAgICovXG4gICAgZ2VuZXJhdGVDb2RlVmVyaWZpZXIoKSB7XG4gICAgICAgIGNvbnN0IGNoYXJBcnIgPSBbXTtcbiAgICAgICAgY29uc3QgbWF4TnVtYmVyID0gMjU2IC0gKDI1NiAlIENoYXJTZXQuQ1ZfQ0hBUlNFVC5sZW5ndGgpO1xuICAgICAgICB3aGlsZSAoY2hhckFyci5sZW5ndGggPD0gUkFORE9NX09DVEVUX1NJWkUpIHtcbiAgICAgICAgICAgIGNvbnN0IGJ5dGUgPSBjcnlwdG8ucmFuZG9tQnl0ZXMoMSlbMF07XG4gICAgICAgICAgICBpZiAoYnl0ZSA+PSBtYXhOdW1iZXIpIHtcbiAgICAgICAgICAgICAgICAvKlxuICAgICAgICAgICAgICAgICAqIElnbm9yZSB0aGlzIG51bWJlciB0byBtYWludGFpbiByYW5kb21uZXNzLlxuICAgICAgICAgICAgICAgICAqIEluY2x1ZGluZyBpdCB3b3VsZCByZXN1bHQgaW4gYW4gdW5lcXVhbCBkaXN0cmlidXRpb24gb2YgY2hhcmFjdGVycyBhZnRlciBkb2luZyB0aGUgbW9kdWxvXG4gICAgICAgICAgICAgICAgICovXG4gICAgICAgICAgICAgICAgY29udGludWU7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBjb25zdCBpbmRleCA9IGJ5dGUgJSBDaGFyU2V0LkNWX0NIQVJTRVQubGVuZ3RoO1xuICAgICAgICAgICAgY2hhckFyci5wdXNoKENoYXJTZXQuQ1ZfQ0hBUlNFVFtpbmRleF0pO1xuICAgICAgICB9XG4gICAgICAgIGNvbnN0IHZlcmlmaWVyID0gY2hhckFyci5qb2luKENvbnN0YW50cy5FTVBUWV9TVFJJTkcpO1xuICAgICAgICByZXR1cm4gRW5jb2RpbmdVdGlscy5iYXNlNjRFbmNvZGVVcmwodmVyaWZpZXIpO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBnZW5lcmF0ZSB0aGUgY2hhbGxlbmdlIGZyb20gdGhlIGNvZGVWZXJmaWVyOyByZWZlcmVuY2U6IGh0dHBzOi8vdG9vbHMuaWV0Zi5vcmcvaHRtbC9yZmM3NjM2I3NlY3Rpb24tNC4yXG4gICAgICogQHBhcmFtIGNvZGVWZXJpZmllclxuICAgICAqL1xuICAgIGdlbmVyYXRlQ29kZUNoYWxsZW5nZUZyb21WZXJpZmllcihjb2RlVmVyaWZpZXIpIHtcbiAgICAgICAgcmV0dXJuIEVuY29kaW5nVXRpbHMuYmFzZTY0RW5jb2RlVXJsKHRoaXMuaGFzaFV0aWxzLnNoYTI1Nihjb2RlVmVyaWZpZXIpLnRvU3RyaW5nKFwiYmFzZTY0XCIpLCBcImJhc2U2NFwiKTtcbiAgICB9XG59XG5cbmV4cG9ydCB7IFBrY2VHZW5lcmF0b3IgfTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPVBrY2VHZW5lcmF0b3IubWpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/msal-node/dist/crypto/PkceGenerator.mjs\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/msal-node/dist/error/ManagedIdentityError.mjs":
/*!***************************************************************************!*\
  !*** ./node_modules/@azure/msal-node/dist/error/ManagedIdentityError.mjs ***!
  \***************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ManagedIdentityError: () => (/* binding */ ManagedIdentityError),\n/* harmony export */   ManagedIdentityErrorMessages: () => (/* binding */ ManagedIdentityErrorMessages),\n/* harmony export */   createManagedIdentityError: () => (/* binding */ createManagedIdentityError)\n/* harmony export */ });\n/* harmony import */ var _azure_msal_common__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @azure/msal-common */ \"(rsc)/./node_modules/@azure/msal-common/dist/error/AuthError.mjs\");\n/* harmony import */ var _ManagedIdentityErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ManagedIdentityErrorCodes.mjs */ \"(rsc)/./node_modules/@azure/msal-node/dist/error/ManagedIdentityErrorCodes.mjs\");\n/* harmony import */ var _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/Constants.mjs */ \"(rsc)/./node_modules/@azure/msal-node/dist/utils/Constants.mjs\");\n/*! @azure/msal-node v2.12.0 2024-07-23 */\n\n\n\n\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n/**\n * ManagedIdentityErrorMessage class containing string constants used by error codes and messages.\n */\nconst ManagedIdentityErrorMessages = {\n    [_ManagedIdentityErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.invalidFileExtension]: \"The file path in the WWW-Authenticate header does not contain a .key file.\",\n    [_ManagedIdentityErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.invalidFilePath]: \"The file path in the WWW-Authenticate header is not in a valid Windows or Linux Format.\",\n    [_ManagedIdentityErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.invalidManagedIdentityIdType]: \"More than one ManagedIdentityIdType was provided.\",\n    [_ManagedIdentityErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.invalidSecret]: \"The secret in the file on the file path in the WWW-Authenticate header is greater than 4096 bytes.\",\n    [_ManagedIdentityErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.platformNotSupported]: \"The platform is not supported by Azure Arc. Azure Arc only supports Windows and Linux.\",\n    [_ManagedIdentityErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.missingId]: \"A ManagedIdentityId id was not provided.\",\n    [_ManagedIdentityErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.MsiEnvironmentVariableUrlMalformedErrorCodes\n        .AZURE_POD_IDENTITY_AUTHORITY_HOST]: `The Managed Identity's '${_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_1__.ManagedIdentityEnvironmentVariableNames.AZURE_POD_IDENTITY_AUTHORITY_HOST}' environment variable is malformed.`,\n    [_ManagedIdentityErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.MsiEnvironmentVariableUrlMalformedErrorCodes\n        .IDENTITY_ENDPOINT]: `The Managed Identity's '${_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_1__.ManagedIdentityEnvironmentVariableNames.IDENTITY_ENDPOINT}' environment variable is malformed.`,\n    [_ManagedIdentityErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.MsiEnvironmentVariableUrlMalformedErrorCodes\n        .IMDS_ENDPOINT]: `The Managed Identity's '${_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_1__.ManagedIdentityEnvironmentVariableNames.IMDS_ENDPOINT}' environment variable is malformed.`,\n    [_ManagedIdentityErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.MsiEnvironmentVariableUrlMalformedErrorCodes\n        .MSI_ENDPOINT]: `The Managed Identity's '${_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_1__.ManagedIdentityEnvironmentVariableNames.MSI_ENDPOINT}' environment variable is malformed.`,\n    [_ManagedIdentityErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.networkUnavailable]: \"Authentication unavailable. The request to the managed identity endpoint timed out.\",\n    [_ManagedIdentityErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.unableToCreateAzureArc]: \"Azure Arc Managed Identities can only be system assigned.\",\n    [_ManagedIdentityErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.unableToCreateCloudShell]: \"Cloud Shell Managed Identities can only be system assigned.\",\n    [_ManagedIdentityErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.unableToCreateSource]: \"Unable to create a Managed Identity source based on environment variables.\",\n    [_ManagedIdentityErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.unableToReadSecretFile]: \"Unable to read the secret file.\",\n    [_ManagedIdentityErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.userAssignedNotAvailableAtRuntime]: \"Service Fabric user assigned managed identity ClientId or ResourceId is not configurable at runtime.\",\n    [_ManagedIdentityErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.wwwAuthenticateHeaderMissing]: \"A 401 response was received form the Azure Arc Managed Identity, but the www-authenticate header is missing.\",\n    [_ManagedIdentityErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.wwwAuthenticateHeaderUnsupportedFormat]: \"A 401 response was received form the Azure Arc Managed Identity, but the www-authenticate header is in an unsupported format.\",\n};\nclass ManagedIdentityError extends _azure_msal_common__WEBPACK_IMPORTED_MODULE_2__.AuthError {\n    constructor(errorCode) {\n        super(errorCode, ManagedIdentityErrorMessages[errorCode]);\n        this.name = \"ManagedIdentityError\";\n        Object.setPrototypeOf(this, ManagedIdentityError.prototype);\n    }\n}\nfunction createManagedIdentityError(errorCode) {\n    return new ManagedIdentityError(errorCode);\n}\n\n\n//# sourceMappingURL=ManagedIdentityError.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtbm9kZS9kaXN0L2Vycm9yL01hbmFnZWRJZGVudGl0eUVycm9yLm1qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFBQTtBQUNhO0FBQ2tDO0FBQ2tZO0FBQ2hXOztBQUVqRjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSyxnRkFBb0I7QUFDekIsS0FBSywyRUFBZTtBQUNwQixLQUFLLHdGQUE0QjtBQUNqQyxLQUFLLHlFQUFhO0FBQ2xCLEtBQUssZ0ZBQW9CO0FBQ3pCLEtBQUsscUVBQVM7QUFDZCxLQUFLLHdHQUE0QztBQUNqRCx3RUFBd0UseUZBQXVDLG1DQUFtQztBQUNsSixLQUFLLHdHQUE0QztBQUNqRCx3REFBd0QseUZBQXVDLG1CQUFtQjtBQUNsSCxLQUFLLHdHQUE0QztBQUNqRCxvREFBb0QseUZBQXVDLGVBQWU7QUFDMUcsS0FBSyx3R0FBNEM7QUFDakQsbURBQW1ELHlGQUF1QyxjQUFjO0FBQ3hHLEtBQUssOEVBQWtCO0FBQ3ZCLEtBQUssa0ZBQXNCO0FBQzNCLEtBQUssb0ZBQXdCO0FBQzdCLEtBQUssZ0ZBQW9CO0FBQ3pCLEtBQUssa0ZBQXNCO0FBQzNCLEtBQUssNkZBQWlDO0FBQ3RDLEtBQUssd0ZBQTRCO0FBQ2pDLEtBQUssa0dBQXNDO0FBQzNDO0FBQ0EsbUNBQW1DLHlEQUFTO0FBQzVDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFMEY7QUFDMUYiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9kYW5pZWwzLXZwMi8uL25vZGVfbW9kdWxlcy9AYXp1cmUvbXNhbC1ub2RlL2Rpc3QvZXJyb3IvTWFuYWdlZElkZW50aXR5RXJyb3IubWpzP2NlNGYiXSwic291cmNlc0NvbnRlbnQiOlsiLyohIEBhenVyZS9tc2FsLW5vZGUgdjIuMTIuMCAyMDI0LTA3LTIzICovXG4ndXNlIHN0cmljdCc7XG5pbXBvcnQgeyBBdXRoRXJyb3IgfSBmcm9tICdAYXp1cmUvbXNhbC1jb21tb24nO1xuaW1wb3J0IHsgaW52YWxpZEZpbGVFeHRlbnNpb24sIGludmFsaWRGaWxlUGF0aCwgaW52YWxpZE1hbmFnZWRJZGVudGl0eUlkVHlwZSwgaW52YWxpZFNlY3JldCwgcGxhdGZvcm1Ob3RTdXBwb3J0ZWQsIG1pc3NpbmdJZCwgTXNpRW52aXJvbm1lbnRWYXJpYWJsZVVybE1hbGZvcm1lZEVycm9yQ29kZXMsIG5ldHdvcmtVbmF2YWlsYWJsZSwgdW5hYmxlVG9DcmVhdGVBenVyZUFyYywgdW5hYmxlVG9DcmVhdGVDbG91ZFNoZWxsLCB1bmFibGVUb0NyZWF0ZVNvdXJjZSwgdW5hYmxlVG9SZWFkU2VjcmV0RmlsZSwgdXNlckFzc2lnbmVkTm90QXZhaWxhYmxlQXRSdW50aW1lLCB3d3dBdXRoZW50aWNhdGVIZWFkZXJNaXNzaW5nLCB3d3dBdXRoZW50aWNhdGVIZWFkZXJVbnN1cHBvcnRlZEZvcm1hdCB9IGZyb20gJy4vTWFuYWdlZElkZW50aXR5RXJyb3JDb2Rlcy5tanMnO1xuaW1wb3J0IHsgTWFuYWdlZElkZW50aXR5RW52aXJvbm1lbnRWYXJpYWJsZU5hbWVzIH0gZnJvbSAnLi4vdXRpbHMvQ29uc3RhbnRzLm1qcyc7XG5cbi8qXG4gKiBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi4gQWxsIHJpZ2h0cyByZXNlcnZlZC5cbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgTGljZW5zZS5cbiAqL1xuLyoqXG4gKiBNYW5hZ2VkSWRlbnRpdHlFcnJvck1lc3NhZ2UgY2xhc3MgY29udGFpbmluZyBzdHJpbmcgY29uc3RhbnRzIHVzZWQgYnkgZXJyb3IgY29kZXMgYW5kIG1lc3NhZ2VzLlxuICovXG5jb25zdCBNYW5hZ2VkSWRlbnRpdHlFcnJvck1lc3NhZ2VzID0ge1xuICAgIFtpbnZhbGlkRmlsZUV4dGVuc2lvbl06IFwiVGhlIGZpbGUgcGF0aCBpbiB0aGUgV1dXLUF1dGhlbnRpY2F0ZSBoZWFkZXIgZG9lcyBub3QgY29udGFpbiBhIC5rZXkgZmlsZS5cIixcbiAgICBbaW52YWxpZEZpbGVQYXRoXTogXCJUaGUgZmlsZSBwYXRoIGluIHRoZSBXV1ctQXV0aGVudGljYXRlIGhlYWRlciBpcyBub3QgaW4gYSB2YWxpZCBXaW5kb3dzIG9yIExpbnV4IEZvcm1hdC5cIixcbiAgICBbaW52YWxpZE1hbmFnZWRJZGVudGl0eUlkVHlwZV06IFwiTW9yZSB0aGFuIG9uZSBNYW5hZ2VkSWRlbnRpdHlJZFR5cGUgd2FzIHByb3ZpZGVkLlwiLFxuICAgIFtpbnZhbGlkU2VjcmV0XTogXCJUaGUgc2VjcmV0IGluIHRoZSBmaWxlIG9uIHRoZSBmaWxlIHBhdGggaW4gdGhlIFdXVy1BdXRoZW50aWNhdGUgaGVhZGVyIGlzIGdyZWF0ZXIgdGhhbiA0MDk2IGJ5dGVzLlwiLFxuICAgIFtwbGF0Zm9ybU5vdFN1cHBvcnRlZF06IFwiVGhlIHBsYXRmb3JtIGlzIG5vdCBzdXBwb3J0ZWQgYnkgQXp1cmUgQXJjLiBBenVyZSBBcmMgb25seSBzdXBwb3J0cyBXaW5kb3dzIGFuZCBMaW51eC5cIixcbiAgICBbbWlzc2luZ0lkXTogXCJBIE1hbmFnZWRJZGVudGl0eUlkIGlkIHdhcyBub3QgcHJvdmlkZWQuXCIsXG4gICAgW01zaUVudmlyb25tZW50VmFyaWFibGVVcmxNYWxmb3JtZWRFcnJvckNvZGVzXG4gICAgICAgIC5BWlVSRV9QT0RfSURFTlRJVFlfQVVUSE9SSVRZX0hPU1RdOiBgVGhlIE1hbmFnZWQgSWRlbnRpdHkncyAnJHtNYW5hZ2VkSWRlbnRpdHlFbnZpcm9ubWVudFZhcmlhYmxlTmFtZXMuQVpVUkVfUE9EX0lERU5USVRZX0FVVEhPUklUWV9IT1NUfScgZW52aXJvbm1lbnQgdmFyaWFibGUgaXMgbWFsZm9ybWVkLmAsXG4gICAgW01zaUVudmlyb25tZW50VmFyaWFibGVVcmxNYWxmb3JtZWRFcnJvckNvZGVzXG4gICAgICAgIC5JREVOVElUWV9FTkRQT0lOVF06IGBUaGUgTWFuYWdlZCBJZGVudGl0eSdzICcke01hbmFnZWRJZGVudGl0eUVudmlyb25tZW50VmFyaWFibGVOYW1lcy5JREVOVElUWV9FTkRQT0lOVH0nIGVudmlyb25tZW50IHZhcmlhYmxlIGlzIG1hbGZvcm1lZC5gLFxuICAgIFtNc2lFbnZpcm9ubWVudFZhcmlhYmxlVXJsTWFsZm9ybWVkRXJyb3JDb2Rlc1xuICAgICAgICAuSU1EU19FTkRQT0lOVF06IGBUaGUgTWFuYWdlZCBJZGVudGl0eSdzICcke01hbmFnZWRJZGVudGl0eUVudmlyb25tZW50VmFyaWFibGVOYW1lcy5JTURTX0VORFBPSU5UfScgZW52aXJvbm1lbnQgdmFyaWFibGUgaXMgbWFsZm9ybWVkLmAsXG4gICAgW01zaUVudmlyb25tZW50VmFyaWFibGVVcmxNYWxmb3JtZWRFcnJvckNvZGVzXG4gICAgICAgIC5NU0lfRU5EUE9JTlRdOiBgVGhlIE1hbmFnZWQgSWRlbnRpdHkncyAnJHtNYW5hZ2VkSWRlbnRpdHlFbnZpcm9ubWVudFZhcmlhYmxlTmFtZXMuTVNJX0VORFBPSU5UfScgZW52aXJvbm1lbnQgdmFyaWFibGUgaXMgbWFsZm9ybWVkLmAsXG4gICAgW25ldHdvcmtVbmF2YWlsYWJsZV06IFwiQXV0aGVudGljYXRpb24gdW5hdmFpbGFibGUuIFRoZSByZXF1ZXN0IHRvIHRoZSBtYW5hZ2VkIGlkZW50aXR5IGVuZHBvaW50IHRpbWVkIG91dC5cIixcbiAgICBbdW5hYmxlVG9DcmVhdGVBenVyZUFyY106IFwiQXp1cmUgQXJjIE1hbmFnZWQgSWRlbnRpdGllcyBjYW4gb25seSBiZSBzeXN0ZW0gYXNzaWduZWQuXCIsXG4gICAgW3VuYWJsZVRvQ3JlYXRlQ2xvdWRTaGVsbF06IFwiQ2xvdWQgU2hlbGwgTWFuYWdlZCBJZGVudGl0aWVzIGNhbiBvbmx5IGJlIHN5c3RlbSBhc3NpZ25lZC5cIixcbiAgICBbdW5hYmxlVG9DcmVhdGVTb3VyY2VdOiBcIlVuYWJsZSB0byBjcmVhdGUgYSBNYW5hZ2VkIElkZW50aXR5IHNvdXJjZSBiYXNlZCBvbiBlbnZpcm9ubWVudCB2YXJpYWJsZXMuXCIsXG4gICAgW3VuYWJsZVRvUmVhZFNlY3JldEZpbGVdOiBcIlVuYWJsZSB0byByZWFkIHRoZSBzZWNyZXQgZmlsZS5cIixcbiAgICBbdXNlckFzc2lnbmVkTm90QXZhaWxhYmxlQXRSdW50aW1lXTogXCJTZXJ2aWNlIEZhYnJpYyB1c2VyIGFzc2lnbmVkIG1hbmFnZWQgaWRlbnRpdHkgQ2xpZW50SWQgb3IgUmVzb3VyY2VJZCBpcyBub3QgY29uZmlndXJhYmxlIGF0IHJ1bnRpbWUuXCIsXG4gICAgW3d3d0F1dGhlbnRpY2F0ZUhlYWRlck1pc3NpbmddOiBcIkEgNDAxIHJlc3BvbnNlIHdhcyByZWNlaXZlZCBmb3JtIHRoZSBBenVyZSBBcmMgTWFuYWdlZCBJZGVudGl0eSwgYnV0IHRoZSB3d3ctYXV0aGVudGljYXRlIGhlYWRlciBpcyBtaXNzaW5nLlwiLFxuICAgIFt3d3dBdXRoZW50aWNhdGVIZWFkZXJVbnN1cHBvcnRlZEZvcm1hdF06IFwiQSA0MDEgcmVzcG9uc2Ugd2FzIHJlY2VpdmVkIGZvcm0gdGhlIEF6dXJlIEFyYyBNYW5hZ2VkIElkZW50aXR5LCBidXQgdGhlIHd3dy1hdXRoZW50aWNhdGUgaGVhZGVyIGlzIGluIGFuIHVuc3VwcG9ydGVkIGZvcm1hdC5cIixcbn07XG5jbGFzcyBNYW5hZ2VkSWRlbnRpdHlFcnJvciBleHRlbmRzIEF1dGhFcnJvciB7XG4gICAgY29uc3RydWN0b3IoZXJyb3JDb2RlKSB7XG4gICAgICAgIHN1cGVyKGVycm9yQ29kZSwgTWFuYWdlZElkZW50aXR5RXJyb3JNZXNzYWdlc1tlcnJvckNvZGVdKTtcbiAgICAgICAgdGhpcy5uYW1lID0gXCJNYW5hZ2VkSWRlbnRpdHlFcnJvclwiO1xuICAgICAgICBPYmplY3Quc2V0UHJvdG90eXBlT2YodGhpcywgTWFuYWdlZElkZW50aXR5RXJyb3IucHJvdG90eXBlKTtcbiAgICB9XG59XG5mdW5jdGlvbiBjcmVhdGVNYW5hZ2VkSWRlbnRpdHlFcnJvcihlcnJvckNvZGUpIHtcbiAgICByZXR1cm4gbmV3IE1hbmFnZWRJZGVudGl0eUVycm9yKGVycm9yQ29kZSk7XG59XG5cbmV4cG9ydCB7IE1hbmFnZWRJZGVudGl0eUVycm9yLCBNYW5hZ2VkSWRlbnRpdHlFcnJvck1lc3NhZ2VzLCBjcmVhdGVNYW5hZ2VkSWRlbnRpdHlFcnJvciB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9TWFuYWdlZElkZW50aXR5RXJyb3IubWpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/msal-node/dist/error/ManagedIdentityError.mjs\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/msal-node/dist/error/ManagedIdentityErrorCodes.mjs":
/*!********************************************************************************!*\
  !*** ./node_modules/@azure/msal-node/dist/error/ManagedIdentityErrorCodes.mjs ***!
  \********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   MsiEnvironmentVariableUrlMalformedErrorCodes: () => (/* binding */ MsiEnvironmentVariableUrlMalformedErrorCodes),\n/* harmony export */   invalidFileExtension: () => (/* binding */ invalidFileExtension),\n/* harmony export */   invalidFilePath: () => (/* binding */ invalidFilePath),\n/* harmony export */   invalidManagedIdentityIdType: () => (/* binding */ invalidManagedIdentityIdType),\n/* harmony export */   invalidSecret: () => (/* binding */ invalidSecret),\n/* harmony export */   missingId: () => (/* binding */ missingId),\n/* harmony export */   networkUnavailable: () => (/* binding */ networkUnavailable),\n/* harmony export */   platformNotSupported: () => (/* binding */ platformNotSupported),\n/* harmony export */   unableToCreateAzureArc: () => (/* binding */ unableToCreateAzureArc),\n/* harmony export */   unableToCreateCloudShell: () => (/* binding */ unableToCreateCloudShell),\n/* harmony export */   unableToCreateSource: () => (/* binding */ unableToCreateSource),\n/* harmony export */   unableToReadSecretFile: () => (/* binding */ unableToReadSecretFile),\n/* harmony export */   userAssignedNotAvailableAtRuntime: () => (/* binding */ userAssignedNotAvailableAtRuntime),\n/* harmony export */   wwwAuthenticateHeaderMissing: () => (/* binding */ wwwAuthenticateHeaderMissing),\n/* harmony export */   wwwAuthenticateHeaderUnsupportedFormat: () => (/* binding */ wwwAuthenticateHeaderUnsupportedFormat)\n/* harmony export */ });\n/* harmony import */ var _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/Constants.mjs */ \"(rsc)/./node_modules/@azure/msal-node/dist/utils/Constants.mjs\");\n/*! @azure/msal-node v2.12.0 2024-07-23 */\n\n\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\nconst invalidFileExtension = \"invalid_file_extension\";\nconst invalidFilePath = \"invalid_file_path\";\nconst invalidManagedIdentityIdType = \"invalid_managed_identity_id_type\";\nconst invalidSecret = \"invalid_secret\";\nconst missingId = \"missing_client_id\";\nconst networkUnavailable = \"network_unavailable\";\nconst platformNotSupported = \"platform_not_supported\";\nconst unableToCreateAzureArc = \"unable_to_create_azure_arc\";\nconst unableToCreateCloudShell = \"unable_to_create_cloud_shell\";\nconst unableToCreateSource = \"unable_to_create_source\";\nconst unableToReadSecretFile = \"unable_to_read_secret_file\";\nconst userAssignedNotAvailableAtRuntime = \"user_assigned_not_available_at_runtime\";\nconst wwwAuthenticateHeaderMissing = \"www_authenticate_header_missing\";\nconst wwwAuthenticateHeaderUnsupportedFormat = \"www_authenticate_header_unsupported_format\";\nconst MsiEnvironmentVariableUrlMalformedErrorCodes = {\n    [_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.ManagedIdentityEnvironmentVariableNames.AZURE_POD_IDENTITY_AUTHORITY_HOST]: \"azure_pod_identity_authority_host_url_malformed\",\n    [_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.ManagedIdentityEnvironmentVariableNames.IDENTITY_ENDPOINT]: \"identity_endpoint_url_malformed\",\n    [_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.ManagedIdentityEnvironmentVariableNames.IMDS_ENDPOINT]: \"imds_endpoint_url_malformed\",\n    [_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.ManagedIdentityEnvironmentVariableNames.MSI_ENDPOINT]: \"msi_endpoint_url_malformed\",\n};\n\n\n//# sourceMappingURL=ManagedIdentityErrorCodes.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtbm9kZS9kaXN0L2Vycm9yL01hbmFnZWRJZGVudGl0eUVycm9yQ29kZXMubWpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBQTtBQUNhO0FBQ29FOztBQUVqRjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUsseUZBQXVDO0FBQzVDLEtBQUsseUZBQXVDO0FBQzVDLEtBQUsseUZBQXVDO0FBQzVDLEtBQUsseUZBQXVDO0FBQzVDOztBQUUwWTtBQUMxWSIsInNvdXJjZXMiOlsid2VicGFjazovL2RhbmllbDMtdnAyLy4vbm9kZV9tb2R1bGVzL0BhenVyZS9tc2FsLW5vZGUvZGlzdC9lcnJvci9NYW5hZ2VkSWRlbnRpdHlFcnJvckNvZGVzLm1qcz8yMDRmIl0sInNvdXJjZXNDb250ZW50IjpbIi8qISBAYXp1cmUvbXNhbC1ub2RlIHYyLjEyLjAgMjAyNC0wNy0yMyAqL1xuJ3VzZSBzdHJpY3QnO1xuaW1wb3J0IHsgTWFuYWdlZElkZW50aXR5RW52aXJvbm1lbnRWYXJpYWJsZU5hbWVzIH0gZnJvbSAnLi4vdXRpbHMvQ29uc3RhbnRzLm1qcyc7XG5cbi8qXG4gKiBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi4gQWxsIHJpZ2h0cyByZXNlcnZlZC5cbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgTGljZW5zZS5cbiAqL1xuY29uc3QgaW52YWxpZEZpbGVFeHRlbnNpb24gPSBcImludmFsaWRfZmlsZV9leHRlbnNpb25cIjtcbmNvbnN0IGludmFsaWRGaWxlUGF0aCA9IFwiaW52YWxpZF9maWxlX3BhdGhcIjtcbmNvbnN0IGludmFsaWRNYW5hZ2VkSWRlbnRpdHlJZFR5cGUgPSBcImludmFsaWRfbWFuYWdlZF9pZGVudGl0eV9pZF90eXBlXCI7XG5jb25zdCBpbnZhbGlkU2VjcmV0ID0gXCJpbnZhbGlkX3NlY3JldFwiO1xuY29uc3QgbWlzc2luZ0lkID0gXCJtaXNzaW5nX2NsaWVudF9pZFwiO1xuY29uc3QgbmV0d29ya1VuYXZhaWxhYmxlID0gXCJuZXR3b3JrX3VuYXZhaWxhYmxlXCI7XG5jb25zdCBwbGF0Zm9ybU5vdFN1cHBvcnRlZCA9IFwicGxhdGZvcm1fbm90X3N1cHBvcnRlZFwiO1xuY29uc3QgdW5hYmxlVG9DcmVhdGVBenVyZUFyYyA9IFwidW5hYmxlX3RvX2NyZWF0ZV9henVyZV9hcmNcIjtcbmNvbnN0IHVuYWJsZVRvQ3JlYXRlQ2xvdWRTaGVsbCA9IFwidW5hYmxlX3RvX2NyZWF0ZV9jbG91ZF9zaGVsbFwiO1xuY29uc3QgdW5hYmxlVG9DcmVhdGVTb3VyY2UgPSBcInVuYWJsZV90b19jcmVhdGVfc291cmNlXCI7XG5jb25zdCB1bmFibGVUb1JlYWRTZWNyZXRGaWxlID0gXCJ1bmFibGVfdG9fcmVhZF9zZWNyZXRfZmlsZVwiO1xuY29uc3QgdXNlckFzc2lnbmVkTm90QXZhaWxhYmxlQXRSdW50aW1lID0gXCJ1c2VyX2Fzc2lnbmVkX25vdF9hdmFpbGFibGVfYXRfcnVudGltZVwiO1xuY29uc3Qgd3d3QXV0aGVudGljYXRlSGVhZGVyTWlzc2luZyA9IFwid3d3X2F1dGhlbnRpY2F0ZV9oZWFkZXJfbWlzc2luZ1wiO1xuY29uc3Qgd3d3QXV0aGVudGljYXRlSGVhZGVyVW5zdXBwb3J0ZWRGb3JtYXQgPSBcInd3d19hdXRoZW50aWNhdGVfaGVhZGVyX3Vuc3VwcG9ydGVkX2Zvcm1hdFwiO1xuY29uc3QgTXNpRW52aXJvbm1lbnRWYXJpYWJsZVVybE1hbGZvcm1lZEVycm9yQ29kZXMgPSB7XG4gICAgW01hbmFnZWRJZGVudGl0eUVudmlyb25tZW50VmFyaWFibGVOYW1lcy5BWlVSRV9QT0RfSURFTlRJVFlfQVVUSE9SSVRZX0hPU1RdOiBcImF6dXJlX3BvZF9pZGVudGl0eV9hdXRob3JpdHlfaG9zdF91cmxfbWFsZm9ybWVkXCIsXG4gICAgW01hbmFnZWRJZGVudGl0eUVudmlyb25tZW50VmFyaWFibGVOYW1lcy5JREVOVElUWV9FTkRQT0lOVF06IFwiaWRlbnRpdHlfZW5kcG9pbnRfdXJsX21hbGZvcm1lZFwiLFxuICAgIFtNYW5hZ2VkSWRlbnRpdHlFbnZpcm9ubWVudFZhcmlhYmxlTmFtZXMuSU1EU19FTkRQT0lOVF06IFwiaW1kc19lbmRwb2ludF91cmxfbWFsZm9ybWVkXCIsXG4gICAgW01hbmFnZWRJZGVudGl0eUVudmlyb25tZW50VmFyaWFibGVOYW1lcy5NU0lfRU5EUE9JTlRdOiBcIm1zaV9lbmRwb2ludF91cmxfbWFsZm9ybWVkXCIsXG59O1xuXG5leHBvcnQgeyBNc2lFbnZpcm9ubWVudFZhcmlhYmxlVXJsTWFsZm9ybWVkRXJyb3JDb2RlcywgaW52YWxpZEZpbGVFeHRlbnNpb24sIGludmFsaWRGaWxlUGF0aCwgaW52YWxpZE1hbmFnZWRJZGVudGl0eUlkVHlwZSwgaW52YWxpZFNlY3JldCwgbWlzc2luZ0lkLCBuZXR3b3JrVW5hdmFpbGFibGUsIHBsYXRmb3JtTm90U3VwcG9ydGVkLCB1bmFibGVUb0NyZWF0ZUF6dXJlQXJjLCB1bmFibGVUb0NyZWF0ZUNsb3VkU2hlbGwsIHVuYWJsZVRvQ3JlYXRlU291cmNlLCB1bmFibGVUb1JlYWRTZWNyZXRGaWxlLCB1c2VyQXNzaWduZWROb3RBdmFpbGFibGVBdFJ1bnRpbWUsIHd3d0F1dGhlbnRpY2F0ZUhlYWRlck1pc3NpbmcsIHd3d0F1dGhlbnRpY2F0ZUhlYWRlclVuc3VwcG9ydGVkRm9ybWF0IH07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1NYW5hZ2VkSWRlbnRpdHlFcnJvckNvZGVzLm1qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/msal-node/dist/error/ManagedIdentityErrorCodes.mjs\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/msal-node/dist/error/NodeAuthError.mjs":
/*!********************************************************************!*\
  !*** ./node_modules/@azure/msal-node/dist/error/NodeAuthError.mjs ***!
  \********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   NodeAuthError: () => (/* binding */ NodeAuthError),\n/* harmony export */   NodeAuthErrorMessage: () => (/* binding */ NodeAuthErrorMessage)\n/* harmony export */ });\n/* harmony import */ var _azure_msal_common__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @azure/msal-common */ \"(rsc)/./node_modules/@azure/msal-common/dist/error/AuthError.mjs\");\n/*! @azure/msal-node v2.12.0 2024-07-23 */\n\n\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n/**\n * NodeAuthErrorMessage class containing string constants used by error codes and messages.\n */\nconst NodeAuthErrorMessage = {\n    invalidLoopbackAddressType: {\n        code: \"invalid_loopback_server_address_type\",\n        desc: \"Loopback server address is not type string. This is unexpected.\",\n    },\n    unableToLoadRedirectUri: {\n        code: \"unable_to_load_redirectUrl\",\n        desc: \"Loopback server callback was invoked without a url. This is unexpected.\",\n    },\n    noAuthCodeInResponse: {\n        code: \"no_auth_code_in_response\",\n        desc: \"No auth code found in the server response. Please check your network trace to determine what happened.\",\n    },\n    noLoopbackServerExists: {\n        code: \"no_loopback_server_exists\",\n        desc: \"No loopback server exists yet.\",\n    },\n    loopbackServerAlreadyExists: {\n        code: \"loopback_server_already_exists\",\n        desc: \"Loopback server already exists. Cannot create another.\",\n    },\n    loopbackServerTimeout: {\n        code: \"loopback_server_timeout\",\n        desc: \"Timed out waiting for auth code listener to be registered.\",\n    },\n    stateNotFoundError: {\n        code: \"state_not_found\",\n        desc: \"State not found. Please verify that the request originated from msal.\",\n    },\n    thumbprintMissing: {\n        code: \"thumbprint_missing_from_client_certificate\",\n        desc: \"Client certificate does not contain a SHA-1 or SHA-256 thumbprint.\",\n    },\n};\nclass NodeAuthError extends _azure_msal_common__WEBPACK_IMPORTED_MODULE_0__.AuthError {\n    constructor(errorCode, errorMessage) {\n        super(errorCode, errorMessage);\n        this.name = \"NodeAuthError\";\n    }\n    /**\n     * Creates an error thrown if loopback server address is of type string.\n     */\n    static createInvalidLoopbackAddressTypeError() {\n        return new NodeAuthError(NodeAuthErrorMessage.invalidLoopbackAddressType.code, `${NodeAuthErrorMessage.invalidLoopbackAddressType.desc}`);\n    }\n    /**\n     * Creates an error thrown if the loopback server is unable to get a url.\n     */\n    static createUnableToLoadRedirectUrlError() {\n        return new NodeAuthError(NodeAuthErrorMessage.unableToLoadRedirectUri.code, `${NodeAuthErrorMessage.unableToLoadRedirectUri.desc}`);\n    }\n    /**\n     * Creates an error thrown if the server response does not contain an auth code.\n     */\n    static createNoAuthCodeInResponseError() {\n        return new NodeAuthError(NodeAuthErrorMessage.noAuthCodeInResponse.code, `${NodeAuthErrorMessage.noAuthCodeInResponse.desc}`);\n    }\n    /**\n     * Creates an error thrown if the loopback server has not been spun up yet.\n     */\n    static createNoLoopbackServerExistsError() {\n        return new NodeAuthError(NodeAuthErrorMessage.noLoopbackServerExists.code, `${NodeAuthErrorMessage.noLoopbackServerExists.desc}`);\n    }\n    /**\n     * Creates an error thrown if a loopback server already exists when attempting to create another one.\n     */\n    static createLoopbackServerAlreadyExistsError() {\n        return new NodeAuthError(NodeAuthErrorMessage.loopbackServerAlreadyExists.code, `${NodeAuthErrorMessage.loopbackServerAlreadyExists.desc}`);\n    }\n    /**\n     * Creates an error thrown if the loopback server times out registering the auth code listener.\n     */\n    static createLoopbackServerTimeoutError() {\n        return new NodeAuthError(NodeAuthErrorMessage.loopbackServerTimeout.code, `${NodeAuthErrorMessage.loopbackServerTimeout.desc}`);\n    }\n    /**\n     * Creates an error thrown when the state is not present.\n     */\n    static createStateNotFoundError() {\n        return new NodeAuthError(NodeAuthErrorMessage.stateNotFoundError.code, NodeAuthErrorMessage.stateNotFoundError.desc);\n    }\n    /**\n     * Creates an error thrown when client certificate was provided, but neither the SHA-1 or SHA-256 thumbprints were provided\n     */\n    static createThumbprintMissingError() {\n        return new NodeAuthError(NodeAuthErrorMessage.thumbprintMissing.code, NodeAuthErrorMessage.thumbprintMissing.desc);\n    }\n}\n\n\n//# sourceMappingURL=NodeAuthError.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtbm9kZS9kaXN0L2Vycm9yL05vZGVBdXRoRXJyb3IubWpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFBO0FBQ2E7QUFDa0M7O0FBRS9DO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0EsNEJBQTRCLHlEQUFTO0FBQ3JDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwwRkFBMEYscURBQXFEO0FBQy9JO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx1RkFBdUYsa0RBQWtEO0FBQ3pJO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxvRkFBb0YsK0NBQStDO0FBQ25JO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxzRkFBc0YsaURBQWlEO0FBQ3ZJO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwyRkFBMkYsc0RBQXNEO0FBQ2pKO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxxRkFBcUYsZ0RBQWdEO0FBQ3JJO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRStDO0FBQy9DIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZGFuaWVsMy12cDIvLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtbm9kZS9kaXN0L2Vycm9yL05vZGVBdXRoRXJyb3IubWpzP2QwOTIiXSwic291cmNlc0NvbnRlbnQiOlsiLyohIEBhenVyZS9tc2FsLW5vZGUgdjIuMTIuMCAyMDI0LTA3LTIzICovXG4ndXNlIHN0cmljdCc7XG5pbXBvcnQgeyBBdXRoRXJyb3IgfSBmcm9tICdAYXp1cmUvbXNhbC1jb21tb24nO1xuXG4vKlxuICogQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uIEFsbCByaWdodHMgcmVzZXJ2ZWQuXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIExpY2Vuc2UuXG4gKi9cbi8qKlxuICogTm9kZUF1dGhFcnJvck1lc3NhZ2UgY2xhc3MgY29udGFpbmluZyBzdHJpbmcgY29uc3RhbnRzIHVzZWQgYnkgZXJyb3IgY29kZXMgYW5kIG1lc3NhZ2VzLlxuICovXG5jb25zdCBOb2RlQXV0aEVycm9yTWVzc2FnZSA9IHtcbiAgICBpbnZhbGlkTG9vcGJhY2tBZGRyZXNzVHlwZToge1xuICAgICAgICBjb2RlOiBcImludmFsaWRfbG9vcGJhY2tfc2VydmVyX2FkZHJlc3NfdHlwZVwiLFxuICAgICAgICBkZXNjOiBcIkxvb3BiYWNrIHNlcnZlciBhZGRyZXNzIGlzIG5vdCB0eXBlIHN0cmluZy4gVGhpcyBpcyB1bmV4cGVjdGVkLlwiLFxuICAgIH0sXG4gICAgdW5hYmxlVG9Mb2FkUmVkaXJlY3RVcmk6IHtcbiAgICAgICAgY29kZTogXCJ1bmFibGVfdG9fbG9hZF9yZWRpcmVjdFVybFwiLFxuICAgICAgICBkZXNjOiBcIkxvb3BiYWNrIHNlcnZlciBjYWxsYmFjayB3YXMgaW52b2tlZCB3aXRob3V0IGEgdXJsLiBUaGlzIGlzIHVuZXhwZWN0ZWQuXCIsXG4gICAgfSxcbiAgICBub0F1dGhDb2RlSW5SZXNwb25zZToge1xuICAgICAgICBjb2RlOiBcIm5vX2F1dGhfY29kZV9pbl9yZXNwb25zZVwiLFxuICAgICAgICBkZXNjOiBcIk5vIGF1dGggY29kZSBmb3VuZCBpbiB0aGUgc2VydmVyIHJlc3BvbnNlLiBQbGVhc2UgY2hlY2sgeW91ciBuZXR3b3JrIHRyYWNlIHRvIGRldGVybWluZSB3aGF0IGhhcHBlbmVkLlwiLFxuICAgIH0sXG4gICAgbm9Mb29wYmFja1NlcnZlckV4aXN0czoge1xuICAgICAgICBjb2RlOiBcIm5vX2xvb3BiYWNrX3NlcnZlcl9leGlzdHNcIixcbiAgICAgICAgZGVzYzogXCJObyBsb29wYmFjayBzZXJ2ZXIgZXhpc3RzIHlldC5cIixcbiAgICB9LFxuICAgIGxvb3BiYWNrU2VydmVyQWxyZWFkeUV4aXN0czoge1xuICAgICAgICBjb2RlOiBcImxvb3BiYWNrX3NlcnZlcl9hbHJlYWR5X2V4aXN0c1wiLFxuICAgICAgICBkZXNjOiBcIkxvb3BiYWNrIHNlcnZlciBhbHJlYWR5IGV4aXN0cy4gQ2Fubm90IGNyZWF0ZSBhbm90aGVyLlwiLFxuICAgIH0sXG4gICAgbG9vcGJhY2tTZXJ2ZXJUaW1lb3V0OiB7XG4gICAgICAgIGNvZGU6IFwibG9vcGJhY2tfc2VydmVyX3RpbWVvdXRcIixcbiAgICAgICAgZGVzYzogXCJUaW1lZCBvdXQgd2FpdGluZyBmb3IgYXV0aCBjb2RlIGxpc3RlbmVyIHRvIGJlIHJlZ2lzdGVyZWQuXCIsXG4gICAgfSxcbiAgICBzdGF0ZU5vdEZvdW5kRXJyb3I6IHtcbiAgICAgICAgY29kZTogXCJzdGF0ZV9ub3RfZm91bmRcIixcbiAgICAgICAgZGVzYzogXCJTdGF0ZSBub3QgZm91bmQuIFBsZWFzZSB2ZXJpZnkgdGhhdCB0aGUgcmVxdWVzdCBvcmlnaW5hdGVkIGZyb20gbXNhbC5cIixcbiAgICB9LFxuICAgIHRodW1icHJpbnRNaXNzaW5nOiB7XG4gICAgICAgIGNvZGU6IFwidGh1bWJwcmludF9taXNzaW5nX2Zyb21fY2xpZW50X2NlcnRpZmljYXRlXCIsXG4gICAgICAgIGRlc2M6IFwiQ2xpZW50IGNlcnRpZmljYXRlIGRvZXMgbm90IGNvbnRhaW4gYSBTSEEtMSBvciBTSEEtMjU2IHRodW1icHJpbnQuXCIsXG4gICAgfSxcbn07XG5jbGFzcyBOb2RlQXV0aEVycm9yIGV4dGVuZHMgQXV0aEVycm9yIHtcbiAgICBjb25zdHJ1Y3RvcihlcnJvckNvZGUsIGVycm9yTWVzc2FnZSkge1xuICAgICAgICBzdXBlcihlcnJvckNvZGUsIGVycm9yTWVzc2FnZSk7XG4gICAgICAgIHRoaXMubmFtZSA9IFwiTm9kZUF1dGhFcnJvclwiO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBDcmVhdGVzIGFuIGVycm9yIHRocm93biBpZiBsb29wYmFjayBzZXJ2ZXIgYWRkcmVzcyBpcyBvZiB0eXBlIHN0cmluZy5cbiAgICAgKi9cbiAgICBzdGF0aWMgY3JlYXRlSW52YWxpZExvb3BiYWNrQWRkcmVzc1R5cGVFcnJvcigpIHtcbiAgICAgICAgcmV0dXJuIG5ldyBOb2RlQXV0aEVycm9yKE5vZGVBdXRoRXJyb3JNZXNzYWdlLmludmFsaWRMb29wYmFja0FkZHJlc3NUeXBlLmNvZGUsIGAke05vZGVBdXRoRXJyb3JNZXNzYWdlLmludmFsaWRMb29wYmFja0FkZHJlc3NUeXBlLmRlc2N9YCk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIENyZWF0ZXMgYW4gZXJyb3IgdGhyb3duIGlmIHRoZSBsb29wYmFjayBzZXJ2ZXIgaXMgdW5hYmxlIHRvIGdldCBhIHVybC5cbiAgICAgKi9cbiAgICBzdGF0aWMgY3JlYXRlVW5hYmxlVG9Mb2FkUmVkaXJlY3RVcmxFcnJvcigpIHtcbiAgICAgICAgcmV0dXJuIG5ldyBOb2RlQXV0aEVycm9yKE5vZGVBdXRoRXJyb3JNZXNzYWdlLnVuYWJsZVRvTG9hZFJlZGlyZWN0VXJpLmNvZGUsIGAke05vZGVBdXRoRXJyb3JNZXNzYWdlLnVuYWJsZVRvTG9hZFJlZGlyZWN0VXJpLmRlc2N9YCk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIENyZWF0ZXMgYW4gZXJyb3IgdGhyb3duIGlmIHRoZSBzZXJ2ZXIgcmVzcG9uc2UgZG9lcyBub3QgY29udGFpbiBhbiBhdXRoIGNvZGUuXG4gICAgICovXG4gICAgc3RhdGljIGNyZWF0ZU5vQXV0aENvZGVJblJlc3BvbnNlRXJyb3IoKSB7XG4gICAgICAgIHJldHVybiBuZXcgTm9kZUF1dGhFcnJvcihOb2RlQXV0aEVycm9yTWVzc2FnZS5ub0F1dGhDb2RlSW5SZXNwb25zZS5jb2RlLCBgJHtOb2RlQXV0aEVycm9yTWVzc2FnZS5ub0F1dGhDb2RlSW5SZXNwb25zZS5kZXNjfWApO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBDcmVhdGVzIGFuIGVycm9yIHRocm93biBpZiB0aGUgbG9vcGJhY2sgc2VydmVyIGhhcyBub3QgYmVlbiBzcHVuIHVwIHlldC5cbiAgICAgKi9cbiAgICBzdGF0aWMgY3JlYXRlTm9Mb29wYmFja1NlcnZlckV4aXN0c0Vycm9yKCkge1xuICAgICAgICByZXR1cm4gbmV3IE5vZGVBdXRoRXJyb3IoTm9kZUF1dGhFcnJvck1lc3NhZ2Uubm9Mb29wYmFja1NlcnZlckV4aXN0cy5jb2RlLCBgJHtOb2RlQXV0aEVycm9yTWVzc2FnZS5ub0xvb3BiYWNrU2VydmVyRXhpc3RzLmRlc2N9YCk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIENyZWF0ZXMgYW4gZXJyb3IgdGhyb3duIGlmIGEgbG9vcGJhY2sgc2VydmVyIGFscmVhZHkgZXhpc3RzIHdoZW4gYXR0ZW1wdGluZyB0byBjcmVhdGUgYW5vdGhlciBvbmUuXG4gICAgICovXG4gICAgc3RhdGljIGNyZWF0ZUxvb3BiYWNrU2VydmVyQWxyZWFkeUV4aXN0c0Vycm9yKCkge1xuICAgICAgICByZXR1cm4gbmV3IE5vZGVBdXRoRXJyb3IoTm9kZUF1dGhFcnJvck1lc3NhZ2UubG9vcGJhY2tTZXJ2ZXJBbHJlYWR5RXhpc3RzLmNvZGUsIGAke05vZGVBdXRoRXJyb3JNZXNzYWdlLmxvb3BiYWNrU2VydmVyQWxyZWFkeUV4aXN0cy5kZXNjfWApO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBDcmVhdGVzIGFuIGVycm9yIHRocm93biBpZiB0aGUgbG9vcGJhY2sgc2VydmVyIHRpbWVzIG91dCByZWdpc3RlcmluZyB0aGUgYXV0aCBjb2RlIGxpc3RlbmVyLlxuICAgICAqL1xuICAgIHN0YXRpYyBjcmVhdGVMb29wYmFja1NlcnZlclRpbWVvdXRFcnJvcigpIHtcbiAgICAgICAgcmV0dXJuIG5ldyBOb2RlQXV0aEVycm9yKE5vZGVBdXRoRXJyb3JNZXNzYWdlLmxvb3BiYWNrU2VydmVyVGltZW91dC5jb2RlLCBgJHtOb2RlQXV0aEVycm9yTWVzc2FnZS5sb29wYmFja1NlcnZlclRpbWVvdXQuZGVzY31gKTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogQ3JlYXRlcyBhbiBlcnJvciB0aHJvd24gd2hlbiB0aGUgc3RhdGUgaXMgbm90IHByZXNlbnQuXG4gICAgICovXG4gICAgc3RhdGljIGNyZWF0ZVN0YXRlTm90Rm91bmRFcnJvcigpIHtcbiAgICAgICAgcmV0dXJuIG5ldyBOb2RlQXV0aEVycm9yKE5vZGVBdXRoRXJyb3JNZXNzYWdlLnN0YXRlTm90Rm91bmRFcnJvci5jb2RlLCBOb2RlQXV0aEVycm9yTWVzc2FnZS5zdGF0ZU5vdEZvdW5kRXJyb3IuZGVzYyk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIENyZWF0ZXMgYW4gZXJyb3IgdGhyb3duIHdoZW4gY2xpZW50IGNlcnRpZmljYXRlIHdhcyBwcm92aWRlZCwgYnV0IG5laXRoZXIgdGhlIFNIQS0xIG9yIFNIQS0yNTYgdGh1bWJwcmludHMgd2VyZSBwcm92aWRlZFxuICAgICAqL1xuICAgIHN0YXRpYyBjcmVhdGVUaHVtYnByaW50TWlzc2luZ0Vycm9yKCkge1xuICAgICAgICByZXR1cm4gbmV3IE5vZGVBdXRoRXJyb3IoTm9kZUF1dGhFcnJvck1lc3NhZ2UudGh1bWJwcmludE1pc3NpbmcuY29kZSwgTm9kZUF1dGhFcnJvck1lc3NhZ2UudGh1bWJwcmludE1pc3NpbmcuZGVzYyk7XG4gICAgfVxufVxuXG5leHBvcnQgeyBOb2RlQXV0aEVycm9yLCBOb2RlQXV0aEVycm9yTWVzc2FnZSB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Tm9kZUF1dGhFcnJvci5tanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/msal-node/dist/error/NodeAuthError.mjs\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/msal-node/dist/index.mjs":
/*!******************************************************!*\
  !*** ./node_modules/@azure/msal-node/dist/index.mjs ***!
  \******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AuthError: () => (/* reexport safe */ _azure_msal_common__WEBPACK_IMPORTED_MODULE_16__.AuthError),\n/* harmony export */   AuthErrorCodes: () => (/* reexport module object */ _azure_msal_common__WEBPACK_IMPORTED_MODULE_17__),\n/* harmony export */   AuthErrorMessage: () => (/* reexport safe */ _azure_msal_common__WEBPACK_IMPORTED_MODULE_16__.AuthErrorMessage),\n/* harmony export */   AzureCloudInstance: () => (/* reexport safe */ _azure_msal_common__WEBPACK_IMPORTED_MODULE_18__.AzureCloudInstance),\n/* harmony export */   ClientApplication: () => (/* reexport safe */ _client_ClientApplication_mjs__WEBPACK_IMPORTED_MODULE_3__.ClientApplication),\n/* harmony export */   ClientAssertion: () => (/* reexport safe */ _client_ClientAssertion_mjs__WEBPACK_IMPORTED_MODULE_10__.ClientAssertion),\n/* harmony export */   ClientAuthError: () => (/* reexport safe */ _azure_msal_common__WEBPACK_IMPORTED_MODULE_19__.ClientAuthError),\n/* harmony export */   ClientAuthErrorCodes: () => (/* reexport module object */ _azure_msal_common__WEBPACK_IMPORTED_MODULE_20__),\n/* harmony export */   ClientAuthErrorMessage: () => (/* reexport safe */ _azure_msal_common__WEBPACK_IMPORTED_MODULE_19__.ClientAuthErrorMessage),\n/* harmony export */   ClientConfigurationError: () => (/* reexport safe */ _azure_msal_common__WEBPACK_IMPORTED_MODULE_21__.ClientConfigurationError),\n/* harmony export */   ClientConfigurationErrorCodes: () => (/* reexport module object */ _azure_msal_common__WEBPACK_IMPORTED_MODULE_22__),\n/* harmony export */   ClientConfigurationErrorMessage: () => (/* reexport safe */ _azure_msal_common__WEBPACK_IMPORTED_MODULE_21__.ClientConfigurationErrorMessage),\n/* harmony export */   ClientCredentialClient: () => (/* reexport safe */ _client_ClientCredentialClient_mjs__WEBPACK_IMPORTED_MODULE_4__.ClientCredentialClient),\n/* harmony export */   ConfidentialClientApplication: () => (/* reexport safe */ _client_ConfidentialClientApplication_mjs__WEBPACK_IMPORTED_MODULE_2__.ConfidentialClientApplication),\n/* harmony export */   CryptoProvider: () => (/* reexport safe */ _crypto_CryptoProvider_mjs__WEBPACK_IMPORTED_MODULE_15__.CryptoProvider),\n/* harmony export */   DeviceCodeClient: () => (/* reexport safe */ _client_DeviceCodeClient_mjs__WEBPACK_IMPORTED_MODULE_5__.DeviceCodeClient),\n/* harmony export */   DistributedCachePlugin: () => (/* reexport safe */ _cache_distributed_DistributedCachePlugin_mjs__WEBPACK_IMPORTED_MODULE_13__.DistributedCachePlugin),\n/* harmony export */   InteractionRequiredAuthError: () => (/* reexport safe */ _azure_msal_common__WEBPACK_IMPORTED_MODULE_23__.InteractionRequiredAuthError),\n/* harmony export */   InteractionRequiredAuthErrorCodes: () => (/* reexport module object */ _azure_msal_common__WEBPACK_IMPORTED_MODULE_24__),\n/* harmony export */   InteractionRequiredAuthErrorMessage: () => (/* reexport safe */ _azure_msal_common__WEBPACK_IMPORTED_MODULE_23__.InteractionRequiredAuthErrorMessage),\n/* harmony export */   LogLevel: () => (/* reexport safe */ _azure_msal_common__WEBPACK_IMPORTED_MODULE_25__.LogLevel),\n/* harmony export */   Logger: () => (/* reexport safe */ _azure_msal_common__WEBPACK_IMPORTED_MODULE_25__.Logger),\n/* harmony export */   ManagedIdentityApplication: () => (/* reexport safe */ _client_ManagedIdentityApplication_mjs__WEBPACK_IMPORTED_MODULE_7__.ManagedIdentityApplication),\n/* harmony export */   ManagedIdentitySourceNames: () => (/* reexport safe */ _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_14__.ManagedIdentitySourceNames),\n/* harmony export */   NodeStorage: () => (/* reexport safe */ _cache_NodeStorage_mjs__WEBPACK_IMPORTED_MODULE_12__.NodeStorage),\n/* harmony export */   OnBehalfOfClient: () => (/* reexport safe */ _client_OnBehalfOfClient_mjs__WEBPACK_IMPORTED_MODULE_6__.OnBehalfOfClient),\n/* harmony export */   PromptValue: () => (/* reexport safe */ _azure_msal_common__WEBPACK_IMPORTED_MODULE_26__.PromptValue),\n/* harmony export */   ProtocolMode: () => (/* reexport safe */ _azure_msal_common__WEBPACK_IMPORTED_MODULE_27__.ProtocolMode),\n/* harmony export */   PublicClientApplication: () => (/* reexport safe */ _client_PublicClientApplication_mjs__WEBPACK_IMPORTED_MODULE_1__.PublicClientApplication),\n/* harmony export */   ResponseMode: () => (/* reexport safe */ _azure_msal_common__WEBPACK_IMPORTED_MODULE_26__.ResponseMode),\n/* harmony export */   ServerError: () => (/* reexport safe */ _azure_msal_common__WEBPACK_IMPORTED_MODULE_28__.ServerError),\n/* harmony export */   TokenCache: () => (/* reexport safe */ _cache_TokenCache_mjs__WEBPACK_IMPORTED_MODULE_11__.TokenCache),\n/* harmony export */   TokenCacheContext: () => (/* reexport safe */ _azure_msal_common__WEBPACK_IMPORTED_MODULE_29__.TokenCacheContext),\n/* harmony export */   UsernamePasswordClient: () => (/* reexport safe */ _client_UsernamePasswordClient_mjs__WEBPACK_IMPORTED_MODULE_8__.UsernamePasswordClient),\n/* harmony export */   buildAppConfiguration: () => (/* reexport safe */ _config_Configuration_mjs__WEBPACK_IMPORTED_MODULE_9__.buildAppConfiguration),\n/* harmony export */   internals: () => (/* reexport module object */ _internals_mjs__WEBPACK_IMPORTED_MODULE_0__),\n/* harmony export */   version: () => (/* reexport safe */ _packageMetadata_mjs__WEBPACK_IMPORTED_MODULE_30__.version)\n/* harmony export */ });\n/* harmony import */ var _internals_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./internals.mjs */ \"(rsc)/./node_modules/@azure/msal-node/dist/internals.mjs\");\n/* harmony import */ var _client_PublicClientApplication_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./client/PublicClientApplication.mjs */ \"(rsc)/./node_modules/@azure/msal-node/dist/client/PublicClientApplication.mjs\");\n/* harmony import */ var _client_ConfidentialClientApplication_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./client/ConfidentialClientApplication.mjs */ \"(rsc)/./node_modules/@azure/msal-node/dist/client/ConfidentialClientApplication.mjs\");\n/* harmony import */ var _client_ClientApplication_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./client/ClientApplication.mjs */ \"(rsc)/./node_modules/@azure/msal-node/dist/client/ClientApplication.mjs\");\n/* harmony import */ var _client_ClientCredentialClient_mjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./client/ClientCredentialClient.mjs */ \"(rsc)/./node_modules/@azure/msal-node/dist/client/ClientCredentialClient.mjs\");\n/* harmony import */ var _client_DeviceCodeClient_mjs__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./client/DeviceCodeClient.mjs */ \"(rsc)/./node_modules/@azure/msal-node/dist/client/DeviceCodeClient.mjs\");\n/* harmony import */ var _client_OnBehalfOfClient_mjs__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./client/OnBehalfOfClient.mjs */ \"(rsc)/./node_modules/@azure/msal-node/dist/client/OnBehalfOfClient.mjs\");\n/* harmony import */ var _client_ManagedIdentityApplication_mjs__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./client/ManagedIdentityApplication.mjs */ \"(rsc)/./node_modules/@azure/msal-node/dist/client/ManagedIdentityApplication.mjs\");\n/* harmony import */ var _client_UsernamePasswordClient_mjs__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./client/UsernamePasswordClient.mjs */ \"(rsc)/./node_modules/@azure/msal-node/dist/client/UsernamePasswordClient.mjs\");\n/* harmony import */ var _config_Configuration_mjs__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./config/Configuration.mjs */ \"(rsc)/./node_modules/@azure/msal-node/dist/config/Configuration.mjs\");\n/* harmony import */ var _client_ClientAssertion_mjs__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./client/ClientAssertion.mjs */ \"(rsc)/./node_modules/@azure/msal-node/dist/client/ClientAssertion.mjs\");\n/* harmony import */ var _cache_TokenCache_mjs__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./cache/TokenCache.mjs */ \"(rsc)/./node_modules/@azure/msal-node/dist/cache/TokenCache.mjs\");\n/* harmony import */ var _cache_NodeStorage_mjs__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./cache/NodeStorage.mjs */ \"(rsc)/./node_modules/@azure/msal-node/dist/cache/NodeStorage.mjs\");\n/* harmony import */ var _cache_distributed_DistributedCachePlugin_mjs__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./cache/distributed/DistributedCachePlugin.mjs */ \"(rsc)/./node_modules/@azure/msal-node/dist/cache/distributed/DistributedCachePlugin.mjs\");\n/* harmony import */ var _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./utils/Constants.mjs */ \"(rsc)/./node_modules/@azure/msal-node/dist/utils/Constants.mjs\");\n/* harmony import */ var _crypto_CryptoProvider_mjs__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./crypto/CryptoProvider.mjs */ \"(rsc)/./node_modules/@azure/msal-node/dist/crypto/CryptoProvider.mjs\");\n/* harmony import */ var _azure_msal_common__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! @azure/msal-common */ \"(rsc)/./node_modules/@azure/msal-common/dist/error/AuthError.mjs\");\n/* harmony import */ var _azure_msal_common__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! @azure/msal-common */ \"(rsc)/./node_modules/@azure/msal-common/dist/error/AuthErrorCodes.mjs\");\n/* harmony import */ var _azure_msal_common__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! @azure/msal-common */ \"(rsc)/./node_modules/@azure/msal-common/dist/authority/AuthorityOptions.mjs\");\n/* harmony import */ var _azure_msal_common__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! @azure/msal-common */ \"(rsc)/./node_modules/@azure/msal-common/dist/error/ClientAuthError.mjs\");\n/* harmony import */ var _azure_msal_common__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! @azure/msal-common */ \"(rsc)/./node_modules/@azure/msal-common/dist/error/ClientAuthErrorCodes.mjs\");\n/* harmony import */ var _azure_msal_common__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! @azure/msal-common */ \"(rsc)/./node_modules/@azure/msal-common/dist/error/ClientConfigurationError.mjs\");\n/* harmony import */ var _azure_msal_common__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! @azure/msal-common */ \"(rsc)/./node_modules/@azure/msal-common/dist/error/ClientConfigurationErrorCodes.mjs\");\n/* harmony import */ var _azure_msal_common__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! @azure/msal-common */ \"(rsc)/./node_modules/@azure/msal-common/dist/error/InteractionRequiredAuthError.mjs\");\n/* harmony import */ var _azure_msal_common__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! @azure/msal-common */ \"(rsc)/./node_modules/@azure/msal-common/dist/error/InteractionRequiredAuthErrorCodes.mjs\");\n/* harmony import */ var _azure_msal_common__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(/*! @azure/msal-common */ \"(rsc)/./node_modules/@azure/msal-common/dist/logger/Logger.mjs\");\n/* harmony import */ var _azure_msal_common__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(/*! @azure/msal-common */ \"(rsc)/./node_modules/@azure/msal-common/dist/utils/Constants.mjs\");\n/* harmony import */ var _azure_msal_common__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(/*! @azure/msal-common */ \"(rsc)/./node_modules/@azure/msal-common/dist/authority/ProtocolMode.mjs\");\n/* harmony import */ var _azure_msal_common__WEBPACK_IMPORTED_MODULE_28__ = __webpack_require__(/*! @azure/msal-common */ \"(rsc)/./node_modules/@azure/msal-common/dist/error/ServerError.mjs\");\n/* harmony import */ var _azure_msal_common__WEBPACK_IMPORTED_MODULE_29__ = __webpack_require__(/*! @azure/msal-common */ \"(rsc)/./node_modules/@azure/msal-common/dist/cache/persistence/TokenCacheContext.mjs\");\n/* harmony import */ var _packageMetadata_mjs__WEBPACK_IMPORTED_MODULE_30__ = __webpack_require__(/*! ./packageMetadata.mjs */ \"(rsc)/./node_modules/@azure/msal-node/dist/packageMetadata.mjs\");\n/*! @azure/msal-node v2.12.0 2024-07-23 */\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n//# sourceMappingURL=index.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtbm9kZS9kaXN0L2luZGV4Lm1qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUFBO0FBQ2E7QUFDZ0M7QUFDeEI7QUFDMEQ7QUFDWTtBQUN4QjtBQUNVO0FBQ1o7QUFDQTtBQUNvQjtBQUNSO0FBQ1Y7QUFDSjtBQUNYO0FBQ0U7QUFDa0M7QUFDckI7QUFDTjtBQUNrWTtBQUMvWTtBQUNoRCIsInNvdXJjZXMiOlsid2VicGFjazovL2RhbmllbDMtdnAyLy4vbm9kZV9tb2R1bGVzL0BhenVyZS9tc2FsLW5vZGUvZGlzdC9pbmRleC5tanM/ZTZiYyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKiEgQGF6dXJlL21zYWwtbm9kZSB2Mi4xMi4wIDIwMjQtMDctMjMgKi9cbid1c2Ugc3RyaWN0JztcbmltcG9ydCAqIGFzIGludGVybmFscyBmcm9tICcuL2ludGVybmFscy5tanMnO1xuZXhwb3J0IHsgaW50ZXJuYWxzIH07XG5leHBvcnQgeyBQdWJsaWNDbGllbnRBcHBsaWNhdGlvbiB9IGZyb20gJy4vY2xpZW50L1B1YmxpY0NsaWVudEFwcGxpY2F0aW9uLm1qcyc7XG5leHBvcnQgeyBDb25maWRlbnRpYWxDbGllbnRBcHBsaWNhdGlvbiB9IGZyb20gJy4vY2xpZW50L0NvbmZpZGVudGlhbENsaWVudEFwcGxpY2F0aW9uLm1qcyc7XG5leHBvcnQgeyBDbGllbnRBcHBsaWNhdGlvbiB9IGZyb20gJy4vY2xpZW50L0NsaWVudEFwcGxpY2F0aW9uLm1qcyc7XG5leHBvcnQgeyBDbGllbnRDcmVkZW50aWFsQ2xpZW50IH0gZnJvbSAnLi9jbGllbnQvQ2xpZW50Q3JlZGVudGlhbENsaWVudC5tanMnO1xuZXhwb3J0IHsgRGV2aWNlQ29kZUNsaWVudCB9IGZyb20gJy4vY2xpZW50L0RldmljZUNvZGVDbGllbnQubWpzJztcbmV4cG9ydCB7IE9uQmVoYWxmT2ZDbGllbnQgfSBmcm9tICcuL2NsaWVudC9PbkJlaGFsZk9mQ2xpZW50Lm1qcyc7XG5leHBvcnQgeyBNYW5hZ2VkSWRlbnRpdHlBcHBsaWNhdGlvbiB9IGZyb20gJy4vY2xpZW50L01hbmFnZWRJZGVudGl0eUFwcGxpY2F0aW9uLm1qcyc7XG5leHBvcnQgeyBVc2VybmFtZVBhc3N3b3JkQ2xpZW50IH0gZnJvbSAnLi9jbGllbnQvVXNlcm5hbWVQYXNzd29yZENsaWVudC5tanMnO1xuZXhwb3J0IHsgYnVpbGRBcHBDb25maWd1cmF0aW9uIH0gZnJvbSAnLi9jb25maWcvQ29uZmlndXJhdGlvbi5tanMnO1xuZXhwb3J0IHsgQ2xpZW50QXNzZXJ0aW9uIH0gZnJvbSAnLi9jbGllbnQvQ2xpZW50QXNzZXJ0aW9uLm1qcyc7XG5leHBvcnQgeyBUb2tlbkNhY2hlIH0gZnJvbSAnLi9jYWNoZS9Ub2tlbkNhY2hlLm1qcyc7XG5leHBvcnQgeyBOb2RlU3RvcmFnZSB9IGZyb20gJy4vY2FjaGUvTm9kZVN0b3JhZ2UubWpzJztcbmV4cG9ydCB7IERpc3RyaWJ1dGVkQ2FjaGVQbHVnaW4gfSBmcm9tICcuL2NhY2hlL2Rpc3RyaWJ1dGVkL0Rpc3RyaWJ1dGVkQ2FjaGVQbHVnaW4ubWpzJztcbmV4cG9ydCB7IE1hbmFnZWRJZGVudGl0eVNvdXJjZU5hbWVzIH0gZnJvbSAnLi91dGlscy9Db25zdGFudHMubWpzJztcbmV4cG9ydCB7IENyeXB0b1Byb3ZpZGVyIH0gZnJvbSAnLi9jcnlwdG8vQ3J5cHRvUHJvdmlkZXIubWpzJztcbmV4cG9ydCB7IEF1dGhFcnJvciwgQXV0aEVycm9yQ29kZXMsIEF1dGhFcnJvck1lc3NhZ2UsIEF6dXJlQ2xvdWRJbnN0YW5jZSwgQ2xpZW50QXV0aEVycm9yLCBDbGllbnRBdXRoRXJyb3JDb2RlcywgQ2xpZW50QXV0aEVycm9yTWVzc2FnZSwgQ2xpZW50Q29uZmlndXJhdGlvbkVycm9yLCBDbGllbnRDb25maWd1cmF0aW9uRXJyb3JDb2RlcywgQ2xpZW50Q29uZmlndXJhdGlvbkVycm9yTWVzc2FnZSwgSW50ZXJhY3Rpb25SZXF1aXJlZEF1dGhFcnJvciwgSW50ZXJhY3Rpb25SZXF1aXJlZEF1dGhFcnJvckNvZGVzLCBJbnRlcmFjdGlvblJlcXVpcmVkQXV0aEVycm9yTWVzc2FnZSwgTG9nTGV2ZWwsIExvZ2dlciwgUHJvbXB0VmFsdWUsIFByb3RvY29sTW9kZSwgUmVzcG9uc2VNb2RlLCBTZXJ2ZXJFcnJvciwgVG9rZW5DYWNoZUNvbnRleHQgfSBmcm9tICdAYXp1cmUvbXNhbC1jb21tb24nO1xuZXhwb3J0IHsgdmVyc2lvbiB9IGZyb20gJy4vcGFja2FnZU1ldGFkYXRhLm1qcyc7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbmRleC5tanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/msal-node/dist/index.mjs\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/msal-node/dist/internals.mjs":
/*!**********************************************************!*\
  !*** ./node_modules/@azure/msal-node/dist/internals.mjs ***!
  \**********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Deserializer: () => (/* reexport safe */ _cache_serializer_Deserializer_mjs__WEBPACK_IMPORTED_MODULE_1__.Deserializer),\n/* harmony export */   Serializer: () => (/* reexport safe */ _cache_serializer_Serializer_mjs__WEBPACK_IMPORTED_MODULE_0__.Serializer)\n/* harmony export */ });\n/* harmony import */ var _cache_serializer_Serializer_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./cache/serializer/Serializer.mjs */ \"(rsc)/./node_modules/@azure/msal-node/dist/cache/serializer/Serializer.mjs\");\n/* harmony import */ var _cache_serializer_Deserializer_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./cache/serializer/Deserializer.mjs */ \"(rsc)/./node_modules/@azure/msal-node/dist/cache/serializer/Deserializer.mjs\");\n/*! @azure/msal-node v2.12.0 2024-07-23 */\n\n\n\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n/**\n * Warning: This set of exports is purely intended to be used by other MSAL libraries, and should be considered potentially unstable. We strongly discourage using them directly, you do so at your own risk.\n * Breaking changes to these APIs will be shipped under a minor version, instead of a major version.\n */\n//# sourceMappingURL=internals.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtbm9kZS9kaXN0L2ludGVybmFscy5tanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBO0FBQ2E7QUFDa0Q7QUFDSTs7QUFFbkU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZGFuaWVsMy12cDIvLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtbm9kZS9kaXN0L2ludGVybmFscy5tanM/N2QwMiJdLCJzb3VyY2VzQ29udGVudCI6WyIvKiEgQGF6dXJlL21zYWwtbm9kZSB2Mi4xMi4wIDIwMjQtMDctMjMgKi9cbid1c2Ugc3RyaWN0JztcbmV4cG9ydCB7IFNlcmlhbGl6ZXIgfSBmcm9tICcuL2NhY2hlL3NlcmlhbGl6ZXIvU2VyaWFsaXplci5tanMnO1xuZXhwb3J0IHsgRGVzZXJpYWxpemVyIH0gZnJvbSAnLi9jYWNoZS9zZXJpYWxpemVyL0Rlc2VyaWFsaXplci5tanMnO1xuXG4vKlxuICogQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uIEFsbCByaWdodHMgcmVzZXJ2ZWQuXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIExpY2Vuc2UuXG4gKi9cbi8qKlxuICogV2FybmluZzogVGhpcyBzZXQgb2YgZXhwb3J0cyBpcyBwdXJlbHkgaW50ZW5kZWQgdG8gYmUgdXNlZCBieSBvdGhlciBNU0FMIGxpYnJhcmllcywgYW5kIHNob3VsZCBiZSBjb25zaWRlcmVkIHBvdGVudGlhbGx5IHVuc3RhYmxlLiBXZSBzdHJvbmdseSBkaXNjb3VyYWdlIHVzaW5nIHRoZW0gZGlyZWN0bHksIHlvdSBkbyBzbyBhdCB5b3VyIG93biByaXNrLlxuICogQnJlYWtpbmcgY2hhbmdlcyB0byB0aGVzZSBBUElzIHdpbGwgYmUgc2hpcHBlZCB1bmRlciBhIG1pbm9yIHZlcnNpb24sIGluc3RlYWQgb2YgYSBtYWpvciB2ZXJzaW9uLlxuICovXG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbnRlcm5hbHMubWpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/msal-node/dist/internals.mjs\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/msal-node/dist/network/HttpClient.mjs":
/*!*******************************************************************!*\
  !*** ./node_modules/@azure/msal-node/dist/network/HttpClient.mjs ***!
  \*******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   HttpClient: () => (/* binding */ HttpClient)\n/* harmony export */ });\n/* harmony import */ var _azure_msal_common__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @azure/msal-common */ \"(rsc)/./node_modules/@azure/msal-common/dist/utils/Constants.mjs\");\n/* harmony import */ var _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/Constants.mjs */ \"(rsc)/./node_modules/@azure/msal-node/dist/utils/Constants.mjs\");\n/* harmony import */ var _utils_NetworkUtils_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/NetworkUtils.mjs */ \"(rsc)/./node_modules/@azure/msal-node/dist/utils/NetworkUtils.mjs\");\n/* harmony import */ var http__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! http */ \"http\");\n/* harmony import */ var https__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! https */ \"https\");\n/*! @azure/msal-node v2.12.0 2024-07-23 */\n\n\n\n\n\n\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n/**\n * This class implements the API for network requests.\n */\nclass HttpClient {\n    constructor(proxyUrl, customAgentOptions) {\n        this.proxyUrl = proxyUrl || \"\";\n        this.customAgentOptions = customAgentOptions || {};\n    }\n    /**\n     * Http Get request\n     * @param url\n     * @param options\n     */\n    async sendGetRequestAsync(url, options, timeout) {\n        if (this.proxyUrl) {\n            return networkRequestViaProxy(url, this.proxyUrl, _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.HttpMethod.GET, options, this.customAgentOptions, timeout);\n        }\n        else {\n            return networkRequestViaHttps(url, _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.HttpMethod.GET, options, this.customAgentOptions, timeout);\n        }\n    }\n    /**\n     * Http Post request\n     * @param url\n     * @param options\n     */\n    async sendPostRequestAsync(url, options) {\n        if (this.proxyUrl) {\n            return networkRequestViaProxy(url, this.proxyUrl, _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.HttpMethod.POST, options, this.customAgentOptions);\n        }\n        else {\n            return networkRequestViaHttps(url, _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.HttpMethod.POST, options, this.customAgentOptions);\n        }\n    }\n}\nconst networkRequestViaProxy = (destinationUrlString, proxyUrlString, httpMethod, options, agentOptions, timeout) => {\n    const destinationUrl = new URL(destinationUrlString);\n    const proxyUrl = new URL(proxyUrlString);\n    // \"method: connect\" must be used to establish a connection to the proxy\n    const headers = options?.headers || {};\n    const tunnelRequestOptions = {\n        host: proxyUrl.hostname,\n        port: proxyUrl.port,\n        method: \"CONNECT\",\n        path: destinationUrl.hostname,\n        headers: headers,\n    };\n    if (agentOptions && Object.keys(agentOptions).length) {\n        tunnelRequestOptions.agent = new http__WEBPACK_IMPORTED_MODULE_2__.Agent(agentOptions);\n    }\n    // compose a request string for the socket\n    let postRequestStringContent = \"\";\n    if (httpMethod === _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.HttpMethod.POST) {\n        const body = options?.body || \"\";\n        postRequestStringContent =\n            \"Content-Type: application/x-www-form-urlencoded\\r\\n\" +\n                `Content-Length: ${body.length}\\r\\n` +\n                `\\r\\n${body}`;\n    }\n    else {\n        // optional timeout is only for get requests (regionDiscovery, for example)\n        if (timeout) {\n            tunnelRequestOptions.timeout = timeout;\n        }\n    }\n    const outgoingRequestString = `${httpMethod.toUpperCase()} ${destinationUrl.href} HTTP/1.1\\r\\n` +\n        `Host: ${destinationUrl.host}\\r\\n` +\n        \"Connection: close\\r\\n\" +\n        postRequestStringContent +\n        \"\\r\\n\";\n    return new Promise((resolve, reject) => {\n        const request = http__WEBPACK_IMPORTED_MODULE_2__.request(tunnelRequestOptions);\n        if (timeout) {\n            request.on(\"timeout\", () => {\n                request.destroy();\n                reject(new Error(\"Request time out\"));\n            });\n        }\n        request.end();\n        // establish connection to the proxy\n        request.on(\"connect\", (response, socket) => {\n            const proxyStatusCode = response?.statusCode || _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.ProxyStatus.SERVER_ERROR;\n            if (proxyStatusCode < _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.ProxyStatus.SUCCESS_RANGE_START ||\n                proxyStatusCode > _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.ProxyStatus.SUCCESS_RANGE_END) {\n                request.destroy();\n                socket.destroy();\n                reject(new Error(`Error connecting to proxy. Http status code: ${response.statusCode}. Http status message: ${response?.statusMessage || \"Unknown\"}`));\n            }\n            // make a request over an HTTP tunnel\n            socket.write(outgoingRequestString);\n            const data = [];\n            socket.on(\"data\", (chunk) => {\n                data.push(chunk);\n            });\n            socket.on(\"end\", () => {\n                // combine all received buffer streams into one buffer, and then into a string\n                const dataString = Buffer.concat([...data]).toString();\n                // separate each line into it's own entry in an arry\n                const dataStringArray = dataString.split(\"\\r\\n\");\n                // the first entry will contain the statusCode and statusMessage\n                const httpStatusCode = parseInt(dataStringArray[0].split(\" \")[1]);\n                // remove \"HTTP/1.1\" and the status code to get the status message\n                const statusMessage = dataStringArray[0]\n                    .split(\" \")\n                    .slice(2)\n                    .join(\" \");\n                // the last entry will contain the body\n                const body = dataStringArray[dataStringArray.length - 1];\n                // everything in between the first and last entries are the headers\n                const headersArray = dataStringArray.slice(1, dataStringArray.length - 2);\n                // build an object out of all the headers\n                const entries = new Map();\n                headersArray.forEach((header) => {\n                    /**\n                     * the header might look like \"Content-Length: 1531\", but that is just a string\n                     * it needs to be converted to a key/value pair\n                     * split the string at the first instance of \":\"\n                     * there may be more than one \":\" if the value of the header is supposed to be a JSON object\n                     */\n                    const headerKeyValue = header.split(new RegExp(/:\\s(.*)/s));\n                    const headerKey = headerKeyValue[0];\n                    let headerValue = headerKeyValue[1];\n                    // check if the value of the header is supposed to be a JSON object\n                    try {\n                        const object = JSON.parse(headerValue);\n                        // if it is, then convert it from a string to a JSON object\n                        if (object && typeof object === \"object\") {\n                            headerValue = object;\n                        }\n                    }\n                    catch (e) {\n                        // otherwise, leave it as a string\n                    }\n                    entries.set(headerKey, headerValue);\n                });\n                const headers = Object.fromEntries(entries);\n                const parsedHeaders = headers;\n                const networkResponse = _utils_NetworkUtils_mjs__WEBPACK_IMPORTED_MODULE_1__.NetworkUtils.getNetworkResponse(parsedHeaders, parseBody(httpStatusCode, statusMessage, parsedHeaders, body), httpStatusCode);\n                if ((httpStatusCode < _azure_msal_common__WEBPACK_IMPORTED_MODULE_4__.HttpStatus.SUCCESS_RANGE_START ||\n                    httpStatusCode > _azure_msal_common__WEBPACK_IMPORTED_MODULE_4__.HttpStatus.SUCCESS_RANGE_END) &&\n                    // do not destroy the request for the device code flow\n                    networkResponse.body[\"error\"] !==\n                        _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.Constants.AUTHORIZATION_PENDING) {\n                    request.destroy();\n                }\n                resolve(networkResponse);\n            });\n            socket.on(\"error\", (chunk) => {\n                request.destroy();\n                socket.destroy();\n                reject(new Error(chunk.toString()));\n            });\n        });\n        request.on(\"error\", (chunk) => {\n            request.destroy();\n            reject(new Error(chunk.toString()));\n        });\n    });\n};\nconst networkRequestViaHttps = (urlString, httpMethod, options, agentOptions, timeout) => {\n    const isPostRequest = httpMethod === _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.HttpMethod.POST;\n    const body = options?.body || \"\";\n    const url = new URL(urlString);\n    const headers = options?.headers || {};\n    const customOptions = {\n        method: httpMethod,\n        headers: headers,\n        ..._utils_NetworkUtils_mjs__WEBPACK_IMPORTED_MODULE_1__.NetworkUtils.urlToHttpOptions(url),\n    };\n    if (agentOptions && Object.keys(agentOptions).length) {\n        customOptions.agent = new https__WEBPACK_IMPORTED_MODULE_3__.Agent(agentOptions);\n    }\n    if (isPostRequest) {\n        // needed for post request to work\n        customOptions.headers = {\n            ...customOptions.headers,\n            \"Content-Length\": body.length,\n        };\n    }\n    else {\n        // optional timeout is only for get requests (regionDiscovery, for example)\n        if (timeout) {\n            customOptions.timeout = timeout;\n        }\n    }\n    return new Promise((resolve, reject) => {\n        let request;\n        // managed identity sources use http instead of https\n        if (customOptions.protocol === \"http:\") {\n            request = http__WEBPACK_IMPORTED_MODULE_2__.request(customOptions);\n        }\n        else {\n            request = https__WEBPACK_IMPORTED_MODULE_3__.request(customOptions);\n        }\n        if (isPostRequest) {\n            request.write(body);\n        }\n        if (timeout) {\n            request.on(\"timeout\", () => {\n                request.destroy();\n                reject(new Error(\"Request time out\"));\n            });\n        }\n        request.end();\n        request.on(\"response\", (response) => {\n            const headers = response.headers;\n            const statusCode = response.statusCode;\n            const statusMessage = response.statusMessage;\n            const data = [];\n            response.on(\"data\", (chunk) => {\n                data.push(chunk);\n            });\n            response.on(\"end\", () => {\n                // combine all received buffer streams into one buffer, and then into a string\n                const body = Buffer.concat([...data]).toString();\n                const parsedHeaders = headers;\n                const networkResponse = _utils_NetworkUtils_mjs__WEBPACK_IMPORTED_MODULE_1__.NetworkUtils.getNetworkResponse(parsedHeaders, parseBody(statusCode, statusMessage, parsedHeaders, body), statusCode);\n                if ((statusCode < _azure_msal_common__WEBPACK_IMPORTED_MODULE_4__.HttpStatus.SUCCESS_RANGE_START ||\n                    statusCode > _azure_msal_common__WEBPACK_IMPORTED_MODULE_4__.HttpStatus.SUCCESS_RANGE_END) &&\n                    // do not destroy the request for the device code flow\n                    networkResponse.body[\"error\"] !==\n                        _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.Constants.AUTHORIZATION_PENDING) {\n                    request.destroy();\n                }\n                resolve(networkResponse);\n            });\n        });\n        request.on(\"error\", (chunk) => {\n            request.destroy();\n            reject(new Error(chunk.toString()));\n        });\n    });\n};\n/**\n * Check if extra parsing is needed on the repsonse from the server\n * @param statusCode {number} the status code of the response from the server\n * @param statusMessage {string | undefined} the status message of the response from the server\n * @param headers {Record<string, string>} the headers of the response from the server\n * @param body {string} the body from the response of the server\n * @returns {Object} JSON parsed body or error object\n */\nconst parseBody = (statusCode, statusMessage, headers, body) => {\n    /*\n     * Informational responses (100 – 199)\n     * Successful responses (200 – 299)\n     * Redirection messages (300 – 399)\n     * Client error responses (400 – 499)\n     * Server error responses (500 – 599)\n     */\n    let parsedBody;\n    try {\n        parsedBody = JSON.parse(body);\n    }\n    catch (error) {\n        let errorType;\n        let errorDescriptionHelper;\n        if (statusCode >= _azure_msal_common__WEBPACK_IMPORTED_MODULE_4__.HttpStatus.CLIENT_ERROR_RANGE_START &&\n            statusCode <= _azure_msal_common__WEBPACK_IMPORTED_MODULE_4__.HttpStatus.CLIENT_ERROR_RANGE_END) {\n            errorType = \"client_error\";\n            errorDescriptionHelper = \"A client\";\n        }\n        else if (statusCode >= _azure_msal_common__WEBPACK_IMPORTED_MODULE_4__.HttpStatus.SERVER_ERROR_RANGE_START &&\n            statusCode <= _azure_msal_common__WEBPACK_IMPORTED_MODULE_4__.HttpStatus.SERVER_ERROR_RANGE_END) {\n            errorType = \"server_error\";\n            errorDescriptionHelper = \"A server\";\n        }\n        else {\n            errorType = \"unknown_error\";\n            errorDescriptionHelper = \"An unknown\";\n        }\n        parsedBody = {\n            error: errorType,\n            error_description: `${errorDescriptionHelper} error occured.\\nHttp status code: ${statusCode}\\nHttp status message: ${statusMessage || \"Unknown\"}\\nHeaders: ${JSON.stringify(headers)}`,\n        };\n    }\n    return parsedBody;\n};\n\n\n//# sourceMappingURL=HttpClient.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/msal-node/dist/network/HttpClient.mjs\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/msal-node/dist/network/HttpClientWithRetries.mjs":
/*!******************************************************************************!*\
  !*** ./node_modules/@azure/msal-node/dist/network/HttpClientWithRetries.mjs ***!
  \******************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   HttpClientWithRetries: () => (/* binding */ HttpClientWithRetries)\n/* harmony export */ });\n/* harmony import */ var _azure_msal_common__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @azure/msal-common */ \"(rsc)/./node_modules/@azure/msal-common/dist/utils/Constants.mjs\");\n/* harmony import */ var _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/Constants.mjs */ \"(rsc)/./node_modules/@azure/msal-node/dist/utils/Constants.mjs\");\n/*! @azure/msal-node v2.12.0 2024-07-23 */\n\n\n\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\nclass HttpClientWithRetries {\n    constructor(httpClientNoRetries, retryPolicy) {\n        this.httpClientNoRetries = httpClientNoRetries;\n        this.retryPolicy = retryPolicy;\n    }\n    async sendNetworkRequestAsyncHelper(httpMethod, url, options) {\n        if (httpMethod === _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.HttpMethod.GET) {\n            return this.httpClientNoRetries.sendGetRequestAsync(url, options);\n        }\n        else {\n            return this.httpClientNoRetries.sendPostRequestAsync(url, options);\n        }\n    }\n    async sendNetworkRequestAsync(httpMethod, url, options) {\n        // the underlying network module (custom or HttpClient) will make the call\n        let response = await this.sendNetworkRequestAsyncHelper(httpMethod, url, options);\n        let currentRetry = 0;\n        while (await this.retryPolicy.pauseForRetry(response.status, currentRetry, response.headers[_azure_msal_common__WEBPACK_IMPORTED_MODULE_1__.HeaderNames.RETRY_AFTER])) {\n            response = await this.sendNetworkRequestAsyncHelper(httpMethod, url, options);\n            currentRetry++;\n        }\n        return response;\n    }\n    async sendGetRequestAsync(url, options) {\n        return this.sendNetworkRequestAsync(_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.HttpMethod.GET, url, options);\n    }\n    async sendPostRequestAsync(url, options) {\n        return this.sendNetworkRequestAsync(_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.HttpMethod.POST, url, options);\n    }\n}\n\n\n//# sourceMappingURL=HttpClientWithRetries.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtbm9kZS9kaXN0L25ldHdvcmsvSHR0cENsaWVudFdpdGhSZXRyaWVzLm1qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBQTtBQUNhO0FBQ29DO0FBQ0c7O0FBRXBEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMkJBQTJCLDREQUFVO0FBQ3JDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esb0dBQW9HLDJEQUFXO0FBQy9HO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDRDQUE0Qyw0REFBVTtBQUN0RDtBQUNBO0FBQ0EsNENBQTRDLDREQUFVO0FBQ3REO0FBQ0E7O0FBRWlDO0FBQ2pDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZGFuaWVsMy12cDIvLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtbm9kZS9kaXN0L25ldHdvcmsvSHR0cENsaWVudFdpdGhSZXRyaWVzLm1qcz9iOGI3Il0sInNvdXJjZXNDb250ZW50IjpbIi8qISBAYXp1cmUvbXNhbC1ub2RlIHYyLjEyLjAgMjAyNC0wNy0yMyAqL1xuJ3VzZSBzdHJpY3QnO1xuaW1wb3J0IHsgSGVhZGVyTmFtZXMgfSBmcm9tICdAYXp1cmUvbXNhbC1jb21tb24nO1xuaW1wb3J0IHsgSHR0cE1ldGhvZCB9IGZyb20gJy4uL3V0aWxzL0NvbnN0YW50cy5tanMnO1xuXG4vKlxuICogQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uIEFsbCByaWdodHMgcmVzZXJ2ZWQuXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIExpY2Vuc2UuXG4gKi9cbmNsYXNzIEh0dHBDbGllbnRXaXRoUmV0cmllcyB7XG4gICAgY29uc3RydWN0b3IoaHR0cENsaWVudE5vUmV0cmllcywgcmV0cnlQb2xpY3kpIHtcbiAgICAgICAgdGhpcy5odHRwQ2xpZW50Tm9SZXRyaWVzID0gaHR0cENsaWVudE5vUmV0cmllcztcbiAgICAgICAgdGhpcy5yZXRyeVBvbGljeSA9IHJldHJ5UG9saWN5O1xuICAgIH1cbiAgICBhc3luYyBzZW5kTmV0d29ya1JlcXVlc3RBc3luY0hlbHBlcihodHRwTWV0aG9kLCB1cmwsIG9wdGlvbnMpIHtcbiAgICAgICAgaWYgKGh0dHBNZXRob2QgPT09IEh0dHBNZXRob2QuR0VUKSB7XG4gICAgICAgICAgICByZXR1cm4gdGhpcy5odHRwQ2xpZW50Tm9SZXRyaWVzLnNlbmRHZXRSZXF1ZXN0QXN5bmModXJsLCBvcHRpb25zKTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIHJldHVybiB0aGlzLmh0dHBDbGllbnROb1JldHJpZXMuc2VuZFBvc3RSZXF1ZXN0QXN5bmModXJsLCBvcHRpb25zKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBhc3luYyBzZW5kTmV0d29ya1JlcXVlc3RBc3luYyhodHRwTWV0aG9kLCB1cmwsIG9wdGlvbnMpIHtcbiAgICAgICAgLy8gdGhlIHVuZGVybHlpbmcgbmV0d29yayBtb2R1bGUgKGN1c3RvbSBvciBIdHRwQ2xpZW50KSB3aWxsIG1ha2UgdGhlIGNhbGxcbiAgICAgICAgbGV0IHJlc3BvbnNlID0gYXdhaXQgdGhpcy5zZW5kTmV0d29ya1JlcXVlc3RBc3luY0hlbHBlcihodHRwTWV0aG9kLCB1cmwsIG9wdGlvbnMpO1xuICAgICAgICBsZXQgY3VycmVudFJldHJ5ID0gMDtcbiAgICAgICAgd2hpbGUgKGF3YWl0IHRoaXMucmV0cnlQb2xpY3kucGF1c2VGb3JSZXRyeShyZXNwb25zZS5zdGF0dXMsIGN1cnJlbnRSZXRyeSwgcmVzcG9uc2UuaGVhZGVyc1tIZWFkZXJOYW1lcy5SRVRSWV9BRlRFUl0pKSB7XG4gICAgICAgICAgICByZXNwb25zZSA9IGF3YWl0IHRoaXMuc2VuZE5ldHdvcmtSZXF1ZXN0QXN5bmNIZWxwZXIoaHR0cE1ldGhvZCwgdXJsLCBvcHRpb25zKTtcbiAgICAgICAgICAgIGN1cnJlbnRSZXRyeSsrO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiByZXNwb25zZTtcbiAgICB9XG4gICAgYXN5bmMgc2VuZEdldFJlcXVlc3RBc3luYyh1cmwsIG9wdGlvbnMpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuc2VuZE5ldHdvcmtSZXF1ZXN0QXN5bmMoSHR0cE1ldGhvZC5HRVQsIHVybCwgb3B0aW9ucyk7XG4gICAgfVxuICAgIGFzeW5jIHNlbmRQb3N0UmVxdWVzdEFzeW5jKHVybCwgb3B0aW9ucykge1xuICAgICAgICByZXR1cm4gdGhpcy5zZW5kTmV0d29ya1JlcXVlc3RBc3luYyhIdHRwTWV0aG9kLlBPU1QsIHVybCwgb3B0aW9ucyk7XG4gICAgfVxufVxuXG5leHBvcnQgeyBIdHRwQ2xpZW50V2l0aFJldHJpZXMgfTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPUh0dHBDbGllbnRXaXRoUmV0cmllcy5tanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/msal-node/dist/network/HttpClientWithRetries.mjs\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/msal-node/dist/network/LoopbackClient.mjs":
/*!***********************************************************************!*\
  !*** ./node_modules/@azure/msal-node/dist/network/LoopbackClient.mjs ***!
  \***********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   LoopbackClient: () => (/* binding */ LoopbackClient)\n/* harmony export */ });\n/* harmony import */ var _azure_msal_common__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @azure/msal-common */ \"(rsc)/./node_modules/@azure/msal-common/dist/utils/Constants.mjs\");\n/* harmony import */ var _azure_msal_common__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @azure/msal-common */ \"(rsc)/./node_modules/@azure/msal-common/dist/utils/UrlUtils.mjs\");\n/* harmony import */ var http__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! http */ \"http\");\n/* harmony import */ var _error_NodeAuthError_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../error/NodeAuthError.mjs */ \"(rsc)/./node_modules/@azure/msal-node/dist/error/NodeAuthError.mjs\");\n/* harmony import */ var _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils/Constants.mjs */ \"(rsc)/./node_modules/@azure/msal-node/dist/utils/Constants.mjs\");\n/*! @azure/msal-node v2.12.0 2024-07-23 */\n\n\n\n\n\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\nclass LoopbackClient {\n    /**\n     * Spins up a loopback server which returns the server response when the localhost redirectUri is hit\n     * @param successTemplate\n     * @param errorTemplate\n     * @returns\n     */\n    async listenForAuthCode(successTemplate, errorTemplate) {\n        if (this.server) {\n            throw _error_NodeAuthError_mjs__WEBPACK_IMPORTED_MODULE_1__.NodeAuthError.createLoopbackServerAlreadyExistsError();\n        }\n        return new Promise((resolve, reject) => {\n            this.server = http__WEBPACK_IMPORTED_MODULE_0__.createServer((req, res) => {\n                const url = req.url;\n                if (!url) {\n                    res.end(errorTemplate ||\n                        \"Error occurred loading redirectUrl\");\n                    reject(_error_NodeAuthError_mjs__WEBPACK_IMPORTED_MODULE_1__.NodeAuthError.createUnableToLoadRedirectUrlError());\n                    return;\n                }\n                else if (url === _azure_msal_common__WEBPACK_IMPORTED_MODULE_3__.Constants.FORWARD_SLASH) {\n                    res.end(successTemplate ||\n                        \"Auth code was successfully acquired. You can close this window now.\");\n                    return;\n                }\n                const redirectUri = this.getRedirectUri();\n                const parsedUrl = new URL(url, redirectUri);\n                const authCodeResponse = _azure_msal_common__WEBPACK_IMPORTED_MODULE_4__.getDeserializedResponse(parsedUrl.search) || {};\n                if (authCodeResponse.code) {\n                    res.writeHead(_azure_msal_common__WEBPACK_IMPORTED_MODULE_3__.HttpStatus.REDIRECT, {\n                        location: redirectUri,\n                    }); // Prevent auth code from being saved in the browser history\n                    res.end();\n                }\n                resolve(authCodeResponse);\n            });\n            this.server.listen(0); // Listen on any available port\n        });\n    }\n    /**\n     * Get the port that the loopback server is running on\n     * @returns\n     */\n    getRedirectUri() {\n        if (!this.server || !this.server.listening) {\n            throw _error_NodeAuthError_mjs__WEBPACK_IMPORTED_MODULE_1__.NodeAuthError.createNoLoopbackServerExistsError();\n        }\n        const address = this.server.address();\n        if (!address || typeof address === \"string\" || !address.port) {\n            this.closeServer();\n            throw _error_NodeAuthError_mjs__WEBPACK_IMPORTED_MODULE_1__.NodeAuthError.createInvalidLoopbackAddressTypeError();\n        }\n        const port = address && address.port;\n        return `${_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_2__.Constants.HTTP_PROTOCOL}${_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_2__.Constants.LOCALHOST}:${port}`;\n    }\n    /**\n     * Close the loopback server\n     */\n    closeServer() {\n        if (this.server) {\n            // Only stops accepting new connections, server will close once open/idle connections are closed.\n            this.server.close();\n            if (typeof this.server.closeAllConnections === \"function\") {\n                /*\n                 * Close open/idle connections. This API is available in Node versions 18.2 and higher\n                 */\n                this.server.closeAllConnections();\n            }\n            this.server.unref();\n            this.server = undefined;\n        }\n    }\n}\n\n\n//# sourceMappingURL=LoopbackClient.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtbm9kZS9kaXN0L25ldHdvcmsvTG9vcGJhY2tDbGllbnQubWpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUFBO0FBQ2E7QUFDd0Q7QUFDN0M7QUFDbUM7QUFDTzs7QUFFbEU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrQkFBa0IsbUVBQWE7QUFDL0I7QUFDQTtBQUNBLDBCQUEwQiw4Q0FBaUI7QUFDM0M7QUFDQTtBQUNBO0FBQ0E7QUFDQSwyQkFBMkIsbUVBQWE7QUFDeEM7QUFDQTtBQUNBLGlDQUFpQyx5REFBUztBQUMxQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx5Q0FBeUMsdUVBQWdDO0FBQ3pFO0FBQ0Esa0NBQWtDLDBEQUFVO0FBQzVDO0FBQ0EscUJBQXFCLEdBQUc7QUFDeEI7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiLG1DQUFtQztBQUNuQyxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrQkFBa0IsbUVBQWE7QUFDL0I7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrQkFBa0IsbUVBQWE7QUFDL0I7QUFDQTtBQUNBLGtCQUFrQiwyREFBVyxlQUFlLEVBQUUsMkRBQVcsV0FBVyxHQUFHLEtBQUs7QUFDNUU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRTBCO0FBQzFCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZGFuaWVsMy12cDIvLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtbm9kZS9kaXN0L25ldHdvcmsvTG9vcGJhY2tDbGllbnQubWpzPzQ1OGEiXSwic291cmNlc0NvbnRlbnQiOlsiLyohIEBhenVyZS9tc2FsLW5vZGUgdjIuMTIuMCAyMDI0LTA3LTIzICovXG4ndXNlIHN0cmljdCc7XG5pbXBvcnQgeyBDb25zdGFudHMsIFVybFV0aWxzLCBIdHRwU3RhdHVzIH0gZnJvbSAnQGF6dXJlL21zYWwtY29tbW9uJztcbmltcG9ydCBodHRwIGZyb20gJ2h0dHAnO1xuaW1wb3J0IHsgTm9kZUF1dGhFcnJvciB9IGZyb20gJy4uL2Vycm9yL05vZGVBdXRoRXJyb3IubWpzJztcbmltcG9ydCB7IENvbnN0YW50cyBhcyBDb25zdGFudHMkMSB9IGZyb20gJy4uL3V0aWxzL0NvbnN0YW50cy5tanMnO1xuXG4vKlxuICogQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uIEFsbCByaWdodHMgcmVzZXJ2ZWQuXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIExpY2Vuc2UuXG4gKi9cbmNsYXNzIExvb3BiYWNrQ2xpZW50IHtcbiAgICAvKipcbiAgICAgKiBTcGlucyB1cCBhIGxvb3BiYWNrIHNlcnZlciB3aGljaCByZXR1cm5zIHRoZSBzZXJ2ZXIgcmVzcG9uc2Ugd2hlbiB0aGUgbG9jYWxob3N0IHJlZGlyZWN0VXJpIGlzIGhpdFxuICAgICAqIEBwYXJhbSBzdWNjZXNzVGVtcGxhdGVcbiAgICAgKiBAcGFyYW0gZXJyb3JUZW1wbGF0ZVxuICAgICAqIEByZXR1cm5zXG4gICAgICovXG4gICAgYXN5bmMgbGlzdGVuRm9yQXV0aENvZGUoc3VjY2Vzc1RlbXBsYXRlLCBlcnJvclRlbXBsYXRlKSB7XG4gICAgICAgIGlmICh0aGlzLnNlcnZlcikge1xuICAgICAgICAgICAgdGhyb3cgTm9kZUF1dGhFcnJvci5jcmVhdGVMb29wYmFja1NlcnZlckFscmVhZHlFeGlzdHNFcnJvcigpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBuZXcgUHJvbWlzZSgocmVzb2x2ZSwgcmVqZWN0KSA9PiB7XG4gICAgICAgICAgICB0aGlzLnNlcnZlciA9IGh0dHAuY3JlYXRlU2VydmVyKChyZXEsIHJlcykgPT4ge1xuICAgICAgICAgICAgICAgIGNvbnN0IHVybCA9IHJlcS51cmw7XG4gICAgICAgICAgICAgICAgaWYgKCF1cmwpIHtcbiAgICAgICAgICAgICAgICAgICAgcmVzLmVuZChlcnJvclRlbXBsYXRlIHx8XG4gICAgICAgICAgICAgICAgICAgICAgICBcIkVycm9yIG9jY3VycmVkIGxvYWRpbmcgcmVkaXJlY3RVcmxcIik7XG4gICAgICAgICAgICAgICAgICAgIHJlamVjdChOb2RlQXV0aEVycm9yLmNyZWF0ZVVuYWJsZVRvTG9hZFJlZGlyZWN0VXJsRXJyb3IoKSk7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgZWxzZSBpZiAodXJsID09PSBDb25zdGFudHMuRk9SV0FSRF9TTEFTSCkge1xuICAgICAgICAgICAgICAgICAgICByZXMuZW5kKHN1Y2Nlc3NUZW1wbGF0ZSB8fFxuICAgICAgICAgICAgICAgICAgICAgICAgXCJBdXRoIGNvZGUgd2FzIHN1Y2Nlc3NmdWxseSBhY3F1aXJlZC4gWW91IGNhbiBjbG9zZSB0aGlzIHdpbmRvdyBub3cuXCIpO1xuICAgICAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGNvbnN0IHJlZGlyZWN0VXJpID0gdGhpcy5nZXRSZWRpcmVjdFVyaSgpO1xuICAgICAgICAgICAgICAgIGNvbnN0IHBhcnNlZFVybCA9IG5ldyBVUkwodXJsLCByZWRpcmVjdFVyaSk7XG4gICAgICAgICAgICAgICAgY29uc3QgYXV0aENvZGVSZXNwb25zZSA9IFVybFV0aWxzLmdldERlc2VyaWFsaXplZFJlc3BvbnNlKHBhcnNlZFVybC5zZWFyY2gpIHx8IHt9O1xuICAgICAgICAgICAgICAgIGlmIChhdXRoQ29kZVJlc3BvbnNlLmNvZGUpIHtcbiAgICAgICAgICAgICAgICAgICAgcmVzLndyaXRlSGVhZChIdHRwU3RhdHVzLlJFRElSRUNULCB7XG4gICAgICAgICAgICAgICAgICAgICAgICBsb2NhdGlvbjogcmVkaXJlY3RVcmksXG4gICAgICAgICAgICAgICAgICAgIH0pOyAvLyBQcmV2ZW50IGF1dGggY29kZSBmcm9tIGJlaW5nIHNhdmVkIGluIHRoZSBicm93c2VyIGhpc3RvcnlcbiAgICAgICAgICAgICAgICAgICAgcmVzLmVuZCgpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICByZXNvbHZlKGF1dGhDb2RlUmVzcG9uc2UpO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB0aGlzLnNlcnZlci5saXN0ZW4oMCk7IC8vIExpc3RlbiBvbiBhbnkgYXZhaWxhYmxlIHBvcnRcbiAgICAgICAgfSk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIEdldCB0aGUgcG9ydCB0aGF0IHRoZSBsb29wYmFjayBzZXJ2ZXIgaXMgcnVubmluZyBvblxuICAgICAqIEByZXR1cm5zXG4gICAgICovXG4gICAgZ2V0UmVkaXJlY3RVcmkoKSB7XG4gICAgICAgIGlmICghdGhpcy5zZXJ2ZXIgfHwgIXRoaXMuc2VydmVyLmxpc3RlbmluZykge1xuICAgICAgICAgICAgdGhyb3cgTm9kZUF1dGhFcnJvci5jcmVhdGVOb0xvb3BiYWNrU2VydmVyRXhpc3RzRXJyb3IoKTtcbiAgICAgICAgfVxuICAgICAgICBjb25zdCBhZGRyZXNzID0gdGhpcy5zZXJ2ZXIuYWRkcmVzcygpO1xuICAgICAgICBpZiAoIWFkZHJlc3MgfHwgdHlwZW9mIGFkZHJlc3MgPT09IFwic3RyaW5nXCIgfHwgIWFkZHJlc3MucG9ydCkge1xuICAgICAgICAgICAgdGhpcy5jbG9zZVNlcnZlcigpO1xuICAgICAgICAgICAgdGhyb3cgTm9kZUF1dGhFcnJvci5jcmVhdGVJbnZhbGlkTG9vcGJhY2tBZGRyZXNzVHlwZUVycm9yKCk7XG4gICAgICAgIH1cbiAgICAgICAgY29uc3QgcG9ydCA9IGFkZHJlc3MgJiYgYWRkcmVzcy5wb3J0O1xuICAgICAgICByZXR1cm4gYCR7Q29uc3RhbnRzJDEuSFRUUF9QUk9UT0NPTH0ke0NvbnN0YW50cyQxLkxPQ0FMSE9TVH06JHtwb3J0fWA7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIENsb3NlIHRoZSBsb29wYmFjayBzZXJ2ZXJcbiAgICAgKi9cbiAgICBjbG9zZVNlcnZlcigpIHtcbiAgICAgICAgaWYgKHRoaXMuc2VydmVyKSB7XG4gICAgICAgICAgICAvLyBPbmx5IHN0b3BzIGFjY2VwdGluZyBuZXcgY29ubmVjdGlvbnMsIHNlcnZlciB3aWxsIGNsb3NlIG9uY2Ugb3Blbi9pZGxlIGNvbm5lY3Rpb25zIGFyZSBjbG9zZWQuXG4gICAgICAgICAgICB0aGlzLnNlcnZlci5jbG9zZSgpO1xuICAgICAgICAgICAgaWYgKHR5cGVvZiB0aGlzLnNlcnZlci5jbG9zZUFsbENvbm5lY3Rpb25zID09PSBcImZ1bmN0aW9uXCIpIHtcbiAgICAgICAgICAgICAgICAvKlxuICAgICAgICAgICAgICAgICAqIENsb3NlIG9wZW4vaWRsZSBjb25uZWN0aW9ucy4gVGhpcyBBUEkgaXMgYXZhaWxhYmxlIGluIE5vZGUgdmVyc2lvbnMgMTguMiBhbmQgaGlnaGVyXG4gICAgICAgICAgICAgICAgICovXG4gICAgICAgICAgICAgICAgdGhpcy5zZXJ2ZXIuY2xvc2VBbGxDb25uZWN0aW9ucygpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgdGhpcy5zZXJ2ZXIudW5yZWYoKTtcbiAgICAgICAgICAgIHRoaXMuc2VydmVyID0gdW5kZWZpbmVkO1xuICAgICAgICB9XG4gICAgfVxufVxuXG5leHBvcnQgeyBMb29wYmFja0NsaWVudCB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9TG9vcGJhY2tDbGllbnQubWpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/msal-node/dist/network/LoopbackClient.mjs\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/msal-node/dist/packageMetadata.mjs":
/*!****************************************************************!*\
  !*** ./node_modules/@azure/msal-node/dist/packageMetadata.mjs ***!
  \****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   name: () => (/* binding */ name),\n/* harmony export */   version: () => (/* binding */ version)\n/* harmony export */ });\n/*! @azure/msal-node v2.12.0 2024-07-23 */\n\n/* eslint-disable header/header */\nconst name = \"@azure/msal-node\";\nconst version = \"2.12.0\";\n\n\n//# sourceMappingURL=packageMetadata.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtbm9kZS9kaXN0L3BhY2thZ2VNZXRhZGF0YS5tanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQTtBQUNhO0FBQ2I7QUFDQTtBQUNBOztBQUV5QjtBQUN6QiIsInNvdXJjZXMiOlsid2VicGFjazovL2RhbmllbDMtdnAyLy4vbm9kZV9tb2R1bGVzL0BhenVyZS9tc2FsLW5vZGUvZGlzdC9wYWNrYWdlTWV0YWRhdGEubWpzPzFmMTEiXSwic291cmNlc0NvbnRlbnQiOlsiLyohIEBhenVyZS9tc2FsLW5vZGUgdjIuMTIuMCAyMDI0LTA3LTIzICovXG4ndXNlIHN0cmljdCc7XG4vKiBlc2xpbnQtZGlzYWJsZSBoZWFkZXIvaGVhZGVyICovXG5jb25zdCBuYW1lID0gXCJAYXp1cmUvbXNhbC1ub2RlXCI7XG5jb25zdCB2ZXJzaW9uID0gXCIyLjEyLjBcIjtcblxuZXhwb3J0IHsgbmFtZSwgdmVyc2lvbiB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9cGFja2FnZU1ldGFkYXRhLm1qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/msal-node/dist/packageMetadata.mjs\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/msal-node/dist/retry/LinearRetryPolicy.mjs":
/*!************************************************************************!*\
  !*** ./node_modules/@azure/msal-node/dist/retry/LinearRetryPolicy.mjs ***!
  \************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   LinearRetryPolicy: () => (/* binding */ LinearRetryPolicy)\n/* harmony export */ });\n/*! @azure/msal-node v2.12.0 2024-07-23 */\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\nclass LinearRetryPolicy {\n    constructor(maxRetries, retryDelay, httpStatusCodesToRetryOn) {\n        this.maxRetries = maxRetries;\n        this.retryDelay = retryDelay;\n        this.httpStatusCodesToRetryOn = httpStatusCodesToRetryOn;\n    }\n    retryAfterMillisecondsToSleep(retryHeader) {\n        if (!retryHeader) {\n            return 0;\n        }\n        // retry-after header is in seconds\n        let millisToSleep = Math.round(parseFloat(retryHeader) * 1000);\n        /*\n         * retry-after header is in HTTP Date format\n         * <day-name>, <day> <month> <year> <hour>:<minute>:<second> GMT\n         */\n        if (isNaN(millisToSleep)) {\n            millisToSleep = Math.max(0, \n            // .valueOf() is needed to subtract dates in TypeScript\n            new Date(retryHeader).valueOf() - new Date().valueOf());\n        }\n        return millisToSleep;\n    }\n    async pauseForRetry(httpStatusCode, currentRetry, retryAfterHeader) {\n        if (this.httpStatusCodesToRetryOn.includes(httpStatusCode) &&\n            currentRetry < this.maxRetries) {\n            const retryAfterDelay = this.retryAfterMillisecondsToSleep(retryAfterHeader);\n            await new Promise((resolve) => {\n                // retryAfterHeader value of 0 evaluates to false, and this.retryDelay will be used\n                return setTimeout(resolve, retryAfterDelay || this.retryDelay);\n            });\n            return true;\n        }\n        return false;\n    }\n}\n\n\n//# sourceMappingURL=LinearRetryPolicy.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtbm9kZS9kaXN0L3JldHJ5L0xpbmVhclJldHJ5UG9saWN5Lm1qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUE7QUFDYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRTZCO0FBQzdCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZGFuaWVsMy12cDIvLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtbm9kZS9kaXN0L3JldHJ5L0xpbmVhclJldHJ5UG9saWN5Lm1qcz9hYTdlIl0sInNvdXJjZXNDb250ZW50IjpbIi8qISBAYXp1cmUvbXNhbC1ub2RlIHYyLjEyLjAgMjAyNC0wNy0yMyAqL1xuJ3VzZSBzdHJpY3QnO1xuLypcbiAqIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLiBBbGwgcmlnaHRzIHJlc2VydmVkLlxuICogTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBMaWNlbnNlLlxuICovXG5jbGFzcyBMaW5lYXJSZXRyeVBvbGljeSB7XG4gICAgY29uc3RydWN0b3IobWF4UmV0cmllcywgcmV0cnlEZWxheSwgaHR0cFN0YXR1c0NvZGVzVG9SZXRyeU9uKSB7XG4gICAgICAgIHRoaXMubWF4UmV0cmllcyA9IG1heFJldHJpZXM7XG4gICAgICAgIHRoaXMucmV0cnlEZWxheSA9IHJldHJ5RGVsYXk7XG4gICAgICAgIHRoaXMuaHR0cFN0YXR1c0NvZGVzVG9SZXRyeU9uID0gaHR0cFN0YXR1c0NvZGVzVG9SZXRyeU9uO1xuICAgIH1cbiAgICByZXRyeUFmdGVyTWlsbGlzZWNvbmRzVG9TbGVlcChyZXRyeUhlYWRlcikge1xuICAgICAgICBpZiAoIXJldHJ5SGVhZGVyKSB7XG4gICAgICAgICAgICByZXR1cm4gMDtcbiAgICAgICAgfVxuICAgICAgICAvLyByZXRyeS1hZnRlciBoZWFkZXIgaXMgaW4gc2Vjb25kc1xuICAgICAgICBsZXQgbWlsbGlzVG9TbGVlcCA9IE1hdGgucm91bmQocGFyc2VGbG9hdChyZXRyeUhlYWRlcikgKiAxMDAwKTtcbiAgICAgICAgLypcbiAgICAgICAgICogcmV0cnktYWZ0ZXIgaGVhZGVyIGlzIGluIEhUVFAgRGF0ZSBmb3JtYXRcbiAgICAgICAgICogPGRheS1uYW1lPiwgPGRheT4gPG1vbnRoPiA8eWVhcj4gPGhvdXI+OjxtaW51dGU+OjxzZWNvbmQ+IEdNVFxuICAgICAgICAgKi9cbiAgICAgICAgaWYgKGlzTmFOKG1pbGxpc1RvU2xlZXApKSB7XG4gICAgICAgICAgICBtaWxsaXNUb1NsZWVwID0gTWF0aC5tYXgoMCwgXG4gICAgICAgICAgICAvLyAudmFsdWVPZigpIGlzIG5lZWRlZCB0byBzdWJ0cmFjdCBkYXRlcyBpbiBUeXBlU2NyaXB0XG4gICAgICAgICAgICBuZXcgRGF0ZShyZXRyeUhlYWRlcikudmFsdWVPZigpIC0gbmV3IERhdGUoKS52YWx1ZU9mKCkpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBtaWxsaXNUb1NsZWVwO1xuICAgIH1cbiAgICBhc3luYyBwYXVzZUZvclJldHJ5KGh0dHBTdGF0dXNDb2RlLCBjdXJyZW50UmV0cnksIHJldHJ5QWZ0ZXJIZWFkZXIpIHtcbiAgICAgICAgaWYgKHRoaXMuaHR0cFN0YXR1c0NvZGVzVG9SZXRyeU9uLmluY2x1ZGVzKGh0dHBTdGF0dXNDb2RlKSAmJlxuICAgICAgICAgICAgY3VycmVudFJldHJ5IDwgdGhpcy5tYXhSZXRyaWVzKSB7XG4gICAgICAgICAgICBjb25zdCByZXRyeUFmdGVyRGVsYXkgPSB0aGlzLnJldHJ5QWZ0ZXJNaWxsaXNlY29uZHNUb1NsZWVwKHJldHJ5QWZ0ZXJIZWFkZXIpO1xuICAgICAgICAgICAgYXdhaXQgbmV3IFByb21pc2UoKHJlc29sdmUpID0+IHtcbiAgICAgICAgICAgICAgICAvLyByZXRyeUFmdGVySGVhZGVyIHZhbHVlIG9mIDAgZXZhbHVhdGVzIHRvIGZhbHNlLCBhbmQgdGhpcy5yZXRyeURlbGF5IHdpbGwgYmUgdXNlZFxuICAgICAgICAgICAgICAgIHJldHVybiBzZXRUaW1lb3V0KHJlc29sdmUsIHJldHJ5QWZ0ZXJEZWxheSB8fCB0aGlzLnJldHJ5RGVsYXkpO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxufVxuXG5leHBvcnQgeyBMaW5lYXJSZXRyeVBvbGljeSB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9TGluZWFyUmV0cnlQb2xpY3kubWpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/msal-node/dist/retry/LinearRetryPolicy.mjs\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/msal-node/dist/utils/Constants.mjs":
/*!****************************************************************!*\
  !*** ./node_modules/@azure/msal-node/dist/utils/Constants.mjs ***!
  \****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   API_VERSION_QUERY_PARAMETER_NAME: () => (/* binding */ API_VERSION_QUERY_PARAMETER_NAME),\n/* harmony export */   APP_SERVICE_SECRET_HEADER_NAME: () => (/* binding */ APP_SERVICE_SECRET_HEADER_NAME),\n/* harmony export */   AUTHORIZATION_HEADER_NAME: () => (/* binding */ AUTHORIZATION_HEADER_NAME),\n/* harmony export */   AZURE_ARC_SECRET_FILE_MAX_SIZE_BYTES: () => (/* binding */ AZURE_ARC_SECRET_FILE_MAX_SIZE_BYTES),\n/* harmony export */   ApiId: () => (/* binding */ ApiId),\n/* harmony export */   CharSet: () => (/* binding */ CharSet),\n/* harmony export */   Constants: () => (/* binding */ Constants),\n/* harmony export */   DEFAULT_AUTHORITY_FOR_MANAGED_IDENTITY: () => (/* binding */ DEFAULT_AUTHORITY_FOR_MANAGED_IDENTITY),\n/* harmony export */   DEFAULT_MANAGED_IDENTITY_ID: () => (/* binding */ DEFAULT_MANAGED_IDENTITY_ID),\n/* harmony export */   Hash: () => (/* binding */ Hash),\n/* harmony export */   HttpMethod: () => (/* binding */ HttpMethod),\n/* harmony export */   JwtConstants: () => (/* binding */ JwtConstants),\n/* harmony export */   LOOPBACK_SERVER_CONSTANTS: () => (/* binding */ LOOPBACK_SERVER_CONSTANTS),\n/* harmony export */   MANAGED_IDENTITY_DEFAULT_TENANT: () => (/* binding */ MANAGED_IDENTITY_DEFAULT_TENANT),\n/* harmony export */   MANAGED_IDENTITY_HTTP_STATUS_CODES_TO_RETRY_ON: () => (/* binding */ MANAGED_IDENTITY_HTTP_STATUS_CODES_TO_RETRY_ON),\n/* harmony export */   MANAGED_IDENTITY_MAX_RETRIES: () => (/* binding */ MANAGED_IDENTITY_MAX_RETRIES),\n/* harmony export */   MANAGED_IDENTITY_RETRY_DELAY: () => (/* binding */ MANAGED_IDENTITY_RETRY_DELAY),\n/* harmony export */   METADATA_HEADER_NAME: () => (/* binding */ METADATA_HEADER_NAME),\n/* harmony export */   ManagedIdentityEnvironmentVariableNames: () => (/* binding */ ManagedIdentityEnvironmentVariableNames),\n/* harmony export */   ManagedIdentityIdType: () => (/* binding */ ManagedIdentityIdType),\n/* harmony export */   ManagedIdentitySourceNames: () => (/* binding */ ManagedIdentitySourceNames),\n/* harmony export */   ProxyStatus: () => (/* binding */ ProxyStatus),\n/* harmony export */   RANDOM_OCTET_SIZE: () => (/* binding */ RANDOM_OCTET_SIZE),\n/* harmony export */   REGION_ENVIRONMENT_VARIABLE: () => (/* binding */ REGION_ENVIRONMENT_VARIABLE),\n/* harmony export */   RESOURCE_BODY_OR_QUERY_PARAMETER_NAME: () => (/* binding */ RESOURCE_BODY_OR_QUERY_PARAMETER_NAME),\n/* harmony export */   SERVICE_FABRIC_SECRET_HEADER_NAME: () => (/* binding */ SERVICE_FABRIC_SECRET_HEADER_NAME)\n/* harmony export */ });\n/* harmony import */ var _azure_msal_common__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @azure/msal-common */ \"(rsc)/./node_modules/@azure/msal-common/dist/utils/Constants.mjs\");\n/*! @azure/msal-node v2.12.0 2024-07-23 */\n\n\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n// MSI Constants. Docs for MSI are available here https://docs.microsoft.com/azure/app-service/overview-managed-identity\nconst AUTHORIZATION_HEADER_NAME = \"Authorization\";\nconst METADATA_HEADER_NAME = \"Metadata\";\nconst APP_SERVICE_SECRET_HEADER_NAME = \"X-IDENTITY-HEADER\";\nconst SERVICE_FABRIC_SECRET_HEADER_NAME = \"secret\";\nconst API_VERSION_QUERY_PARAMETER_NAME = \"api-version\";\nconst RESOURCE_BODY_OR_QUERY_PARAMETER_NAME = \"resource\";\nconst DEFAULT_MANAGED_IDENTITY_ID = \"system_assigned_managed_identity\";\nconst MANAGED_IDENTITY_DEFAULT_TENANT = \"managed_identity\";\nconst DEFAULT_AUTHORITY_FOR_MANAGED_IDENTITY = `https://login.microsoftonline.com/${MANAGED_IDENTITY_DEFAULT_TENANT}/`;\n/**\n * Managed Identity Environment Variable Names\n */\nconst ManagedIdentityEnvironmentVariableNames = {\n    AZURE_POD_IDENTITY_AUTHORITY_HOST: \"AZURE_POD_IDENTITY_AUTHORITY_HOST\",\n    IDENTITY_ENDPOINT: \"IDENTITY_ENDPOINT\",\n    IDENTITY_HEADER: \"IDENTITY_HEADER\",\n    IDENTITY_SERVER_THUMBPRINT: \"IDENTITY_SERVER_THUMBPRINT\",\n    IMDS_ENDPOINT: \"IMDS_ENDPOINT\",\n    MSI_ENDPOINT: \"MSI_ENDPOINT\",\n};\n/**\n * Managed Identity Source Names\n * @public\n */\nconst ManagedIdentitySourceNames = {\n    APP_SERVICE: \"AppService\",\n    AZURE_ARC: \"AzureArc\",\n    CLOUD_SHELL: \"CloudShell\",\n    DEFAULT_TO_IMDS: \"DefaultToImds\",\n    IMDS: \"Imds\",\n    SERVICE_FABRIC: \"ServiceFabric\",\n};\n/**\n * Managed Identity Ids\n */\nconst ManagedIdentityIdType = {\n    SYSTEM_ASSIGNED: \"system-assigned\",\n    USER_ASSIGNED_CLIENT_ID: \"user-assigned-client-id\",\n    USER_ASSIGNED_RESOURCE_ID: \"user-assigned-resource-id\",\n    USER_ASSIGNED_OBJECT_ID: \"user-assigned-object-id\",\n};\n/**\n * http methods\n */\nconst HttpMethod = {\n    GET: \"get\",\n    POST: \"post\",\n};\nconst ProxyStatus = {\n    SUCCESS: _azure_msal_common__WEBPACK_IMPORTED_MODULE_0__.HttpStatus.SUCCESS,\n    SUCCESS_RANGE_START: _azure_msal_common__WEBPACK_IMPORTED_MODULE_0__.HttpStatus.SUCCESS_RANGE_START,\n    SUCCESS_RANGE_END: _azure_msal_common__WEBPACK_IMPORTED_MODULE_0__.HttpStatus.SUCCESS_RANGE_END,\n    SERVER_ERROR: _azure_msal_common__WEBPACK_IMPORTED_MODULE_0__.HttpStatus.SERVER_ERROR,\n};\n/**\n * Constants used for region discovery\n */\nconst REGION_ENVIRONMENT_VARIABLE = \"REGION_NAME\";\n/**\n * Constant used for PKCE\n */\nconst RANDOM_OCTET_SIZE = 32;\n/**\n * Constants used in PKCE\n */\nconst Hash = {\n    SHA256: \"sha256\",\n};\n/**\n * Constants for encoding schemes\n */\nconst CharSet = {\n    CV_CHARSET: \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-._~\",\n};\n/**\n * Constants\n */\nconst Constants = {\n    MSAL_SKU: \"msal.js.node\",\n    JWT_BEARER_ASSERTION_TYPE: \"urn:ietf:params:oauth:client-assertion-type:jwt-bearer\",\n    AUTHORIZATION_PENDING: \"authorization_pending\",\n    HTTP_PROTOCOL: \"http://\",\n    LOCALHOST: \"localhost\",\n};\n/**\n * API Codes for Telemetry purposes.\n * Before adding a new code you must claim it in the MSAL Telemetry tracker as these number spaces are shared across all MSALs\n * 0-99 Silent Flow\n * 600-699 Device Code Flow\n * 800-899 Auth Code Flow\n */\nconst ApiId = {\n    acquireTokenSilent: 62,\n    acquireTokenByUsernamePassword: 371,\n    acquireTokenByDeviceCode: 671,\n    acquireTokenByClientCredential: 771,\n    acquireTokenByCode: 871,\n    acquireTokenByRefreshToken: 872,\n};\n/**\n * JWT  constants\n */\nconst JwtConstants = {\n    ALGORITHM: \"alg\",\n    RSA_256: \"RS256\",\n    PSS_256: \"PS256\",\n    X5T_256: \"x5t#S256\",\n    X5T: \"x5t\",\n    X5C: \"x5c\",\n    AUDIENCE: \"aud\",\n    EXPIRATION_TIME: \"exp\",\n    ISSUER: \"iss\",\n    SUBJECT: \"sub\",\n    NOT_BEFORE: \"nbf\",\n    JWT_ID: \"jti\",\n};\nconst LOOPBACK_SERVER_CONSTANTS = {\n    INTERVAL_MS: 100,\n    TIMEOUT_MS: 5000,\n};\nconst AZURE_ARC_SECRET_FILE_MAX_SIZE_BYTES = 4096; // 4 KB\nconst MANAGED_IDENTITY_MAX_RETRIES = 3;\nconst MANAGED_IDENTITY_RETRY_DELAY = 1000;\nconst MANAGED_IDENTITY_HTTP_STATUS_CODES_TO_RETRY_ON = [\n    _azure_msal_common__WEBPACK_IMPORTED_MODULE_0__.HttpStatus.NOT_FOUND,\n    _azure_msal_common__WEBPACK_IMPORTED_MODULE_0__.HttpStatus.REQUEST_TIMEOUT,\n    _azure_msal_common__WEBPACK_IMPORTED_MODULE_0__.HttpStatus.TOO_MANY_REQUESTS,\n    _azure_msal_common__WEBPACK_IMPORTED_MODULE_0__.HttpStatus.SERVER_ERROR,\n    _azure_msal_common__WEBPACK_IMPORTED_MODULE_0__.HttpStatus.SERVICE_UNAVAILABLE,\n    _azure_msal_common__WEBPACK_IMPORTED_MODULE_0__.HttpStatus.GATEWAY_TIMEOUT,\n];\n\n\n//# sourceMappingURL=Constants.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/msal-node/dist/utils/Constants.mjs\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/msal-node/dist/utils/EncodingUtils.mjs":
/*!********************************************************************!*\
  !*** ./node_modules/@azure/msal-node/dist/utils/EncodingUtils.mjs ***!
  \********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   EncodingUtils: () => (/* binding */ EncodingUtils)\n/* harmony export */ });\n/* harmony import */ var _azure_msal_common__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @azure/msal-common */ \"(rsc)/./node_modules/@azure/msal-common/dist/utils/Constants.mjs\");\n/*! @azure/msal-node v2.12.0 2024-07-23 */\n\n\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\nclass EncodingUtils {\n    /**\n     * 'utf8': Multibyte encoded Unicode characters. Many web pages and other document formats use UTF-8.\n     * 'base64': Base64 encoding.\n     *\n     * @param str text\n     */\n    static base64Encode(str, encoding) {\n        return Buffer.from(str, encoding).toString(\"base64\");\n    }\n    /**\n     * encode a URL\n     * @param str\n     */\n    static base64EncodeUrl(str, encoding) {\n        return EncodingUtils.base64Encode(str, encoding)\n            .replace(/=/g, _azure_msal_common__WEBPACK_IMPORTED_MODULE_0__.Constants.EMPTY_STRING)\n            .replace(/\\+/g, \"-\")\n            .replace(/\\//g, \"_\");\n    }\n    /**\n     * 'utf8': Multibyte encoded Unicode characters. Many web pages and other document formats use UTF-8.\n     * 'base64': Base64 encoding.\n     *\n     * @param base64Str Base64 encoded text\n     */\n    static base64Decode(base64Str) {\n        return Buffer.from(base64Str, \"base64\").toString(\"utf8\");\n    }\n    /**\n     * @param base64Str Base64 encoded Url\n     */\n    static base64DecodeUrl(base64Str) {\n        let str = base64Str.replace(/-/g, \"+\").replace(/_/g, \"/\");\n        while (str.length % 4) {\n            str += \"=\";\n        }\n        return EncodingUtils.base64Decode(str);\n    }\n}\n\n\n//# sourceMappingURL=EncodingUtils.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtbm9kZS9kaXN0L3V0aWxzL0VuY29kaW5nVXRpbHMubWpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQUE7QUFDYTtBQUNrQzs7QUFFL0M7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDJCQUEyQix5REFBUztBQUNwQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUV5QjtBQUN6QiIsInNvdXJjZXMiOlsid2VicGFjazovL2RhbmllbDMtdnAyLy4vbm9kZV9tb2R1bGVzL0BhenVyZS9tc2FsLW5vZGUvZGlzdC91dGlscy9FbmNvZGluZ1V0aWxzLm1qcz9jOTRlIl0sInNvdXJjZXNDb250ZW50IjpbIi8qISBAYXp1cmUvbXNhbC1ub2RlIHYyLjEyLjAgMjAyNC0wNy0yMyAqL1xuJ3VzZSBzdHJpY3QnO1xuaW1wb3J0IHsgQ29uc3RhbnRzIH0gZnJvbSAnQGF6dXJlL21zYWwtY29tbW9uJztcblxuLypcbiAqIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLiBBbGwgcmlnaHRzIHJlc2VydmVkLlxuICogTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBMaWNlbnNlLlxuICovXG5jbGFzcyBFbmNvZGluZ1V0aWxzIHtcbiAgICAvKipcbiAgICAgKiAndXRmOCc6IE11bHRpYnl0ZSBlbmNvZGVkIFVuaWNvZGUgY2hhcmFjdGVycy4gTWFueSB3ZWIgcGFnZXMgYW5kIG90aGVyIGRvY3VtZW50IGZvcm1hdHMgdXNlIFVURi04LlxuICAgICAqICdiYXNlNjQnOiBCYXNlNjQgZW5jb2RpbmcuXG4gICAgICpcbiAgICAgKiBAcGFyYW0gc3RyIHRleHRcbiAgICAgKi9cbiAgICBzdGF0aWMgYmFzZTY0RW5jb2RlKHN0ciwgZW5jb2RpbmcpIHtcbiAgICAgICAgcmV0dXJuIEJ1ZmZlci5mcm9tKHN0ciwgZW5jb2RpbmcpLnRvU3RyaW5nKFwiYmFzZTY0XCIpO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBlbmNvZGUgYSBVUkxcbiAgICAgKiBAcGFyYW0gc3RyXG4gICAgICovXG4gICAgc3RhdGljIGJhc2U2NEVuY29kZVVybChzdHIsIGVuY29kaW5nKSB7XG4gICAgICAgIHJldHVybiBFbmNvZGluZ1V0aWxzLmJhc2U2NEVuY29kZShzdHIsIGVuY29kaW5nKVxuICAgICAgICAgICAgLnJlcGxhY2UoLz0vZywgQ29uc3RhbnRzLkVNUFRZX1NUUklORylcbiAgICAgICAgICAgIC5yZXBsYWNlKC9cXCsvZywgXCItXCIpXG4gICAgICAgICAgICAucmVwbGFjZSgvXFwvL2csIFwiX1wiKTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogJ3V0ZjgnOiBNdWx0aWJ5dGUgZW5jb2RlZCBVbmljb2RlIGNoYXJhY3RlcnMuIE1hbnkgd2ViIHBhZ2VzIGFuZCBvdGhlciBkb2N1bWVudCBmb3JtYXRzIHVzZSBVVEYtOC5cbiAgICAgKiAnYmFzZTY0JzogQmFzZTY0IGVuY29kaW5nLlxuICAgICAqXG4gICAgICogQHBhcmFtIGJhc2U2NFN0ciBCYXNlNjQgZW5jb2RlZCB0ZXh0XG4gICAgICovXG4gICAgc3RhdGljIGJhc2U2NERlY29kZShiYXNlNjRTdHIpIHtcbiAgICAgICAgcmV0dXJuIEJ1ZmZlci5mcm9tKGJhc2U2NFN0ciwgXCJiYXNlNjRcIikudG9TdHJpbmcoXCJ1dGY4XCIpO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBAcGFyYW0gYmFzZTY0U3RyIEJhc2U2NCBlbmNvZGVkIFVybFxuICAgICAqL1xuICAgIHN0YXRpYyBiYXNlNjREZWNvZGVVcmwoYmFzZTY0U3RyKSB7XG4gICAgICAgIGxldCBzdHIgPSBiYXNlNjRTdHIucmVwbGFjZSgvLS9nLCBcIitcIikucmVwbGFjZSgvXy9nLCBcIi9cIik7XG4gICAgICAgIHdoaWxlIChzdHIubGVuZ3RoICUgNCkge1xuICAgICAgICAgICAgc3RyICs9IFwiPVwiO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBFbmNvZGluZ1V0aWxzLmJhc2U2NERlY29kZShzdHIpO1xuICAgIH1cbn1cblxuZXhwb3J0IHsgRW5jb2RpbmdVdGlscyB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9RW5jb2RpbmdVdGlscy5tanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/msal-node/dist/utils/EncodingUtils.mjs\n");

/***/ }),

/***/ "(rsc)/./node_modules/@azure/msal-node/dist/utils/NetworkUtils.mjs":
/*!*******************************************************************!*\
  !*** ./node_modules/@azure/msal-node/dist/utils/NetworkUtils.mjs ***!
  \*******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   NetworkUtils: () => (/* binding */ NetworkUtils)\n/* harmony export */ });\n/*! @azure/msal-node v2.12.0 2024-07-23 */\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\nclass NetworkUtils {\n    static getNetworkResponse(headers, body, statusCode) {\n        return {\n            headers: headers,\n            body: body,\n            status: statusCode,\n        };\n    }\n    /*\n     * Utility function that converts a URL object into an ordinary options object as expected by the\n     * http.request and https.request APIs.\n     * https://github.com/nodejs/node/blob/main/lib/internal/url.js#L1090\n     */\n    static urlToHttpOptions(url) {\n        const options = {\n            protocol: url.protocol,\n            hostname: url.hostname && url.hostname.startsWith(\"[\")\n                ? url.hostname.slice(1, -1)\n                : url.hostname,\n            hash: url.hash,\n            search: url.search,\n            pathname: url.pathname,\n            path: `${url.pathname || \"\"}${url.search || \"\"}`,\n            href: url.href,\n        };\n        if (url.port !== \"\") {\n            options.port = Number(url.port);\n        }\n        if (url.username || url.password) {\n            options.auth = `${decodeURIComponent(url.username)}:${decodeURIComponent(url.password)}`;\n        }\n        return options;\n    }\n}\n\n\n//# sourceMappingURL=NetworkUtils.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtbm9kZS9kaXN0L3V0aWxzL05ldHdvcmtVdGlscy5tanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBO0FBQ2E7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EscUJBQXFCLG1CQUFtQixFQUFFLGlCQUFpQjtBQUMzRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw4QkFBOEIsaUNBQWlDLEdBQUcsaUNBQWlDO0FBQ25HO0FBQ0E7QUFDQTtBQUNBOztBQUV3QjtBQUN4QiIsInNvdXJjZXMiOlsid2VicGFjazovL2RhbmllbDMtdnAyLy4vbm9kZV9tb2R1bGVzL0BhenVyZS9tc2FsLW5vZGUvZGlzdC91dGlscy9OZXR3b3JrVXRpbHMubWpzPzQ3YmEiXSwic291cmNlc0NvbnRlbnQiOlsiLyohIEBhenVyZS9tc2FsLW5vZGUgdjIuMTIuMCAyMDI0LTA3LTIzICovXG4ndXNlIHN0cmljdCc7XG4vKlxuICogQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uIEFsbCByaWdodHMgcmVzZXJ2ZWQuXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIExpY2Vuc2UuXG4gKi9cbmNsYXNzIE5ldHdvcmtVdGlscyB7XG4gICAgc3RhdGljIGdldE5ldHdvcmtSZXNwb25zZShoZWFkZXJzLCBib2R5LCBzdGF0dXNDb2RlKSB7XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICBoZWFkZXJzOiBoZWFkZXJzLFxuICAgICAgICAgICAgYm9keTogYm9keSxcbiAgICAgICAgICAgIHN0YXR1czogc3RhdHVzQ29kZSxcbiAgICAgICAgfTtcbiAgICB9XG4gICAgLypcbiAgICAgKiBVdGlsaXR5IGZ1bmN0aW9uIHRoYXQgY29udmVydHMgYSBVUkwgb2JqZWN0IGludG8gYW4gb3JkaW5hcnkgb3B0aW9ucyBvYmplY3QgYXMgZXhwZWN0ZWQgYnkgdGhlXG4gICAgICogaHR0cC5yZXF1ZXN0IGFuZCBodHRwcy5yZXF1ZXN0IEFQSXMuXG4gICAgICogaHR0cHM6Ly9naXRodWIuY29tL25vZGVqcy9ub2RlL2Jsb2IvbWFpbi9saWIvaW50ZXJuYWwvdXJsLmpzI0wxMDkwXG4gICAgICovXG4gICAgc3RhdGljIHVybFRvSHR0cE9wdGlvbnModXJsKSB7XG4gICAgICAgIGNvbnN0IG9wdGlvbnMgPSB7XG4gICAgICAgICAgICBwcm90b2NvbDogdXJsLnByb3RvY29sLFxuICAgICAgICAgICAgaG9zdG5hbWU6IHVybC5ob3N0bmFtZSAmJiB1cmwuaG9zdG5hbWUuc3RhcnRzV2l0aChcIltcIilcbiAgICAgICAgICAgICAgICA/IHVybC5ob3N0bmFtZS5zbGljZSgxLCAtMSlcbiAgICAgICAgICAgICAgICA6IHVybC5ob3N0bmFtZSxcbiAgICAgICAgICAgIGhhc2g6IHVybC5oYXNoLFxuICAgICAgICAgICAgc2VhcmNoOiB1cmwuc2VhcmNoLFxuICAgICAgICAgICAgcGF0aG5hbWU6IHVybC5wYXRobmFtZSxcbiAgICAgICAgICAgIHBhdGg6IGAke3VybC5wYXRobmFtZSB8fCBcIlwifSR7dXJsLnNlYXJjaCB8fCBcIlwifWAsXG4gICAgICAgICAgICBocmVmOiB1cmwuaHJlZixcbiAgICAgICAgfTtcbiAgICAgICAgaWYgKHVybC5wb3J0ICE9PSBcIlwiKSB7XG4gICAgICAgICAgICBvcHRpb25zLnBvcnQgPSBOdW1iZXIodXJsLnBvcnQpO1xuICAgICAgICB9XG4gICAgICAgIGlmICh1cmwudXNlcm5hbWUgfHwgdXJsLnBhc3N3b3JkKSB7XG4gICAgICAgICAgICBvcHRpb25zLmF1dGggPSBgJHtkZWNvZGVVUklDb21wb25lbnQodXJsLnVzZXJuYW1lKX06JHtkZWNvZGVVUklDb21wb25lbnQodXJsLnBhc3N3b3JkKX1gO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBvcHRpb25zO1xuICAgIH1cbn1cblxuZXhwb3J0IHsgTmV0d29ya1V0aWxzIH07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1OZXR3b3JrVXRpbHMubWpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@azure/msal-node/dist/utils/NetworkUtils.mjs\n");

/***/ })

};
;